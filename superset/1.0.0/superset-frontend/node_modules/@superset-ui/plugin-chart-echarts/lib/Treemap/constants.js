"use strict";

exports.__esModule = true;
exports.extractTreePathInfo = exports.BORDER_COLOR = exports.COLOR_ALPHA = exports.GAP_WIDTH = exports.BORDER_WIDTH = exports.LABEL_FONTSIZE = exports.COLOR_SATURATION = void 0;

/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
const COLOR_SATURATION = [0.4, 0.7];
exports.COLOR_SATURATION = COLOR_SATURATION;
const LABEL_FONTSIZE = 11;
exports.LABEL_FONTSIZE = LABEL_FONTSIZE;
const BORDER_WIDTH = 2;
exports.BORDER_WIDTH = BORDER_WIDTH;
const GAP_WIDTH = 2;
exports.GAP_WIDTH = GAP_WIDTH;
const COLOR_ALPHA = 0.3;
exports.COLOR_ALPHA = COLOR_ALPHA;
const BORDER_COLOR = '#fff';
exports.BORDER_COLOR = BORDER_COLOR;

const extractTreePathInfo = treePathInfo => {
  const treePath = (treePathInfo != null ? treePathInfo : []).map(pathInfo => (pathInfo == null ? void 0 : pathInfo.name) || '').filter(path => path !== ''); // the 1st tree path is metric label

  const metricLabel = treePath.shift() || '';
  return {
    metricLabel,
    treePath
  };
};

exports.extractTreePathInfo = extractTreePathInfo;