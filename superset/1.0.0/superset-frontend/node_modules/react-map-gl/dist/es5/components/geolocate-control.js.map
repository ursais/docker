{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["LINEAR_TRANSITION_PROPS","Object","assign","TransitionManager","defaultProps","transitionDuration","noop","propTypes","BaseControl","className","PropTypes","string","style","object","positionOptions","fitBoundsOptions","trackUserLocation","bool","showUserLocation","onViewStateChange","func","onViewportChange","GeolocateControl","supportsGeolocation","markerPosition","console","warn","controlOptions","forEach","prop","props","_mapboxGeolocateControl","mapboxgl","_watchState","_geolocateButton","_geolocateButtonRef","current","_updateMarker","_updateCamera","_setup","trigger","position","setState","coords","center","LngLat","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","viewport","_context","_getBounds","WebMercatorViewport","fitBounds","zoom","newViewState","mapState","MapState","viewState","getViewportProps","type","label","callback","state","_markerRef","e","preventDefault","then","result","_setupMapboxGeolocateControl","markerRef","_dotElement","_containerRef","geolocationWatchID","_geolocationWatchID","undefined","window","navigator","geolocation","clearWatch","_renderMarker","_renderButton","_onClickGeolocate"],"mappings":"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","sourcesContent":["// @flow\n\n/* global window */\nimport React, {createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport mapboxgl from '../utils/mapboxgl';\n\nimport BaseControl from './base-control';\nimport Marker from './marker';\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport type {BaseControlProps} from './base-control';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 500\n});\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  style: {},\n\n  // mapbox geolocate options\n  positionOptions: null,\n  fitBoundsOptions: null,\n  trackUserLocation: false,\n  showUserLocation: true\n});\n\nexport type GeolocateControlProps = BaseControlProps & {\n  className: string,\n  style: Object,\n  positionOptions: any,\n  fitBoundsOptions: any,\n  trackUserLocation: boolean,\n  showUserLocation: boolean,\n  onViewStateChange?: Function,\n  onViewportChange?: Function\n};\n\ntype Coordinate = {\n  longitude: number,\n  latitude: number,\n  accuracy: number\n};\ntype Position = {\n  coords: Coordinate\n};\ntype State = {\n  supportsGeolocation: boolean,\n  markerPosition: ?Coordinate\n};\n\nexport default class GeolocateControl extends BaseControl<\n  GeolocateControlProps,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    supportsGeolocation: false,\n    markerPosition: null\n  };\n\n  _mapboxGeolocateControl: any = null;\n\n  _geolocateButtonRef: {current: null | HTMLButtonElement} = createRef();\n  _markerRef: {current: null | Marker} = createRef();\n\n  componentDidMount() {\n    isGeolocationSupported().then(result => {\n      this.setState({supportsGeolocation: result});\n      this._setupMapboxGeolocateControl(result);\n    });\n  }\n\n  componentDidUpdate() {\n    // MapboxGeolocateControl needs manipulate the style of Marker's container\n    const markerRef = this._markerRef.current;\n    if (this._mapboxGeolocateControl && markerRef) {\n      this._mapboxGeolocateControl._dotElement = markerRef._containerRef.current;\n    }\n  }\n\n  componentWillUnmount() {\n    // re-implement MapboxGeolocateControl's _onRemove\n    // clear the geolocation watch if exists\n    const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\n    if (geolocationWatchID !== undefined) {\n      window.navigator.geolocation.clearWatch(geolocationWatchID);\n      this._mapboxGeolocateControl._geolocationWatchID = undefined;\n    }\n  }\n\n  _setupMapboxGeolocateControl = (supportsGeolocation: boolean) => {\n    if (!supportsGeolocation) {\n      /* eslint-disable no-console, no-undef */\n      console.warn(\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\n      );\n      /* eslint-enable no-console, no-undef */\n      return;\n    }\n\n    const controlOptions = {};\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation', 'showUserLocation'].forEach(\n      prop => {\n        // For null option, use Mapbox default value\n        if (prop in this.props && this.props[prop] !== null) {\n          controlOptions[prop] = this.props[prop];\n        }\n      }\n    );\n\n    this._mapboxGeolocateControl = new mapboxgl.GeolocateControl(controlOptions);\n\n    // the following re-implement MapboxGeolocateControl's _setupUI\n    // replace mapbox internal prop\n    this._mapboxGeolocateControl._watchState = 'OFF';\n\n    // replace mapbox internal UI elements\n    this._mapboxGeolocateControl._geolocateButton = this._geolocateButtonRef.current;\n\n    // replace mapbox internal methods\n    this._mapboxGeolocateControl._updateMarker = this._updateMarker;\n    this._mapboxGeolocateControl._updateCamera = this._updateCamera;\n\n    this._mapboxGeolocateControl._setup = true;\n  };\n\n  _onClickGeolocate = () => {\n    return this._mapboxGeolocateControl.trigger();\n  };\n\n  _updateMarker = (position: Position) => {\n    if (position) {\n      this.setState({markerPosition: position.coords});\n    }\n  };\n\n  _getBounds = (position: Position) => {\n    const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n    const radius = position.coords.accuracy;\n    const bounds = center.toBounds(radius);\n\n    return [[bounds._ne.lng, bounds._ne.lat], [bounds._sw.lng, bounds._sw.lat]];\n  };\n\n  _updateCamera = (position: Position) => {\n    const {viewport} = this._context;\n\n    const bounds = this._getBounds(position);\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\n\n    const newViewState = Object.assign({}, viewport, {\n      longitude,\n      latitude,\n      zoom\n    });\n    const mapState = new MapState(newViewState);\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  };\n\n  _renderButton = (type: string, label: string, callback: Function) => {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        ref={this._geolocateButtonRef}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      />\n    );\n  };\n\n  _renderMarker = () => {\n    const {showUserLocation} = this.props;\n    const {markerPosition} = this.state;\n    if (!showUserLocation || !markerPosition) {\n      return null;\n    }\n\n    return (\n      // $FlowFixMe\n      <Marker\n        key=\"location-maker\"\n        ref={this._markerRef}\n        className=\"mapboxgl-user-location-dot\"\n        longitude={markerPosition.longitude}\n        latitude={markerPosition.latitude}\n        onContextMenu={e => e.preventDefault()}\n        captureDrag={false}\n        captureDoubleClick={false}\n      />\n    );\n  };\n\n  _render() {\n    if (!this.state.supportsGeolocation) {\n      return null;\n    }\n\n    const {className, style} = this.props;\n    return (\n      <div>\n        {this._renderMarker()}\n        <div\n          key=\"geolocate-control\"\n          className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`}\n          ref={this._containerRef}\n          style={style}\n          onContextMenu={e => e.preventDefault()}\n        >\n          {this._renderButton('geolocate', 'Geolocate', this._onClickGeolocate)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"geolocate-control.js"}