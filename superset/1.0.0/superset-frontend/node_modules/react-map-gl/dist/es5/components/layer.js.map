{"version":3,"sources":["../../../src/components/layer.js"],"names":["propTypes","type","PropTypes","string","isRequired","id","source","beforeId","diffLayerStyles","map","props","prevProps","layout","paint","filter","minzoom","maxzoom","otherProps","moveLayer","key","setLayoutProperty","setPaintProperty","setFilter","setLayerZoomRange","setLayerProperty","layerCounter","Layer","_createLayer","_updateLayer","_map","removeLayer","options","Object","assign","style","_loaded","addLayer","once","forceUpdate","getLayer","error","console","warn","context","_render","bind","PureComponent"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\ntype LayerProps = {\n  id?: string,\n  type: string,\n  source?: string,\n  beforeId?: string,\n  layout: any,\n  paint: any,\n  filter?: Array<mixed>,\n  minzoom?: number,\n  maxzoom?: number\n};\n\n/* eslint-disable complexity */\nfunction diffLayerStyles(map: any, id: string, props: LayerProps, prevProps: LayerProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevProps.layout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevProps.paint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n/* eslint-enable complexity */\n\nlet layerCounter = 0;\n\nexport default class Layer<Props: LayerProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-layer-${layerCounter++}`;\n    this.type = props.type;\n  }\n\n  componentDidMount() {\n    this._createLayer();\n  }\n\n  componentDidUpdate(prevProps: LayerProps) {\n    this._updateLayer(prevProps);\n  }\n\n  componentWillUnmount() {\n    this._map.removeLayer(this.id);\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n\n  _createLayer() {\n    const map = this._map;\n    const options = Object.assign({}, this.props);\n    options.id = this.id;\n    delete options.beforeId;\n\n    if (map.style._loaded) {\n      // console.log('adding layer');\n      map.addLayer(options, this.props.beforeId);\n    } else {\n      map.once('styledata', () => this.forceUpdate());\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateLayer(prevProps: LayerProps) {\n    const {props} = this;\n    assert(!props.id || props.id === this.id, 'layer id changed');\n    assert(props.type === this.type, 'layer type changed');\n\n    const map = this._map;\n\n    if (!map.getLayer(this.id)) {\n      this._createLayer();\n      return;\n    }\n\n    try {\n      diffLayerStyles(map, this.id, props, prevProps);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  }\n  /* eslint-disable complexity */\n\n  _render(context: MapContextProps) {\n    this._map = context.map;\n    return null;\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"],"file":"layer.js"}