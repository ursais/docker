{"version":3,"sources":["../../../src/utils/style-utils.js"],"names":["normalizeStyle","style","toJS","layerIndex","layers","reduce","accum","current","Object","assign","id","map","layer","interactive","layerRef","ref","type","undefined","source","minzoom","maxzoom","filter","layout"],"mappings":";;;;;;;;;;;AAWO,SAASA,cAAT,CAAwBC,KAAxB,EAA2D;AAChE,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AACD,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACdD,IAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR;AACD;;AACD,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAaC,MAAb,CACjB,UAACC,KAAD,EAAQC,OAAR;AAAA,WAAoBC,MAAM,CAACC,MAAP,CAAcH,KAAd,uCAAuBC,OAAO,CAACG,EAA/B,EAAoCH,OAApC,EAApB;AAAA,GADiB,EAEjB,EAFiB,CAAnB;AAKAN,EAAAA,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACG,MAAN,CAAaO,GAAb,CAAiB,UAAAC,KAAK,EAAI;AACvCA,IAAAA,KAAK,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,KAAlB,CAAR;AAGA,WAAOA,KAAK,CAACC,WAAb;AAEA,QAAMC,QAAQ,GAAGX,UAAU,CAACS,KAAK,CAACG,GAAP,CAA3B;;AAEA,QAAID,QAAJ,EAAc;AACZ,aAAOF,KAAK,CAACG,GAAb;;AACA,UAAID,QAAQ,CAACE,IAAT,KAAkBC,SAAtB,EAAiC;AAC/BL,QAAAA,KAAK,CAACI,IAAN,GAAaF,QAAQ,CAACE,IAAtB;AACD;;AACD,UAAIF,QAAQ,CAACI,MAAT,KAAoBD,SAAxB,EAAmC;AACjCL,QAAAA,KAAK,CAACM,MAAN,GAAeJ,QAAQ,CAACI,MAAxB;AACD;;AACD,UAAIJ,QAAQ,CAAC,cAAD,CAAR,KAA6BG,SAAjC,EAA4C;AAC1CL,QAAAA,KAAK,CAAC,cAAD,CAAL,GAAwBE,QAAQ,CAAC,cAAD,CAAhC;AACD;;AACD,UAAIA,QAAQ,CAACK,OAAT,KAAqBF,SAAzB,EAAoC;AAClCL,QAAAA,KAAK,CAACO,OAAN,GAAgBL,QAAQ,CAACK,OAAzB;AACD;;AACD,UAAIL,QAAQ,CAACM,OAAT,KAAqBH,SAAzB,EAAoC;AAClCL,QAAAA,KAAK,CAACQ,OAAN,GAAgBN,QAAQ,CAACM,OAAzB;AACD;;AACD,UAAIN,QAAQ,CAACO,MAAT,KAAoBJ,SAAxB,EAAmC;AACjCL,QAAAA,KAAK,CAACS,MAAN,GAAeP,QAAQ,CAACO,MAAxB;AACD;;AACD,UAAIP,QAAQ,CAACQ,MAAT,KAAoBL,SAAxB,EAAmC;AACjCL,QAAAA,KAAK,CAACU,MAAN,GAAeV,KAAK,CAACU,MAAN,IAAgB,EAA/B;AACAV,QAAAA,KAAK,CAACU,MAAN,GAAed,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,KAAK,CAACU,MAAxB,EAAgCR,QAAQ,CAACQ,MAAzC,CAAf;AACD;AACF;;AACD,WAAOV,KAAP;AACD,GAlCc,CAAf;AAoCA,SAAOX,KAAP;AACD","sourcesContent":["// @flow\ntype MapboxStyle =\n  | string\n  | {\n      toJS?: Function,\n      layers: Array<any>\n    };\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in the styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: ?MapboxStyle): ?MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if (style.toJS) {\n    style = style.toJS();\n  }\n  const layerIndex = style.layers.reduce(\n    (accum, current) => Object.assign(accum, {[current.id]: current}),\n    {}\n  );\n\n  style.layers = style.layers.map(layer => {\n    layer = Object.assign({}, layer);\n\n    // Breaks style diffing :(\n    delete layer.interactive;\n\n    const layerRef = layerIndex[layer.ref];\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      delete layer.ref;\n      if (layerRef.type !== undefined) {\n        layer.type = layerRef.type;\n      }\n      if (layerRef.source !== undefined) {\n        layer.source = layerRef.source;\n      }\n      if (layerRef['source-layer'] !== undefined) {\n        layer['source-layer'] = layerRef['source-layer'];\n      }\n      if (layerRef.minzoom !== undefined) {\n        layer.minzoom = layerRef.minzoom;\n      }\n      if (layerRef.maxzoom !== undefined) {\n        layer.maxzoom = layerRef.maxzoom;\n      }\n      if (layerRef.filter !== undefined) {\n        layer.filter = layerRef.filter;\n      }\n      if (layerRef.layout !== undefined) {\n        layer.layout = layer.layout || {};\n        layer.layout = Object.assign({}, layer.layout, layerRef.layout);\n      }\n    }\n    return layer;\n  });\n\n  return style;\n}\n"],"file":"style-utils.js"}