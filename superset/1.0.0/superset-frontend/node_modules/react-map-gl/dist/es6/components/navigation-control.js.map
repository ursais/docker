{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["React","PropTypes","BaseControl","MapState","LINEAR_TRANSITION_PROPS","deprecateWarn","noop","propTypes","Object","assign","className","string","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","defaultProps","NavigationControl","constructor","props","_updateViewport","zoom","_context","viewport","bearing","pitch","opts","mapState","viewState","getViewportProps","_renderCompass","transform","_renderButton","type","label","callback","children","_render","_containerRef","_onZoomIn","_onZoomOut","_onResetNorth"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {BaseControlProps} from './base-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true\n});\n\nexport type NavigationControlProps = BaseControlProps & {\n  className: string,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  showCompass: boolean,\n  showZoom: boolean\n};\n\ntype ViewportProps = {\n  longitude: number,\n  latitude: number,\n  zoom: number,\n  pitch: number,\n  bearing: number\n};\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl<\n  NavigationControlProps,\n  *,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: NavigationControlProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n  }\n\n  _updateViewport(opts: $Shape<ViewportProps>) {\n    const {viewport} = this._context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  }\n\n  _onZoomIn = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\n  };\n\n  _onZoomOut = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\n  };\n\n  _onResetNorth = () => {\n    this._updateViewport({bearing: 0, pitch: 0});\n  };\n\n  _renderCompass() {\n    const {bearing} = this._context.viewport;\n    return (\n      <span className=\"mapboxgl-ctrl-compass-arrow\" style={{transform: `rotate(${-bearing}deg)`}} />\n    );\n  }\n\n  _renderButton(type: string, label: string, callback: Function, children: any) {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  _render() {\n    const {className, showCompass, showZoom} = this.props;\n\n    return (\n      <div className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`} ref={this._containerRef}>\n        {showZoom && this._renderButton('zoom-in', 'Zoom In', this._onZoomIn)}\n        {showZoom && this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut)}\n        {showCompass &&\n          this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())}\n      </div>\n    );\n  }\n}\n"],"file":"navigation-control.js"}