{"version":3,"sources":["../../../src/components/source.js"],"names":["React","PureComponent","cloneElement","PropTypes","MapContext","assert","propTypes","type","string","isRequired","id","sourceCounter","Source","constructor","props","componentWillUnmount","_map","removeSource","getSource","_createSource","map","style","_loaded","addSource","_sourceOptions","once","forceUpdate","_updateSource","sourceOptions","changedKey","changedKeyCount","key","source","setData","data","updateImage","url","coordinates","setCoordinates","_render","context","Children","children","child","render","bind"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\ntype SourceProps = {\n  id?: string,\n  type: string,\n  children?: any\n};\n\nlet sourceCounter = 0;\n\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\n    this.type = props.type;\n  }\n\n  componentWillUnmount() {\n    this._map.removeSource(this.id);\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _sourceOptions: any = {};\n\n  getSource() {\n    return this._map.getSource(this.id);\n  }\n\n  _createSource() {\n    const map = this._map;\n    if (map.style._loaded) {\n      map.addSource(this.id, this._sourceOptions);\n    } else {\n      map.once('styledata', () => this.forceUpdate());\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateSource() {\n    const {_sourceOptions: sourceOptions, props} = this;\n    assert(!props.id || props.id === this.id, 'source id changed');\n    assert(props.type === this.type, 'source type changed');\n\n    let changedKey = null;\n    let changedKeyCount = 0;\n\n    for (const key in props) {\n      if (key !== 'children' && key !== 'id' && sourceOptions[key] !== props[key]) {\n        sourceOptions[key] = props[key];\n        changedKey = key;\n        changedKeyCount++;\n      }\n    }\n\n    const {type, _map: map} = this;\n    const source = this.getSource();\n    if (!source) {\n      this._createSource();\n      return;\n    }\n    if (!changedKeyCount) {\n      return;\n    }\n    if (type === 'geojson') {\n      source.setData(sourceOptions.data);\n    } else if (type === 'image') {\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\n    } else if (\n      (type === 'canvas' || type === 'video') &&\n      changedKeyCount === 1 &&\n      changedKey === 'coordinates'\n    ) {\n      source.setCoordinates(sourceOptions.coordinates);\n    } else {\n      map.removeSource(this.id);\n      map.addSource(sourceOptions);\n    }\n  }\n  /* eslint-enable complexity */\n\n  _render(context: MapContextProps) {\n    this._map = context.map;\n    this._updateSource();\n    return React.Children.map(this.props.children, child =>\n      cloneElement(child, {\n        source: this.id\n      })\n    );\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"],"file":"source.js"}