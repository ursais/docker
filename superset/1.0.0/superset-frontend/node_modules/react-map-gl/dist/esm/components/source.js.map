{"version":3,"sources":["../../../src/components/source.js"],"names":["React","PureComponent","cloneElement","PropTypes","MapContext","assert","propTypes","type","string","isRequired","id","sourceCounter","Source","props","_map","removeSource","getSource","map","style","_loaded","addSource","_sourceOptions","once","forceUpdate","sourceOptions","changedKey","changedKeyCount","key","source","_createSource","setData","data","updateImage","url","coordinates","setCoordinates","context","_updateSource","Children","children","child","_render","bind"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\ntype SourceProps = {\n  id?: string,\n  type: string,\n  children?: any\n};\n\nlet sourceCounter = 0;\n\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\n    this.type = props.type;\n  }\n\n  componentWillUnmount() {\n    this._map.removeSource(this.id);\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _sourceOptions: any = {};\n\n  getSource() {\n    return this._map.getSource(this.id);\n  }\n\n  _createSource() {\n    const map = this._map;\n    if (map.style._loaded) {\n      map.addSource(this.id, this._sourceOptions);\n    } else {\n      map.once('styledata', () => this.forceUpdate());\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateSource() {\n    const {_sourceOptions: sourceOptions, props} = this;\n    assert(!props.id || props.id === this.id, 'source id changed');\n    assert(props.type === this.type, 'source type changed');\n\n    let changedKey = null;\n    let changedKeyCount = 0;\n\n    for (const key in props) {\n      if (key !== 'children' && key !== 'id' && sourceOptions[key] !== props[key]) {\n        sourceOptions[key] = props[key];\n        changedKey = key;\n        changedKeyCount++;\n      }\n    }\n\n    const {type, _map: map} = this;\n    const source = this.getSource();\n    if (!source) {\n      this._createSource();\n      return;\n    }\n    if (!changedKeyCount) {\n      return;\n    }\n    if (type === 'geojson') {\n      source.setData(sourceOptions.data);\n    } else if (type === 'image') {\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\n    } else if (\n      (type === 'canvas' || type === 'video') &&\n      changedKeyCount === 1 &&\n      changedKey === 'coordinates'\n    ) {\n      source.setCoordinates(sourceOptions.coordinates);\n    } else {\n      map.removeSource(this.id);\n      map.addSource(sourceOptions);\n    }\n  }\n  /* eslint-enable complexity */\n\n  _render(context: MapContextProps) {\n    this._map = context.map;\n    this._updateSource();\n    return React.Children.map(this.props.children, child =>\n      cloneElement(child, {\n        source: this.id\n      })\n    );\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"],"file":"source.js"}