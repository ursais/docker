{"version":3,"file":"use-immer.module.js","sources":["../src/index.ts"],"sourcesContent":["import produce, { Draft } from \"immer\";\nimport { useState, useReducer, useCallback, useMemo, Dispatch } from \"react\";\n\nexport type Reducer<S = any, A = any> = (\n  draftState: Draft<S>,\n  action: A\n) => void | S;\n\nexport type Updater<S> = (f: (draft: Draft<S>) => void | S) => void;\n\nexport type ImmerHook<S> = [S, Updater<S>];\n\nexport function useImmer<S = any>(\n  initialValue: S | (() => S)\n): [S, (f: (draft: Draft<S>) => void | S) => void];\n\nexport function useImmer(initialValue: any) {\n  const [val, updateValue] = useState(initialValue);\n  return [\n    val,\n    useCallback(updater => {\n      updateValue(produce(updater));\n    }, [])\n  ];\n}\n\nexport function useImmerReducer<S = any, A = any>(\n  reducer: Reducer<S, A>,\n  initialState: S,\n  initialAction?: (initial: any) => S\n): [S, Dispatch<A>];\nexport function useImmerReducer(reducer, initialState, initialAction) {\n  const cachedReducer = useMemo(() => produce(reducer), [reducer]);\n  return useReducer(cachedReducer, initialState as any, initialAction);\n}\n"],"names":["useImmer","initialValue","useState","updateValue","useCallback","updater","produce","useImmerReducer","reducer","initialState","initialAction","cachedReducer","useMemo","useReducer"],"mappings":"6GAgBgBA,EAASC,SACIC,EAASD,GAAxBE,OACZ,MAAO,MAELC,EAAY,SAAAC,GACVF,EAAYG,EAAQD,KACnB,cASSE,EAAgBC,EAASC,EAAcC,GACrD,IAAMC,EAAgBC,EAAQ,kBAAMN,EAAQE,IAAU,CAACA,IACvD,OAAOK,EAAWF,EAAeF,EAAqBC"}