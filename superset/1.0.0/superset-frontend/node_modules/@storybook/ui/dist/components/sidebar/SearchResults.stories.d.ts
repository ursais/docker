import React from 'react';
import { SearchItem } from './types';
declare const _default: {
    component: React.FunctionComponent<{
        query: string;
        results: import("./types").DownshiftItem[];
        closeMenu: (cb?: () => void) => void;
        getMenuProps: (options?: import("downshift").GetMenuPropsOptions, otherOptions?: import("downshift").GetPropsCommonOptions) => any;
        getItemProps: (options: import("downshift").GetItemPropsOptions<import("./types").DownshiftItem>) => any;
        highlightedIndex: number;
        isLoading?: boolean;
        enableShortcuts?: boolean;
    }>;
    title: string;
    includeStories: RegExp;
    parameters: {
        layout: string;
    };
    decorators: ((storyFn: any) => JSX.Element)[];
};
export default _default;
export declare const searching: {
    query: string;
    results: {
        item: SearchItem;
        matches: {
            value: string;
            indices: number[][];
        }[];
        score: number;
    }[];
    closeMenu: () => void;
    getMenuProps: (props?: any) => {
        key: any;
    };
    getItemProps: (props?: any) => {
        key: any;
    };
    highlightedIndex: number;
};
export declare const noResults: {
    results: any;
    query: string;
    closeMenu: () => void;
    getMenuProps: (props?: any) => {
        key: any;
    };
    getItemProps: (props?: any) => {
        key: any;
    };
    highlightedIndex: number;
};
export declare const lastViewed: {
    query: string;
    results: {
        item: SearchItem;
        matches: any[];
        score: number;
    }[];
    closeMenu: () => void;
    getMenuProps: (props?: any) => {
        key: any;
    };
    getItemProps: (props?: any) => {
        key: any;
    };
    highlightedIndex: number;
};
export declare const Searching: () => JSX.Element;
export declare const NoResults: () => JSX.Element;
export declare const LastViewed: () => JSX.Element;
