{"version":3,"file":"index.module.js","sources":["../src/constants.js","../src/utils.js","../src/server.js","../src/Provider.js","../src/client.js","../src/Dispatcher.js","../src/index.js"],"sourcesContent":["export const TAG_PROPERTIES = {\n  CHARSET: 'charset',\n  CSS_TEXT: 'cssText',\n  HREF: 'href',\n  HTTPEQUIV: 'http-equiv',\n  INNER_HTML: 'innerHTML',\n  ITEM_PROP: 'itemprop',\n  NAME: 'name',\n  PROPERTY: 'property',\n  REL: 'rel',\n  SRC: 'src',\n};\n\nexport const ATTRIBUTE_NAMES = {\n  BODY: 'bodyAttributes',\n  HTML: 'htmlAttributes',\n  TITLE: 'titleAttributes',\n};\n\nexport const TAG_NAMES = {\n  BASE: 'base',\n  BODY: 'body',\n  HEAD: 'head',\n  HTML: 'html',\n  LINK: 'link',\n  META: 'meta',\n  NOSCRIPT: 'noscript',\n  SCRIPT: 'script',\n  STYLE: 'style',\n  TITLE: 'title',\n  FRAGMENT: 'Symbol(react.fragment)',\n};\n\nexport const VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(name => TAG_NAMES[name]);\n\nexport const REACT_TAG_MAP = {\n  accesskey: 'accessKey',\n  charset: 'charSet',\n  class: 'className',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  'http-equiv': 'httpEquiv',\n  itemprop: 'itemProp',\n  tabindex: 'tabIndex',\n};\n\nexport const HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce((obj, key) => {\n  obj[REACT_TAG_MAP[key]] = key;\n  return obj;\n}, {});\n\nexport const HELMET_ATTRIBUTE = 'data-rh';\n","import { TAG_NAMES, TAG_PROPERTIES, ATTRIBUTE_NAMES } from './constants';\n\nconst HELMET_PROPS = {\n  DEFAULT_TITLE: 'defaultTitle',\n  DEFER: 'defer',\n  ENCODE_SPECIAL_CHARACTERS: 'encodeSpecialCharacters',\n  ON_CHANGE_CLIENT_STATE: 'onChangeClientState',\n  TITLE_TEMPLATE: 'titleTemplate',\n};\n\nconst getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n\n  return null;\n};\n\nconst getTitleFromPropsList = propsList => {\n  let innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join('');\n  }\n  if (innermostTemplate && innermostTitle) {\n    // use function arg to avoid need to escape $ characters\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n\n  return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nconst getOnChangeClientState = propsList =>\n  getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {});\n\nconst getAttributesFromPropsList = (tagType, propsList) =>\n  propsList\n    .filter(props => typeof props[tagType] !== 'undefined')\n    .map(props => props[tagType])\n    .reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\n\nconst getBaseTagFromPropsList = (primaryAttributes, propsList) =>\n  propsList\n    .filter(props => typeof props[TAG_NAMES.BASE] !== 'undefined')\n    .map(props => props[TAG_NAMES.BASE])\n    .reverse()\n    .reduce((innermostBaseTag, tag) => {\n      if (!innermostBaseTag.length) {\n        const keys = Object.keys(tag);\n\n        for (let i = 0; i < keys.length; i += 1) {\n          const attributeKey = keys[i];\n          const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n          if (\n            primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n            tag[lowerCaseAttributeKey]\n          ) {\n            return innermostBaseTag.concat(tag);\n          }\n        }\n      }\n\n      return innermostBaseTag;\n    }, []);\n\n// eslint-disable-next-line no-console\nconst warn = msg => console && typeof console.warn === 'function' && console.warn(msg);\n\nconst getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  // Calculate list of tags, giving priority innermost component (end of the propslist)\n  const approvedSeenTags = {};\n\n  return propsList\n    .filter(props => {\n      if (Array.isArray(props[tagName])) {\n        return true;\n      }\n      if (typeof props[tagName] !== 'undefined') {\n        warn(\n          `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[\n            tagName\n          ]}\"`\n        );\n      }\n      return false;\n    })\n    .map(props => props[tagName])\n    .reverse()\n    .reduce((approvedTags, instanceTags) => {\n      const instanceSeenTags = {};\n\n      instanceTags\n        .filter(tag => {\n          let primaryAttributeKey;\n          const keys = Object.keys(tag);\n          for (let i = 0; i < keys.length; i += 1) {\n            const attributeKey = keys[i];\n            const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n            // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n            if (\n              primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n              !(\n                primaryAttributeKey === TAG_PROPERTIES.REL &&\n                tag[primaryAttributeKey].toLowerCase() === 'canonical'\n              ) &&\n              !(\n                lowerCaseAttributeKey === TAG_PROPERTIES.REL &&\n                tag[lowerCaseAttributeKey].toLowerCase() === 'stylesheet'\n              )\n            ) {\n              primaryAttributeKey = lowerCaseAttributeKey;\n            }\n            // Special case for innerHTML which doesn't work lowercased\n            if (\n              primaryAttributes.indexOf(attributeKey) !== -1 &&\n              (attributeKey === TAG_PROPERTIES.INNER_HTML ||\n                attributeKey === TAG_PROPERTIES.CSS_TEXT ||\n                attributeKey === TAG_PROPERTIES.ITEM_PROP)\n            ) {\n              primaryAttributeKey = attributeKey;\n            }\n          }\n\n          if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n            return false;\n          }\n\n          const value = tag[primaryAttributeKey].toLowerCase();\n\n          if (!approvedSeenTags[primaryAttributeKey]) {\n            approvedSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!instanceSeenTags[primaryAttributeKey]) {\n            instanceSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!approvedSeenTags[primaryAttributeKey][value]) {\n            instanceSeenTags[primaryAttributeKey][value] = true;\n            return true;\n          }\n\n          return false;\n        })\n        .reverse()\n        .forEach(tag => approvedTags.push(tag));\n\n      // Update seen tags with tags from this instance\n      const keys = Object.keys(instanceSeenTags);\n      for (let i = 0; i < keys.length; i += 1) {\n        const attributeKey = keys[i];\n        const tagUnion = {\n          ...approvedSeenTags[attributeKey],\n          ...instanceSeenTags[attributeKey],\n        };\n\n        approvedSeenTags[attributeKey] = tagUnion;\n      }\n\n      return approvedTags;\n    }, [])\n    .reverse();\n};\n\nconst reducePropsToState = propsList => ({\n  baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF], propsList),\n  bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n  linkTags: getTagsFromPropsList(\n    TAG_NAMES.LINK,\n    [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    TAG_NAMES.META,\n    [\n      TAG_PROPERTIES.NAME,\n      TAG_PROPERTIES.CHARSET,\n      TAG_PROPERTIES.HTTPEQUIV,\n      TAG_PROPERTIES.PROPERTY,\n      TAG_PROPERTIES.ITEM_PROP,\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    TAG_NAMES.SCRIPT,\n    [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList),\n});\n\nexport const flattenArray = possibleArray =>\n  Array.isArray(possibleArray) ? possibleArray.join('') : possibleArray;\n\nexport { reducePropsToState };\n","import React from 'react';\nimport {\n  HELMET_ATTRIBUTE,\n  TAG_NAMES,\n  REACT_TAG_MAP,\n  TAG_PROPERTIES,\n  ATTRIBUTE_NAMES,\n} from './constants';\nimport { flattenArray } from './utils';\n\nconst SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nconst encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n\n  return String(str)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n};\n\nconst generateElementAttributesAsString = attributes =>\n  Object.keys(attributes).reduce((str, key) => {\n    const attr = typeof attributes[key] !== 'undefined' ? `${key}=\"${attributes[key]}\"` : `${key}`;\n    return str ? `${str} ${attr}` : attr;\n  }, '');\n\nconst generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString\n    ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n        flattenedTitle,\n        encode\n      )}</${type}>`\n    : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n        flattenedTitle,\n        encode\n      )}</${type}>`;\n};\n\nconst generateTagsAsString = (type, tags, encode) =>\n  tags.reduce((str, tag) => {\n    const attributeHtml = Object.keys(tag)\n      .filter(\n        attribute =>\n          !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT)\n      )\n      .reduce((string, attribute) => {\n        const attr =\n          typeof tag[attribute] === 'undefined'\n            ? attribute\n            : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n        return string ? `${string} ${attr}` : attr;\n      }, '');\n\n    const tagContent = tag.innerHTML || tag.cssText || '';\n\n    const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n    return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${\n      isSelfClosing ? `/>` : `>${tagContent}</${type}>`\n    }`;\n  }, '');\n\nconst convertElementAttributesToReactProps = (attributes, initProps = {}) =>\n  Object.keys(attributes).reduce((obj, key) => {\n    obj[REACT_TAG_MAP[key] || key] = attributes[key];\n    return obj;\n  }, initProps);\n\nconst generateTitleAsReactComponent = (type, title, attributes) => {\n  // assigning into an array to define toString function on it\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true,\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n\n  return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nconst generateTagsAsReactComponent = (type, tags) =>\n  tags.map((tag, i) => {\n    const mappedTag = {\n      key: i,\n      [HELMET_ATTRIBUTE]: true,\n    };\n\n    Object.keys(tag).forEach(attribute => {\n      const mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n      if (\n        mappedAttribute === TAG_PROPERTIES.INNER_HTML ||\n        mappedAttribute === TAG_PROPERTIES.CSS_TEXT\n      ) {\n        const content = tag.innerHTML || tag.cssText;\n        mappedTag.dangerouslySetInnerHTML = { __html: content };\n      } else {\n        mappedTag[mappedAttribute] = tag[attribute];\n      }\n    });\n\n    return React.createElement(type, mappedTag);\n  });\n\nconst getMethodsForTag = (type, tags, encode) => {\n  switch (type) {\n    case TAG_NAMES.TITLE:\n      return {\n        toComponent: () =>\n          generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode),\n      };\n    case ATTRIBUTE_NAMES.BODY:\n    case ATTRIBUTE_NAMES.HTML:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags),\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode),\n      };\n  }\n};\n\nconst mapStateOnServer = ({\n  baseTag,\n  bodyAttributes,\n  encode,\n  htmlAttributes,\n  linkTags,\n  metaTags,\n  noscriptTags,\n  scriptTags,\n  styleTags,\n  title = '',\n  titleAttributes,\n}) => ({\n  base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n  bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n  htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n  link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n  meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n  noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n  script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n  style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n  title: getMethodsForTag(TAG_NAMES.TITLE, { title, titleAttributes }, encode),\n});\n\nexport default mapStateOnServer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport mapStateOnServer from './server';\n\nconst defaultValue = {};\n\nexport const Context = React.createContext(defaultValue);\n\nexport const providerShape = PropTypes.shape({\n  setHelmet: PropTypes.func,\n  helmetInstances: PropTypes.shape({\n    get: PropTypes.func,\n    add: PropTypes.func,\n    remove: PropTypes.func,\n  }),\n});\n\nconst canUseDOM = typeof document !== 'undefined';\n\nexport default class Provider extends Component {\n  static canUseDOM = canUseDOM;\n\n  static propTypes = {\n    context: PropTypes.shape({\n      helmet: PropTypes.shape(),\n    }),\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    context: {},\n  };\n\n  static displayName = 'HelmetProvider';\n\n  instances = [];\n\n  value = {\n    setHelmet: serverState => {\n      this.props.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.instances,\n      add: instance => {\n        this.instances.push(instance);\n      },\n      remove: instance => {\n        const index = this.instances.indexOf(instance);\n        this.instances.splice(index, 1);\n      },\n    },\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!Provider.canUseDOM) {\n      props.context.helmet = mapStateOnServer({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: '',\n        titleAttributes: {},\n      });\n    }\n  }\n\n  render() {\n    return <Context.Provider value={this.value}>{this.props.children}</Context.Provider>;\n  }\n}\n","import { HELMET_ATTRIBUTE, TAG_NAMES, TAG_PROPERTIES } from './constants';\nimport { flattenArray } from './utils';\n\nconst updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n\n  if (tags && tags.length) {\n    tags.forEach(tag => {\n      const newElement = document.createElement(type);\n\n      // eslint-disable-next-line\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === TAG_PROPERTIES.INNER_HTML) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const value = typeof tag[attribute] === 'undefined' ? '' : tag[attribute];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n\n      newElement.setAttribute(HELMET_ATTRIBUTE, 'true');\n\n      // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n      if (\n        oldTags.some((existingTag, index) => {\n          indexToDelete = index;\n          return newElement.isEqualNode(existingTag);\n        })\n      ) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n\n  oldTags.forEach(tag => tag.parentNode.removeChild(tag));\n  newTags.forEach(tag => headElement.appendChild(tag));\n\n  return {\n    oldTags,\n    newTags,\n  };\n};\n\nconst updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n\n  if (!elementTag) {\n    return;\n  }\n\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(',') : [];\n  const attributesToRemove = [].concat(helmetAttributes);\n  const attributeKeys = Object.keys(attributes);\n\n  for (let i = 0; i < attributeKeys.length; i += 1) {\n    const attribute = attributeKeys[i];\n    const value = attributes[attribute] || '';\n\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(',')) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(','));\n  }\n};\n\nconst updateTitle = (title, attributes) => {\n  if (typeof title !== 'undefined' && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n\n  updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nconst commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes,\n  } = newState;\n  updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n  updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n  updateTitle(title, titleAttributes);\n\n  const tagUpdates = {\n    baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n    linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n    metaTags: updateTags(TAG_NAMES.META, metaTags),\n    noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n    scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n    styleTags: updateTags(TAG_NAMES.STYLE, styleTags),\n  };\n\n  const addedTags = {};\n  const removedTags = {};\n\n  Object.keys(tagUpdates).forEach(tagType => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n\n  if (cb) {\n    cb();\n  }\n\n  onChangeClientState(newState, addedTags, removedTags);\n};\n\n// eslint-disable-next-line\nlet _helmetCallback = null;\n\nconst handleStateChangeOnClient = newState => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\n\nexport default handleStateChangeOnClient;\n","import { Component } from 'react';\nimport shallowEqual from 'shallowequal';\nimport handleStateChangeOnClient from './client';\nimport mapStateOnServer from './server';\nimport { reducePropsToState } from './utils';\nimport Provider, { providerShape } from './Provider';\n\nexport default class Dispatcher extends Component {\n  static propTypes = {\n    context: providerShape.isRequired,\n  };\n\n  static displayName = 'HelmetDispatcher';\n\n  rendered = false;\n\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n\n  componentDidUpdate() {\n    this.emitChange();\n  }\n\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map(instance => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (Provider.canUseDOM) {\n      handleStateChangeOnClient(state);\n    } else if (mapStateOnServer) {\n      serverState = mapStateOnServer(state);\n    }\n    setHelmet(serverState);\n  }\n\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n\n    this.rendered = true;\n\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n\n  render() {\n    this.init();\n\n    return null;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport fastCompare from 'react-fast-compare';\nimport invariant from 'invariant';\nimport { Context } from './Provider';\nimport Dispatcher from './Dispatcher';\nimport { TAG_NAMES, VALID_TAG_NAMES, HTML_TAG_MAP } from './constants';\n\nexport { default as HelmetProvider } from './Provider';\n\n/* eslint-disable class-methods-use-this */\n\nexport class Helmet extends Component {\n  /**\n   * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n   * @param {Object} bodyAttributes: {\"className\": \"root\"}\n   * @param {String} defaultTitle: \"Default Title\"\n   * @param {Boolean} defer: true\n   * @param {Boolean} encodeSpecialCharacters: true\n   * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n   * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n   * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n   * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n   * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n   * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n   * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n   * @param {String} title: \"Title\"\n   * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n   * @param {String} titleTemplate: \"MySite.com - %s\"\n   */\n  /* eslint-disable react/forbid-prop-types, react/require-default-props */\n  static propTypes = {\n    base: PropTypes.object,\n    bodyAttributes: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    defaultTitle: PropTypes.string,\n    defer: PropTypes.bool,\n    encodeSpecialCharacters: PropTypes.bool,\n    htmlAttributes: PropTypes.object,\n    link: PropTypes.arrayOf(PropTypes.object),\n    meta: PropTypes.arrayOf(PropTypes.object),\n    noscript: PropTypes.arrayOf(PropTypes.object),\n    onChangeClientState: PropTypes.func,\n    script: PropTypes.arrayOf(PropTypes.object),\n    style: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    titleAttributes: PropTypes.object,\n    titleTemplate: PropTypes.string,\n  };\n  /* eslint-enable react/prop-types, react/forbid-prop-types, react/require-default-props */\n\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n  };\n\n  static displayName = 'Helmet';\n\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(this.props, nextProps);\n  }\n\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n\n    switch (child.type) {\n      case TAG_NAMES.SCRIPT:\n      case TAG_NAMES.NOSCRIPT:\n        return {\n          innerHTML: nestedChildren,\n        };\n\n      case TAG_NAMES.STYLE:\n        return {\n          cssText: nestedChildren,\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n\n  flattenArrayTypeChildren({ child, arrayTypeChildren, newChildProps, nestedChildren }) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...(arrayTypeChildren[child.type] || []),\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren),\n        },\n      ],\n    };\n  }\n\n  mapObjectTypeChildren({ child, newProps, newChildProps, nestedChildren }) {\n    switch (child.type) {\n      case TAG_NAMES.TITLE:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps },\n        };\n\n      case TAG_NAMES.BODY:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps },\n        };\n\n      case TAG_NAMES.HTML:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps },\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps },\n        };\n    }\n  }\n\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n\n    Object.keys(arrayTypeChildren).forEach(arrayChildName => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName],\n      };\n    });\n\n    return newFlattenedProps;\n  }\n\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some(name => child.type === name),\n      typeof child.type === 'function'\n        ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`\n        : `Only elements types ${VALID_TAG_NAMES.join(\n            ', '\n          )} are allowed. Helmet does not support rendering <${\n            child.type\n          }> elements. Refer to our API for more information.`\n    );\n\n    invariant(\n      !nestedChildren ||\n        typeof nestedChildren === 'string' ||\n        (Array.isArray(nestedChildren) &&\n          !nestedChildren.some(nestedChild => typeof nestedChild !== 'string')),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n\n    return true;\n  }\n\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n\n    React.Children.forEach(children, child => {\n      if (!child || !child.props) {\n        return;\n      }\n\n      const { children: nestedChildren, ...childProps } = child.props;\n      // convert React props to HTML attributes\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n\n      let { type } = child;\n      if (typeof type === 'symbol') {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n\n      switch (type) {\n        case TAG_NAMES.FRAGMENT:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n\n        case TAG_NAMES.LINK:\n        case TAG_NAMES.META:\n        case TAG_NAMES.NOSCRIPT:\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.STYLE:\n          arrayTypeChildren = this.flattenArrayTypeChildren({\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren,\n          });\n          break;\n\n        default:\n          newProps = this.mapObjectTypeChildren({\n            child,\n            newProps,\n            newChildProps,\n            nestedChildren,\n          });\n          break;\n      }\n    });\n\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n\n    return (\n      <Context.Consumer>\n        {(\n          context // eslint-disable-next-line react/jsx-props-no-spreading\n        ) => <Dispatcher {...newProps} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}\n"],"names":["TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","FRAGMENT","VALID_TAG_NAMES","Object","keys","map","name","REACT_TAG_MAP","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HTML_TAG_MAP","reduce","obj","key","getInnermostProperty","propsList","property","i","length","props","prototype","hasOwnProperty","call","getTitleFromPropsList","innermostTitle","innermostTemplate","Array","isArray","join","replace","innermostDefaultTitle","undefined","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","console","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","value","forEach","push","tagUnion","flattenArray","possibleArray","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","encode","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","getMethodsForTag","type","tags","toComponent","titleAttributes","title","React","createElement","toString","attributeString","flattenedTitle","generateTitleAsString","mappedTag","attribute","mappedAttribute","dangerouslySetInnerHTML","__html","innerHTML","cssText","generateTagsAsReactComponent","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","bodyAttributes","htmlAttributes","linkTags","metaTags","noscriptTags","scriptTags","styleTags","base","baseTag","link","meta","noscript","script","style","Context","createContext","providerShape","PropTypes","shape","setHelmet","func","helmetInstances","get","add","remove","canUseDOM","document","Provider","_this","instances","serverState","context","helmet","instance","index","splice","render","this","children","Component","propTypes","node","isRequired","defaultProps","displayName","updateTags","indexToDelete","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","Dispatcher","rendered","shouldComponentUpdate","nextProps","shallowEqual","componentDidUpdate","emitChange","componentWillUnmount","state","defer","cancelAnimationFrame","requestAnimationFrame","init","Helmet","fastCompare","mapNestedChildrenToProps","child","nestedChildren","Error","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","invariant","nestedChild","mapChildrenToProps","Children","childProps","Consumer","object","oneOfType","arrayOf","defaultTitle","bool","titleTemplate"],"mappings":"4kBAmBaA,EAAY,CACvBC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,SAAU,WACVC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACPC,SAAU,0BAGCC,EAAkBC,OAAOC,KAAKd,GAAWe,IAAI,SAAAC,UAAQhB,EAAUgB,KAE/DC,EAAgB,CAC3BC,UAAW,YACXC,QAAS,UACTC,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACbC,aAAc,YACdC,SAAU,WACVC,SAAU,YAGCC,EAAeb,OAAOC,KAAKG,GAAeU,OAAO,SAACC,EAAKC,GAElE,OADAD,EAAIX,EAAcY,IAAQA,EACnBD,GACN,ICvCGE,EAAuB,SAACC,EAAWC,GACvC,IAAK,IAAIC,EAAIF,EAAUG,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAAG,CACjD,IAAME,EAAQJ,EAAUE,GAExB,GAAIpB,OAAOuB,UAAUC,eAAeC,KAAKH,EAAOH,GAC9C,OAAOG,EAAMH,GAIjB,aAGIO,EAAwB,SAAAR,GAC5B,IAAIS,EAAiBV,EAAqBC,EAAW/B,EAAUU,OACzD+B,EAAoBX,EAAqBC,EAjB/B,iBAqBhB,GAHIW,MAAMC,QAAQH,KAChBA,EAAiBA,EAAeI,KAAK,KAEnCH,GAAqBD,EAEvB,OAAOC,EAAkBI,QAAQ,MAAO,kBAAML,IAGhD,IAAMM,EAAwBhB,EAAqBC,EA9BpC,gBAgCf,OAAOS,GAAkBM,QAAyBC,GAG9CC,EAAyB,SAAAjB,UAC7BD,EAAqBC,EAjCG,wBAiCiD,cAErEkB,EAA6B,SAACC,EAASnB,UAC3CA,EACGoB,OAAO,SAAAhB,eAAmC,IAAnBA,EAAMe,KAC7BnC,IAAI,SAAAoB,UAASA,EAAMe,KACnBvB,OAAO,SAACyB,EAAUC,eAAkBD,EAAaC,IAAY,KAE5DC,EAA0B,SAACC,EAAmBxB,UAClDA,EACGoB,OAAO,SAAAhB,eAA0C,IAA1BA,EAAMnC,EAAUC,QACvCc,IAAI,SAAAoB,UAASA,EAAMnC,EAAUC,QAC7BuD,UACA7B,OAAO,SAAC8B,EAAkBC,GACzB,IAAKD,EAAiBvB,OAGpB,IAFA,IAAMpB,EAAOD,OAAOC,KAAK4C,GAEhBzB,EAAI,EAAGA,EAAInB,EAAKoB,OAAQD,GAAK,EAAG,CACvC,IACM0B,EADe7C,EAAKmB,GACiB2B,cAE3C,IACwD,IAAtDL,EAAkBM,QAAQF,IAC1BD,EAAIC,GAEJ,OAAOF,EAAiBK,OAAOJ,GAKrC,OAAOD,GACN,KAKDM,EAAuB,SAACC,EAAST,EAAmBxB,GAExD,IAAMkC,EAAmB,GAEzB,OAAOlC,EACJoB,OAAO,SAAAhB,GACN,QAAIO,MAAMC,QAAQR,EAAM6B,WAGM,IAAnB7B,EAAM6B,IAXHE,SAAmC,mBAAjBA,QAAQC,MAAuBD,QAAQC,gBAaxDH,4DAAiE7B,EAC1E6B,cAMPjD,IAAI,SAAAoB,UAASA,EAAM6B,KACnBR,UACA7B,OAAO,SAACyC,EAAcC,GACrB,IAAMC,EAAmB,GAEzBD,EACGlB,OAAO,SAAAO,GAGN,IAFA,IAAIa,EACEzD,EAAOD,OAAOC,KAAK4C,GAChBzB,EAAI,EAAGA,EAAInB,EAAKoB,OAAQD,GAAK,EAAG,CACvC,IAAMuC,EAAe1D,EAAKmB,GACpB0B,EAAwBa,EAAaZ,eAIa,IAAtDL,EAAkBM,QAAQF,IDnGjC,QCqGSY,GAC2C,cAA3Cb,EAAIa,GAAqBX,eDtGlC,QCyGSD,GAC6C,eAA7CD,EAAIC,GAAuBC,gBAG7BW,EAAsBZ,IAIuB,IAA7CJ,EAAkBM,QAAQW,IDrH1B,cCsHCA,GDzHH,YC0HIA,GDtHH,aCuHGA,IAEFD,EAAsBC,GAI1B,IAAKD,IAAwBb,EAAIa,GAC/B,SAGF,IAAME,EAAQf,EAAIa,GAAqBX,cAUvC,OARKK,EAAiBM,KACpBN,EAAiBM,GAAuB,IAGrCD,EAAiBC,KACpBD,EAAiBC,GAAuB,KAGrCN,EAAiBM,GAAqBE,KACzCH,EAAiBC,GAAqBE,IAAS,QAMlDjB,UACAkB,QAAQ,SAAAhB,UAAOU,EAAaO,KAAKjB,KAIpC,IADA,IAAM5C,EAAOD,OAAOC,KAAKwD,GAChBrC,EAAI,EAAGA,EAAInB,EAAKoB,OAAQD,GAAK,EAAG,CACvC,IAAMuC,EAAe1D,EAAKmB,GACpB2C,OACDX,EAAiBO,GACjBF,EAAiBE,IAGtBP,EAAiBO,GAAgBI,EAGnC,OAAOR,GACN,IACFZ,WAqCQqB,EAAe,SAAAC,UAC1BpC,MAAMC,QAAQmC,GAAiBA,EAAclC,KAAK,IAAMkC,GCrMpDC,EAAoB,CAAC/E,EAAUO,SAAUP,EAAUQ,OAAQR,EAAUS,OAErEuE,EAA0B,SAACC,EAAKC,GACpC,gBADoCA,IAAAA,GAAS,IAC9B,IAAXA,EACKC,OAAOF,GAGTE,OAAOF,GACXpC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,WAGbuC,EAAoC,SAAAC,UACxCxE,OAAOC,KAAKuE,GAAY1D,OAAO,SAACsD,EAAKpD,GACnC,IAAMyD,OAAkC,IAApBD,EAAWxD,GAA0BA,OAAQwD,EAAWxD,UAAaA,EACzF,OAAOoD,EAASA,MAAOK,EAASA,GAC/B,KAwCCC,EAAuC,SAACF,EAAYG,mBAAAA,IAAAA,EAAY,IACpE3E,OAAOC,KAAKuE,GAAY1D,OAAO,SAACC,EAAKC,GAEnC,OADAD,EAAIX,EAAcY,IAAQA,GAAOwD,EAAWxD,GACrCD,GACN4D,IAqCCC,EAAmB,SAACC,EAAMC,EAAMT,GACpC,OAAQQ,GACN,KAAK1F,EAAUU,MACb,MAAO,CACLkF,YAAa,kBAvC+BP,EAwCMM,EAAKE,oBArC3DhE,IAHyCiE,EAwCCH,EAAKG,QFhEnB,YE4BR,EAEhB3D,EAAQoD,EAAqCF,KAE5C,CAACU,EAAMC,cAAchG,EAAUU,MAAOyB,EAAO2D,IARhB,IAAOA,EAAOT,IAM5ClD,GAmCA8D,SAAU,kBArFY,SAACP,EAAMI,EAAOT,EAAYH,GACtD,IAAMgB,EAAkBd,EAAkCC,GACpDc,EAAiBtB,EAAaiB,GACpC,OAAOI,MACCR,qBAAmCQ,MAAmBlB,EACxDmB,EACAjB,QACIQ,UACFA,qBAAmCV,EACrCmB,EACAjB,QACIQ,MA0EYU,CAAsBV,EAAMC,EAAKG,MAAOH,EAAKE,gBAAiBX,KAElF,IFxGI,iBEyGJ,IFxGI,iBEyGF,MAAO,CACLU,YAAa,kBAAML,EAAqCI,IACxDM,SAAU,kBAAMb,EAAkCO,KAEtD,QACE,MAAO,CACLC,YAAa,kBAxCgB,SAACF,EAAMC,UAC1CA,EAAK5E,IAAI,SAAC2C,EAAKzB,SACPoE,OACJxE,IAAKI,IFtCqB,YEuCN,KAiBtB,OAdApB,OAAOC,KAAK4C,GAAKgB,QAAQ,SAAA4B,GACvB,IAAMC,EAAkBtF,EAAcqF,IAAcA,EFzF5C,cE4FNC,GF/FI,YEgGJA,EAGAF,EAAUG,wBAA0B,CAAEC,OADtB/C,EAAIgD,WAAahD,EAAIiD,SAGrCN,EAAUE,GAAmB7C,EAAI4C,KAI9BP,EAAMC,cAAcN,EAAMW,KAmBVO,CAA6BlB,EAAMC,IACtDM,SAAU,kBAlFW,SAACP,EAAMC,EAAMT,UACxCS,EAAKhE,OAAO,SAACsD,EAAKvB,GAChB,IAAMmD,EAAgBhG,OAAOC,KAAK4C,GAC/BP,OACC,SAAAmD,WF5CM,cE6CFA,GFhDA,YEgD2CA,KAEhD3E,OAAO,SAACmF,EAAQR,GACf,IAAMhB,OACsB,IAAnB5B,EAAI4C,GACPA,EACGA,OAActB,EAAwBtB,EAAI4C,GAAYpB,OAC/D,OAAO4B,EAAYA,MAAUxB,EAASA,GACrC,IAECyB,EAAarD,EAAIgD,WAAahD,EAAIiD,SAAW,GAE7CK,GAAqD,IAArCjC,EAAkBlB,QAAQ6B,GAEhD,OAAUT,MAAOS,EAAPT,mBAA0C4B,GAClDG,WAA2BD,OAAerB,QAE3C,IA4DmBuB,CAAqBvB,EAAMC,EAAMT,OAKnDgC,EAAmB,gBAEvBC,IAAAA,eACAjC,IAAAA,OACAkC,IAAAA,eACAC,IAAAA,SACAC,IAAAA,SACAC,IAAAA,aACAC,IAAAA,WACAC,IAAAA,cACA3B,MAAAA,aAAQ,KACRD,IAAAA,sBACK,CACL6B,KAAMjC,EAAiBzF,EAAUC,OAZjC0H,QAYgDzC,GAChDiC,eAAgB1B,EFpIV,iBEoIiD0B,EAAgBjC,GACvEkC,eAAgB3B,EFpIV,iBEoIiD2B,EAAgBlC,GACvE0C,KAAMnC,EAAiBzF,EAAUK,KAAMgH,EAAUnC,GACjD2C,KAAMpC,EAAiBzF,EAAUM,KAAMgH,EAAUpC,GACjD4C,SAAUrC,EAAiBzF,EAAUO,SAAUgH,EAAcrC,GAC7D6C,OAAQtC,EAAiBzF,EAAUQ,OAAQgH,EAAYtC,GACvD8C,MAAOvC,EAAiBzF,EAAUS,MAAOgH,EAAWvC,GACpDY,MAAOL,EAAiBzF,EAAUU,MAAO,CAAEoF,MAAAA,EAAOD,gBAAAA,GAAmBX,KCnJ1D+C,EAAUlC,EAAMmC,cAFR,IAIRC,EAAgBC,EAAUC,MAAM,CAC3CC,UAAWF,EAAUG,KACrBC,gBAAiBJ,EAAUC,MAAM,CAC/BI,IAAKL,EAAUG,KACfG,IAAKN,EAAUG,KACfI,OAAQP,EAAUG,SAIhBK,EAAgC,oBAAbC,SAEJC,cAkCnB,WAAY3G,SAAO,OACjB4G,cAAM5G,UAnBR6G,UAAY,KAEZvE,MAAQ,CACN6D,UAAW,SAAAW,GACTF,EAAK5G,MAAM+G,QAAQC,OAASF,GAE9BT,gBAAiB,CACfC,IAAK,oBAAWO,WAChBN,IAAK,SAAAU,GACHL,EAAKC,UAAUrE,KAAKyE,IAEtBT,OAAQ,SAAAS,GACN,IAAMC,EAAQN,EAAKC,UAAUnF,QAAQuF,GACrCL,EAAKC,UAAUM,OAAOD,EAAO,MAQ5BP,EAASF,YACZzG,EAAM+G,QAAQC,OAASjC,EAAiB,CACtCS,QAAS,GACTR,eAAgB,GAChBnC,yBAAyB,EACzBoC,eAAgB,GAChBC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,WAAY,GACZC,UAAW,GACX3B,MAAO,GACPD,gBAAiB,kCAKvB0D,OAAA,WACE,OAAOxD,gBAACkC,EAAQa,UAASrE,MAAO+E,KAAK/E,OAAQ+E,KAAKrH,MAAMsH,cAvDtBC,GAAjBZ,EACZF,UAAYA,EADAE,EAGZa,UAAY,CACjBT,QAASd,EAAUC,MAAM,CACvBc,OAAQf,EAAUC,UAEpBoB,SAAUrB,EAAUwB,KAAKC,YAPRf,EAUZgB,aAAe,CACpBZ,QAAS,IAXQJ,EAcZiB,YAAc,iBC9BvB,IAAMC,EAAa,SAACtE,EAAMC,GACxB,IAIIsE,EAJEC,EAAcrB,SAASsB,MAAQtB,SAASuB,cAAcpK,EAAUG,MAChEkK,EAAWH,EAAYI,iBAAoB5E,EAAAA,aAC3C6E,EAAU,GAAGC,MAAMlI,KAAK+H,GACxBI,EAAU,GA4ChB,OAzCI9E,GAAQA,EAAKzD,QACfyD,EAAKjB,QAAQ,SAAAhB,GACX,IAAMgH,EAAa7B,SAAS7C,cAAcN,GAG1C,IAAK,IAAMY,KAAa5C,EAClB7C,OAAOuB,UAAUC,eAAeC,KAAKoB,EAAK4C,KJXxC,cIYAA,EACFoE,EAAWhE,UAAYhD,EAAIgD,UJhB3B,YIiBSJ,EACLoE,EAAWC,WACbD,EAAWC,WAAWhE,QAAUjD,EAAIiD,QAEpC+D,EAAWE,YAAY/B,SAASgC,eAAenH,EAAIiD,UAIrD+D,EAAWI,aAAaxE,OADgB,IAAnB5C,EAAI4C,GAA6B,GAAK5C,EAAI4C,KAMrEoE,EAAWI,aJmBe,UInBgB,QAIxCP,EAAQQ,KAAK,SAACC,EAAa3B,GAEzB,OADAY,EAAgBZ,EACTqB,EAAWO,YAAYD,KAGhCT,EAAQjB,OAAOW,EAAe,GAE9BQ,EAAQ9F,KAAK+F,KAKnBH,EAAQ7F,QAAQ,SAAAhB,UAAOA,EAAIwH,WAAWC,YAAYzH,KAClD+G,EAAQ/F,QAAQ,SAAAhB,UAAOwG,EAAYU,YAAYlH,KAExC,CACL6G,QAAAA,EACAE,QAAAA,IAIEW,EAAmB,SAACpH,EAASqB,GACjC,IAAMgG,EAAaxC,SAASyC,qBAAqBtH,GAAS,GAE1D,GAAKqH,EAAL,CASA,IALA,IAAME,EAAwBF,EAAWG,aJbX,WIcxBC,EAAmBF,EAAwBA,EAAsBG,MAAM,KAAO,GAC9EC,EAAqB,GAAG7H,OAAO2H,GAC/BG,EAAgB/K,OAAOC,KAAKuE,GAEzBpD,EAAI,EAAGA,EAAI2J,EAAc1J,OAAQD,GAAK,EAAG,CAChD,IAAMqE,EAAYsF,EAAc3J,GAC1BwC,EAAQY,EAAWiB,IAAc,GAEnC+E,EAAWG,aAAalF,KAAe7B,GACzC4G,EAAWP,aAAaxE,EAAW7B,IAGQ,IAAzCgH,EAAiB5H,QAAQyC,IAC3BmF,EAAiB9G,KAAK2B,GAGxB,IAAMuF,EAAcF,EAAmB9H,QAAQyC,IAC1B,IAAjBuF,GACFF,EAAmBrC,OAAOuC,EAAa,GAI3C,IAAK,IAAI5J,EAAI0J,EAAmBzJ,OAAS,EAAGD,GAAK,EAAGA,GAAK,EACvDoJ,EAAWS,gBAAgBH,EAAmB1J,IAG5CwJ,EAAiBvJ,SAAWyJ,EAAmBzJ,OACjDmJ,EAAWS,gBJzCiB,WI0CnBT,EAAWG,aJ1CQ,aI0C2BI,EAAchJ,KAAK,MAC1EyI,EAAWP,aJ3CiB,UI2Ccc,EAAchJ,KAAK,QAY3DmJ,EAAmB,SAACC,EAAUC,OAEhCtE,EAWEqE,EAXFrE,QAEAP,EASE4E,EATF5E,eACAC,EAQE2E,EARF3E,SACAC,EAOE0E,EAPF1E,SACAC,EAMEyE,EANFzE,aACA2E,EAKEF,EALFE,oBACA1E,EAIEwE,EAJFxE,WACAC,EAGEuE,EAHFvE,UACA3B,EAEEkG,EAFFlG,MACAD,EACEmG,EADFnG,gBAEFuF,EAAiBpL,EAAUE,KADvB8L,EAVF7E,gBAYFiE,EAAiBpL,EAAUI,KAAMgH,GAvBf,SAACtB,EAAOT,QACL,IAAVS,GAAyB+C,SAAS/C,QAAUA,IACrD+C,SAAS/C,MAAQjB,EAAaiB,IAGhCsF,EAAiBpL,EAAUU,MAAO2E,GAoBlC8G,CAAYrG,EAAOD,GAEnB,IAAMuG,EAAa,CACjBzE,QAASqC,EAAWhK,EAAUC,KAAM0H,GACpCN,SAAU2C,EAAWhK,EAAUK,KAAMgH,GACrCC,SAAU0C,EAAWhK,EAAUM,KAAMgH,GACrCC,aAAcyC,EAAWhK,EAAUO,SAAUgH,GAC7CC,WAAYwC,EAAWhK,EAAUQ,OAAQgH,GACzCC,UAAWuC,EAAWhK,EAAUS,MAAOgH,IAGnC4E,EAAY,GACZC,EAAc,GAEpBzL,OAAOC,KAAKsL,GAAY1H,QAAQ,SAAAxB,SACDkJ,EAAWlJ,GAAhCuH,IAAAA,QAASF,IAAAA,QAEbE,EAAQvI,SACVmK,EAAUnJ,GAAWuH,GAEnBF,EAAQrI,SACVoK,EAAYpJ,GAAWkJ,EAAWlJ,GAASqH,WAI3C0B,GACFA,IAGFC,EAAoBF,EAAUK,EAAWC,IAIvCC,EAAkB,KCrJDC,sJAOnBC,UAAW,sCAEXC,sBAAA,SAAsBC,GACpB,OAAQC,EAAaD,EAAWnD,KAAKrH,UAGvC0K,mBAAA,WACErD,KAAKsD,gBAGPC,qBAAA,WAC8BvD,KAAKrH,MAAM+G,QAA/BV,gBACQG,OAAOa,MACvBA,KAAKsD,gBAGPA,WAAA,eJ8IyB/K,EGdOiK,IC/HSxC,KAAKrH,MAAM+G,QAAzBZ,IAAAA,UACrBW,EAAc,KACZ+D,GJ2IiBjL,II7IfyG,gBAGUC,MAAM1H,IAAI,SAAAqI,GACxB,IAAMjH,OAAaiH,EAASjH,OAE5B,cADOA,EAAM+G,QACN/G,IJuI0B,CACvCwF,QAASrE,EAAwB,CD1K3B,QC0KkDvB,GACxDoF,eAAgBlE,EDhKV,iBCgK2DlB,GACjEkL,MAAOnL,EAAqBC,EA3KrB,SA4KPmD,OAAQpD,EAAqBC,EA3KF,2BA4K3BqF,eAAgBnE,EDlKV,iBCkK2DlB,GACjEsF,SAAUtD,EACR/D,EAAUK,KACV,CD3KG,MANC,QCkLJ0B,GAEFuF,SAAUvD,EACR/D,EAAUM,KACV,CDlLI,OANG,UAGE,aAID,WAFC,YC0LTyB,GAEFwF,aAAcxD,EAAqB/D,EAAUO,SAAU,CD7L3C,aC6LwEwB,GACpFmK,oBAAqBlJ,EAAuBjB,GAC5CyF,WAAYzD,EACV/D,EAAUQ,OACV,CD5LG,MALO,aCkMVuB,GAEF0F,UAAW1D,EAAqB/D,EAAUS,MAAO,CDvMvC,WCuMkEsB,GAC5E+D,MAAOvD,EAAsBR,GAC7B8D,gBAAiB5C,ED3LV,kBC2L4DlB,KInK7D+G,EAASF,WDsHiBoD,ECrHFgB,EDsH1BT,GACFW,qBAAqBX,GAGnBP,EAASiB,MACXV,EAAkBY,sBAAsB,WACtCpB,EAAiBC,EAAU,WACzBO,EAAkB,UAItBR,EAAiBC,GACjBO,EAAkB,OCjIPrF,IACT+B,EAAc/B,EAAiB8F,IAEjC1E,EAAUW,MAMZmE,KAAA,WACM5D,KAAKiD,WAITjD,KAAKiD,UAAW,EAEYjD,KAAKrH,MAAM+G,QAA/BV,gBACQE,IAAIc,MACpBA,KAAKsD,iBAGPvD,OAAA,WAGE,OAFAC,KAAK4D,gBAzD+B1D,GAAnB8C,EACZ7C,UAAY,CACjBT,QAASf,EAAc0B,YAFN2C,EAKZzC,YAAc,mBCAVsD,IAAAA,kGA8CXX,sBAAA,SAAsBC,GACpB,OAAQW,EAAY9D,KAAKrH,MAAOwK,MAGlCY,yBAAA,SAAyBC,EAAOC,GAC9B,IAAKA,EACH,YAGF,OAAQD,EAAM9H,MACZ,KAAK1F,EAAUQ,OACf,KAAKR,EAAUO,SACb,MAAO,CACLmG,UAAW+G,GAGf,KAAKzN,EAAUS,MACb,MAAO,CACLkG,QAAS8G,GAEb,QACE,UAAUC,UACJF,EAAM9H,+GAKlBiI,yBAAA,kBAA2BH,IAAAA,MAAOI,IAAAA,kBAChC,YACKA,UACFJ,EAAM9H,gBACDkI,EAAkBJ,EAAM9H,OAAS,WAJUmI,cAO1CrE,KAAK+D,yBAAyBC,IAP2BC,0BAapEK,sBAAA,oBAAwBN,IAAAA,MAAOO,IAAAA,SAAUF,IAAAA,cAAeJ,IAAAA,eACtD,OAAQD,EAAM9H,MACZ,KAAK1F,EAAUU,MACb,YACKqN,UACFP,EAAM9H,MAAO+H,IACd5H,qBAAsBgI,OAG1B,KAAK7N,EAAUE,KACb,YACK6N,GACH5G,oBAAqB0G,KAGzB,KAAK7N,EAAUI,KACb,YACK2N,GACH3G,oBAAqByG,KAEzB,QACE,YACKE,UACFP,EAAM9H,WAAYmI,WAK3BG,4BAAA,SAA4BJ,EAAmBG,GAC7C,IAAIE,OAAyBF,GAS7B,OAPAlN,OAAOC,KAAK8M,GAAmBlJ,QAAQ,SAAAwJ,SACrCD,OACKA,UACFC,GAAiBN,EAAkBM,SAIjCD,KAGTE,sBAAA,SAAsBX,EAAOC,GAoB3B,OAnBAW,EACExN,EAAgBmK,KAAK,SAAA/J,UAAQwM,EAAM9H,OAAS1E,IACtB,mBAAfwM,EAAM9H,gKAEc9E,EAAgBgC,KACrC,0DAEA4K,EAAM9H,2DAId0I,GACGX,GAC2B,iBAAnBA,GACN/K,MAAMC,QAAQ8K,KACZA,EAAe1C,KAAK,SAAAsD,SAAsC,iBAAhBA,8CACLb,EAAM9H,8DAA6D8H,EAAM9H,eAAgB8H,EAAM9H,yDAM7I4I,mBAAA,SAAmB7E,EAAUsE,cACvBH,EAAoB,GAkDxB,OAhDA7H,EAAMwI,SAAS7J,QAAQ+E,EAAU,SAAA+D,GAC/B,GAAKA,GAAUA,EAAMrL,MAArB,CADwC,MAKYqL,EAAMrL,MAAxCsL,IAAVhE,SAA6B+E,oBAE/BX,EAAgBhN,OAAOC,KAAK0N,GAAY7M,OAAO,SAACC,EAAKC,GAEzD,OADAD,EAAIF,EAAaG,IAAQA,GAAO2M,EAAW3M,GACpCD,GACN,IAEG8D,EAAS8H,EAAT9H,KAON,OANoB,iBAATA,EACTA,EAAOA,EAAKO,WAEZ8C,EAAKoF,sBAAsBX,EAAOC,GAG5B/H,GACN,KAAK1F,EAAUW,SACboN,EAAWhF,EAAKuF,mBAAmBb,EAAgBM,GACnD,MAEF,KAAK/N,EAAUK,KACf,KAAKL,EAAUM,KACf,KAAKN,EAAUO,SACf,KAAKP,EAAUQ,OACf,KAAKR,EAAUS,MACbmN,EAAoB7E,EAAK4E,yBAAyB,CAChDH,MAAAA,EACAI,kBAAAA,EACAC,cAAAA,EACAJ,eAAAA,IAEF,MAEF,QACEM,EAAWhF,EAAK+E,sBAAsB,CACpCN,MAAAA,EACAO,SAAAA,EACAF,cAAAA,EACAJ,eAAAA,aAMIO,4BAA4BJ,EAAmBG,MAG7DxE,OAAA,iBACiCC,KAAKrH,MAA5BsH,IAAAA,SACJsE,0BAMJ,OAJItE,IACFsE,EAAWvE,KAAK8E,mBAAmB7E,EAAUsE,IAI7ChI,gBAACkC,EAAQwG,cACN,SACCvF,UACGnD,gBAACyG,OAAeuB,GAAU7E,QAASA,WAxNpBQ,GAAf2D,EAmBJ1D,UAAY,CACjBjC,KAAMU,EAAUsG,OAChBvH,eAAgBiB,EAAUsG,OAC1BjF,SAAUrB,EAAUuG,UAAU,CAACvG,EAAUwG,QAAQxG,EAAUwB,MAAOxB,EAAUwB,OAC5EiF,aAAczG,EAAUtB,OACxBmG,MAAO7E,EAAU0G,KACjB9J,wBAAyBoD,EAAU0G,KACnC1H,eAAgBgB,EAAUsG,OAC1B9G,KAAMQ,EAAUwG,QAAQxG,EAAUsG,QAClC7G,KAAMO,EAAUwG,QAAQxG,EAAUsG,QAClC5G,SAAUM,EAAUwG,QAAQxG,EAAUsG,QACtCxC,oBAAqB9D,EAAUG,KAC/BR,OAAQK,EAAUwG,QAAQxG,EAAUsG,QACpC1G,MAAOI,EAAUwG,QAAQxG,EAAUsG,QACnC5I,MAAOsC,EAAUtB,OACjBjB,gBAAiBuC,EAAUsG,OAC3BK,cAAe3G,EAAUtB,QAnChBuG,EAuCJvD,aAAe,CACpBmD,OAAO,EACPjI,yBAAyB,GAzChBqI,EA4CJtD,YAAc"}