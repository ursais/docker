{"version":3,"sources":["../../../src/unified-parameter-api/set-parameters.js"],"names":["setParameters","gl","parameters","key","setter","FUNCTION_STYLE_PARAMETER_SETTERS"],"mappings":";;;;;;;;;AAAA;;AACA;;AAQO,SAASA,aAAT,CAAuBC,EAAvB,EAA2BC,UAA3B,EAAuC;AAE5C,0CAAgBD,EAAhB,EAAoBC,UAApB;;AAEA,OAAK,IAAMC,GAAX,IAAkBD,UAAlB,EAA8B;AAC5B,QAAME,MAAM,GAAGC,qCAAiCF,GAAjC,CAAf;;AACA,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACH,EAAD,EAAKC,UAAU,CAACC,GAAD,CAAf,EAAsBA,GAAtB,CAAN;AACD;AACF;AACF","sourcesContent":["import {setParameters as glSetParameters} from './unified-parameter-api';\nimport FUNCTION_STYLE_PARAMETER_SETTERS from './webgl-setter-function-table';\n\n// Adds support for using gl function names (in addition to parameter constants)\n// as keys in setParameters\n//\n// Note: Value may be \"normalized\" (in case a short form is supported).\n// In that case the normalized value is returned.\n\nexport function setParameters(gl, parameters) {\n  // Handles any GL parameter keys\n  glSetParameters(gl, parameters);\n  // Check for function style keys\n  for (const key in parameters) {\n    const setter = FUNCTION_STYLE_PARAMETER_SETTERS[key];\n    if (setter) {\n      setter(gl, parameters[key], key);\n    }\n  }\n}\n"],"file":"set-parameters.js"}