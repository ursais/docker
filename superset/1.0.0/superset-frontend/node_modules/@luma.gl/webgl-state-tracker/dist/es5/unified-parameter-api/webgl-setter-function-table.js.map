{"version":3,"sources":["../../../src/unified-parameter-api/webgl-setter-function-table.js"],"names":["isArray","array","Array","ArrayBuffer","isView","framebuffer","gl","handle","bindFramebuffer","blend","value","enable","disable","blendColor","blendEquation","args","blendEquationSeparate","blendFunc","length","blendFuncSeparate","clearColor","clearDepth","clearStencil","colorMask","cull","cullFace","depthTest","depthFunc","depthMask","depthRange","dither","derivativeHint","hint","frontFace","mipmapHint","lineWidth","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","scissor","stencilTest","stencilMask","mask","backMask","stencilMaskSeparate","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","viewport"],"mappings":"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","sourcesContent":["// map of parameter setter function names, parameter constants, default values and types\n// - Uses gl function names, except when setter function exist that are named differently\n// - When the WebGL api offers <setter> and <setter>Separate (e.g. blendEquation and\n//   blendEquationSeparate, we use non-separate name, but accept both non-separate and\n//   separate arguments. Thus, a `getParameter` call will always return all the separate values\n//   in an array, in a form that can be accepted by the setter.\n\nimport GL from '@luma.gl/constants';\n\n// HELPERS\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\nexport default {\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n"],"file":"webgl-setter-function-table.js"}