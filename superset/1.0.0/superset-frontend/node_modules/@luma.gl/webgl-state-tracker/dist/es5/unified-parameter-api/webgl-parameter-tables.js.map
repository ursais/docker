{"version":3,"sources":["../../../src/unified-parameter-api/webgl-parameter-tables.js"],"names":["GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","GL_COMPOSITE_PARAMETER_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS"],"mappings":"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","sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values) =>\n    gl.blendEquationSeparate(values[GL.BLEND_EQUATION_RGB], values[GL.BLEND_EQUATION_ALPHA]),\n  blendFunc: (gl, values) =>\n    gl.blendFuncSeparate(\n      values[GL.BLEND_SRC_RGB],\n      values[GL.BLEND_DST_RGB],\n      values[GL.BLEND_SRC_ALPHA],\n      values[GL.BLEND_DST_ALPHA]\n    ),\n  polygonOffset: (gl, values) =>\n    gl.polygonOffset(values[GL.POLYGON_OFFSET_FACTOR], values[GL.POLYGON_OFFSET_UNITS]),\n  sampleCoverage: (gl, values) =>\n    gl.sampleCoverage(values[GL.SAMPLE_COVERAGE_VALUE], values[GL.SAMPLE_COVERAGE_INVERT]),\n  stencilFuncFront: (gl, values) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      values[GL.STENCIL_FUNC],\n      values[GL.STENCIL_REF],\n      values[GL.STENCIL_VALUE_MASK]\n    ),\n  stencilFuncBack: (gl, values) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      values[GL.STENCIL_BACK_FUNC],\n      values[GL.STENCIL_BACK_REF],\n      values[GL.STENCIL_BACK_VALUE_MASK]\n    ),\n  stencilOpFront: (gl, values) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      values[GL.STENCIL_FAIL],\n      values[GL.STENCIL_PASS_DEPTH_FAIL],\n      values[GL.STENCIL_PASS_DEPTH_PASS]\n    ),\n  stencilOpBack: (gl, values) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      values[GL.STENCIL_BACK_FAIL],\n      values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n      values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n    )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"],"file":"webgl-parameter-tables.js"}