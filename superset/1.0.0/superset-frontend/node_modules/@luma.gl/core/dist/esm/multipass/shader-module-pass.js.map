{"version":3,"sources":["../../../src/multipass/shader-module-pass.js"],"names":["Pass","CompositePass","ClipSpace","normalizeShaderModule","ShaderModuleSinglePass","gl","props","Object","assign","swap","inputBuffer","swapBuffers","model","setUniforms","draw","uniforms","texture","texSize","width","height","parameters","depthWrite","depthTest","ShaderModulePass","module","id","name","passes","normalizePasses","first","pass","filter","sampler","fs","getFragmentShaderForRenderPass","getModel","map","idn","length","modules","getUniforms","FILTER_FS_TEMPLATE","func","SAMPLER_FS_TEMPLATE"],"mappings":"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","sourcesContent":["//\n// A pass that renders a given texture into screen space\n//\n\nimport Pass from './pass';\nimport CompositePass from './composite-pass';\nimport ClipSpace from '../lib/clip-space';\n\nimport {normalizeShaderModule} from '@luma.gl/shadertools';\n\nclass ShaderModuleSinglePass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({swap: true}, props));\n  }\n\n  _renderPass({inputBuffer, swapBuffers}) {\n    this.props.model.setUniforms(this.props);\n\n    // swapBuffers();\n    this.props.model.draw({\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n\nexport default class ShaderModulePass extends CompositePass {\n  constructor(gl, module, props = {}) {\n    const id = `${module.name}-pass`;\n    normalizeShaderModule(module);\n    const passes = normalizePasses(gl, module, id, props);\n    super(gl, Object.assign({id, passes}, props));\n    this.module = module;\n  }\n\n  _renderPass({inputBuffer, swapBuffers}) {\n    let first = true;\n    for (const pass of this.props.passes) {\n      if (!first) {\n        swapBuffers();\n      }\n      first = false;\n      const {uniforms, model} = pass.props;\n      if (uniforms) {\n        model.setUniforms(uniforms);\n      }\n      // swapBuffers();\n      model.draw({\n        uniforms: {\n          texture: inputBuffer,\n          texSize: [inputBuffer.width, inputBuffer.height]\n        },\n        parameters: {\n          depthWrite: false,\n          depthTest: false\n        }\n      });\n    }\n  }\n}\n\nfunction normalizePasses(gl, module, id, props) {\n  if (module.filter || module.sampler) {\n    const fs = getFragmentShaderForRenderPass(module);\n    const pass = new ShaderModuleSinglePass(gl, {\n      id,\n      model: getModel(gl, module, fs, id, props),\n      uniforms: null\n    });\n    return [pass];\n  }\n\n  const passes = module.passes || [];\n  return passes.map(pass => {\n    const fs = getFragmentShaderForRenderPass(module, pass);\n    const idn = `${id}-${passes.length + 1}`;\n\n    return new ShaderModuleSinglePass(\n      gl,\n      Object.assign(\n        {\n          id: idn,\n          model: getModel(gl, module, fs, idn, props),\n          uniforms: pass.uniforms\n        },\n        props\n      )\n    );\n  });\n}\n\nfunction getModel(gl, module, fs, id, props) {\n  const model = new ClipSpace(gl, {id, fs, modules: [module]});\n\n  const uniforms = Object.assign(module.getUniforms(), module.getUniforms(props));\n\n  model.setUniforms(uniforms);\n  return model;\n}\n\nconst FILTER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = texture2D(texture, texCoord);\n  gl_FragColor = ${func}(gl_FragColor, texSize, texCoord);\n}\n`;\n\nconst SAMPLER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = ${func}(texture, texSize, texCoord);\n}\n`;\n\nfunction getFragmentShaderForRenderPass(module, pass = module) {\n  if (pass.filter) {\n    const func = typeof pass.filter === 'string' ? pass.filter : `${module.name}_filterColor`;\n    return FILTER_FS_TEMPLATE(func);\n  }\n\n  if (pass.sampler) {\n    const func = typeof pass.sampler === 'string' ? pass.sampler : `${module.name}_sampleColor`;\n    return SAMPLER_FS_TEMPLATE(func);\n  }\n\n  // console.error(`${module.name} no fragment shader generated`);\n  return null;\n}\n"],"file":"shader-module-pass.js"}