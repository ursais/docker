{"version":3,"sources":["../../../src/multipass/multi-pass-renderer.js"],"names":["CompositePass","RenderState","MultiPassRenderer","constructor","gl","props","Array","isArray","passes","Object","assign","id","renderState","render","animationProps","reset","pass","delete"],"mappings":"AAMA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,eAAe,MAAMC,iBAAN,SAAgCF,aAAhC,CAA8C;AAC3DG,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAK,GAAG,EAAb,EAAiB;AAC1BA,IAAAA,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuB;AAACG,MAAAA,MAAM,EAAEH;AAAT,KAAvB,GAAyCA,KAAjD;AACA,UAAMD,EAAN,EAAUK,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAd,EAAkCN,KAAlC,CAAV;AACA,SAAKO,WAAL,GAAmB,IAAIX,WAAJ,CAAgBG,EAAhB,EAAoBC,KAApB,CAAnB;AACD;;AAGDQ,EAAAA,MAAM,CAACC,cAAD,EAAiB;AACrB,SAAKF,WAAL,CAAiBG,KAAjB;AACA,UAAM;AAACP,MAAAA,MAAM,GAAG;AAAV,QAAgB,KAAKH,KAA3B;;AACA,SAAK,MAAMW,IAAX,IAAmBR,MAAnB,EAA2B;AACzBQ,MAAAA,IAAI,CAACH,MAAL,CAAY,KAAKD,WAAjB,EAA8BE,cAA9B;AACD;;AACD,WAAO,IAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,SAAKL,WAAL,CAAiBK,MAAjB;AACA,UAAMA,MAAN;AACD;;AApB0D","sourcesContent":["//\n// A top-level composite render pass, that manages render state\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport CompositePass from './composite-pass';\nimport RenderState from './render-state';\n\nexport default class MultiPassRenderer extends CompositePass {\n  constructor(gl, props = {}) {\n    props = Array.isArray(props) ? {passes: props} : props;\n    super(gl, Object.assign({id: 'multi-pass'}, props));\n    this.renderState = new RenderState(gl, props);\n  }\n\n  // Override render() to just forward the call\n  render(animationProps) {\n    this.renderState.reset();\n    const {passes = []} = this.props;\n    for (const pass of passes) {\n      pass.render(this.renderState, animationProps);\n    }\n    return this;\n  }\n\n  delete() {\n    this.renderState.delete();\n    super.delete();\n  }\n}\n"],"file":"multi-pass-renderer.js"}