{"version":3,"sources":["../../../src/multipass/stencil-pass.js"],"names":["withParameters","setParameters","Pass","getMask","indices","bits","mask","forEach","index","StencilPass","constructor","gl","props","Object","assign","id","swap","setProps","_renderPass","inputBuffer","outputBuffer","animationPropst","stencilReadMask","stencils","stencilWriteMask","updateStencil","stencilTest","stencilOp","stencilFunc","stencilMask","clearStencil","clear","model","models","setUniforms","normalUniforms","draw","drawParams","outlineUniforms"],"mappings":"AAMA,SAAQA,cAAR,EAAwBC,aAAxB,QAA4C,gBAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,OAAT,CAAiBC,OAAO,GAAG,EAA3B,EAA+BC,IAAI,GAAG,CAAtC,EAAyC;AACvC,MAAIC,IAAI,GAAG,CAAX;AACAF,EAAAA,OAAO,CAACG,OAAR,CAAgBC,KAAK,IAAI;AAEvBF,IAAAA,IAAI,GAAGA,IAAI,GAAI,KAAKE,KAApB;AACD,GAHD;AAIA,SAAOF,IAAP;AACD;;AAED,eAAe,MAAMG,WAAN,SAA0BP,IAA1B,CAA+B;AAC5CQ,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAK,GAAG,EAAb,EAAiB;AAC1B,UAAMD,EAAN,EAAUE,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAE,qBAAL;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAAd,EAAwDJ,KAAxD,CAAV;AACA,SAAKA,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,CAAb;AACA,SAAKK,QAAL,CAAcL,KAAd;AACD;;AAEDM,EAAAA,WAAW,CAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,GAAD,EAA+C;AACxD,UAAM;AAACV,MAAAA;AAAD,QAAO,IAAb;AACA,UAAMW,eAAe,GAAGnB,OAAO,CAAC,KAAKS,KAAL,CAAWW,QAAZ,CAA/B;AACA,UAAMC,gBAAgB,GAAGrB,OAAO,CAAC,KAAKS,KAAL,CAAWa,aAAZ,CAAhC;AAEAzB,IAAAA,cAAc,CACZW,EADY,EAEZ;AACEe,MAAAA,WAAW,EAAEJ,eAAe,KAAK,CAApB,IAAyBE,gBAAgB,KAAK,CAD7D;AAEEG,MAAAA,SAAS,EAAE;AAFb,KAFY,EAMZ,MAAM;AACJ,UAAIL,eAAJ,EAAqB;AACnBrB,QAAAA,aAAa,CAACU,EAAD,EAAK;AAChBiB,UAAAA,WAAW,EAAE,MAAW,CAAX,EAAcN,eAAd;AADG,SAAL,CAAb;AAGD;;AAEDrB,MAAAA,aAAa,CAACU,EAAD,EAAK;AAChBkB,QAAAA,WAAW,EAAEL;AADG,OAAL,CAAb;;AAIA,UAAI,KAAKZ,KAAL,CAAWkB,YAAf,EAA6B;AAC3BnB,QAAAA,EAAE,CAACoB,KAAH;AACD;;AAGD,WAAK,MAAMC,KAAX,IAAoB,KAAKpB,KAAL,CAAWqB,MAA/B,EAAuC;AACrCD,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKtB,KAAL,CAAWuB,cAA7B;AACAH,QAAAA,KAAK,CAACI,IAAN,CAAW,KAAKxB,KAAL,CAAWyB,UAAtB;AACD;;AAGDpC,MAAAA,aAAa,CAACU,EAAD,EAAK;AAChBiB,QAAAA,WAAW,EAAE,MAAW,CAAX,EAAcN,eAAd,CADG;AAEhBO,QAAAA,WAAW,EAAE;AAFG,OAAL,CAAb;;AAKA,WAAK,MAAMG,KAAX,IAAoB,KAAKpB,KAAL,CAAWqB,MAA/B,EAAuC;AACrCD,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKtB,KAAL,CAAW0B,eAA7B;AACAN,QAAAA,KAAK,CAACI,IAAN,CAAW,KAAKxB,KAAL,CAAWyB,UAAtB;AACAL,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKtB,KAAL,CAAWuB,cAA7B;AACD;AAGF,KAxCW,CAAd;AA0CD;;AAtD2C","sourcesContent":["//\n// A composite stencil pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport {withParameters, setParameters} from '@luma.gl/webgl';\nimport Pass from './pass';\n\nfunction getMask(indices = [], bits = 8) {\n  let mask = 0;\n  indices.forEach(index => {\n    // assert(index >= 0 && index < bits);\n    mask = mask & (1 >> index);\n  });\n  return mask;\n}\n\nexport default class StencilPass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({id: 'simple-outline-pass', swap: false}, props));\n    this.props = Object.assign({}, props);\n    this.setProps(props);\n  }\n\n  _renderPass({inputBuffer, outputBuffer, animationPropst}) {\n    const {gl} = this;\n    const stencilReadMask = getMask(this.props.stencils);\n    const stencilWriteMask = getMask(this.props.updateStencil);\n\n    withParameters(\n      gl,\n      {\n        stencilTest: stencilReadMask !== 0 && stencilWriteMask !== 0, // turn on stencil buffers\n        stencilOp: [gl.KEEP, gl.KEEP, gl.REPLACE] // update stencil if both stencil+depth tests pass\n      },\n      () => {\n        if (stencilReadMask) {\n          setParameters(gl, {\n            stencilFunc: [gl.EQUAL, 0, stencilReadMask]\n          });\n        }\n\n        setParameters(gl, {\n          stencilMask: stencilWriteMask\n        });\n\n        if (this.props.clearStencil) {\n          gl.clear(gl.STENCIL_BUFFER_BIT);\n        }\n\n        // draw\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.normalUniforms);\n          model.draw(this.props.drawParams);\n        }\n\n        // Disable stencil writing, mask to stencil plane 0\n        setParameters(gl, {\n          stencilFunc: [gl.EQUAL, 0, stencilReadMask],\n          stencilMask: 0x00 // disable writing to the stencil buffer\n        });\n\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.outlineUniforms);\n          model.draw(this.props.drawParams);\n          model.setUniforms(this.props.normalUniforms);\n        }\n\n        // All gl settings will reset here...\n      }\n    );\n  }\n}\n"],"file":"stencil-pass.js"}