{"version":3,"sources":["../../../src/lib/base-model.js"],"names":["LOG_DRAW_PRIORITY","LOG_DRAW_TIMEOUT","BaseModel","gl","props","id","lastLogTime","initialize","shaderCache","log","warn","programManager","ProgramManager","getDefaultProgramManager","_programManagerState","_managedProgram","program","vs","fs","modules","defines","inject","varyings","bufferMode","programProps","vertexArray","_programDirty","userData","needsRedraw","_attributes","attributes","uniforms","animatedUniforms","animated","animationLoop","timerQueryEnabled","timeElapsedQuery","undefined","lastQueryReturned","stats","accumulatedFrameTime","averageFrameTime","profileFrameCount","pickable","_checkProgram","_setBaseModelProps","setUniforms","Object","assign","getModuleUniforms","moduleSettings","key","release","_extractAnimatedUniforms","opts","getUniforms","framebuffer","transformFeedback","parameters","animationProps","setAttributes","updateModuleSettings","_refreshAnimationProps","logPriority","_logDrawCallStart","drawParams","getDrawParams","isInstanced","isIndexed","indexType","indexOffset","instanceCount","noop","onBeforeRender","onAfterRender","_timerQueryStart","didDraw","draw","drawMode","getDrawMode","vertexCount","getVertexCount","offset","_timerQueryEnd","_logDrawCallEnd","Query","isSupported","_setAnimationProps","_animationProps","_animationLoop","needsUpdate","stateHash","MODULAR_SHADERS","get","Program","setProps","VertexArray","uniformName","valueFunction","foundAnimated","newValue","staticUniforms","beginTimeElapsedQuery","end","isResultAvailable","elapsedTime","getTimerMilliseconds","lastFrameTime","priority","logDrawTimeout","Date","now","group","collapsed","attributeTable","header","uniformTable","table","unusedTable","unusedCount","undefinedOnly","missingTable","missingCount","count","keys","configTable","configuration","message","groupEnd"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\n// Shared code between Model and MeshModel\nimport ProgramManager from '../resource-management/program-manager';\nimport {isWebGL, Query, Program, VertexArray, clear} from '@luma.gl/webgl';\nimport {MODULAR_SHADERS} from '@luma.gl/shadertools';\nimport {\n  getDebugTableForUniforms,\n  getDebugTableForVertexArray,\n  getDebugTableForProgramConfiguration\n} from '@luma.gl/webgl';\nimport {addModel, removeModel, logModel, getOverrides} from '../debug/seer-integration';\nimport {log, isObjectEmpty, uid, assert} from '../utils';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\n// Model abstract O3D Class\nexport default class BaseModel {\n  constructor(gl, props = {}) {\n    assert(isWebGL(gl));\n    const {id = uid('base-model')} = props;\n    this.id = id;\n    this.gl = gl;\n    this.id = props.id || uid('Model');\n    this.lastLogTime = 0; // TODO - move to probe.gl\n    this.initialize(props);\n  }\n\n  initialize(props) {\n    this.props = {};\n\n    if (props.shaderCache) {\n      log.warn('ShaderCache property is deprecated')();\n    }\n\n    this.programManager = props.programManager || ProgramManager.getDefaultProgramManager(this.gl);\n    this._programManagerState = -1;\n    this._managedProgram = false;\n\n    const {program = null, vs, fs, modules, defines, inject, varyings, bufferMode} = props;\n\n    this.programProps = {program, vs, fs, modules, defines, inject, varyings, bufferMode};\n    this.program = null;\n    this.vertexArray = null;\n    this._programDirty = true;\n\n    // Initialize state\n    this.userData = {};\n    this.needsRedraw = true;\n\n    // Attributes and buffers\n    // Model manages auto Buffer creation from typed arrays\n    this._attributes = {}; // All attributes\n    this.attributes = {}; // User defined attributes\n\n    // Model manages uniform animation\n    this.uniforms = {};\n    this.animatedUniforms = {};\n    this.animated = false;\n    this.animationLoop = null; // if set, used as source for animationProps\n\n    this.timerQueryEnabled = false;\n    this.timeElapsedQuery = undefined;\n    this.lastQueryReturned = true;\n\n    this.stats = {\n      accumulatedFrameTime: 0,\n      averageFrameTime: 0,\n      profileFrameCount: 0\n    };\n\n    // picking options\n    this.pickable = true;\n\n    this._checkProgram();\n\n    this._setBaseModelProps(props);\n\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms(props.moduleSettings) // Get unforms for supplied parameters\n      )\n    );\n  }\n\n  setProps(props) {\n    this._setBaseModelProps(props);\n  }\n\n  delete() {\n    // delete all attributes created by this model\n    // TODO - should buffer deletes be handled by vertex array?\n    for (const key in this._attributes) {\n      if (this._attributes[key] !== this.attributes[key]) {\n        this._attributes[key].delete();\n      }\n    }\n\n    if (this._managedProgram) {\n      this.programManager.release(this.program);\n    }\n\n    this.vertexArray.delete();\n\n    removeModel(this.id);\n  }\n\n  // GETTERS\n\n  isAnimated() {\n    return this.animated;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  setProgram(props) {\n    this.programProps = Object.assign({}, props);\n    this._programDirty = true;\n  }\n\n  getUniforms() {\n    return this.uniforms;\n  }\n\n  // SETTERS\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}) {\n    // Let Seer override edited uniforms\n    uniforms = Object.assign({}, uniforms);\n    getOverrides(this.id, uniforms);\n\n    // Resolve any animated uniforms so that we have an initial value\n    uniforms = this._extractAnimatedUniforms(uniforms);\n\n    Object.assign(this.uniforms, uniforms);\n\n    return this;\n  }\n\n  getModuleUniforms(opts) {\n    this._checkProgram();\n\n    const getUniforms = this.programManager.getUniforms(this.program);\n\n    if (getUniforms) {\n      return getUniforms(opts);\n    }\n\n    return {};\n  }\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts || {});\n    return this.setUniforms(uniforms);\n  }\n\n  // DRAW CALLS\n\n  clear(opts) {\n    clear(this.program.gl, opts);\n    return this;\n  }\n\n  /* eslint-disable max-statements  */\n  drawGeometry(opts = {}) {\n    // Lazy update program and vertex array\n    this._checkProgram();\n\n    const {\n      moduleSettings = null,\n      framebuffer,\n      uniforms = {},\n      attributes = {},\n      transformFeedback = this.transformFeedback,\n      parameters = {},\n      vertexArray = this.vertexArray,\n      animationProps\n    } = opts;\n\n    addModel(this);\n\n    // Update model with any just provided attributes, settings or uniforms\n    this.setAttributes(attributes);\n    this.updateModuleSettings(moduleSettings);\n    this.setUniforms(uniforms);\n\n    // Animate any function valued uniforms\n    this._refreshAnimationProps(animationProps);\n\n    const logPriority = this._logDrawCallStart(2);\n\n    const drawParams = this.vertexArray.getDrawParams(this.props);\n    if (drawParams.isInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model', this.id)();\n    }\n\n    const {isIndexed, indexType, indexOffset} = drawParams;\n    const {isInstanced, instanceCount} = this;\n\n    const noop = () => {};\n    const {onBeforeRender = noop, onAfterRender = noop} = this.props;\n\n    onBeforeRender();\n\n    this._timerQueryStart();\n\n    this.program.setUniforms(this.uniforms);\n\n    const didDraw = this.program.draw(\n      Object.assign({}, opts, {\n        logPriority,\n        uniforms: null, // Already set (may contain \"function values\" not understood by Program)\n        framebuffer,\n        parameters,\n        drawMode: this.getDrawMode(),\n        vertexCount: this.getVertexCount(),\n        vertexArray,\n        transformFeedback,\n        isIndexed,\n        indexType,\n        isInstanced,\n        instanceCount,\n        offset: isIndexed ? indexOffset : 0\n      })\n    );\n\n    this._timerQueryEnd();\n\n    onAfterRender();\n\n    this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n\n    return didDraw;\n  }\n  /* eslint-enable max-statements  */\n\n  // PRIVATE METHODS\n\n  // eslint-disable-next-line max-statements, complexity\n  _setBaseModelProps(props) {\n    Object.assign(this.props, props);\n\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms);\n    }\n\n    if ('pickable' in props) {\n      this.pickable = props.pickable;\n    }\n\n    // if ('onBeforeRender' in props) {}\n    // if ('onAfterRender' in props) {}\n\n    // Experimental props\n    if ('timerQueryEnabled' in props) {\n      this.timerQueryEnabled = props.timerQueryEnabled && Query.isSupported(this.gl, ['timers']);\n      if (props.timerQueryEnabled && !this.timerQueryEnabled) {\n        log.warn('GPU timer not supported')();\n      }\n    }\n\n    if ('_animationProps' in props) {\n      this._setAnimationProps(props._animationProps);\n    }\n\n    if ('_animationLoop' in props) {\n      this.animationLoop = props._animationLoop;\n    }\n  }\n\n  _checkProgram(shaderCache = null) {\n    const needsUpdate =\n      this._programDirty || this.programManager.stateHash !== this._programManagerState;\n\n    if (!needsUpdate) {\n      return;\n    }\n\n    let {program} = this.programProps;\n\n    if (program) {\n      this._managedProgram = false;\n    } else {\n      const {\n        // TODO(Tarek): Are these actually used anywhere?\n        vs = MODULAR_SHADERS.vs,\n        fs = MODULAR_SHADERS.fs,\n        modules,\n        inject,\n        defines,\n        varyings,\n        bufferMode\n      } = this.programProps;\n      program = this.programManager.get({vs, fs, modules, inject, defines, varyings, bufferMode});\n      if (this.program && this._managedProgram) {\n        this.programManager.release(this.program);\n      }\n      this._programManagerState = this.programManager.stateHash;\n      this._managedProgram = true;\n    }\n\n    assert(program instanceof Program, 'Model needs a program');\n\n    this._programDirty = false;\n\n    if (program === this.program) {\n      return;\n    }\n\n    this.program = program;\n\n    if (this.vertexArray) {\n      this.vertexArray.setProps({program: this.program, attributes: this.vertexArray.attributes});\n    } else {\n      this.vertexArray = new VertexArray(this.gl, {program: this.program});\n    }\n\n    // Make sure we have some reasonable default uniforms in place\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms() // Get all default uniforms,\n      )\n    );\n  }\n\n  // Refreshes animated uniforms, attempting to get animated props from animationLoop if registered\n  _refreshAnimationProps(animationProps) {\n    // Try to read animationProps\n    animationProps = animationProps || (this.animationLoop && this.animationLoop.animationProps);\n    if (animationProps) {\n      this._setAnimationProps(animationProps);\n    }\n  }\n\n  // Calculate new values for any function uniforms based on supplied animationProps\n  _evaluateAnimateUniforms(animationProps) {\n    if (!this.animated) {\n      return {};\n    }\n    const animatedUniforms = {};\n    for (const uniformName in this.animatedUniforms) {\n      const valueFunction = this.animatedUniforms[uniformName];\n      animatedUniforms[uniformName] = valueFunction(animationProps);\n    }\n    return animatedUniforms;\n  }\n\n  // Extracts a list of function valued uniforms, so we can update them before each draw call\n  // Also removes such uniforms from the returned list\n  _extractAnimatedUniforms(uniforms) {\n    let foundAnimated = false;\n\n    // Keep our animatedUniforms map up-to-date\n    for (const uniformName in uniforms) {\n      const newValue = uniforms[uniformName];\n      if (typeof newValue === 'function') {\n        this.animatedUniforms[uniformName] = newValue;\n        foundAnimated = true;\n      } else {\n        delete this.animatedUniforms[uniformName];\n      }\n    }\n\n    // Update animated flag: `Model` is animated if any uniforms are animated (i.e. functions)\n    this.animated = !isObjectEmpty(this.animatedUniforms);\n\n    if (!foundAnimated) {\n      return uniforms;\n    }\n\n    // If animated uniforms were found, remove them from ordinary uniform list\n    // `Program` class can't (and shouldn't) handle function valued uniforms\n    const staticUniforms = {};\n    for (const uniformName in uniforms) {\n      if (!this.animatedUniforms[uniformName]) {\n        staticUniforms[uniformName] = uniforms[uniformName];\n      }\n    }\n    return staticUniforms;\n  }\n\n  // Timer Queries\n\n  _timerQueryStart() {\n    if (this.timerQueryEnabled === true) {\n      if (!this.timeElapsedQuery) {\n        this.timeElapsedQuery = new Query(this.gl);\n      }\n      if (this.lastQueryReturned) {\n        this.lastQueryReturned = false;\n        this.timeElapsedQuery.beginTimeElapsedQuery();\n      }\n    }\n  }\n\n  _timerQueryEnd() {\n    if (this.timerQueryEnabled === true) {\n      this.timeElapsedQuery.end();\n      // TODO: Skip results if 'gl.getParameter(this.ext.GPU_DISJOINT_EXT)' returns false\n      // should this be incorporated into Query object?\n      if (this.timeElapsedQuery.isResultAvailable()) {\n        this.lastQueryReturned = true;\n        const elapsedTime = this.timeElapsedQuery.getTimerMilliseconds();\n\n        // Update stats (e.g. for seer)\n        this.stats.lastFrameTime = elapsedTime;\n        this.stats.accumulatedFrameTime += elapsedTime;\n        this.stats.profileFrameCount++;\n        this.stats.averageFrameTime =\n          this.stats.accumulatedFrameTime / this.stats.profileFrameCount;\n\n        // Log stats\n        log.log(\n          LOG_DRAW_PRIORITY,\n          `\\\nGPU time ${this.program.id}: ${this.stats.lastFrameTime}ms \\\naverage ${this.stats.averageFrameTime}ms \\\naccumulated: ${this.stats.accumulatedFrameTime}ms \\\ncount: ${this.stats.profileFrameCount}`\n        )();\n      }\n    }\n  }\n\n  _logDrawCallStart(priority) {\n    const logDrawTimeout = priority > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.priority < priority || Date.now() - this.lastLogTime < logDrawTimeout) {\n      return undefined;\n    }\n\n    this.lastLogTime = Date.now();\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.priority <= 2})();\n\n    return priority;\n  }\n\n  _logDrawCallEnd(priority, vertexArray, uniforms, framebuffer) {\n    // HACK: priority === undefined means logDrawCallStart didn't run\n    if (priority === undefined) {\n      return;\n    }\n\n    const attributeTable = getDebugTableForVertexArray({\n      vertexArray,\n      header: `${this.id} attributes`,\n      attributes: this._attributes\n    });\n\n    const {table: uniformTable, unusedTable, unusedCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms)\n    });\n\n    // log missing uniforms\n    const {table: missingTable, count: missingCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms),\n      undefinedOnly: true\n    });\n\n    if (missingCount > 0) {\n      log.log('MISSING UNIFORMS', Object.keys(missingTable))();\n      // log.table(priority, missingTable)();\n    }\n    if (unusedCount > 0) {\n      log.log('UNUSED UNIFORMS', Object.keys(unusedTable))();\n      // log.log(priority, 'Unused uniforms ', unusedTable)();\n    }\n\n    const configTable = getDebugTableForProgramConfiguration(this.vertexArray.configuration);\n\n    log.table(priority, attributeTable)();\n\n    log.table(priority, uniformTable)();\n\n    log.table(priority + 1, configTable)();\n\n    logModel(this, uniforms);\n\n    if (framebuffer) {\n      framebuffer.log({priority: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    log.groupEnd(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`)();\n  }\n}\n"],"file":"base-model.js"}