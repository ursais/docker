{"version":3,"sources":["../../../src/multipass/render-state.js"],"names":["RenderState","gl","props","framebuffer1","Framebuffer","id","stencil","framebuffer2","reset","resize","writeBuffer","readBuffer","maskActive","tmp"],"mappings":";;;;;;;;;;;;;AAMA;;IAEqBA,W;AACnB,uBAAYC,EAAZ,EAA4B;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAAA;AAC1B,SAAKD,EAAL,GAAUA,EAAV;AAEA,SAAKE,YAAL,GAAoB,IAAIC,kBAAJ,CAAgBH,EAAhB,EAAoB;AAACI,MAAAA,EAAE,EAAE,cAAL;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAApB,CAApB;AACA,SAAKC,YAAL,GAAoB,IAAIH,kBAAJ,CAAgBH,EAAhB,EAAoB;AAACI,MAAAA,EAAE,EAAE,cAAL;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAApB,CAApB;AAEA,SAAKE,KAAL;AACD;;;;4BAEO;AACN,WAAKL,YAAL,CAAkBM,MAAlB;AACA,WAAKF,YAAL,CAAkBE,MAAlB;AAEA,WAAKC,WAAL,GAAmB,KAAKP,YAAxB;AACA,WAAKQ,UAAL,GAAkB,KAAKJ,YAAvB;AAEA,WAAKK,UAAL,GAAkB,KAAlB;AACD;;;8BAEQ;AACP,WAAKT,YAAL;AACA,WAAKI,YAAL;AACD;;;wCAEmB;AAClB,UAAMM,GAAG,GAAG,KAAKF,UAAjB;AACA,WAAKA,UAAL,GAAkB,KAAKD,WAAvB;AACA,WAAKA,WAAL,GAAmBG,GAAnB;AACD","sourcesContent":["//\n// Render state helper class for the multi pass system\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport {Framebuffer} from '@luma.gl/webgl';\n\nexport default class RenderState {\n  constructor(gl, props = {}) {\n    this.gl = gl;\n\n    this.framebuffer1 = new Framebuffer(gl, {id: 'multi-pass-1', stencil: true});\n    this.framebuffer2 = new Framebuffer(gl, {id: 'multi-pass-2', stencil: true});\n\n    this.reset();\n  }\n\n  reset() {\n    this.framebuffer1.resize();\n    this.framebuffer2.resize();\n\n    this.writeBuffer = this.framebuffer1;\n    this.readBuffer = this.framebuffer2;\n\n    this.maskActive = false;\n  }\n\n  delete() {\n    this.framebuffer1.delete();\n    this.framebuffer2.delete();\n  }\n\n  _swapFramebuffers() {\n    const tmp = this.readBuffer;\n    this.readBuffer = this.writeBuffer;\n    this.writeBuffer = tmp;\n  }\n}\n"],"file":"render-state.js"}