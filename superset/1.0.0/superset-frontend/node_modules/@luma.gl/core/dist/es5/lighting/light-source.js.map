{"version":3,"sources":["../../../src/lighting/light-source.js"],"names":["DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_DIRECTION","DEFAULT_LIGHT_POSITION","Light","props","id","color","intensity","AmbientLight","type","DirectionalLight","direction","Vector3","normalize","toArray","PointLight","position","attenuation","_getAttenuation"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA,IAAMA,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA5B;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,mBAAmB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AAEA,IAAMC,uBAAuB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,CAAC,GAAZ,CAAhC;AAEA,IAAMC,sBAAsB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA/B;;IAKMC,K,GACJ,iBAAwB;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAAA;AACtB,OAAKC,EAAL,GAAUD,KAAK,CAACC,EAAN,IAAY,gBAAI,OAAJ,CAAtB;AADsB,qBAEgBD,KAFhB,CAEfE,KAFe;AAAA,MAEfA,KAFe,6BAEPR,mBAFO;AAGtB,OAAKQ,KAAL,GAAaA,KAAb;AAHsB,yBAIwBF,KAJxB,CAIfG,SAJe;AAAA,MAIfA,SAJe,iCAIHR,uBAJG;AAKtB,OAAKQ,SAAL,GAAiBA,SAAjB;AACD,C;;IAGUC,Y;;;AACX,0BAAwB;AAAA;;AAAA,QAAZJ,KAAY,uEAAJ,EAAI;AAAA;AACtB,wHAAMA,KAAN;AACA,UAAKK,IAAL,GAAY,SAAZ;AAFsB;AAGvB;;;EAJ+BN,K;;;;IAOrBO,gB;;;AACX,8BAAwB;AAAA;;AAAA,QAAZN,KAAY,uEAAJ,EAAI;AAAA;AACtB,6HAAMA,KAAN;AACA,WAAKK,IAAL,GAAY,aAAZ;AAFsB,2BAGwBL,KAHxB,CAGfO,SAHe;AAAA,QAGfA,SAHe,iCAGHV,uBAHG;AAItB,WAAKU,SAAL,GAAiB,IAAIC,aAAJ,CAAYD,SAAZ,EAAuBE,SAAvB,GAAmCC,OAAnC,EAAjB;AAJsB;AAKvB;;;EANmCX,K;;;;IASzBY,U;;;AACX,wBAAwB;AAAA;;AAAA,QAAZX,KAAY,uEAAJ,EAAI;AAAA;AACtB,uHAAMA,KAAN;AACA,WAAKK,IAAL,GAAY,OAAZ;AAFsB,0BAGsBL,KAHtB,CAGfY,QAHe;AAAA,QAGfA,QAHe,gCAGJd,sBAHI;AAItB,WAAKc,QAAL,GAAgBA,QAAhB;AACA,WAAKC,WAAL,GAAmB,OAAKC,eAAL,CAAqBd,KAArB,CAAnB;AALsB;AAMvB;;;;oCAMeA,K,EAAO;AACrB,UAAI,iBAAiBA,KAArB,EAA4B;AAC1B,eAAOA,KAAK,CAACa,WAAb;AACD;;AACD,UAAI,eAAeb,KAAnB,EAA0B;AACxB,eAAO,CAAC,CAAD,EAAI,CAAJ,EAAOA,KAAK,CAACG,SAAb,CAAP;AACD;;AACD,aAAOP,mBAAP;AACD;;;EArB6BG,K","sourcesContent":["import {Vector3} from 'math.gl';\nimport {uid} from '../utils';\n\n// default light source parameters\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\n\nconst DEFAULT_LIGHT_DIRECTION = [0.0, 0.0, -1.0];\n\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\n// glTF lights reference:\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nclass Light {\n  constructor(props = {}) {\n    this.id = props.id || uid('light');\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    this.color = color;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    this.intensity = intensity;\n  }\n}\n\nexport class AmbientLight extends Light {\n  constructor(props = {}) {\n    super(props);\n    this.type = 'ambient';\n  }\n}\n\nexport class DirectionalLight extends Light {\n  constructor(props = {}) {\n    super(props);\n    this.type = 'directional';\n    const {direction = DEFAULT_LIGHT_DIRECTION} = props;\n    this.direction = new Vector3(direction).normalize().toArray();\n  }\n}\n\nexport class PointLight extends Light {\n  constructor(props = {}) {\n    super(props);\n    this.type = 'point';\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n    this.position = position;\n    this.attenuation = this._getAttenuation(props);\n  }\n\n  // PRIVATE\n\n  // Helper: Extracts attenuation from either `props.attenuation`` or `props.intensity``\n  // Supports both sophisticated light model and the classic intensity prop\n  _getAttenuation(props) {\n    if ('attenuation' in props) {\n      return props.attenuation;\n    }\n    if ('intensity' in props) {\n      return [0, 0, props.intensity];\n    }\n    return DEFAULT_ATTENUATION;\n  }\n}\n"],"file":"light-source.js"}