{"version":3,"sources":["../../../src/multipass/stencil-pass.js"],"names":["getMask","indices","bits","mask","forEach","index","StencilPass","gl","props","Object","assign","id","swap","setProps","inputBuffer","outputBuffer","animationPropst","stencilReadMask","stencils","stencilWriteMask","updateStencil","stencilTest","stencilOp","stencilFunc","stencilMask","clearStencil","clear","models","model","setUniforms","normalUniforms","draw","drawParams","outlineUniforms","Pass"],"mappings":"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","sourcesContent":["//\n// A composite stencil pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport {withParameters, setParameters} from '@luma.gl/webgl';\nimport Pass from './pass';\n\nfunction getMask(indices = [], bits = 8) {\n  let mask = 0;\n  indices.forEach(index => {\n    // assert(index >= 0 && index < bits);\n    mask = mask & (1 >> index);\n  });\n  return mask;\n}\n\nexport default class StencilPass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({id: 'simple-outline-pass', swap: false}, props));\n    this.props = Object.assign({}, props);\n    this.setProps(props);\n  }\n\n  _renderPass({inputBuffer, outputBuffer, animationPropst}) {\n    const {gl} = this;\n    const stencilReadMask = getMask(this.props.stencils);\n    const stencilWriteMask = getMask(this.props.updateStencil);\n\n    withParameters(\n      gl,\n      {\n        stencilTest: stencilReadMask !== 0 && stencilWriteMask !== 0, // turn on stencil buffers\n        stencilOp: [gl.KEEP, gl.KEEP, gl.REPLACE] // update stencil if both stencil+depth tests pass\n      },\n      () => {\n        if (stencilReadMask) {\n          setParameters(gl, {\n            stencilFunc: [gl.EQUAL, 0, stencilReadMask]\n          });\n        }\n\n        setParameters(gl, {\n          stencilMask: stencilWriteMask\n        });\n\n        if (this.props.clearStencil) {\n          gl.clear(gl.STENCIL_BUFFER_BIT);\n        }\n\n        // draw\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.normalUniforms);\n          model.draw(this.props.drawParams);\n        }\n\n        // Disable stencil writing, mask to stencil plane 0\n        setParameters(gl, {\n          stencilFunc: [gl.EQUAL, 0, stencilReadMask],\n          stencilMask: 0x00 // disable writing to the stencil buffer\n        });\n\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.outlineUniforms);\n          model.draw(this.props.drawParams);\n          model.setUniforms(this.props.normalUniforms);\n        }\n\n        // All gl settings will reset here...\n      }\n    );\n  }\n}\n"],"file":"stencil-pass.js"}