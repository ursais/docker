{"version":3,"sources":["../../src/index.js"],"names":[],"mappingskDA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AAKA","sourcesContent":["// CORE MODULE EXPORTS FOR LUMA.GL\n\n// WEBGL CONTEXT\nexport {\n  isWebGL,\n  isWebGL2,\n  lumaStats,\n  createGLContext,\n  destroyGLContext,\n  resizeGLContext,\n  setGLContextDefaults,\n  getContextInfo,\n  getGLContextInfo,\n  getContextLimits,\n  FEATURES,\n  hasFeature,\n  hasFeatures,\n  getFeatures,\n  canCompileGLGSExtension,\n  cloneTextureFrom,\n  getKeyValue,\n  getKey,\n  cssToDeviceRatio,\n  cssToDevicePixels,\n  // DEPRECATED\n  setGLContextDefaults as setContextDefaults,\n  getContextDebugInfo as glGetDebugInfo\n} from '@luma.gl/webgl';\n\nexport {\n  trackContextState,\n  resetParameters,\n  getParameter,\n  getParameters,\n  setParameter,\n  setParameters,\n  withParameters,\n  getModifiedParameters\n} from '@luma.gl/webgl-state-tracker';\n\n// WEBGL1 OBJECTS/FUNCTIONS\nexport {\n  Buffer,\n  Shader,\n  VertexShader,\n  FragmentShader,\n  Program,\n  Framebuffer,\n  Renderbuffer,\n  Texture2D,\n  TextureCube,\n  clear,\n  clearBuffer,\n  // Copy and Blit\n  readPixelsToArray,\n  readPixelsToBuffer,\n  copyToDataUrl,\n  copyToImage,\n  copyToTexture,\n  blit\n} from '@luma.gl/webgl';\n\nexport {\n  // WebGL2 classes & Extensions\n  Query,\n  Texture3D,\n  TransformFeedback,\n  VertexArrayObject,\n  VertexArray,\n  UniformBufferLayout,\n  setPathPrefix,\n  loadFile,\n  loadImage,\n  // experimental WebGL exports\n  Accessor as _Accessor,\n  clearBuffer as _clearBuffer\n} from '@luma.gl/webgl';\n\n// CORE - WEBGL INDEPENDENT\nexport {default as Geometry} from './geometry/geometry';\nexport {default as Material} from './materials/material';\nexport {AmbientLight, DirectionalLight, PointLight} from './lighting/light-source';\n\n// LIB\nexport {default as AnimationLoop} from './lib/animation-loop';\nexport {encodePickingColor, decodePickingColor, getNullPickingColor} from './lib/picking-colors';\nexport {default as Model} from './lib/model';\nexport {default as Transform} from './lib/transform/transform';\nexport {default as ClipSpace} from './lib/clip-space';\n\n// Resource Management\nexport {default as ProgramManager} from './resource-management/program-manager';\n\n// Experimental core exports\nexport {default as _ShaderCache} from './lib/shader-cache';\nexport {default as _AnimationLoopProxy} from './lib/animation-loop-proxy';\n\n// Multipass Rendering\nexport {default as _MultiPassRenderer} from './multipass/multi-pass-renderer';\nexport {default as _RenderState} from './multipass/render-state';\nexport {default as _Pass} from './multipass/pass';\nexport {default as _CompositePass} from './multipass/composite-pass';\nexport {default as _ClearPass} from './multipass/clear-pass';\nexport {default as _RenderPass} from './multipass/render-pass';\nexport {default as _CopyPass} from './multipass/copy-pass';\nexport {default as _TexturePass} from './multipass/texture-pass';\n// export {default as _MaskPass} from './multipass/mask-pass';\n// export {default as _ClearMaskPass} from './multipass/clearmask-pass';\n\nexport {default as _ShaderModulePass} from './multipass/shader-module-pass';\n// export {default as _Canvas} from './multipass/canvas';\n\n// Geometries\nexport {default as ConeGeometry} from './geometries/cone-geometry';\nexport {default as CubeGeometry} from './geometries/cube-geometry';\nexport {default as CylinderGeometry} from './geometries/cylinder-geometry';\nexport {default as IcoSphereGeometry} from './geometries/ico-sphere-geometry';\nexport {default as PlaneGeometry} from './geometries/plane-geometry';\nexport {default as SphereGeometry} from './geometries/sphere-geometry';\nexport {default as TruncatedConeGeometry} from './geometries/truncated-cone-geometry';\n\n// Materials\nexport {default as PhongMaterial} from './materials/phong-material';\nexport {default as PBRMaterial} from './materials/pbr-material';\n\n// SCENEGRAPH\n\n// Core nodes\nexport {default as ScenegraphNode} from './scenegraph/nodes/scenegraph-node';\nexport {default as GroupNode} from './scenegraph/nodes/group-node';\nexport {default as ModelNode} from './scenegraph/nodes/model-node';\nexport {default as CameraNode} from './scenegraph/nodes/camera-node';\n\n// TODO/CLEAN UP FOR V7\n//  We should have a minimal set of forwarding exports from shadertools (ideally none)\n//  Analyze risk of breaking apps\nexport {\n  registerShaderModules,\n  setDefaultShaderModules,\n  getDefaultShaderModules,\n  assembleShaders,\n  createShaderHook,\n  createModuleInjection,\n  // HELPERS\n  combineInjects,\n  normalizeShaderModule,\n  // SHADER MODULES\n  fp32,\n  fp64,\n  project,\n  lights,\n  dirlight,\n  picking,\n  diffuse,\n  gouraudlighting,\n  phonglighting,\n  pbr,\n  // experimental\n  _transform,\n  MODULAR_SHADERS,\n  getQualifierDetails,\n  getPassthroughFS,\n  typeToChannelSuffix,\n  typeToChannelCount,\n  convertToVec4\n} from '@luma.gl/shadertools';\n\n// UTILS: undocumented API for other luma.gl modules\nexport {log, assert, uid, self, window, global, document} from '@luma.gl/webgl';\n"],"file":"index.js"}