{"version":3,"sources":["../../../src/resource-management/program-manager.js"],"names":["ProgramManager","gl","luma","defaultProgramManager","_programCache","_getUniforms","_registeredModules","_moduleInjections","vs","fs","_hookFunctions","_defaultModules","_hashes","_hashCounter","stateHash","_useCounts","module","find","m","name","push","moduleName","filter","opts","hook","injection","order","shaderStage","slice","moduleInjections","trim","split","stage","signature","replace","Object","assign","props","defines","inject","varyings","bufferMode","modules","_getModuleList","vsHash","_getHash","fsHash","moduleHashes","map","sort","varyingHashes","v","defineKeys","keys","injectKeys","defineHashes","injectHashes","key","hash","join","assembled","hookFunctions","Program","getUniforms","x","program","undefined","appModules","Array","length","seen","count","i","len"],"mappings":"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","sourcesContent":["import {assembleShaders} from '@luma.gl/shadertools';\nimport {Program} from '@luma.gl/webgl';\n\nexport default class ProgramManager {\n  static getDefaultProgramManager(gl) {\n    gl.luma = gl.luma || {};\n    gl.luma.defaultProgramManager = gl.luma.defaultProgramManager || new ProgramManager(gl);\n\n    return gl.luma.defaultProgramManager;\n  }\n\n  constructor(gl) {\n    this.gl = gl;\n\n    this._programCache = {};\n    this._getUniforms = {};\n    this._registeredModules = {};\n    this._moduleInjections = {\n      vs: {},\n      fs: {}\n    };\n    this._hookFunctions = {\n      vs: {},\n      fs: {}\n    };\n    this._defaultModules = [];\n\n    this._hashes = {};\n    this._hashCounter = 0;\n    this.stateHash = 0; // Used change hashing if hooks are modified\n    this._useCounts = {};\n  }\n\n  addDefaultModule(module) {\n    if (!this._defaultModules.find(m => m.name === module.name)) {\n      this._defaultModules.push(module);\n    }\n\n    this.stateHash++;\n  }\n\n  removeDefaultModule(module) {\n    const moduleName = typeof module === 'string' ? module : module.name;\n    this._defaultModules = this._defaultModules.filter(m => m.name !== moduleName);\n    this.stateHash++;\n  }\n\n  addModuleInjection(module, opts) {\n    const moduleName = typeof module === 'string' ? module : module.name;\n    const {hook, injection, order = 0} = opts;\n    const shaderStage = hook.slice(0, 2);\n\n    const moduleInjections = this._moduleInjections[shaderStage];\n    moduleInjections[moduleName] = moduleInjections[moduleName] || {};\n\n    moduleInjections[moduleName][hook] = {\n      injection,\n      order\n    };\n\n    this.stateHash++;\n  }\n\n  addShaderHook(hook, opts = {}) {\n    hook = hook.trim();\n    const [stage, signature] = hook.split(':');\n    const name = hook.replace(/\\(.+/, '');\n    this._hookFunctions[stage][name] = Object.assign(opts, {signature});\n\n    this.stateHash++;\n  }\n\n  get(props = {}) {\n    const {vs = '', fs = '', defines = {}, inject = {}, varyings = [], bufferMode = 0x8c8d} = props; // varyings/bufferMode for xform feedback, 0x8c8d = SEPARATE_ATTRIBS\n\n    const modules = this._getModuleList(props.modules); // Combine with default modules\n\n    const vsHash = this._getHash(vs);\n    const fsHash = this._getHash(fs);\n    const moduleHashes = modules.map(m => this._getHash(typeof m === 'string' ? m : m.name)).sort();\n    const varyingHashes = varyings.map(v => this._getHash(v));\n\n    const defineKeys = Object.keys(defines).sort();\n    const injectKeys = Object.keys(inject).sort();\n    const defineHashes = [];\n    const injectHashes = [];\n\n    for (const key of defineKeys) {\n      defineHashes.push(this._getHash(key));\n      defineHashes.push(this._getHash(defines[key]));\n    }\n\n    for (const key of injectKeys) {\n      injectHashes.push(this._getHash(key));\n      injectHashes.push(this._getHash(inject[key]));\n    }\n\n    const hash = `${vsHash}/${fsHash}D${defineHashes.join('/')}M${moduleHashes.join(\n      '/'\n    )}I${injectHashes.join('/')}V${varyingHashes.join('/')}H${this.stateHash}B${bufferMode}`;\n\n    if (!this._programCache[hash]) {\n      const assembled = assembleShaders(this.gl, {\n        vs,\n        fs,\n        modules,\n        inject,\n        defines,\n        hookFunctions: this._hookFunctions,\n        moduleInjections: this._moduleInjections\n      });\n\n      this._programCache[hash] = new Program(this.gl, {\n        hash,\n        vs: assembled.vs,\n        fs: assembled.fs,\n        varyings,\n        bufferMode\n      });\n\n      this._getUniforms[hash] = assembled.getUniforms || (x => {});\n      this._useCounts[hash] = 0;\n    }\n\n    this._useCounts[hash]++;\n\n    return this._programCache[hash];\n  }\n\n  getUniforms(program) {\n    return this._getUniforms[program.hash] || null;\n  }\n\n  release(program) {\n    const hash = program.hash;\n    this._useCounts[hash]--;\n\n    if (this._useCounts[hash] === 0) {\n      this._programCache[hash].delete();\n      delete this._programCache[hash];\n      delete this._getUniforms[hash];\n      delete this._useCounts[hash];\n    }\n  }\n\n  _getHash(key) {\n    if (this._hashes[key] === undefined) {\n      this._hashes[key] = this._hashCounter++;\n    }\n\n    return this._hashes[key];\n  }\n\n  // Dedup and combine with default modules\n  _getModuleList(appModules = []) {\n    const modules = new Array(this._defaultModules.length + appModules.length);\n    const seen = {};\n    let count = 0;\n\n    for (let i = 0, len = this._defaultModules.length; i < len; ++i) {\n      const module = this._defaultModules[i];\n      const name = typeof module === 'string' ? module : module.name;\n      modules[count++] = module;\n      seen[name] = true;\n    }\n\n    for (let i = 0, len = appModules.length; i < len; ++i) {\n      const module = appModules[i];\n      const name = typeof module === 'string' ? module : module.name;\n      if (!seen[name]) {\n        modules[count++] = module;\n        seen[name] = true;\n      }\n    }\n\n    modules.length = count;\n\n    return modules;\n  }\n}\n"],"file":"program-manager.js"}