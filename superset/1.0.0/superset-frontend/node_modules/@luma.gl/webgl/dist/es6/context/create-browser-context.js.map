{"version":3,"sources":["../../../src/context/create-browser-context.js"],"names":["createBrowserContext","canvas","options","onError","message","onCreateError","error","statusMessage","addEventListener","webgl1","webgl2","gl","getContext","removeEventListener"],"mappings":"AAIA,OAAO,SAASA,oBAAT,CAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;AACpD,QAAM;AAACC,IAAAA,OAAO,GAAGC,OAAO,IAAI;AAAtB,MAA8BF,OAApC;;AAGA,QAAMG,aAAa,GAAGC,KAAK,IAAIH,OAAO,0BAAmBG,KAAK,CAACC,aAAN,IAAuB,OAA1C,EAAtC;;AACAN,EAAAA,MAAM,CAACO,gBAAP,CAAwB,2BAAxB,EAAqDH,aAArD,EAAoE,KAApE;AAEA,QAAM;AAACI,IAAAA,MAAM,GAAG,IAAV;AAAgBC,IAAAA,MAAM,GAAG;AAAzB,MAAiCR,OAAvC;AACA,MAAIS,EAAE,GAAG,IAAT;;AAEA,MAAID,MAAJ,EAAY;AACVC,IAAAA,EAAE,GAAGA,EAAE,IAAIV,MAAM,CAACW,UAAP,CAAkB,QAAlB,EAA4BV,OAA5B,CAAX;AACAS,IAAAA,EAAE,GAAGA,EAAE,IAAIV,MAAM,CAACW,UAAP,CAAkB,qBAAlB,EAAyCV,OAAzC,CAAX;AACD;;AACD,MAAIO,MAAJ,EAAY;AACVE,IAAAA,EAAE,GAAGA,EAAE,IAAIV,MAAM,CAACW,UAAP,CAAkB,OAAlB,EAA2BV,OAA3B,CAAX;AACAS,IAAAA,EAAE,GAAGA,EAAE,IAAIV,MAAM,CAACW,UAAP,CAAkB,oBAAlB,EAAwCV,OAAxC,CAAX;AACD;;AAEDD,EAAAA,MAAM,CAACY,mBAAP,CAA2B,2BAA3B,EAAwDR,aAAxD,EAAuE,KAAvE;;AAEA,MAAI,CAACM,EAAL,EAAS;AACP,WAAOR,OAAO,4BAAqBO,MAAM,IAAI,CAACD,MAAX,GAAoB,QAApB,GAA+B,OAApD,cAAd;AACD;;AAED,SAAOE,EAAP;AACD","sourcesContent":["/**\n * Create a WebGL context for a canvas\n * Note calling this multiple time on the same canvas does return the same context\n */\nexport function createBrowserContext(canvas, options) {\n  const {onError = message => null} = options;\n\n  // Try to extract any extra information about why context creation failed\n  const onCreateError = error => onError(`WebGL context: ${error.statusMessage || 'error'}`);\n  canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n  const {webgl1 = true, webgl2 = true} = options;\n  let gl = null;\n  // Prefer webgl2 over webgl1, prefer conformant over experimental\n  if (webgl2) {\n    gl = gl || canvas.getContext('webgl2', options);\n    gl = gl || canvas.getContext('experimental-webgl2', options);\n  }\n  if (webgl1) {\n    gl = gl || canvas.getContext('webgl', options);\n    gl = gl || canvas.getContext('experimental-webgl', options);\n  }\n\n  canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n\n  if (!gl) {\n    return onError(`Failed to create ${webgl2 && !webgl1 ? 'WebGL2' : 'WebGL'} context`);\n  }\n\n  return gl;\n}\n"],"file":"create-browser-context.js"}