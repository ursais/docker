{"version":3,"sources":["../../../src/webgl-utils/webgl-types.js"],"names":["global","isBrowser","ERR_HEADLESSGL_LOAD","m","module","headlessTypes","headlessGL","args","headless","require","Error","error","DummyType","WebGLRenderingContext","WebGLProgram","WebGLShader","WebGLBuffer","WebGLFramebuffer","WebGLRenderbuffer","WebGLTexture","WebGLUniformLocation","WebGLActiveInfo","WebGLShaderPrecisionFormat","webGLTypesAvailable","getWebGL2RenderingContext","WebGL2RenderingContextNotSupported","WebGL2RenderingContext","getImage","ImageNotSupported","Image"],"mappings":"AASA,SAAQA,MAAR,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,MAAMC,mBAAmB,0OAAzB;AAQP,MAAMC,CAAC,GAAGC,MAAV;AAGA,OAAO,IAAIC,aAAa,GAAG,IAApB;AACP,OAAO,SAASC,UAAT,CAAoB,GAAGC,IAAvB,EAA6B;AAClC,QAAMC,QAAQ,GAAGL,CAAC,CAACM,OAAF,CAAU,IAAV,CAAjB;;AACA,MAAI,CAACD,QAAL,EAAe;AACb,UAAM,IAAIE,KAAJ,CAAUR,mBAAV,CAAN;AACD;;AACD,SAAOM,QAAQ,CAAC,GAAGD,IAAJ,CAAf;AACD;;AAED,IAAI,CAACN,SAAL,EAAgB;AACd,MAAI;AACFI,IAAAA,aAAa,GAAGF,CAAC,CAACM,OAAF,CAAU,SAAV,CAAhB;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc,CAGf;AACF;;AAED,MAAMC,SAAN,CAAgB;;AAEhB,MAAM;AACJC,EAAAA,qBAAqB,GAAGD,SADpB;AAEJE,EAAAA,YAAY,GAAGF,SAFX;AAGJG,EAAAA,WAAW,GAAGH,SAHV;AAIJI,EAAAA,WAAW,GAAGJ,SAJV;AAKJK,EAAAA,gBAAgB,GAAGL,SALf;AAMJM,EAAAA,iBAAiB,GAAGN,SANhB;AAOJO,EAAAA,YAAY,GAAGP,SAPX;AAQJQ,EAAAA,oBAAoB,GAAGR,SARnB;AASJS,EAAAA,eAAe,GAAGT,SATd;AAUJU,EAAAA,0BAA0B,GAAGV;AAVzB,IAWFP,aAAa,IAAIL,MAXrB;AAaA,OAAO,MAAMuB,mBAAmB,GAC9BV,qBAAqB,KAAKD,SAA1B,IACAE,YAAY,KAAKF,SADjB,IAEAG,WAAW,KAAKH,SAFhB,IAGAI,WAAW,KAAKJ,SAHhB,IAIAK,gBAAgB,KAAKL,SAJrB,IAKAM,iBAAiB,KAAKN,SALtB,IAMAO,YAAY,KAAKP,SANjB,IAOAQ,oBAAoB,KAAKR,SAPzB,IAQAS,eAAe,KAAKT,SARpB,IASAU,0BAA0B,KAAKV,SAV1B;;AAeP,SAASY,yBAAT,GAAqC;AACnC,QAAMC,kCAAN,CAAyC;;AACzC,SAAOzB,MAAM,CAAC0B,sBAAP,IAAiCD,kCAAxC;AACD;;AAGD,SAASE,QAAT,GAAoB;AAClB,QAAMC,iBAAN,CAAwB;;AACxB,SAAO5B,MAAM,CAAC6B,KAAP,IAAgBD,iBAAvB;AACD;;AAED,MAAMF,sBAAsB,GAAGF,yBAAyB,EAAxD;AACA,MAAMK,KAAK,GAAGF,QAAQ,EAAtB;AAGA,SACEE,KADF,EAEEhB,qBAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,gBANF,EAOEC,iBAPF,EAQEC,YARF,EASEC,oBATF,EAUEC,eAVF,EAWEC,0BAXF,EAYEI,sBAZF","sourcesContent":["// WEBGL BUILT-IN TYPES\n// 1) Exports all WebGL constants as {GL}\n// 2) Enables app to \"import\" WebGL types\n//    - Importing these types makes them known to eslint etc.\n//    - Provides dummy types for WebGL2 when not available to streamline\n//      library code.\n//    - Exports types from headless gl when running under Node.js\n\n/* eslint-disable quotes, no-console */\nimport {global} from '../utils/globals';\nimport isBrowser from '../utils/is-browser';\n\nexport const ERR_HEADLESSGL_LOAD = `\\\nluma.gl: loaded under Node.js without headless gl installed, meaning that WebGL \\\ncontexts can not be created. This may not be an error. For example, this is a \\\ntypical configuration for isorender applications running on the server.`;\n\n// TODO(Tarek): OOGLY HACK to avoid webpack requiring headless\n//   browser bundles. Will be removed in 8.0 when we\n//   remove automatic headless context creation\nconst m = module;\n\n// Load headless gl dynamically, if available\nexport let headlessTypes = null;\nexport function headlessGL(...args) {\n  const headless = m.require('gl');\n  if (!headless) {\n    throw new Error(ERR_HEADLESSGL_LOAD);\n  }\n  return headless(...args);\n}\n\nif (!isBrowser) {\n  try {\n    headlessTypes = m.require('gl/wrap');\n  } catch (error) {\n    // /* global console */\n    // console.info(ERR_HEADLESSGL_LOAD);\n  }\n}\n\nclass DummyType {}\n\nconst {\n  WebGLRenderingContext = DummyType,\n  WebGLProgram = DummyType,\n  WebGLShader = DummyType,\n  WebGLBuffer = DummyType,\n  WebGLFramebuffer = DummyType,\n  WebGLRenderbuffer = DummyType,\n  WebGLTexture = DummyType,\n  WebGLUniformLocation = DummyType,\n  WebGLActiveInfo = DummyType,\n  WebGLShaderPrecisionFormat = DummyType\n} = headlessTypes || global;\n\nexport const webGLTypesAvailable =\n  WebGLRenderingContext !== DummyType &&\n  WebGLProgram !== DummyType &&\n  WebGLShader !== DummyType &&\n  WebGLBuffer !== DummyType &&\n  WebGLFramebuffer !== DummyType &&\n  WebGLRenderbuffer !== DummyType &&\n  WebGLTexture !== DummyType &&\n  WebGLUniformLocation !== DummyType &&\n  WebGLActiveInfo !== DummyType &&\n  WebGLShaderPrecisionFormat !== DummyType;\n\n// Ensures that WebGL2RenderingContext is defined in non-WebGL2 environments\n// so that apps can test their gl contexts with instanceof\n// E.g. if (gl instanceof WebGL2RenderingContext) { }\nfunction getWebGL2RenderingContext() {\n  class WebGL2RenderingContextNotSupported {}\n  return global.WebGL2RenderingContext || WebGL2RenderingContextNotSupported;\n}\n\n// Ensure that Image is defined under Node.js\nfunction getImage() {\n  class ImageNotSupported {}\n  return global.Image || ImageNotSupported;\n}\n\nconst WebGL2RenderingContext = getWebGL2RenderingContext();\nconst Image = getImage();\n\n// Export the standard WebGL types\nexport {\n  Image,\n  WebGLRenderingContext,\n  WebGLProgram,\n  WebGLShader,\n  WebGLBuffer,\n  WebGLFramebuffer,\n  WebGLRenderbuffer,\n  WebGLTexture,\n  WebGLUniformLocation,\n  WebGLActiveInfo,\n  WebGLShaderPrecisionFormat,\n  WebGL2RenderingContext\n};\n"],"file":"webgl-types.js"}