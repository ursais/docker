{"version":3,"sources":["../../../src/grid-layer/grid-layer.js"],"names":["CompositeLayer","GPUGridAggregator","GPUGridLayer","CPUGridLayer","defaultProps","Object","assign","gpuAggregation","GridLayer","state","useGPUAggregation","oldProps","props","changeFlags","newState","canUseGPUAggregation","setState","data","updateTriggers","id","LayerType","getSubLayerClass","getSubLayerProps","lowerPercentile","upperPercentile","getColorValue","getElevationValue","isSupported","context","gl","layerName"],"mappings":";;;;;AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,OAAOC,iBAAP,MAA8B,mDAA9B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,YAAY,CAACE,YAA/B,EAA6CD,YAAY,CAACC,YAA1D,EAAwE;AAC3FG,EAAAA,cAAc,EAAE;AAD2E,CAAxE,CAArB;;IAIqBC,S;;;;;;;;;;;sCACD;AAChB,WAAKC,KAAL,GAAa;AACXC,QAAAA,iBAAiB,EAAE;AADR,OAAb;AAGD;;;sCAE2C;AAAA,UAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,WAAc,QAAdA,WAAc;AAC1C,UAAMC,QAAQ,GAAG,EAAjB;AACAA,MAAAA,QAAQ,CAACJ,iBAAT,GAA6B,KAAKK,oBAAL,CAA0BH,KAA1B,CAA7B;AACA,WAAKI,QAAL,CAAcF,QAAd;AACD;;;mCAEc;AAAA,wBACkB,KAAKF,KADvB;AAAA,UACNK,IADM,eACNA,IADM;AAAA,UACAC,cADA,eACAA,cADA;AAEb,UAAMC,EAAE,GAAG,KAAKV,KAAL,CAAWC,iBAAX,GAA+B,KAA/B,GAAuC,KAAlD;AACA,UAAMU,SAAS,GAAG,KAAKX,KAAL,CAAWC,iBAAX,GACd,KAAKW,gBAAL,CAAsB,KAAtB,EAA6BnB,YAA7B,CADc,GAEd,KAAKmB,gBAAL,CAAsB,KAAtB,EAA6BlB,YAA7B,CAFJ;AAGA,aAAO,IAAIiB,SAAJ,CACL,KAAKR,KADA,EAEL,KAAKU,gBAAL,CAAsB;AACpBH,QAAAA,EAAE,EAAFA,EADoB;AAEpBD,QAAAA,cAAc,EAAdA;AAFoB,OAAtB,CAFK,EAML;AACED,QAAAA,IAAI,EAAJA;AADF,OANK,CAAP;AAUD;;;yCAIoBL,K,EAAO;AAAA,UAExBL,cAFwB,GAOtBK,KAPsB,CAExBL,cAFwB;AAAA,UAGxBgB,eAHwB,GAOtBX,KAPsB,CAGxBW,eAHwB;AAAA,UAIxBC,eAJwB,GAOtBZ,KAPsB,CAIxBY,eAJwB;AAAA,UAKxBC,aALwB,GAOtBb,KAPsB,CAKxBa,aALwB;AAAA,UAMxBC,iBANwB,GAOtBd,KAPsB,CAMxBc,iBANwB;;AAQ1B,UAAI,CAACnB,cAAL,EAAqB;AAEnB,eAAO,KAAP;AACD;;AACD,UAAI,CAACN,iBAAiB,CAAC0B,WAAlB,CAA8B,KAAKC,OAAL,CAAaC,EAA3C,CAAL,EAAqD;AACnD,eAAO,KAAP;AACD;;AACD,UAAIN,eAAe,KAAK,CAApB,IAAyBC,eAAe,KAAK,GAAjD,EAAsD;AAEpD,eAAO,KAAP;AACD;;AACD,UAAIC,aAAa,KAAK,IAAlB,IAA0BC,iBAAiB,KAAK,IAApD,EAA0D;AAExD,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;;;EAzDoC1B,c;;SAAlBQ,S;AA4DrBA,SAAS,CAACsB,SAAV,GAAsB,WAAtB;AACAtB,SAAS,CAACJ,YAAV,GAAyBA,YAAzB","sourcesContent":["import {CompositeLayer} from '@deck.gl/core';\nimport GPUGridAggregator from '../utils/gpu-grid-aggregation/gpu-grid-aggregator';\nimport GPUGridLayer from '../gpu-grid-layer/gpu-grid-layer';\nimport CPUGridLayer from '../cpu-grid-layer/cpu-grid-layer';\n\nconst defaultProps = Object.assign({}, GPUGridLayer.defaultProps, CPUGridLayer.defaultProps, {\n  gpuAggregation: false\n});\n\nexport default class GridLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      useGPUAggregation: true\n    };\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    const newState = {};\n    newState.useGPUAggregation = this.canUseGPUAggregation(props);\n    this.setState(newState);\n  }\n\n  renderLayers() {\n    const {data, updateTriggers} = this.props;\n    const id = this.state.useGPUAggregation ? 'GPU' : 'CPU';\n    const LayerType = this.state.useGPUAggregation\n      ? this.getSubLayerClass('GPU', GPUGridLayer)\n      : this.getSubLayerClass('CPU', CPUGridLayer);\n    return new LayerType(\n      this.props,\n      this.getSubLayerProps({\n        id,\n        updateTriggers\n      }),\n      {\n        data\n      }\n    );\n  }\n\n  // Private methods\n\n  canUseGPUAggregation(props) {\n    const {\n      gpuAggregation,\n      lowerPercentile,\n      upperPercentile,\n      getColorValue,\n      getElevationValue\n    } = props;\n    if (!gpuAggregation) {\n      // cpu aggregation is requested\n      return false;\n    }\n    if (!GPUGridAggregator.isSupported(this.context.gl)) {\n      return false;\n    }\n    if (lowerPercentile !== 0 || upperPercentile !== 100) {\n      // percentile calculations requires sorting not supported on GPU\n      return false;\n    }\n    if (getColorValue !== null || getElevationValue !== null) {\n      // accessor for custom color or elevation calculation is specified\n      return false;\n    }\n    return true;\n  }\n}\n\nGridLayer.layerName = 'GridLayer';\nGridLayer.defaultProps = defaultProps;\n"],"file":"grid-layer.js"}