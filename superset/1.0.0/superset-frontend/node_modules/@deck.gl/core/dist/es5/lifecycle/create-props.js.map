{"version":3,"sources":["../../../src/lifecycle/create-props.js"],"names":["createProps","component","propTypeDefs","getPropsPrototypeAndTypes","constructor","propsPrototype","defaultProps","propsInstance","Object","create","_component","enumerable","value","_asyncPropOriginalValues","_asyncPropResolvedValues","i","arguments","length","assign","layerName","deprecatedProps","checkDeprecatedProps","updateTriggers","transitions","freeze","name","hasOwnProperty","nameStr","newPropName","log","deprecated","join","componentClass","props","getOwnProperty","propTypes","createPropsPrototypeAndTypes","parent","prototype","parentClass","getPrototypeOf","parentPropDefs","componentDefaultProps","componentPropDefs","createPropsPrototype","_mergedDefaultProps","_propTypes","_deprecatedProps","parentProps","id","getComponentName","defineProperties","configurable","writable","addAsyncPropsToPropPrototype","defaultValues","descriptors","_asyncPropDefaultValues","propName","propType","async","getDescriptorForAsyncProp","set","newValue","Promise","get","state","internalState","hasAsyncProp","getAsyncProp","object","prop","call","componentName","once"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAGO,SAASA,WAAT,GAAuB;AAC5B,MAAMC,SAAS,GAAG,IAAlB;AAGA,MAAMC,YAAY,GAAGC,yBAAyB,CAACF,SAAS,CAACG,WAAX,CAA9C;AACA,MAAMC,cAAc,GAAGH,YAAY,CAACI,YAApC;AAGA,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcJ,cAAd,EAA8B;AAElDK,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE,KADF;AAEVC,MAAAA,KAAK,EAAEX;AAFG,KAFsC;AAQlDY,IAAAA,wBAAwB,EAAE;AACxBF,MAAAA,UAAU,EAAE,KADY;AAExBC,MAAAA,KAAK,EAAE;AAFiB,KARwB;AAclDE,IAAAA,wBAAwB,EAAE;AACxBH,MAAAA,UAAU,EAAE,KADY;AAExBC,MAAAA,KAAK,EAAE;AAFiB;AAdwB,GAA9B,CAAtB;;AAqBA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsC,EAAEF,CAAxC,EAA2C;AACzCP,IAAAA,MAAM,CAACU,MAAP,CAAcX,aAAd,EAA6BS,SAAS,CAACD,CAAD,CAAtC;AACD;;AA/B2B,MAiCrBI,SAjCqB,GAiCRlB,SAAS,CAACG,WAjCF,CAiCrBe,SAjCqB;AAAA,MAkCrBC,eAlCqB,GAkCFlB,YAlCE,CAkCrBkB,eAlCqB;AAmC5BC,EAAAA,oBAAoB,CAACF,SAAD,EAAYZ,aAAZ,EAA2Ba,eAA3B,CAApB;AACAC,EAAAA,oBAAoB,CAACF,SAAD,EAAYZ,aAAa,CAACe,cAA1B,EAA0CF,eAA1C,CAApB;AACAC,EAAAA,oBAAoB,CAACF,SAAD,EAAYZ,aAAa,CAACgB,WAA1B,EAAuCH,eAAvC,CAApB;AAGA,2CAAmBb,aAAnB;AAGAC,EAAAA,MAAM,CAACgB,MAAP,CAAcjB,aAAd;AAEA,SAAOA,aAAP;AACD;;AAGD,SAASc,oBAAT,CAA8BF,SAA9B,EAAyCZ,aAAzC,EAAwDa,eAAxD,EAAyE;AACvE,MAAI,CAACb,aAAL,EAAoB;AAClB;AACD;;AAED,OAAK,IAAMkB,IAAX,IAAmBL,eAAnB,EAAoC;AAClC,QAAIM,cAAc,CAACnB,aAAD,EAAgBkB,IAAhB,CAAlB,EAAyC;AACvC,UAAME,OAAO,aAAMR,SAAS,IAAI,OAAnB,eAA+BM,IAA/B,CAAb;AADuC;AAAA;AAAA;;AAAA;AAGvC,6BAA0BL,eAAe,CAACK,IAAD,CAAzC,8HAAiD;AAAA,cAAtCG,WAAsC;;AAC/C,cAAI,CAACF,cAAc,CAACnB,aAAD,EAAgBqB,WAAhB,CAAnB,EAAiD;AAC/CrB,YAAAA,aAAa,CAACqB,WAAD,CAAb,GAA6BrB,aAAa,CAACkB,IAAD,CAA1C;AACD;AACF;AAPsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASvCI,mBAAIC,UAAJ,CAAeH,OAAf,EAAwBP,eAAe,CAACK,IAAD,CAAf,CAAsBM,IAAtB,CAA2B,GAA3B,CAAxB;AACD;AACF;AACF;;AAKD,SAAS5B,yBAAT,CAAmC6B,cAAnC,EAAmD;AACjD,MAAMC,KAAK,GAAGC,cAAc,CAACF,cAAD,EAAiB,qBAAjB,CAA5B;;AACA,MAAIC,KAAJ,EAAW;AACT,WAAO;AACL3B,MAAAA,YAAY,EAAE2B,KADT;AAELE,MAAAA,SAAS,EAAED,cAAc,CAACF,cAAD,EAAiB,YAAjB,CAFpB;AAGLZ,MAAAA,eAAe,EAAEc,cAAc,CAACF,cAAD,EAAiB,kBAAjB;AAH1B,KAAP;AAKD;;AAED,SAAOI,4BAA4B,CAACJ,cAAD,CAAnC;AACD;;AAGD,SAASI,4BAAT,CAAsCJ,cAAtC,EAAsD;AACpD,MAAMK,MAAM,GAAGL,cAAc,CAACM,SAA9B;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAO;AACL/B,MAAAA,YAAY,EAAE;AADT,KAAP;AAGD;;AAED,MAAMiC,WAAW,GAAG/B,MAAM,CAACgC,cAAP,CAAsBR,cAAtB,CAApB;AACA,MAAMS,cAAc,GAAIJ,MAAM,IAAIlC,yBAAyB,CAACoC,WAAD,CAApC,IAAsD,IAA7E;AAGA,MAAMG,qBAAqB,GAAGR,cAAc,CAACF,cAAD,EAAiB,cAAjB,CAAd,IAAkD,EAAhF;AACA,MAAMW,iBAAiB,GAAG,+BAAeD,qBAAf,CAA1B;AAGA,MAAMP,SAAS,GAAG3B,MAAM,CAACU,MAAP,CAChB,EADgB,EAEhBuB,cAAc,IAAIA,cAAc,CAACN,SAFjB,EAGhBQ,iBAAiB,CAACR,SAHF,CAAlB;AAQA,MAAM7B,YAAY,GAAGsC,oBAAoB,CACvCD,iBAAiB,CAACrC,YADqB,EAEvCmC,cAAc,IAAIA,cAAc,CAACnC,YAFM,EAGvC6B,SAHuC,EAIvCH,cAJuC,CAAzC;AAQA,MAAMZ,eAAe,GAAGZ,MAAM,CAACU,MAAP,CACtB,EADsB,EAEtBuB,cAAc,IAAIA,cAAc,CAACrB,eAFX,EAGtBuB,iBAAiB,CAACvB,eAHI,CAAxB;AAOAY,EAAAA,cAAc,CAACa,mBAAf,GAAqCvC,YAArC;AACA0B,EAAAA,cAAc,CAACc,UAAf,GAA4BX,SAA5B;AACAH,EAAAA,cAAc,CAACe,gBAAf,GAAkC3B,eAAlC;AAEA,SAAO;AAACe,IAAAA,SAAS,EAATA,SAAD;AAAY7B,IAAAA,YAAY,EAAZA,YAAZ;AAA0Bc,IAAAA,eAAe,EAAfA;AAA1B,GAAP;AACD;;AAGD,SAASwB,oBAAT,CAA8BX,KAA9B,EAAqCe,WAArC,EAAkDb,SAAlD,EAA6DH,cAA7D,EAA6E;AAC3E,MAAM1B,YAAY,GAAGE,MAAM,CAACC,MAAP,CAAc,IAAd,CAArB;AAEAD,EAAAA,MAAM,CAACU,MAAP,CAAcZ,YAAd,EAA4B0C,WAA5B,EAAyCf,KAAzC;AAGA,MAAMgB,EAAE,GAAGC,gBAAgB,CAAClB,cAAD,CAA3B;AACA,SAAOC,KAAK,CAACgB,EAAb;AAGAzC,EAAAA,MAAM,CAAC2C,gBAAP,CAAwB7C,YAAxB,EAAsC;AAEpC2C,IAAAA,EAAE,EAAE;AACFG,MAAAA,YAAY,EAAE,KADZ;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFzC,MAAAA,KAAK,EAAEqC;AAHL;AAFgC,GAAtC;AAUAK,EAAAA,4BAA4B,CAAChD,YAAD,EAAe6B,SAAf,CAA5B;AAEA,SAAO7B,YAAP;AACD;;AAGD,SAASgD,4BAAT,CAAsChD,YAAtC,EAAoD6B,SAApD,EAA+D;AAC7D,MAAMoB,aAAa,GAAG,EAAtB;AAEA,MAAMC,WAAW,GAAG;AAElBC,IAAAA,uBAAuB,EAAE;AACvB9C,MAAAA,UAAU,EAAE,KADW;AAEvBC,MAAAA,KAAK,EAAE2C;AAFgB,KAFP;AAOlB1C,IAAAA,wBAAwB,EAAE;AACxBF,MAAAA,UAAU,EAAE,KADY;AAExBC,MAAAA,KAAK,EAAE;AAFiB;AAPR,GAApB;;AAcA,OAAK,IAAM8C,QAAX,IAAuBvB,SAAvB,EAAkC;AAChC,QAAMwB,QAAQ,GAAGxB,SAAS,CAACuB,QAAD,CAA1B;AADgC,QAEzBjC,IAFyB,GAEVkC,QAFU,CAEzBlC,IAFyB;AAAA,QAEnBb,KAFmB,GAEV+C,QAFU,CAEnB/C,KAFmB;;AAKhC,QAAI+C,QAAQ,CAACC,KAAb,EAAoB;AAClBL,MAAAA,aAAa,CAAC9B,IAAD,CAAb,GAAsBb,KAAtB;AACA4C,MAAAA,WAAW,CAAC/B,IAAD,CAAX,GAAoBoC,yBAAyB,CAACpC,IAAD,EAAOb,KAAP,CAA7C;AACD;AACF;;AAEDJ,EAAAA,MAAM,CAAC2C,gBAAP,CAAwB7C,YAAxB,EAAsCkD,WAAtC;AACD;;AAGD,SAASK,yBAAT,CAAmCpC,IAAnC,EAAyC;AACvC,SAAO;AACL2B,IAAAA,YAAY,EAAE,KADT;AAELzC,IAAAA,UAAU,EAAE,IAFP;AAILmD,IAAAA,GAJK,eAIDC,QAJC,EAIS;AACZ,UAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,YAAYC,OAAxD,EAAiE;AAC/D,aAAKnD,wBAAL,CAA8BY,IAA9B,IAAsCsC,QAAtC;AACD,OAFD,MAEO;AACL,aAAKjD,wBAAL,CAA8BW,IAA9B,IAAsCsC,QAAtC;AACD;AACF,KAVI;AAYLE,IAAAA,GAZK,iBAYC;AACJ,UAAI,KAAKnD,wBAAT,EAAmC;AAEjC,YAAIW,IAAI,IAAI,KAAKX,wBAAjB,EAA2C;AACzC,cAAMF,KAAK,GAAG,KAAKE,wBAAL,CAA8BW,IAA9B,CAAd;;AAGA,cAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,mBAAOb,KAAK,IAAI,KAAK6C,uBAAL,CAA6BhC,IAA7B,CAAhB;AACD;;AAED,iBAAOb,KAAP;AACD;;AAED,YAAIa,IAAI,IAAI,KAAKZ,wBAAjB,EAA2C;AAEzC,cAAMqD,KAAK,GAAG,KAAKxD,UAAL,IAAmB,KAAKA,UAAL,CAAgByD,aAAjD;;AACA,cAAID,KAAK,IAAIA,KAAK,CAACE,YAAN,CAAmB3C,IAAnB,CAAb,EAAuC;AACrC,mBAAOyC,KAAK,CAACG,YAAN,CAAmB5C,IAAnB,CAAP;AACD;AACF;AACF;;AAID,aAAO,KAAKgC,uBAAL,CAA6BhC,IAA7B,CAAP;AACD;AAtCI,GAAP;AAwCD;;AAID,SAASC,cAAT,CAAwB4C,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,SAAO/D,MAAM,CAAC8B,SAAP,CAAiBZ,cAAjB,CAAgC8C,IAAhC,CAAqCF,MAArC,EAA6CC,IAA7C,CAAP;AACD;;AAGD,SAASrC,cAAT,CAAwBoC,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,SAAO7C,cAAc,CAAC4C,MAAD,EAASC,IAAT,CAAd,IAAgCD,MAAM,CAACC,IAAD,CAA7C;AACD;;AAED,SAASrB,gBAAT,CAA0BlB,cAA1B,EAA0C;AACxC,MAAMyC,aAAa,GACjBvC,cAAc,CAACF,cAAD,EAAiB,WAAjB,CAAd,IAA+CE,cAAc,CAACF,cAAD,EAAiB,eAAjB,CAD/D;;AAEA,MAAI,CAACyC,aAAL,EAAoB;AAClB5C,iBAAI6C,IAAJ,CAAS,CAAT,YAAe1C,cAAc,CAACP,IAA9B;AACD;;AACD,SAAOgD,aAAa,IAAIzC,cAAc,CAACP,IAAvC;AACD","sourcesContent":["import {applyPropOverrides} from '../lib/seer-integration';\nimport log from '../utils/log';\nimport {parsePropTypes} from './prop-types';\n\n// Create a property object\nexport function createProps() {\n  const component = this; // eslint-disable-line\n\n  // Get default prop object (a prototype chain for now)\n  const propTypeDefs = getPropsPrototypeAndTypes(component.constructor);\n  const propsPrototype = propTypeDefs.defaultProps;\n\n  // Create a new prop object with default props object in prototype chain\n  const propsInstance = Object.create(propsPrototype, {\n    // Props need a back pointer to the owning component\n    _component: {\n      enumerable: false,\n      value: component\n    },\n    // The supplied (original) values for those async props that are set to url strings or Promises.\n    // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n    _asyncPropOriginalValues: {\n      enumerable: false,\n      value: {}\n    },\n    // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n    // in this case the values are served directly from this map\n    _asyncPropResolvedValues: {\n      enumerable: false,\n      value: {}\n    }\n  });\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < arguments.length; ++i) {\n    Object.assign(propsInstance, arguments[i]);\n  }\n\n  const {layerName} = component.constructor;\n  const {deprecatedProps} = propTypeDefs;\n  checkDeprecatedProps(layerName, propsInstance, deprecatedProps);\n  checkDeprecatedProps(layerName, propsInstance.updateTriggers, deprecatedProps);\n  checkDeprecatedProps(layerName, propsInstance.transitions, deprecatedProps);\n\n  // SEER: Apply any overrides from the seer debug extension if it is active\n  applyPropOverrides(propsInstance);\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\n/* eslint-disable max-depth */\nfunction checkDeprecatedProps(layerName, propsInstance, deprecatedProps) {\n  if (!propsInstance) {\n    return;\n  }\n\n  for (const name in deprecatedProps) {\n    if (hasOwnProperty(propsInstance, name)) {\n      const nameStr = `${layerName || 'Layer'}: ${name}`;\n\n      for (const newPropName of deprecatedProps[name]) {\n        if (!hasOwnProperty(propsInstance, newPropName)) {\n          propsInstance[newPropName] = propsInstance[name];\n        }\n      }\n\n      log.deprecated(nameStr, deprecatedProps[name].join('/'))();\n    }\n  }\n}\n/* eslint-enable max-depth */\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototypeAndTypes(componentClass) {\n  const props = getOwnProperty(componentClass, '_mergedDefaultProps');\n  if (props) {\n    return {\n      defaultProps: props,\n      propTypes: getOwnProperty(componentClass, '_propTypes'),\n      deprecatedProps: getOwnProperty(componentClass, '_deprecatedProps')\n    };\n  }\n\n  return createPropsPrototypeAndTypes(componentClass);\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(componentClass) {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return {\n      defaultProps: {}\n    };\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentPropDefs = (parent && getPropsPrototypeAndTypes(parentClass)) || null;\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Create a merged type object\n  const propTypes = Object.assign(\n    {},\n    parentPropDefs && parentPropDefs.propTypes,\n    componentPropDefs.propTypes\n  );\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  const defaultProps = createPropsPrototype(\n    componentPropDefs.defaultProps,\n    parentPropDefs && parentPropDefs.defaultProps,\n    propTypes,\n    componentClass\n  );\n\n  // Create a map for prop whose default value is a callback\n  const deprecatedProps = Object.assign(\n    {},\n    parentPropDefs && parentPropDefs.deprecatedProps,\n    componentPropDefs.deprecatedProps\n  );\n\n  // Store the precalculated props\n  componentClass._mergedDefaultProps = defaultProps;\n  componentClass._propTypes = propTypes;\n  componentClass._deprecatedProps = deprecatedProps;\n\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(props, parentProps, propTypes, componentClass) {\n  const defaultProps = Object.create(null);\n\n  Object.assign(defaultProps, parentProps, props);\n\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n  delete props.id;\n\n  // Add getters/setters for async prop properties\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      configurable: false,\n      writable: true,\n      value: id\n    }\n  });\n\n  // Add getters/setters for async prop properties\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  return defaultProps;\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {\n    // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n    _asyncPropDefaultValues: {\n      enumerable: false,\n      value: defaultValues\n    },\n    // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n    _asyncPropOriginalValues: {\n      enumerable: false,\n      value: {}\n    }\n  };\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name, value);\n    }\n  }\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    configurable: false,\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (typeof newValue === 'string' || newValue instanceof Promise) {\n        this._asyncPropOriginalValues[name] = newValue;\n      } else {\n        this._asyncPropResolvedValues[name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this._asyncPropResolvedValues) {\n        // Prop value isn't async, so just return it\n        if (name in this._asyncPropResolvedValues) {\n          const value = this._asyncPropResolvedValues[name];\n\n          // Special handling - components expect null `data` prop expects to be replaced with `[]`\n          if (name === 'data') {\n            return value || this._asyncPropDefaultValues[name];\n          }\n\n          return value;\n        }\n\n        if (name in this._asyncPropOriginalValues) {\n          // It's an async prop value: look into component state\n          const state = this._component && this._component.internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name);\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this._asyncPropDefaultValues[name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName =\n    getOwnProperty(componentClass, 'layerName') || getOwnProperty(componentClass, 'componentName');\n  if (!componentName) {\n    log.once(0, `${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n"],"file":"create-props.js"}