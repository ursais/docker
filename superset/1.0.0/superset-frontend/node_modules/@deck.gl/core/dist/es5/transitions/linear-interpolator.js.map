{"version":3,"sources":["../../../src/transitions/linear-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","LinearInterpolator","transitionProps","startProps","endProps","t","viewport","key","TransitionInterpolator"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,yBAAyB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAlC;;IAKqBC,kB;;;AAInB,gCAAyD;AAAA,QAA7CC,eAA6C,uEAA3BF,yBAA2B;AAAA;AAAA,uHACjDE,eADiD;AAExD;;;;qCAEgBC,U,EAAYC,Q,EAAUC,C,EAAG;AACxC,UAAMC,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAMC,GAAX,IAAkBH,QAAlB,EAA4B;AAC1BE,QAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgB,gBAAKJ,UAAU,CAACI,GAAD,CAAf,EAAsBH,QAAQ,CAACG,GAAD,CAA9B,EAAqCF,CAArC,CAAhB;AACD;;AACD,aAAOC,QAAP;AACD;;;EAd6CE,+B","sourcesContent":["import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from 'math.gl';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps = VIEWPORT_TRANSITION_PROPS) {\n    super(transitionProps);\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key in endProps) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n    return viewport;\n  }\n}\n"],"file":"linear-interpolator.js"}