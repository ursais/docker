{"version":3,"sources":["../../../../src/experimental/utils/container.js"],"names":["ERR_NOT_CONTAINER","ERR_NOT_KEYED_CONTAINER","isObject","value","isPlainObject","constructor","Object","isContainer","Array","isArray","ArrayBuffer","isView","count","container","Number","isFinite","size","length","keys","Error","values","prototype","getPrototypeOf","iterator","Symbol","isKeyedContainer","shift","hasKeyedMethods","get","keyedContainer","entries","forEach","visitor","isKeyed","key","index","element","map","result","x","i","e","push","reduce","toJS"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// ES6 includes iteration and iterable protocols, and new standard containers\n// Influential libraries like Immutable.js provide useful containers that\n// adopt these conventions.\n//\n// So, is it possible to write generic JavaScript code that works with any\n// well-written container class? And is it possible to write generic container\n// classes that work with any well-written code.\n//\n// Almost. But it is not trivial. Importantly the standard JavaScript `Object`s\n// lack even basic iteration support and even standard JavaScript `Array`s\n// differ in minor but important aspects from the new classes.\n//\n// The bad news is that it does not appear that these things are going to be\n// solved soon, even in an actively evolving language like JavaScript. The\n// reason is concerns.\n//\n// The good news is that it is not overly hard to \"paper over\" the differences\n// with a set of small efficient functions. And voila, container.js.\n//\n// Different types of containers provide different types of access.\n// A random access container\n// A keyed container\n\nconst ERR_NOT_CONTAINER = 'Expected a container';\nconst ERR_NOT_KEYED_CONTAINER = 'Expected a \"keyed\" container';\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nexport function isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nexport function isPlainObject(value) {\n  return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\nexport function isContainer(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) || isObject(value);\n}\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nexport function count(container) {\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    return Object.keys(container).length;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n// Returns an iterator over all **values** of a container\n//\n// Note: Keyed containers are expected to provide an `values()` method,\n// with the exception of plain objects which get special handling\n\nexport function values(container) {\n  // HACK - Needed to make buble compiler work\n  if (Array.isArray(container)) {\n    return container;\n  }\n\n  const prototype = Object.getPrototypeOf(container);\n  if (typeof prototype.values === 'function') {\n    return container.values();\n  }\n\n  if (typeof container.constructor.values === 'function') {\n    return container.constructor.values(container);\n  }\n\n  const iterator = container[Symbol.iterator];\n  if (iterator) {\n    return container;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n// /////////////////////////////////////////////////////////\n// KEYED CONTAINERS\n// Examples: objects, Map, Immutable.Map, ...\n\nexport function isKeyedContainer(container) {\n  if (Array.isArray(container)) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(container);\n  // HACK to classify Immutable.List as non keyed container\n  if (typeof prototype.shift === 'function') {\n    return false;\n  }\n  const hasKeyedMethods = typeof prototype.get === 'function';\n  return hasKeyedMethods || isPlainObject(container);\n}\n\n// Returns an iterator over all **entries** of a \"keyed container\"\n// Keyed containers are expected to provide a `keys()` method,\n// with the exception of plain objects.\n//\nexport function keys(keyedContainer) {\n  const prototype = Object.getPrototypeOf(keyedContainer);\n  if (typeof prototype.keys === 'function') {\n    return keyedContainer.keys();\n  }\n\n  if (typeof keyedContainer.constructor.keys === 'function') {\n    return keyedContainer.constructor.keys(keyedContainer);\n  }\n\n  throw new Error(ERR_NOT_KEYED_CONTAINER);\n}\n\n// Returns an iterator over all **entries** of a \"keyed container\"\n//\n// Keyed containers are expected to provide an `entries()` method,\n// with the exception of plain objects.\n//\nexport function entries(keyedContainer) {\n  const prototype = Object.getPrototypeOf(keyedContainer);\n  if (typeof prototype.entries === 'function') {\n    return keyedContainer.entries();\n  }\n\n  // if (typeof prototype.constructor.entries === 'function') {\n  //   return prototype.constructor.entries(keyedContainer);\n  // }\n\n  if (typeof keyedContainer.constructor.entries === 'function') {\n    return keyedContainer.constructor.entries(keyedContainer);\n  }\n\n  return null;\n}\n\n// \"Generic\" forEach that first attempts to call a\nexport function forEach(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  const prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    container.forEach(visitor);\n    return;\n  }\n\n  const isKeyed = isKeyedContainer(container);\n  if (isKeyed) {\n    for (const [key, value] of entries(container)) {\n      visitor(value, key, container);\n    }\n    return;\n  }\n\n  let index = 0;\n  for (const element of values(container)) {\n    // result[index] = visitor(element, index, container);\n    visitor(element, index, container);\n    index++;\n  }\n}\n\nexport function map(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  const prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    const result = [];\n    container.forEach((x, i, e) => result.push(visitor(x, i, e)));\n    return result;\n  }\n\n  const isKeyed = isKeyedContainer(container);\n  // const result = new Array(count(container));\n  const result = [];\n  if (isKeyed) {\n    // TODO - should this create an object?\n    for (const [key, value] of entries(container)) {\n      // result[index] = visitor(element, index, container);\n      result.push(visitor(value, key, container));\n    }\n  } else {\n    let index = 0;\n    for (const element of values(container)) {\n      // result[index] = visitor(element, index, container);\n      result.push(visitor(element, index, container));\n      index++;\n    }\n  }\n  return result;\n}\n\nexport function reduce(container, visitor) {\n  // Hack to work around limitations in buble compiler\n  const prototype = Object.getPrototypeOf(container);\n  if (prototype.forEach) {\n    const result = [];\n    container.forEach((x, i, e) => result.push(visitor(x, i, e)));\n    return result;\n  }\n\n  const isKeyed = isKeyedContainer(container);\n  // const result = new Array(count(container));\n  const result = [];\n  if (isKeyed) {\n    // TODO - should this create an object?\n    for (const [key, value] of entries(container)) {\n      // result[index] = visitor(element, index, container);\n      result.push(visitor(value, key, container));\n    }\n  } else {\n    let index = 0;\n    for (const element of values(container)) {\n      // result[index] = visitor(element, index, container);\n      result.push(visitor(element, index, container));\n      index++;\n    }\n  }\n  return result;\n}\n\n// Attempt to create a simple (array, plain object) representation of\n// a nested structure of ES6 iterable classes.\n// Assumption is that if an entries() method is available, the iterable object\n// should be represented as an object, if not as an array.\nexport function toJS(container) {\n  if (!isObject(container)) {\n    return container;\n  }\n\n  if (isKeyedContainer(container)) {\n    const result = {};\n    for (const [key, value] of entries(container)) {\n      result[key] = toJS(value);\n    }\n    return result;\n  }\n\n  const result = [];\n  for (const value of values(container)) {\n    result.push(toJS(value));\n  }\n  return result;\n}\n"],"file":"container.js"}