{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["View","Viewport","Matrix4","_SphericalCoordinates","SphericalCoordinates","FirstPersonController","getDirectionFromBearingAndPitch","bearing","pitch","spherical","direction","toVector3","normalize","FirstPersonView","controller","_getControllerProps","type","_getViewport","props","viewState","modelMatrix","up","dir","center","transformDirection","viewMatrix","lookAt","eye","Object","assign","zoom","displayName"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,qBAAqB,IAAIC,oBAA1C,QAAqE,SAArE;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,SAASC,+BAAT,OAA2D;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACzD,QAAMC,SAAS,GAAG,IAAIL,oBAAJ,CAAyB;AAACG,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAzB,CAAlB;AACA,QAAME,SAAS,GAAGD,SAAS,CAACE,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;AAED,eAAe,MAAMG,eAAN,SAA8Bb,IAA9B,CAAmC;AAChD,MAAIc,UAAJ,GAAiB;AACf,WAAO,KAAKC,mBAAL,CAAyB;AAC9BC,MAAAA,IAAI,EAAEX;AADwB,KAAzB,CAAP;AAGD;;AAEDY,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAAA,6BAOdA,KAAK,CAACC,SAPQ;AAAA,mDAIhBC,WAJgB;AAAA,UAIhBA,WAJgB,sCAIF,IAJE;AAAA,UAKhBb,OALgB,oBAKhBA,OALgB;AAAA,iDAMhBc,EANgB;AAAA,UAMhBA,EANgB,oCAMX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANW;AAUlB,UAAMC,GAAG,GAAGhB,+BAA+B,CAAC;AAC1CC,MAAAA,OAD0C;AAE1CC,MAAAA,KAAK,EAAE;AAFmC,KAAD,CAA3C;AAMA,UAAMe,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAACI,kBAAZ,CAA+BF,GAA/B,CAAH,GAAyCA,GAAnE;AAGA,UAAMG,UAAU,GAAG,IAAIvB,OAAJ,GAAcwB,MAAd,CAAqB;AAACC,MAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBJ,MAAAA,MAAjB;AAAyBF,MAAAA;AAAzB,KAArB,CAAnB;AAEA,WAAO,IAAIpB,QAAJ,CACL2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AACvBY,MAAAA,IAAI,EAAE,IADiB;AAEvBL,MAAAA;AAFuB,KAAzB,CADK,CAAP;AAMD;;AAlC+C;AAqClDZ,eAAe,CAACkB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nexport default class FirstPersonView extends View {\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n\n  _getViewport(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props.viewState;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch: 89\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up});\n\n    return new Viewport(\n      Object.assign({}, props, {\n        zoom: null, // triggers meter level zoom\n        viewMatrix\n      })\n    );\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}