{"version":3,"sources":["../../../src/passes/draw-layers-pass.js"],"names":["LayersPass","DrawLayersPass","getModuleParameters","layer","effects","effectProps","moduleParameters","Object","assign","getObjectHighlightParameters","effect","getParameters","props","highlightedObjectIndex","highlightColor","parameters","pickingHighlightColor","Number","isInteger","pickingSelectedColor","encodePickingColor"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,eAAe,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AAErDE,EAAAA,mBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,WAAjB,EAA8B;AAC/C,UAAMC,gBAAgB,GAAG,MAAMJ,mBAAN,CAA0BC,KAA1B,CAAzB;AACAI,IAAAA,MAAM,CAACC,MAAP,CAAcF,gBAAd,EAAgC,KAAKG,4BAAL,CAAkCN,KAAlC,CAAhC,EAA0EE,WAA1E;;AACA,SAAK,MAAMK,MAAX,IAAqBN,OAArB,EAA8B;AAC5BG,MAAAA,MAAM,CAACC,MAAP,CAAcF,gBAAd,EAAgCI,MAAM,CAACC,aAAP,CAAqBR,KAArB,CAAhC;AACD;;AACD,WAAOG,gBAAP;AACD;;AAMDG,EAAAA,4BAA4B,CAACN,KAAD,EAAQ;AAAA,yBAGeA,KAAK,CAACS,KAHrB;AAAA,UAG3BC,sBAH2B,gBAG3BA,sBAH2B;AAAA,UAGHC,cAHG,gBAGHA,cAHG;AAIlC,UAAMC,UAAU,GAAG;AACjBC,MAAAA,qBAAqB,EAAE,CACrBF,cAAc,CAAC,CAAD,CADO,EAErBA,cAAc,CAAC,CAAD,CAFO,EAGrBA,cAAc,CAAC,CAAD,CAHO,EAIrBA,cAAc,CAAC,CAAD,CAAd,IAAqB,GAJA;AADN,KAAnB;;AAWA,QAAIG,MAAM,CAACC,SAAP,CAAiBL,sBAAjB,CAAJ,EAA8C;AAC5CE,MAAAA,UAAU,CAACI,oBAAX,GACEN,sBAAsB,IAAI,CAA1B,GAA8BV,KAAK,CAACiB,kBAAN,CAAyBP,sBAAzB,CAA9B,GAAiF,IADnF;AAED;;AACD,WAAOE,UAAP;AACD;;AAnCoD","sourcesContent":["import LayersPass from './layers-pass';\n\nexport default class DrawLayersPass extends LayersPass {\n  // PRIVATE\n  getModuleParameters(layer, effects, effectProps) {\n    const moduleParameters = super.getModuleParameters(layer);\n    Object.assign(moduleParameters, this.getObjectHighlightParameters(layer), effectProps);\n    for (const effect of effects) {\n      Object.assign(moduleParameters, effect.getParameters(layer));\n    }\n    return moduleParameters;\n  }\n\n  /**\n   * Returns the picking color of currenlty selected object of the given 'layer'.\n   * @return {Array} - the picking color or null if layers selected object is invalid.\n   */\n  getObjectHighlightParameters(layer) {\n    // TODO - inefficient to update settings every render?\n    // TODO: Add warning if 'highlightedObjectIndex' is > numberOfInstances of the model.\n    const {highlightedObjectIndex, highlightColor} = layer.props;\n    const parameters = {\n      pickingHighlightColor: [\n        highlightColor[0],\n        highlightColor[1],\n        highlightColor[2],\n        highlightColor[3] || 255\n      ]\n    };\n\n    // Update picking module settings if highlightedObjectIndex is set.\n    // This will overwrite any settings from auto highlighting.\n    if (Number.isInteger(highlightedObjectIndex)) {\n      parameters.pickingSelectedColor =\n        highlightedObjectIndex >= 0 ? layer.encodePickingColor(highlightedObjectIndex) : null;\n    }\n    return parameters;\n  }\n}\n"],"file":"draw-layers-pass.js"}