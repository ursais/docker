{"version":3,"sources":["../../../src/controllers/view-state.js"],"names":["Vector3","_SphericalCoordinates","SphericalCoordinates","assert","defaultState","position","lookAt","up","rotationX","rotationY","fov","near","far","ViewState","constructor","opts","width","height","Number","isFinite","_viewportProps","_applyConstraints","Object","assign","getViewportProps","getDirection","spherical","bearing","pitch","direction","toVector3","normalize","getDirectionFromBearing","shortestPathFrom","viewState","props"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,qBAAqB,IAAIC,oBAA1C,QAAqE,SAArE;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADS;AAEnBC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW;AAGnBC,EAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHe;AAKnBC,EAAAA,SAAS,EAAE,CALQ;AAMnBC,EAAAA,SAAS,EAAE,CANQ;AAQnBC,EAAAA,GAAG,EAAE,EARc;AASnBC,EAAAA,IAAI,EAAE,CATa;AAUnBC,EAAAA,GAAG,EAAE;AAVc,CAArB;AAeA,eAAe,MAAMC,SAAN,CAAgB;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,UAEdC,KAFc,GAOZD,IAPY,CAEdC,KAFc;AAAA,UAGdC,MAHc,GAOZF,IAPY,CAGdE,MAHc;AAAA,2BAOZF,IAPY,CAMdV,QANc;AAAA,UAMdA,QANc,+BAMHD,YAAY,CAACC,QANV;AAShBF,IAAAA,MAAM,CAACe,MAAM,CAACC,QAAP,CAAgBH,KAAhB,CAAD,EAAyB,0BAAzB,CAAN;AACAb,IAAAA,MAAM,CAACe,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAD,EAA0B,2BAA1B,CAAN;AAEA,SAAKG,cAAL,GAAsB,KAAKC,iBAAL,CACpBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,IAAlB,EAAwB;AACtBV,MAAAA,QAAQ,EAAE,IAAIL,OAAJ,CAAYK,QAAZ;AADY,KAAxB,CADoB,CAAtB;AAKD;;AAEDmB,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKJ,cAAZ;AACD;;AAEDK,EAAAA,YAAY,GAAG;AACb,UAAMC,SAAS,GAAG,IAAIxB,oBAAJ,CAAyB;AACzCyB,MAAAA,OAAO,EAAE,KAAKP,cAAL,CAAoBO,OADY;AAEzCC,MAAAA,KAAK,EAAE,KAAKR,cAAL,CAAoBQ;AAFc,KAAzB,CAAlB;AAIA,UAAMC,SAAS,GAAGH,SAAS,CAACI,SAAV,GAAsBC,SAAtB,EAAlB;AACA,WAAOF,SAAP;AACD;;AAEDG,EAAAA,uBAAuB,CAACL,OAAD,EAAU;AAC/B,UAAMD,SAAS,GAAG,IAAIxB,oBAAJ,CAAyB;AACzCyB,MAAAA,OADyC;AAEzCC,MAAAA,KAAK,EAAE;AAFkC,KAAzB,CAAlB;AAIA,UAAMC,SAAS,GAAGH,SAAS,CAACI,SAAV,GAAsBC,SAAtB,EAAlB;AACA,WAAOF,SAAP;AACD;;AAEDI,EAAAA,gBAAgB,CAACC,SAAD,EAAY;AAC1B,WAAO,KAAKd,cAAZ;AACD;;AAIDC,EAAAA,iBAAiB,CAACc,KAAD,EAAQ;AACvB,WAAOA,KAAP;AACD;;AAlD4B","sourcesContent":["import {Vector3, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport assert from '../utils/assert';\n\nconst defaultState = {\n  position: [0, 0, 0],\n  lookAt: [0, 0, 0],\n  up: [0, 0, 1],\n\n  rotationX: 0,\n  rotationY: 0,\n\n  fov: 50,\n  near: 1,\n  far: 100\n};\n\n/* Helpers */\n\nexport default class ViewState {\n  constructor(opts) {\n    const {\n      width, // Width of viewport\n      height, // Height of viewport\n\n      // Position and orientation\n      position = defaultState.position // typically in meters from anchor point\n    } = opts;\n\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n\n    this._viewportProps = this._applyConstraints(\n      Object.assign({}, opts, {\n        position: new Vector3(position)\n      })\n    );\n  }\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getDirection() {\n    const spherical = new SphericalCoordinates({\n      bearing: this._viewportProps.bearing,\n      pitch: this._viewportProps.pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  getDirectionFromBearing(bearing) {\n    const spherical = new SphericalCoordinates({\n      bearing,\n      pitch: 90\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  shortestPathFrom(viewState) {\n    return this._viewportProps;\n  }\n\n  // Redefined by subclass\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    return props;\n  }\n}\n"],"file":"view-state.js"}