{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","log","deckGlobal","AnimationLoop","createGLContext","trackContextState","setParameters","lumaStats","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","finalize","stop","eventManager","destroy","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","needsRedraw","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","getViews","getViewports","rect","pickObject","x","y","radius","layerIds","getLayers","activateViewport","selectedInfos","viewports","mode","depth","result","length","pickMultipleObjects","pickObjects","infos","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","onCreateContext","onInitialize","onRender","Array","isArray","_requestPick","event","callback","type","pos","offsetCenter","emptyInfo","pickedInfo","find","info","index","_updateCursor","cursor","_updateAnimationProps","animationProps","context","_setGLContext","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","renderOptions","renderLayers","pass","getEffects","_getFrameStats","_getMetrics","reset","table","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","leftButton","rightButton","onHover","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","VERSION"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport log from '../utils/log';\nimport deckGlobal from './init';\n\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  trackContextState,\n  setParameters,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.effectManager) {\n      this.effectManager.finalize();\n      this.effectManager = null;\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickObject Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth: 1\n    }).result;\n    this.stats.get('pickObject Time').timeEnd();\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickMultipleObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth\n    }).result;\n    this.stats.get('pickMultipleObjects Time').timeEnd();\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const infos = this.deckPicker.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      viewports: this.getViewports({x, y, width, height}),\n      activateViewport\n    });\n    this.stats.get('pickObjects Time').timeEnd();\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _requestPick({event, callback, mode}) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    _pickRequest.callback = callback;\n    _pickRequest.event = event;\n    _pickRequest.mode = mode;\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this.deckPicker.pickObject(\n        Object.assign(\n          {\n            layers: this.layerManager.getLayers(),\n            viewports: this.getViewports(_pickRequest),\n            activateViewport: this.layerManager.activateViewport,\n            depth: 1\n          },\n          _pickRequest\n        )\n      );\n      if (_pickRequest.callback) {\n        const pickedInfo = result.find(info => info.index >= 0) || emptyInfo;\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const layers = this.layerManager.getLayers();\n    const activateViewport = this.layerManager.activateViewport;\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          layers,\n          viewports: this.viewManager.getViewports(),\n          activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(3, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers(animationProps);\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates(animationProps);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _getFrameStats() {\n    this.stats.get('frameRate').timeEnd();\n    this.stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    this.stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    this.stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    this.metrics.fps = this.stats.get('frameRate').getHz();\n    this.metrics.setPropsTime = this.stats.get('setProps Time').time;\n    this.metrics.updateAttributesTime = this.stats.get('Update Attributes').time;\n    this.metrics.framesRedrawn = this.stats.get('Redraw Count').count;\n    this.metrics.pickTime =\n      this.stats.get('pickObject Time').time +\n      this.stats.get('pickMultipleObjects Time').time +\n      this.stats.get('pickObjects Time').time;\n    this.metrics.pickCount = this.stats.get('Pick Count').count;\n\n    // Luma stats\n    this.metrics.gpuTime = this.stats.get('GPU Time').time;\n    this.metrics.cpuTime = this.stats.get('CPU Time').time;\n    this.metrics.gpuTimePerFrame = this.stats.get('GPU Time').getAverageTime();\n    this.metrics.cpuTimePerFrame = this.stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    this.metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    this.metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    this.metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    this.metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/uber/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}