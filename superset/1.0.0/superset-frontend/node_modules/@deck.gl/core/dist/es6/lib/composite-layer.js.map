{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","log","flatten","CompositeLayer","isComposite","getSubLayers","internalState","subLayers","initializeState","setState","updateObject","setLayerNeedsUpdate","getPickingInfo","info","renderLayers","shouldRenderSubLayer","id","data","overridingProps","props","_subLayerProps","length","getSubLayerClass","DefaultLayerClass","type","getSubLayerProps","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","Object","assign","all","_getAttributeManager","_renderLayers","needsUpdate","filter","Boolean","layer","parent","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    this.setLayerNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    return info;\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix\n    };\n\n    if (sublayerProps) {\n      const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n      const overridingSublayerTriggers =\n        overridingSublayerProps && overridingSublayerProps.updateTriggers;\n      Object.assign(\n        newProps,\n        sublayerProps,\n        // experimental feature that allows users to override sublayer props via parent layer prop\n        overridingSublayerProps,\n        {\n          id: `${this.props.id}-${sublayerProps.id}`,\n          updateTriggers: Object.assign(\n            {\n              all: this.props.updateTriggers.all\n            },\n            sublayerProps.updateTriggers,\n            overridingSublayerTriggers\n          )\n        }\n      );\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    if (subLayers && !this.needsUpdate()) {\n      log.log(3, `Composite layer reused subLayers ${this}`, this.internalState.subLayers)();\n    } else {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, {filter: Boolean});\n      this.internalState.subLayers = subLayers;\n      log.log(2, `Composite layer rendered new subLayers ${this}`, subLayers)();\n    }\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"],"file":"composite-layer.js"}