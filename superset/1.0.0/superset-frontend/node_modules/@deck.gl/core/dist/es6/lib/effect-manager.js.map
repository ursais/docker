{"version":3,"sources":["../../../src/lib/effect-manager.js"],"names":["deepEqual","default","LightingEffect","EffectManager","constructor","effects","_needsRedraw","defaultLightingEffect","needApplyDefaultLighting","setProps","props","length","setEffects","checkLightingEffect","needsRedraw","opts","clearRedrawFlags","redraw","getEffects","slice","push","finalize","cleanup","effect","hasEffect"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,SAAQC,OAAO,IAAIC,cAAnB,QAAwC,qCAAxC;AAEA,eAAe,MAAMC,aAAN,CAAoB;AACjCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,YAAL,GAAoB,gBAApB;AACA,SAAKC,qBAAL,GAA6B,IAAIL,cAAJ,EAA7B;AACA,SAAKM,wBAAL,GAAgC,KAAhC;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,aAAaA,KAAjB,EAAwB;AACtB,UAAIA,KAAK,CAACL,OAAN,CAAcM,MAAd,KAAyB,KAAKN,OAAL,CAAaM,MAAtC,IAAgD,CAACX,SAAS,CAACU,KAAK,CAACL,OAAP,EAAgB,KAAKA,OAArB,CAA9D,EAA6F;AAC3F,aAAKO,UAAL,CAAgBF,KAAK,CAACL,OAAtB;AACA,aAAKC,YAAL,GAAoB,iBAApB;AACD;AACF;;AACD,SAAKO,mBAAL;AACD;;AAEDC,EAAAA,WAAW,GAAmC;AAAA,QAAlCC,IAAkC,uEAA3B;AAACC,MAAAA,gBAAgB,EAAE;AAAnB,KAA2B;AAC5C,UAAMC,MAAM,GAAG,KAAKX,YAApB;;AACA,QAAIS,IAAI,CAACC,gBAAT,EAA2B;AACzB,WAAKV,YAAL,GAAoB,KAApB;AACD;;AACD,WAAOW,MAAP;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAIb,OAAO,GAAG,KAAKA,OAAnB;;AACA,QAAI,KAAKG,wBAAT,EAAmC;AACjCH,MAAAA,OAAO,GAAG,KAAKA,OAAL,CAAac,KAAb,EAAV;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAa,KAAKb,qBAAlB;AACD;;AACD,WAAOF,OAAP;AACD;;AAEDgB,EAAAA,QAAQ,GAAG;AACT,SAAKC,OAAL;AACD;;AAGDV,EAAAA,UAAU,GAAe;AAAA,QAAdP,OAAc,uEAAJ,EAAI;AACvB,SAAKiB,OAAL;AACA,SAAKjB,OAAL,GAAeA,OAAf;AACD;;AAEDiB,EAAAA,OAAO,GAAG;AACR,SAAK,MAAMC,MAAX,IAAqB,KAAKlB,OAA1B,EAAmC;AACjCkB,MAAAA,MAAM,CAACD,OAAP;AACD;;AACD,SAAKjB,OAAL,CAAaM,MAAb,GAAsB,CAAtB;AACD;;AAEDE,EAAAA,mBAAmB,GAAG;AACpB,QAAIW,SAAS,GAAG,KAAhB;;AACA,SAAK,MAAMD,MAAX,IAAqB,KAAKlB,OAA1B,EAAmC;AACjC,UAAIkB,MAAM,YAAYrB,cAAtB,EAAsC;AACpCsB,QAAAA,SAAS,GAAG,IAAZ;AACA;AACD;AACF;;AACD,SAAKhB,wBAAL,GAAgC,CAACgB,SAAjC;AACD;;AA7DgC","sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._needsRedraw = 'Initial render';\n    this.defaultLightingEffect = new LightingEffect();\n    this.needApplyDefaultLighting = false;\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n    this.checkLightingEffect();\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    let effects = this.effects;\n    if (this.needApplyDefaultLighting) {\n      effects = this.effects.slice();\n      effects.push(this.defaultLightingEffect);\n    }\n    return effects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n  }\n\n  checkLightingEffect() {\n    let hasEffect = false;\n    for (const effect of this.effects) {\n      if (effect instanceof LightingEffect) {\n        hasEffect = true;\n        break;\n      }\n    }\n    this.needApplyDefaultLighting = !hasEffect;\n  }\n}\n"],"file":"effect-manager.js"}