{"version":3,"sources":["../../../src/lib/deck-picker.js"],"names":["Framebuffer","readPixelsToArray","getPixelRatio","assert","PickLayersPass","getClosestObject","getUniqueObjects","processPickInfo","getLayerPickingInfo","DeckPicker","constructor","gl","pickingFBO","pickLayersPass","pixelRatio","layerFilter","pickingEvent","lastPickedInfo","index","layerId","info","setProps","props","useDevicePixels","pickObject","x","y","mode","radius","layers","viewports","activateViewport","depth","event","result","pickClosestObject","onViewportActive","pickObjects","width","height","pickVisibleObjects","getLastPickedObject","lastPickedLayerId","layer","id","find","l","coordinate","unproject","lngLat","Object","assign","color","object","updatePickingBuffer","resize","canvas","deviceX","Math","round","deviceY","deviceRadius","deviceRect","getPickingRect","deviceWidth","deviceHeight","infos","affectedLayers","i","pickedColors","drawAndSamplePickingBuffer","redrawReason","pickInfo","pickedColor","copyPickingColors","clearPickingColor","processedPickInfos","callLayerPickingCallbacks","forEach","push","keys","restorePickingColors","emptyInfo","get","deviceLeft","deviceBottom","deviceRight","deviceTop","pickInfos","uniqueInfos","Map","pickedObjectIndex","picked","pickedLayer","has","set","Array","from","values","Number","isFinite","pickableLayers","filter","isPickable","length","effectProps","lightSources","render","Uint8Array","sourceX","sourceY","sourceWidth","sourceHeight","target","valid","max","min","unhandledPickInfos","handled","onHover","Error"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Framebuffer, readPixelsToArray} from '@luma.gl/core';\nimport getPixelRatio from '../utils/get-pixel-ratio';\nimport assert from '../utils/assert';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects} from './picking/query-object';\nimport {processPickInfo, getLayerPickingInfo} from './picking/pick-info';\n\nexport default class DeckPicker {\n  constructor(gl) {\n    this.gl = gl;\n    this.pickingFBO = null;\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.pixelRatio = null;\n    this.layerFilter = null;\n    this.pickingEvent = null;\n    this.lastPickedInfo = {\n      // For callback tracking and auto highlight\n      index: -1,\n      layerId: null,\n      info: null\n    };\n  }\n\n  setProps(props) {\n    if ('useDevicePixels' in props) {\n      this.pixelRatio = getPixelRatio(props.useDevicePixels);\n    }\n\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n    this.pickLayersPass.setProps({\n      pixelRatio: this.pixelRatio,\n      layerFilter: this.layerFilter\n    });\n  }\n\n  // Pick the closest info at given coordinate\n  pickObject({\n    x,\n    y,\n    mode,\n    radius = 0,\n    layers,\n    viewports,\n    activateViewport,\n    depth = 1,\n    event = null\n  }) {\n    // Allow layers to access the event\n    this.pickingEvent = event;\n    const result = this.pickClosestObject({\n      // User params\n      x,\n      y,\n      radius,\n      layers,\n      mode,\n      depth,\n      // Injected params\n      viewports,\n      onViewportActive: activateViewport\n    });\n\n    // Clear the current event\n    this.pickingEvent = null;\n    return result;\n  }\n\n  // Get all unique infos within a bounding box\n  pickObjects({x, y, width, height, layers, viewports, activateViewport}) {\n    return this.pickVisibleObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      mode: 'pickObjects',\n      viewports,\n      onViewportActive: activateViewport\n    });\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const coordinate = viewports[0] && viewports[0].unproject([x, y]);\n\n    const info = {\n      x,\n      y,\n      coordinate,\n      // TODO remove the lngLat prop after compatibility check\n      lngLat: coordinate,\n      layer\n    };\n\n    if (layer) {\n      return Object.assign({}, lastPickedInfo, info);\n    }\n    return Object.assign(info, {color: null, object: null, index: -1});\n  }\n\n  // Private\n  updatePickingBuffer() {\n    const {gl} = this;\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = new Framebuffer(gl);\n    }\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    this.pickingFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    return this.pickingFBO;\n  }\n\n  // Pick the closest object at the given (x,y) coordinate\n  // eslint-disable-next-line max-statements\n  pickClosestObject({layers, viewports, x, y, radius, depth = 1, mode, onViewportActive}) {\n    this.updatePickingBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = this.pixelRatio;\n    const deviceX = Math.round(x * pixelRatio);\n    const deviceY = Math.round(this.gl.canvas.height - y * pixelRatio);\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO;\n    const deviceRect = this.getPickingRect({\n      deviceX,\n      deviceY,\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    let infos;\n    const result = [];\n    const affectedLayers = {};\n\n    for (let i = 0; i < depth; i++) {\n      const pickedColors =\n        deviceRect &&\n        this.drawAndSamplePickingBuffer({\n          layers,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          redrawReason: mode\n        });\n\n      const pickInfo = getClosestObject({\n        pickedColors,\n        layers,\n        deviceX,\n        deviceY,\n        deviceRadius,\n        deviceRect\n      });\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedColor && i + 1 < depth) {\n        const layerId = pickInfo.pickedColor[3] - 1;\n        if (!affectedLayers[layerId]) {\n          // backup original colors\n          affectedLayers[layerId] = layers[layerId].copyPickingColors();\n        }\n        layers[layerId].clearPickingColor(pickInfo.pickedColor);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers,\n        viewports,\n        x,\n        y,\n        deviceX,\n        deviceY,\n        pixelRatio\n      });\n\n      const processedPickInfos = this.callLayerPickingCallbacks(infos, mode);\n\n      if (processedPickInfos) {\n        processedPickInfos.forEach(info => result.push(info));\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    Object.keys(affectedLayers).forEach(layerId =>\n      layers[layerId].restorePickingColors(affectedLayers[layerId])\n    );\n\n    return {result, emptyInfo: infos && infos.get(null)};\n  }\n\n  // Pick all objects within the given bounding box\n  pickVisibleObjects({layers, viewports, x, y, width, height, mode, onViewportActive}) {\n    this.updatePickingBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = this.pixelRatio;\n    const deviceLeft = Math.round(x * pixelRatio);\n    const deviceBottom = Math.round(this.gl.canvas.height - y * pixelRatio);\n    const deviceRight = Math.round((x + width) * pixelRatio);\n    const deviceTop = Math.round(this.gl.canvas.height - (y + height) * pixelRatio);\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceTop,\n      width: deviceRight - deviceLeft,\n      height: deviceBottom - deviceTop\n    };\n\n    const pickedColors = this.drawAndSamplePickingBuffer({\n      layers,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      redrawReason: mode\n    });\n\n    const pickInfos = getUniqueObjects({pickedColors, layers});\n\n    // Only return unique infos, identified by info.object\n    const uniqueInfos = new Map();\n\n    pickInfos.forEach(pickInfo => {\n      let info = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        width,\n        height,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer, info, mode});\n      if (!uniqueInfos.has(info.object)) {\n        uniqueInfos.set(info.object, info);\n      }\n    });\n\n    return Array.from(uniqueInfos.values());\n  }\n\n  // returns pickedColor or null if no pickable layers found.\n  drawAndSamplePickingBuffer({layers, viewports, onViewportActive, deviceRect, redrawReason}) {\n    assert(deviceRect);\n    assert(Number.isFinite(deviceRect.width) && deviceRect.width > 0, '`width` must be > 0');\n    assert(Number.isFinite(deviceRect.height) && deviceRect.height > 0, '`height` must be > 0');\n\n    const pickableLayers = layers.filter(layer => layer.isPickable());\n    if (pickableLayers.length < 1) {\n      return null;\n    }\n\n    const pickingFBO = this.pickingFBO;\n    // turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    const effectProps = {lightSources: {}};\n\n    this.pickLayersPass.render({\n      layers,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      redrawReason,\n      effectProps\n    });\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new Uint8Array(width * height * 4);\n    readPixelsToArray(pickingFBO, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n    return pickedColors;\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  getPickingRect({deviceX, deviceY, deviceRadius, deviceWidth, deviceHeight}) {\n    const valid = deviceX >= 0 && deviceY >= 0 && deviceX < deviceWidth && deviceY < deviceHeight;\n\n    // x, y out of bounds.\n    if (!valid) {\n      return null;\n    }\n\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius) - x + 1;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius) - y + 1;\n\n    return {x, y, width, height};\n  }\n\n  // Per-layer event handlers (e.g. onClick, onHover) are provided by the\n  // user and out of deck.gl's control. It's very much possible that\n  // the user calls React lifecycle methods in these function, such as\n  // ReactComponent.setState(). React lifecycle methods sometimes induce\n  // a re-render and re-generation of props of deck.gl and its layers,\n  // which invalidates all layers currently passed to this very function.\n\n  // Therefore, per-layer event handlers must be invoked at the end\n  // of the picking operation. NO operation that relies on the states of current\n  // layers should be called after this code.\n  callLayerPickingCallbacks(infos, mode) {\n    const unhandledPickInfos = [];\n    const pickingEvent = this.pickingEvent;\n\n    infos.forEach(info => {\n      if (!info.layer) {\n        return;\n      }\n\n      let handled = false;\n      switch (mode) {\n        case 'hover':\n          handled = info.layer.onHover(info, pickingEvent);\n          break;\n        case 'query':\n          break;\n        default:\n          throw new Error('unknown pick type');\n      }\n\n      if (!handled) {\n        unhandledPickInfos.push(info);\n      }\n    });\n\n    return unhandledPickInfos;\n  }\n}\n"],"file":"deck-picker.js"}