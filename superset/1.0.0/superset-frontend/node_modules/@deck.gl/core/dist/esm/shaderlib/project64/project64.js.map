{"version":3,"sources":["../../../../src/shaderlib/project64/project64.js"],"names":["fp64","fp64ify","fp64ifyMatrix4","project","memoize","project64Shader","name","dependencies","vs","getUniforms","deprecations","type","old","new","DEFAULT_MODULE_OPTIONS","getMemoizedUniforms","calculateUniforms","opts","context","project_uViewProjectionMatrix","project_uScale","glViewProjectionMatrixFP64","scaleFP64","project_uViewProjectionMatrixFP64","project64_uViewProjectionMatrix","project64_uScale"],"mappings":"AAoBA,SAAQA,IAAR,QAAmB,eAAnB;IACOC,O,GAA2BD,I,CAA3BC,O;IAASC,c,GAAkBF,I,CAAlBE,c;AAChB,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,YAAY,EAAE,CAACJ,OAAD,EAAUH,IAAV,CAFD;AAGbQ,EAAAA,EAAE,EAAEH,eAHS;AAIbI,EAAAA,WAAW,EAAXA,WAJa;AAKbC,EAAAA,YAAY,EAAE,CACZ;AACEC,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,GAAG,EAAE,2BAFP;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADY;AALD,CAAf;AAiBA,IAAMC,sBAAsB,GAAG,EAA/B;AACA,IAAMC,mBAAmB,GAAGX,OAAO,CAACY,iBAAD,CAAnC;;AAEA,SAASP,WAAT,GAAkE;AAAA,MAA7CQ,IAA6C,uEAAtCH,sBAAsC;AAAA,MAAdI,OAAc,uEAAJ,EAAI;AAAA,MAEzDC,6BAFyD,GAERD,OAFQ,CAEzDC,6BAFyD;AAAA,MAE1BC,cAF0B,GAERF,OAFQ,CAE1BE,cAF0B;;AAIhE,MAAID,6BAA6B,IAAIC,cAArC,EAAqD;AAEnD,WAAOL,mBAAmB,CAAC;AAACI,MAAAA,6BAA6B,EAA7BA,6BAAD;AAAgCC,MAAAA,cAAc,EAAdA;AAAhC,KAAD,CAA1B;AACD;;AACD,SAAO,EAAP;AACD;;AAED,SAASJ,iBAAT,OAA4E;AAAA,MAAhDG,6BAAgD,QAAhDA,6BAAgD;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;AAC1E,MAAMC,0BAA0B,GAAGnB,cAAc,CAACiB,6BAAD,CAAjD;AACA,MAAMG,SAAS,GAAGrB,OAAO,CAACmB,cAAD,CAAzB;AAEA,SAAO;AACLG,IAAAA,iCAAiC,EAAEF,0BAD9B;AAELG,IAAAA,+BAA+B,EAAEH,0BAF5B;AAGLI,IAAAA,gBAAgB,EAAEH;AAHb,GAAP;AAKD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {fp64} from '@luma.gl/core';\nconst {fp64ify, fp64ifyMatrix4} = fp64;\nimport project from '../project/project';\nimport memoize from '../../utils/memoize';\n\nimport project64Shader from './project64.glsl';\n\nexport default {\n  name: 'project64',\n  dependencies: [project, fp64],\n  vs: project64Shader,\n  getUniforms,\n  deprecations: [\n    {\n      type: 'function',\n      old: 'project_to_clipspace_fp64',\n      new: 'project_common_position_to_clipspace_fp64'\n    }\n  ]\n};\n\n// TODO - this module should calculate the 64 bit uniforms\n// It is currently done by project to minimize duplicated work\n\nconst DEFAULT_MODULE_OPTIONS = {};\nconst getMemoizedUniforms = memoize(calculateUniforms);\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS, context = {}) {\n  // These two uniforms are generated by the fp32 project module\n  const {project_uViewProjectionMatrix, project_uScale} = context;\n\n  if (project_uViewProjectionMatrix && project_uScale) {\n    // We only need to update fp64 uniforms if fp32 projection is being updated\n    return getMemoizedUniforms({project_uViewProjectionMatrix, project_uScale});\n  }\n  return {};\n}\n\nfunction calculateUniforms({project_uViewProjectionMatrix, project_uScale}) {\n  const glViewProjectionMatrixFP64 = fp64ifyMatrix4(project_uViewProjectionMatrix);\n  const scaleFP64 = fp64ify(project_uScale);\n\n  return {\n    project_uViewProjectionMatrixFP64: glViewProjectionMatrixFP64,\n    project64_uViewProjectionMatrix: glViewProjectionMatrixFP64,\n    project64_uScale: scaleFP64\n  };\n}\n"],"file":"project64.js"}