{"version":3,"sources":["../../../src/views/third-person-view.js"],"names":["View","Viewport","Vector3","Matrix4","_SphericalCoordinates","SphericalCoordinates","getDirectionFromBearingAndPitch","bearing","pitch","spherical","toVector3","normalize","ThirdPersonView","props","viewState","position","up","zoom","direction","distance","eye","scale","multiply","viewMatrix","multiplyRight","lookAt","center","Object","assign","id","displayName"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,qBAAqB,IAAIC,oBAAnD,QAA8E,SAA9E;;AAEA,SAASC,+BAAT,OAA2D;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACzD,MAAMC,SAAS,GAAG,IAAIJ,oBAAJ,CAAyB;AAACE,IAAAA,OAAO,EAAPA,OAAD;AAAUC,IAAAA,KAAK,EAALA;AAAV,GAAzB,CAAlB;AACA,SAAOC,SAAS,CAACC,SAAV,GAAsBC,SAAtB,EAAP;AACD;;IAEoBC,e;;;;;;;;;;;iCACNC,K,EAAO;AAAA,6BAC2BA,KAAK,CAACC,SADjC;AAAA,UACXP,OADW,oBACXA,OADW;AAAA,UACFC,KADE,oBACFA,KADE;AAAA,UACKO,QADL,oBACKA,QADL;AAAA,UACeC,EADf,oBACeA,EADf;AAAA,UACmBC,IADnB,oBACmBA,IADnB;AAGlB,UAAMC,SAAS,GAAGZ,+BAA+B,CAAC;AAChDC,QAAAA,OAAO,EAAPA,OADgD;AAEhDC,QAAAA,KAAK,EAALA;AAFgD,OAAD,CAAjD;AAKA,UAAMW,QAAQ,GAAGF,IAAI,GAAG,EAAxB;AAIA,UAAMG,GAAG,GAAGF,SAAS,CAACG,KAAV,CAAgB,CAACF,QAAjB,EAA2BG,QAA3B,CAAoC,IAAIpB,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAApC,CAAZ;AAEA,UAAMqB,UAAU,GAAG,IAAIpB,OAAJ,GAAcqB,aAAd,CACjB,IAAIrB,OAAJ,GAAcsB,MAAd,CAAqB;AAACL,QAAAA,GAAG,EAAHA,GAAD;AAAMM,QAAAA,MAAM,EAAEX,QAAd;AAAwBC,QAAAA,EAAE,EAAFA;AAAxB,OAArB,CADiB,CAAnB;AAIA,aAAO,IAAIf,QAAJ,CACL0B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AACvBgB,QAAAA,EAAE,EAAE,KAAKA,EADc;AAEvBZ,QAAAA,IAAI,EAAE,IAFiB;AAGvBM,QAAAA,UAAU,EAAVA;AAHuB,OAAzB,CADK,CAAP;AAOD;;;;EA1B0CvB,I;;SAAxBY,e;AA6BrBA,eAAe,CAACkB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {Vector3, Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  return spherical.toVector3().normalize();\n}\n\nexport default class ThirdPersonView extends View {\n  _getViewport(props) {\n    const {bearing, pitch, position, up, zoom} = props.viewState;\n\n    const direction = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch\n    });\n\n    const distance = zoom * 50;\n\n    // TODO somehow need to flip z to make it work\n    // check if the position offset is done in the base viewport\n    const eye = direction.scale(-distance).multiply(new Vector3(1, 1, -1));\n\n    const viewMatrix = new Matrix4().multiplyRight(\n      new Matrix4().lookAt({eye, center: position, up})\n    );\n\n    return new Viewport(\n      Object.assign({}, props, {\n        id: this.id,\n        zoom: null, // triggers meter level zoom\n        viewMatrix\n      })\n    );\n  }\n}\n\nThirdPersonView.displayName = 'ThirdPersonView';\n"],"file":"third-person-view.js"}