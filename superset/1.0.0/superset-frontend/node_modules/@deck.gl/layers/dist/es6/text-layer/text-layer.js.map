{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","log","createIterable","MultiIconLayer","FontAtlasManager","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SIZE","DEFAULT_BUFFER","DEFAULT_RADIUS","DEFAULT_CUTOFF","DEFAULT_FONT_SETTINGS","fontSize","buffer","sdf","radius","cutoff","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","MISSING_CHAR_WIDTH","FONT_SETTINGS_PROPS","defaultProps","fp64","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","characterSet","fontFamily","fontWeight","fontSettings","getText","type","value","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","initializeState","state","fontAtlasManager","context","gl","updateState","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","finalizeState","finalize","setProps","Object","assign","scale","texture","mapping","setState","iconAtlas","iconMapping","setNeedsRedraw","oldFontSettings","some","prop","getPickingInfo","info","object","index","data","transformedData","iterable","objectInfo","letters","Array","from","offsets","offsetLeft","forEach","letter","i","datum","len","length","objectIndex","frame","width","warn","push","getLetterOffset","getTextLength","_getAccessor","accessor","getAnchorXFromTextAnchor","textAnchor","hasOwnProperty","Error","getAnchorYFromAlignmentBaseline","alignmentBaseline","renderLayers","transitions","updateTriggers","SubLayerClass","getSubLayerClass","d","getAnchorX","getAnchorY","getSubLayerProps","id","getIcon","getShiftInQueue","getLengthOfQueue","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  fp64: false,\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  fontSettings: {},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      fontAtlasManager: new FontAtlasManager(this.context.gl)\n    };\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n    if (fontChanged) {\n      this.updateFontAtlas({oldProps, props});\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    // Release resources held by the font atlas manager\n    this.state.fontAtlasManager.finalize();\n  }\n\n  updateFontAtlas({oldProps, props}) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const fontAtlasManager = this.state.fontAtlasManager;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    const {scale, texture, mapping} = fontAtlasManager;\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n\n    this.setNeedsRedraw(true);\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n\n    const transformedData = [];\n\n    const {iterable, objectInfo} = createIterable(data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const text = getText(object, objectInfo);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {\n            text: letter,\n            index: i,\n            offsets,\n            len: text.length,\n            // reference of original object and object index\n            object,\n            objectIndex: objectInfo.index\n          };\n\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n    }\n\n    this.setState({data: transformedData});\n  }\n  /* eslint-enable no-loop-func */\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  _getAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      return x => accessor(x.object);\n    }\n    return accessor;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    return x => {\n      const textAnchor =\n        typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;\n      if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n        throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n      }\n      return TEXT_ANCHOR[textAnchor];\n    };\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    return x => {\n      const alignmentBaseline =\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(x.object)\n          : getAlignmentBaseline;\n      if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n        throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n      }\n      return ALIGNMENT_BASELINE[alignmentBaseline];\n    };\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      billboard,\n      sdf,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n\n        getPosition: d => getPosition(d.object),\n        getColor: this._getAccessor(getColor),\n        getSize: this._getAccessor(getSize),\n        getAngle: this._getAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this._getAccessor(getPixelOffset),\n        fp64,\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n\n        getIcon: d => d.text,\n        getShiftInQueue: d => this.getLetterOffset(d),\n        getLengthOfQueue: d => this.getTextLength(d)\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}