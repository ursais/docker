{"version":3,"sources":["../../../src/scatterplot-layer/scatterplot-layer.js"],"names":["Layer","createIterable","Model","Geometry","fp64","fp64LowPart","vs","fs","DEFAULT_COLOR","defaultProps","radiusScale","type","min","value","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","getPosition","x","position","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","getShaders","id","projectModule","use64bitProjection","modules","initializeState","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceRadius","defaultValue","instanceFillColors","instanceLineColors","instanceLineWidths","updateState","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","draw","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","positions","geometry","drawMode","vertexCount","attributes","Float32Array","isInstanced","shaderCache","attribute","startRow","endRow","isFP64","use64bitPositions","constant","data","i","iterable","objectInfo","object","index","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, fp64} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  radiusScale: {type: 'number', min: 0, value: 1},\n  radiusMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  radiusMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n\n  lineWidthUnits: 'meters',\n  lineWidthScale: {type: 'number', min: 0, value: 1},\n  lineWidthMinPixels: {type: 'number', min: 0, value: 0},\n  lineWidthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  stroked: false,\n  fp64: false,\n  filled: true,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getRadius: {type: 'accessor', value: 1},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineWidth: {type: 'accessor', value: 1},\n\n  // deprecated\n  strokeWidth: {deprecatedFor: 'getLineWidth'},\n  outline: {deprecatedFor: 'stroked'},\n  getColor: {deprecatedFor: ['getFillColor', 'getLineColor']}\n};\n\nexport default class ScatterplotLayer extends Layer {\n  getShaders(id) {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n\n    const widthMultiplier =\n      lineWidthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          stroked: stroked ? 1 : 0,\n          filled,\n          radiusScale,\n          radiusMinPixels,\n          radiusMaxPixels,\n          lineWidthScale: lineWidthScale * widthMultiplier,\n          lineWidthMinPixels,\n          lineWidthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          vertexCount: 4,\n          attributes: {\n            positions: {size: 3, value: new Float32Array(positions)}\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstancePositions64xyLow(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const position = getPosition(object, objectInfo);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n"],"file":"scatterplot-layer.js"}