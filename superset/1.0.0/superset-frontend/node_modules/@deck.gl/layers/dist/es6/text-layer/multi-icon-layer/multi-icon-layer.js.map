{"version":3,"sources":["../../../../src/text-layer/multi-icon-layer/multi-icon-layer.js"],"names":["createIterable","IconLayer","vs","fs","DEFAULT_GAMMA","DEFAULT_BUFFER","defaultProps","getShiftInQueue","type","value","x","shift","getLengthOfQueue","len","getAnchorX","anchorX","getAnchorY","anchorY","getPixelOffset","getPickingIndex","objectIndex","MultiIconLayer","getShaders","Object","assign","initializeState","attributeManager","getAttributeManager","addInstanced","instancePixelOffset","size","transition","accessor","updateState","updateParams","changeFlags","updateTriggersChanged","invalidate","draw","uniforms","sdf","props","buffer","gamma","Boolean","calculateInstanceOffsets","attribute","startRow","endRow","data","iconMapping","getIcon","i","iterable","object","icon","rect","shiftX","width","height","calculateInstancePickingColors","pickingColor","point","index","encodePickingColor","layerName"],"mappings":"AAoBA,SAAQA,cAAR,QAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,EAAP,MAAe,kCAAf;AAGA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,cAAc,GAAG,QAAQ,GAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC,KAAF,IAAW;AAA1C,GADE;AAEnBC,EAAAA,gBAAgB,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACG,GAAF,IAAS;AAAxC,GAFC;AAInBC,EAAAA,UAAU,EAAE;AAACN,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACK,OAAF,IAAa;AAA5C,GAJO;AAMnBC,EAAAA,UAAU,EAAE;AAACR,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACO,OAAF,IAAa;AAA5C,GANO;AAOnBC,EAAAA,cAAc,EAAE;AAACV,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA1B,GAPG;AAUnBU,EAAAA,eAAe,EAAE;AAACX,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACU;AAAjC;AAVE,CAArB;AAaA,eAAe,MAAMC,cAAN,SAA6BpB,SAA7B,CAAuC;AACpDqB,EAAAA,UAAU,GAAG;AACX,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAMF,UAAN,EAAlB,EAAsC;AAC3CpB,MAAAA,EAD2C;AAE3CC,MAAAA;AAF2C,KAAtC,CAAP;AAID;;AAEDsB,EAAAA,eAAe,GAAG;AAChB,UAAMA,eAAN;AAEA,UAAMC,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AACAD,IAAAA,gBAAgB,CAACE,YAAjB,CAA8B;AAC5BC,MAAAA,mBAAmB,EAAE;AACnBC,QAAAA,IAAI,EAAE,CADa;AAEnBC,QAAAA,UAAU,EAAE,IAFO;AAGnBC,QAAAA,QAAQ,EAAE;AAHS;AADO,KAA9B;AAOD;;AAEDC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACxB,UAAMD,WAAN,CAAkBC,YAAlB;AADwB,UAEjBC,WAFiB,GAEFD,YAFE,CAEjBC,WAFiB;;AAIxB,QACEA,WAAW,CAACC,qBAAZ,KACCD,WAAW,CAACC,qBAAZ,CAAkCtB,UAAlC,IAAgDqB,WAAW,CAACC,qBAAZ,CAAkCpB,UADnF,CADF,EAGE;AACA,WAAKW,mBAAL,GAA2BU,UAA3B,CAAsC,iBAAtC;AACD;AACF;;AAEDC,EAAAA,IAAI,OAAa;AAAA,QAAXC,QAAW,QAAXA,QAAW;AAAA,UACRC,GADQ,GACD,KAAKC,KADJ,CACRD,GADQ;AAEf,UAAMF,IAAN,CAAW;AACTC,MAAAA,QAAQ,EAAEhB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBe,QAAlB,EAA4B;AAGpCG,QAAAA,MAAM,EAAErC,cAH4B;AAIpCsC,QAAAA,KAAK,EAAEvC,aAJ6B;AAKpCoC,QAAAA,GAAG,EAAEI,OAAO,CAACJ,GAAD;AALwB,OAA5B;AADD,KAAX;AASD;;AAEDK,EAAAA,wBAAwB,CAACC,SAAD,SAAgC;AAAA,QAAnBC,QAAmB,SAAnBA,QAAmB;AAAA,QAATC,MAAS,SAATA,MAAS;AAAA,wBASlD,KAAKP,KAT6C;AAAA,UAEpDQ,IAFoD,eAEpDA,IAFoD;AAAA,UAGpDC,WAHoD,eAGpDA,WAHoD;AAAA,UAIpDC,OAJoD,eAIpDA,OAJoD;AAAA,UAKpDrC,UALoD,eAKpDA,UALoD;AAAA,UAMpDE,UANoD,eAMpDA,UANoD;AAAA,UAOpDJ,gBAPoD,eAOpDA,gBAPoD;AAAA,UAQpDL,eARoD,eAQpDA,eARoD;AAAA,UAU/CE,KAV+C,GAUhCqC,SAVgC,CAU/CrC,KAV+C;AAAA,UAUxCqB,IAVwC,GAUhCgB,SAVgC,CAUxChB,IAVwC;AAWtD,QAAIsB,CAAC,GAAGL,QAAQ,GAAGjB,IAAnB;;AAXsD,4BAYnC9B,cAAc,CAACiD,IAAD,EAAOF,QAAP,EAAiBC,MAAjB,CAZqB;AAAA,UAY/CK,QAZ+C,mBAY/CA,QAZ+C;;AActD,SAAK,MAAMC,MAAX,IAAqBD,QAArB,EAA+B;AAC7B,YAAME,IAAI,GAAGJ,OAAO,CAACG,MAAD,CAApB;AACA,YAAME,IAAI,GAAGN,WAAW,CAACK,IAAD,CAAX,IAAqB,EAAlC;AACA,YAAM1C,GAAG,GAAGD,gBAAgB,CAAC0C,MAAD,CAA5B;AACA,YAAMG,MAAM,GAAGlD,eAAe,CAAC+C,MAAD,CAA9B;AAEA7C,MAAAA,KAAK,CAAC2C,CAAC,EAAF,CAAL,GAAc,CAACtC,UAAU,CAACwC,MAAD,CAAV,GAAqB,CAAtB,IAA2BzC,GAA5B,GAAmC,CAAnC,GAAuC2C,IAAI,CAACE,KAAL,GAAa,CAApD,GAAwDD,MAAxD,IAAkE,CAA/E;AACAhD,MAAAA,KAAK,CAAC2C,CAAC,EAAF,CAAL,GAAcI,IAAI,CAACG,MAAL,GAAc,CAAf,GAAoB3C,UAAU,CAACsC,MAAD,CAA9B,IAA0C,CAAvD;AACD;AACF;;AAEDM,EAAAA,8BAA8B,CAACd,SAAD,SAAgC;AAAA,QAAnBC,QAAmB,SAAnBA,QAAmB;AAAA,QAATC,MAAS,SAATA,MAAS;AAAA,yBAC5B,KAAKP,KADuB;AAAA,UACrDQ,IADqD,gBACrDA,IADqD;AAAA,UAC/C9B,eAD+C,gBAC/CA,eAD+C;AAAA,UAErDV,KAFqD,GAEtCqC,SAFsC,CAErDrC,KAFqD;AAAA,UAE9CqB,IAF8C,GAEtCgB,SAFsC,CAE9ChB,IAF8C;AAG5D,QAAIsB,CAAC,GAAGL,QAAQ,GAAGjB,IAAnB;AACA,UAAM+B,YAAY,GAAG,EAArB;;AAJ4D,6BAKzC7D,cAAc,CAACiD,IAAD,EAAOF,QAAP,EAAiBC,MAAjB,CAL2B;AAAA,UAKrDK,QALqD,oBAKrDA,QALqD;;AAO5D,SAAK,MAAMS,KAAX,IAAoBT,QAApB,EAA8B;AAC5B,YAAMU,KAAK,GAAG5C,eAAe,CAAC2C,KAAD,CAA7B;AACA,WAAKE,kBAAL,CAAwBD,KAAxB,EAA+BF,YAA/B;AAEApD,MAAAA,KAAK,CAAC2C,CAAC,EAAF,CAAL,GAAaS,YAAY,CAAC,CAAD,CAAzB;AACApD,MAAAA,KAAK,CAAC2C,CAAC,EAAF,CAAL,GAAaS,YAAY,CAAC,CAAD,CAAzB;AACApD,MAAAA,KAAK,CAAC2C,CAAC,EAAF,CAAL,GAAaS,YAAY,CAAC,CAAD,CAAzB;AACD;AACF;;AAtFmD;AAyFtDxC,cAAc,CAAC4C,SAAf,GAA2B,gBAA3B;AACA5C,cAAc,CAACf,YAAf,GAA8BA,YAA9B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createIterable} from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport vs from './multi-icon-layer-vertex.glsl';\nimport fs from './multi-icon-layer-fragment.glsl';\n\n// TODO expose as layer properties\nconst DEFAULT_GAMMA = 0.2;\nconst DEFAULT_BUFFER = 192.0 / 256;\n\nconst defaultProps = {\n  getShiftInQueue: {type: 'accessor', value: x => x.shift || 0},\n  getLengthOfQueue: {type: 'accessor', value: x => x.len || 1},\n  // 1: left, 0: middle, -1: right\n  getAnchorX: {type: 'accessor', value: x => x.anchorX || 0},\n  // 1: top, 0: center, -1: bottom\n  getAnchorY: {type: 'accessor', value: x => x.anchorY || 0},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  // object with the same pickingIndex will be picked when any one of them is being picked\n  getPickingIndex: {type: 'accessor', value: x => x.objectIndex}\n};\n\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      vs,\n      fs\n    });\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    const {changeFlags} = updateParams;\n\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)\n    ) {\n      this.getAttributeManager().invalidate('instanceOffsets');\n    }\n  }\n\n  draw({uniforms}) {\n    const {sdf} = this.props;\n    super.draw({\n      uniforms: Object.assign({}, uniforms, {\n        // Refer the following doc about gamma and buffer\n        // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n        buffer: DEFAULT_BUFFER,\n        gamma: DEFAULT_GAMMA,\n        sdf: Boolean(sdf)\n      })\n    });\n  }\n\n  calculateInstanceOffsets(attribute, {startRow, endRow}) {\n    const {\n      data,\n      iconMapping,\n      getIcon,\n      getAnchorX,\n      getAnchorY,\n      getLengthOfQueue,\n      getShiftInQueue\n    } = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      const icon = getIcon(object);\n      const rect = iconMapping[icon] || {};\n      const len = getLengthOfQueue(object);\n      const shiftX = getShiftInQueue(object);\n\n      value[i++] = ((getAnchorX(object) - 1) * len) / 2 + rect.width / 2 + shiftX || 0;\n      value[i++] = (rect.height / 2) * getAnchorY(object) || 0;\n    }\n  }\n\n  calculateInstancePickingColors(attribute, {startRow, endRow}) {\n    const {data, getPickingIndex} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const pickingColor = [];\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const point of iterable) {\n      const index = getPickingIndex(point);\n      this.encodePickingColor(index, pickingColor);\n\n      value[i++] = pickingColor[0];\n      value[i++] = pickingColor[1];\n      value[i++] = pickingColor[2];\n    }\n  }\n}\n\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n"],"file":"multi-icon-layer.js"}