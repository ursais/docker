{"version":3,"sources":["../../../src/path-layer/path-tesselator.js"],"names":["experimental","Tesselator","fp64","fp64Module","fp64LowPart","PathTesselator","data","getGeometry","positionFormat","attributes","startPositions","size","endPositions","leftPositions","rightPositions","startEndPositions64XyLow","fp64Only","neighborPositions64XyLow","attributeName","path","Math","max","getPathLength","context","numPoints","geometrySize","isPathClosed","isClosed","startPoint","getPointOnPath","endPoint","prevPoint","nextPoint","i","vertexStart","ptIndex","Number","isFinite","length","positionSize","index","firstPoint","lastPoint"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {experimental} from '@deck.gl/core';\nconst {Tesselator} = experimental;\nimport {fp64 as fp64Module} from '@luma.gl/core';\nconst {fp64LowPart} = fp64Module;\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PathTesselator extends Tesselator {\n  constructor({data, getGeometry, positionFormat, fp64}) {\n    super({\n      data,\n      getGeometry,\n      fp64,\n      positionFormat,\n      attributes: {\n        startPositions: {size: 3},\n        endPositions: {size: 3},\n        leftPositions: {size: 3},\n        rightPositions: {size: 3},\n        startEndPositions64XyLow: {size: 4, fp64Only: true},\n        neighborPositions64XyLow: {size: 4, fp64Only: true}\n      }\n    });\n  }\n\n  /* Getters */\n  get(attributeName) {\n    return this.attributes[attributeName];\n  }\n\n  /* Implement base Tesselator interface */\n  getGeometrySize(path) {\n    return Math.max(0, this.getPathLength(path) - 1);\n  }\n\n  /* eslint-disable max-statements, complexity */\n  updateGeometryAttributes(path, context) {\n    const {\n      attributes: {\n        startPositions,\n        endPositions,\n        leftPositions,\n        rightPositions,\n        startEndPositions64XyLow,\n        neighborPositions64XyLow\n      },\n      fp64\n    } = this;\n\n    const numPoints = context.geometrySize + 1;\n    if (numPoints < 2) {\n      // ignore invalid path\n      return;\n    }\n    const isPathClosed = this.isClosed(path);\n\n    let startPoint = this.getPointOnPath(path, 0);\n    let endPoint = this.getPointOnPath(path, 1);\n    let prevPoint = isPathClosed ? this.getPointOnPath(path, numPoints - 2) : startPoint;\n    let nextPoint;\n\n    for (let i = context.vertexStart, ptIndex = 1; ptIndex < numPoints; i++, ptIndex++) {\n      if (ptIndex + 1 < numPoints) {\n        nextPoint = this.getPointOnPath(path, ptIndex + 1);\n      } else {\n        nextPoint = isPathClosed ? this.getPointOnPath(path, 1) : endPoint;\n      }\n\n      startPositions[i * 3] = startPoint[0];\n      startPositions[i * 3 + 1] = startPoint[1];\n      startPositions[i * 3 + 2] = startPoint[2] || 0;\n\n      endPositions[i * 3] = endPoint[0];\n      endPositions[i * 3 + 1] = endPoint[1];\n      endPositions[i * 3 + 2] = endPoint[2] || 0;\n\n      leftPositions[i * 3] = prevPoint[0];\n      leftPositions[i * 3 + 1] = prevPoint[1];\n      leftPositions[i * 3 + 2] = prevPoint[2] || 0;\n\n      rightPositions[i * 3] = nextPoint[0];\n      rightPositions[i * 3 + 1] = nextPoint[1];\n      rightPositions[i * 3 + 2] = nextPoint[2] || 0;\n\n      if (fp64) {\n        startEndPositions64XyLow[i * 4] = fp64LowPart(startPoint[0]);\n        startEndPositions64XyLow[i * 4 + 1] = fp64LowPart(startPoint[1]);\n        startEndPositions64XyLow[i * 4 + 2] = fp64LowPart(endPoint[0]);\n        startEndPositions64XyLow[i * 4 + 3] = fp64LowPart(endPoint[1]);\n\n        neighborPositions64XyLow[i * 4] = fp64LowPart(prevPoint[0]);\n        neighborPositions64XyLow[i * 4 + 1] = fp64LowPart(prevPoint[1]);\n        neighborPositions64XyLow[i * 4 + 2] = fp64LowPart(nextPoint[0]);\n        neighborPositions64XyLow[i * 4 + 3] = fp64LowPart(nextPoint[1]);\n      }\n\n      prevPoint = startPoint;\n      startPoint = endPoint;\n      endPoint = nextPoint;\n    }\n  }\n  /* eslint-enable max-statements, complexity */\n\n  /* Utilities */\n  getPathLength(path) {\n    if (Number.isFinite(path[0])) {\n      // flat format\n      return path.length / this.positionSize;\n    }\n    return path.length;\n  }\n\n  getPointOnPath(path, index) {\n    if (Number.isFinite(path[0])) {\n      // flat format\n      const {positionSize} = this;\n      // TODO - avoid creating new arrays when using binary\n      return [\n        path[index * positionSize],\n        path[index * positionSize + 1],\n        positionSize === 3 ? path[index * positionSize + 2] : 0\n      ];\n    }\n    return path[index];\n  }\n\n  isClosed(path) {\n    const numPoints = this.getPathLength(path);\n    const firstPoint = this.getPointOnPath(path, 0);\n    const lastPoint = this.getPointOnPath(path, numPoints - 1);\n    return (\n      firstPoint[0] === lastPoint[0] &&\n      firstPoint[1] === lastPoint[1] &&\n      firstPoint[2] === lastPoint[2]\n    );\n  }\n}\n"],"file":"path-tesselator.js"}