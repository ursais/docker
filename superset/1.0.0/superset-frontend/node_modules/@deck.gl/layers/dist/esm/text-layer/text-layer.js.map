{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","log","createIterable","MultiIconLayer","FontAtlasManager","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SIZE","DEFAULT_BUFFER","DEFAULT_RADIUS","DEFAULT_CUTOFF","DEFAULT_FONT_SETTINGS","fontSize","buffer","sdf","radius","cutoff","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","MISSING_CHAR_WIDTH","FONT_SETTINGS_PROPS","defaultProps","fp64","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","characterSet","fontFamily","fontWeight","fontSettings","getText","type","value","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","state","fontAtlasManager","context","gl","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","finalize","setProps","Object","assign","scale","texture","mapping","setState","iconAtlas","iconMapping","setNeedsRedraw","oldFontSettings","some","prop","info","object","index","data","transformedData","iterable","objectInfo","letters","Array","from","offsets","offsetLeft","forEach","letter","i","datum","len","length","objectIndex","frame","width","warn","push","accessor","textAnchor","hasOwnProperty","Error","alignmentBaseline","transitions","updateTriggers","SubLayerClass","getSubLayerClass","d","_getAccessor","getAnchorX","getAnchorXFromTextAnchor","getAnchorY","getAnchorYFromAlignmentBaseline","getSubLayerProps","id","getIcon","getShiftInQueue","getLetterOffset","getLengthOfQueue","getTextLength","layerName"],"mappings":";;;;;;AAoBA,SAAQA,cAAR,EAAwBC,GAAxB,EAA6BC,cAA7B,QAAkD,eAAlD;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,gBAAP,IACEC,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,cAPF,QAQO,sBARP;AAUA,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,QAAQ,EAAEL,iBADkB;AAE5BM,EAAAA,MAAM,EAAEL,cAFoB;AAG5BM,EAAAA,GAAG,EAAE,KAHuB;AAI5BC,EAAAA,MAAM,EAAEN,cAJoB;AAK5BO,EAAAA,MAAM,EAAEN;AALoB,CAA9B;AAQA,IAAMO,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,MAAM,EAAE,CAFU;AAGlBC,EAAAA,GAAG,EAAE,CAAC;AAHY,CAApB;AAMA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,GAAG,EAAE,CADoB;AAEzBC,EAAAA,MAAM,EAAE,CAFiB;AAGzBC,EAAAA,MAAM,EAAE,CAAC;AAHgB,CAA3B;AAMA,IAAMC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAtB;AAEA,IAAMC,kBAAkB,GAAG,EAA3B;AACA,IAAMC,mBAAmB,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,KAAvB,EAA8B,QAA9B,EAAwC,QAAxC,CAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,SAAS,EAAE,CAHQ;AAInBC,EAAAA,SAAS,EAAE,QAJQ;AAKnBC,EAAAA,aAAa,EAAE,CALI;AAMnBC,EAAAA,aAAa,EAAEC,MAAM,CAACC,gBANH;AAQnBC,EAAAA,YAAY,EAAEjC,gBARK;AASnBkC,EAAAA,UAAU,EAAEjC,mBATO;AAUnBkC,EAAAA,UAAU,EAAEjC,mBAVO;AAWnBkC,EAAAA,YAAY,EAAE,EAXK;AAanBC,EAAAA,OAAO,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAN;AAAA;AAA3B,GAbU;AAcnBC,EAAAA,WAAW,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACG,QAAN;AAAA;AAA3B,GAdM;AAenBC,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAElB;AAA1B,GAfS;AAgBnBwB,EAAAA,OAAO,EAAE;AAACP,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAhBU;AAiBnBO,EAAAA,QAAQ,EAAE;AAACR,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAjBS;AAkBnBQ,EAAAA,aAAa,EAAE;AAACT,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAlBI;AAmBnBS,EAAAA,oBAAoB,EAAE;AAACV,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAnBH;AAoBnBU,EAAAA,cAAc,EAAE;AAACX,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA1B;AApBG,CAArB;;IAuBqBW,S;;;;;;;;;;;sCACD;AAChB,WAAKC,KAAL,GAAa;AACXC,QAAAA,gBAAgB,EAAE,IAAIrD,gBAAJ,CAAqB,KAAKsD,OAAL,CAAaC,EAAlC;AADP,OAAb;AAGD;;;sCAE2C;AAAA,UAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,WAAc,QAAdA,WAAc;AAC1C,UAAMC,WAAW,GAAG,KAAKA,WAAL,CAAiBF,QAAjB,EAA2BD,KAA3B,CAApB;;AACA,UAAIG,WAAJ,EAAiB;AACf,aAAKC,eAAL,CAAqB;AAACH,UAAAA,QAAQ,EAARA,QAAD;AAAWD,UAAAA,KAAK,EAALA;AAAX,SAArB;AACD;;AAED,UACEE,WAAW,CAACG,WAAZ,IACAF,WADA,IAECD,WAAW,CAACI,qBAAZ,KACEJ,WAAW,CAACI,qBAAZ,CAAkCC,GAAlC,IAAyCL,WAAW,CAACI,qBAAZ,CAAkCxB,OAD7E,CAHH,EAKE;AACA,aAAK0B,wBAAL;AACD;AACF;;;oCAEe;AACd;;AAEA,WAAKZ,KAAL,CAAWC,gBAAX,CAA4BY,QAA5B;AACD;;;2CAEkC;AAAA,UAAlBR,QAAkB,SAAlBA,QAAkB;AAAA,UAARD,KAAQ,SAARA,KAAQ;AAAA,UAC1BtB,YAD0B,GAC4BsB,KAD5B,CAC1BtB,YAD0B;AAAA,UACZG,YADY,GAC4BmB,KAD5B,CACZnB,YADY;AAAA,UACEF,UADF,GAC4BqB,KAD5B,CACErB,UADF;AAAA,UACcC,UADd,GAC4BoB,KAD5B,CACcpB,UADd;AAIjC,UAAMiB,gBAAgB,GAAG,KAAKD,KAAL,CAAWC,gBAApC;AACAA,MAAAA,gBAAgB,CAACa,QAAjB,CACEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB5D,qBAAlB,EAAyC6B,YAAzC,EAAuD;AACrDH,QAAAA,YAAY,EAAZA,YADqD;AAErDC,QAAAA,UAAU,EAAVA,UAFqD;AAGrDC,QAAAA,UAAU,EAAVA;AAHqD,OAAvD,CADF;AALiC,UAa1BiC,KAb0B,GAaChB,gBAbD,CAa1BgB,KAb0B;AAAA,UAanBC,OAbmB,GAaCjB,gBAbD,CAanBiB,OAbmB;AAAA,UAaVC,OAbU,GAaClB,gBAbD,CAaVkB,OAbU;AAejC,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAALA,KADY;AAEZI,QAAAA,SAAS,EAAEH,OAFC;AAGZI,QAAAA,WAAW,EAAEH;AAHD,OAAd;AAMA,WAAKI,cAAL,CAAoB,IAApB;AACD;;;gCAEWlB,Q,EAAUD,K,EAAO;AAC3B,UACEC,QAAQ,CAACtB,UAAT,KAAwBqB,KAAK,CAACrB,UAA9B,IACAsB,QAAQ,CAACvB,YAAT,KAA0BsB,KAAK,CAACtB,YADhC,IAEAuB,QAAQ,CAACrB,UAAT,KAAwBoB,KAAK,CAACpB,UAHhC,EAIE;AACA,eAAO,IAAP;AACD;;AAED,UAAIqB,QAAQ,CAACpB,YAAT,KAA0BmB,KAAK,CAACnB,YAApC,EAAkD;AAChD,eAAO,KAAP;AACD;;AAED,UAAMuC,eAAe,GAAGnB,QAAQ,CAACpB,YAAT,IAAyB,EAAjD;AACA,UAAMA,YAAY,GAAGmB,KAAK,CAACnB,YAAN,IAAsB,EAA3C;AAEA,aAAOb,mBAAmB,CAACqD,IAApB,CAAyB,UAAAC,IAAI;AAAA,eAAIF,eAAe,CAACE,IAAD,CAAf,KAA0BzC,YAAY,CAACyC,IAAD,CAA1C;AAAA,OAA7B,CAAP;AACD;;;0CAEsB;AAAA,UAAPC,IAAO,SAAPA,IAAO;AAGrB,aAAOZ,MAAM,CAACC,MAAP,CAAcW,IAAd,EAAoB;AAEzBC,QAAAA,MAAM,EAAED,IAAI,CAACE,KAAL,IAAc,CAAd,GAAkB,KAAKzB,KAAL,CAAW0B,IAAX,CAAgBH,IAAI,CAACE,KAArB,CAAlB,GAAgD;AAF/B,OAApB,CAAP;AAID;;;+CAG0B;AAAA,wBACD,KAAKzB,KADJ;AAAA,UAClB0B,IADkB,eAClBA,IADkB;AAAA,UACZ5C,OADY,eACZA,OADY;AAAA,UAElBoC,WAFkB,GAEH,KAAKtB,KAFF,CAElBsB,WAFkB;AAIzB,UAAMS,eAAe,GAAG,EAAxB;;AAJyB,4BAMMrF,cAAc,CAACoF,IAAD,CANpB;AAAA,UAMlBE,QANkB,mBAMlBA,QANkB;AAAA,UAMRC,UANQ,mBAMRA,UANQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,cAOdL,MAPc;AAQvBK,UAAAA,UAAU,CAACJ,KAAX;AACA,cAAMvC,IAAI,GAAGJ,OAAO,CAAC0C,MAAD,EAASK,UAAT,CAApB;;AACA,cAAI3C,IAAJ,EAAU;AACR,gBAAM4C,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW9C,IAAX,CAAhB;AACA,gBAAM+C,OAAO,GAAG,CAAC,CAAD,CAAhB;AACA,gBAAIC,UAAU,GAAG,CAAjB;AAEAJ,YAAAA,OAAO,CAACK,OAAR,CAAgB,UAACC,MAAD,EAASC,CAAT,EAAe;AAC7B,kBAAMC,KAAK,GAAG;AACZpD,gBAAAA,IAAI,EAAEkD,MADM;AAEZX,gBAAAA,KAAK,EAAEY,CAFK;AAGZJ,gBAAAA,OAAO,EAAPA,OAHY;AAIZM,gBAAAA,GAAG,EAAErD,IAAI,CAACsD,MAJE;AAMZhB,gBAAAA,MAAM,EAANA,MANY;AAOZiB,gBAAAA,WAAW,EAAEZ,UAAU,CAACJ;AAPZ,eAAd;AAUA,kBAAMiB,KAAK,GAAGxB,WAAW,CAACkB,MAAD,CAAzB;;AACA,kBAAIM,KAAJ,EAAW;AACTR,gBAAAA,UAAU,IAAIQ,KAAK,CAACC,KAApB;AACD,eAFD,MAEO;AACLtG,gBAAAA,GAAG,CAACuG,IAAJ,8BAA+BR,MAA/B;AACAF,gBAAAA,UAAU,IAAInE,kBAAd;AACD;;AACDkE,cAAAA,OAAO,CAACY,IAAR,CAAaX,UAAb;AACAP,cAAAA,eAAe,CAACkB,IAAhB,CAAqBP,KAArB;AACD,aApBD;AAqBD;AApCsB;;AAOzB,6BAAqBV,QAArB,8HAA+B;AAAA;AA8B9B;AArCwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuCzB,WAAKZ,QAAL,CAAc;AAACU,QAAAA,IAAI,EAAEC;AAAP,OAAd;AACD;;;oCAGeW,K,EAAO;AACrB,aAAOA,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACb,KAApB,CAAP;AACD;;;kCAEaa,K,EAAO;AACnB,aAAOA,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACL,OAAN,CAAcO,MAAd,GAAuB,CAArC,CAAP;AACD;;;iCAEYM,Q,EAAU;AACrB,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,eAAO,UAAA7D,CAAC;AAAA,iBAAI6D,QAAQ,CAAC7D,CAAC,CAACuC,MAAH,CAAZ;AAAA,SAAR;AACD;;AACD,aAAOsB,QAAP;AACD;;;6CAEwBtD,a,EAAe;AACtC,aAAO,UAAAP,CAAC,EAAI;AACV,YAAM8D,UAAU,GACd,OAAOvD,aAAP,KAAyB,UAAzB,GAAsCA,aAAa,CAACP,CAAC,CAACuC,MAAH,CAAnD,GAAgEhC,aADlE;;AAEA,YAAI,CAAClC,WAAW,CAAC0F,cAAZ,CAA2BD,UAA3B,CAAL,EAA6C;AAC3C,gBAAM,IAAIE,KAAJ,0CAA4CF,UAA5C,EAAN;AACD;;AACD,eAAOzF,WAAW,CAACyF,UAAD,CAAlB;AACD,OAPD;AAQD;;;oDAE+BtD,oB,EAAsB;AACpD,aAAO,UAAAR,CAAC,EAAI;AACV,YAAMiE,iBAAiB,GACrB,OAAOzD,oBAAP,KAAgC,UAAhC,GACIA,oBAAoB,CAACR,CAAC,CAACuC,MAAH,CADxB,GAEI/B,oBAHN;;AAIA,YAAI,CAAC/B,kBAAkB,CAACsF,cAAnB,CAAkCE,iBAAlC,CAAL,EAA2D;AACzD,gBAAM,IAAID,KAAJ,iDAAmDC,iBAAnD,EAAN;AACD;;AACD,eAAOxF,kBAAkB,CAACwF,iBAAD,CAAzB;AACD,OATD;AAUD;;;mCAEc;AAAA;;AAAA,wBACiC,KAAKtD,KADtC;AAAA,UACN8B,IADM,eACNA,IADM;AAAA,UACAb,KADA,eACAA,KADA;AAAA,UACOI,SADP,eACOA,SADP;AAAA,UACkBC,WADlB,eACkBA,WADlB;AAAA,yBAoBT,KAAKlB,KApBI;AAAA,UAIXb,YAJW,gBAIXA,WAJW;AAAA,UAKXE,QALW,gBAKXA,QALW;AAAA,UAMXC,OANW,gBAMXA,OANW;AAAA,UAOXC,QAPW,gBAOXA,QAPW;AAAA,UAQXC,aARW,gBAQXA,aARW;AAAA,UASXC,oBATW,gBASXA,oBATW;AAAA,UAUXC,cAVW,gBAUXA,cAVW;AAAA,UAWXxB,IAXW,gBAWXA,IAXW;AAAA,UAYXC,SAZW,gBAYXA,SAZW;AAAA,UAaXhB,GAbW,gBAaXA,GAbW;AAAA,UAcXiB,SAdW,gBAcXA,SAdW;AAAA,UAeXC,SAfW,gBAeXA,SAfW;AAAA,UAgBXC,aAhBW,gBAgBXA,aAhBW;AAAA,UAiBXC,aAjBW,gBAiBXA,aAjBW;AAAA,UAkBX4E,WAlBW,gBAkBXA,WAlBW;AAAA,UAmBXC,cAnBW,gBAmBXA,cAnBW;AAsBb,UAAMC,aAAa,GAAG,KAAKC,gBAAL,CAAsB,YAAtB,EAAoC/G,cAApC,CAAtB;AAEA,aAAO,IAAI8G,aAAJ,CACL;AACElG,QAAAA,GAAG,EAAHA,GADF;AAEE8D,QAAAA,SAAS,EAATA,SAFF;AAGEC,QAAAA,WAAW,EAAXA,WAHF;AAKE/B,QAAAA,WAAW,EAAE,qBAAAoE,CAAC;AAAA,iBAAIpE,YAAW,CAACoE,CAAC,CAAC/B,MAAH,CAAf;AAAA,SALhB;AAMEnC,QAAAA,QAAQ,EAAE,KAAKmE,YAAL,CAAkBnE,QAAlB,CANZ;AAOEC,QAAAA,OAAO,EAAE,KAAKkE,YAAL,CAAkBlE,OAAlB,CAPX;AAQEC,QAAAA,QAAQ,EAAE,KAAKiE,YAAL,CAAkBjE,QAAlB,CARZ;AASEkE,QAAAA,UAAU,EAAE,KAAKC,wBAAL,CAA8BlE,aAA9B,CATd;AAUEmE,QAAAA,UAAU,EAAE,KAAKC,+BAAL,CAAqCnE,oBAArC,CAVd;AAWEC,QAAAA,cAAc,EAAE,KAAK8D,YAAL,CAAkB9D,cAAlB,CAXlB;AAYExB,QAAAA,IAAI,EAAJA,IAZF;AAaEC,QAAAA,SAAS,EAATA,SAbF;AAcEC,QAAAA,SAAS,EAAEA,SAAS,GAAGyC,KAdzB;AAeExC,QAAAA,SAAS,EAATA,SAfF;AAgBEC,QAAAA,aAAa,EAAEA,aAAa,GAAGuC,KAhBjC;AAiBEtC,QAAAA,aAAa,EAAEA,aAAa,GAAGsC,KAjBjC;AAmBEsC,QAAAA,WAAW,EAAEA,WAAW,IAAI;AAC1BhE,UAAAA,WAAW,EAAEgE,WAAW,CAAChE,WADC;AAE1BI,UAAAA,QAAQ,EAAE4D,WAAW,CAAC5D,QAFI;AAG1BF,UAAAA,QAAQ,EAAE8D,WAAW,CAAC9D,QAHI;AAI1BC,UAAAA,OAAO,EAAE6D,WAAW,CAAC7D,OAJK;AAK1BI,UAAAA,cAAc,EAAE0D,cAAc,CAAC1D;AALL;AAnB9B,OADK,EA4BL,KAAKmE,gBAAL,CAAsB;AACpBC,QAAAA,EAAE,EAAE,YADgB;AAEpBV,QAAAA,cAAc,EAAE;AACdjE,UAAAA,WAAW,EAAEiE,cAAc,CAACjE,WADd;AAEdI,UAAAA,QAAQ,EAAE6D,cAAc,CAAC7D,QAFX;AAGdF,UAAAA,QAAQ,EAAE+D,cAAc,CAAC/D,QAHX;AAIdC,UAAAA,OAAO,EAAE8D,cAAc,CAAC9D,OAJV;AAKdI,UAAAA,cAAc,EAAE0D,cAAc,CAAC1D,cALjB;AAMd+D,UAAAA,UAAU,EAAEL,cAAc,CAAC5D,aANb;AAOdmE,UAAAA,UAAU,EAAEP,cAAc,CAAC3D;AAPb;AAFI,OAAtB,CA5BK,EAwCL;AACEiC,QAAAA,IAAI,EAAJA,IADF;AAGEqC,QAAAA,OAAO,EAAE,iBAAAR,CAAC;AAAA,iBAAIA,CAAC,CAACrE,IAAN;AAAA,SAHZ;AAIE8E,QAAAA,eAAe,EAAE,yBAAAT,CAAC;AAAA,iBAAI,KAAI,CAACU,eAAL,CAAqBV,CAArB,CAAJ;AAAA,SAJpB;AAKEW,QAAAA,gBAAgB,EAAE,0BAAAX,CAAC;AAAA,iBAAI,KAAI,CAACY,aAAL,CAAmBZ,CAAnB,CAAJ;AAAA;AALrB,OAxCK,CAAP;AAgDD;;;;EA5OoCnH,c;;SAAlBuD,S;AA+OrBA,SAAS,CAACyE,SAAV,GAAsB,WAAtB;AACAzE,SAAS,CAAC1B,YAAV,GAAyBA,YAAzB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  fp64: false,\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  fontSettings: {},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      fontAtlasManager: new FontAtlasManager(this.context.gl)\n    };\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n    if (fontChanged) {\n      this.updateFontAtlas({oldProps, props});\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    // Release resources held by the font atlas manager\n    this.state.fontAtlasManager.finalize();\n  }\n\n  updateFontAtlas({oldProps, props}) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const fontAtlasManager = this.state.fontAtlasManager;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    const {scale, texture, mapping} = fontAtlasManager;\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n\n    this.setNeedsRedraw(true);\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n\n    const transformedData = [];\n\n    const {iterable, objectInfo} = createIterable(data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const text = getText(object, objectInfo);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {\n            text: letter,\n            index: i,\n            offsets,\n            len: text.length,\n            // reference of original object and object index\n            object,\n            objectIndex: objectInfo.index\n          };\n\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n    }\n\n    this.setState({data: transformedData});\n  }\n  /* eslint-enable no-loop-func */\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  _getAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      return x => accessor(x.object);\n    }\n    return accessor;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    return x => {\n      const textAnchor =\n        typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;\n      if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n        throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n      }\n      return TEXT_ANCHOR[textAnchor];\n    };\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    return x => {\n      const alignmentBaseline =\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(x.object)\n          : getAlignmentBaseline;\n      if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n        throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n      }\n      return ALIGNMENT_BASELINE[alignmentBaseline];\n    };\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      billboard,\n      sdf,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n\n        getPosition: d => getPosition(d.object),\n        getColor: this._getAccessor(getColor),\n        getSize: this._getAccessor(getSize),\n        getAngle: this._getAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this._getAccessor(getPixelOffset),\n        fp64,\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n\n        getIcon: d => d.text,\n        getShiftInQueue: d => this.getLetterOffset(d),\n        getLengthOfQueue: d => this.getTextLength(d)\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}