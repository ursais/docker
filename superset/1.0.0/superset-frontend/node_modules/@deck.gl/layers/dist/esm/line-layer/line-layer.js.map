{"version":3,"sources":["../../../src/line-layer/line-layer.js"],"names":["Layer","createIterable","Model","Geometry","fp64","fp64LowPart","vs","fs","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getColor","getWidth","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","getStrokeWidth","deprecatedFor","LineLayer","projectModule","use64bitProjection","modules","attributeManager","getAttributeManager","addInstanced","instanceSourcePositions","size","transition","accessor","instanceTargetPositions","instanceSourceTargetPositions64xyLow","update","calculateInstanceSourceTargetPositions64xyLow","instanceColors","defaultValue","instanceWidths","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","draw","positions","getShaders","id","geometry","drawMode","attributes","Float32Array","isInstanced","shaderCache","attribute","startRow","endRow","isFP64","use64bitPositions","constant","data","i","iterable","objectInfo","object","index","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, fp64} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\n\nimport vs from './line-layer-vertex.glsl';\nimport fs from './line-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0},\n\n  // Deprecated, remove in v8\n  getStrokeWidth: {deprecatedFor: 'getWidth'}\n};\n\nexport default class LineLayer extends Layer {\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceTargetPositions64xyLow: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstanceSourceTargetPositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels} = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          widthScale: widthScale * widthMultiplier,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstanceSourceTargetPositions64xyLow(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = fp64LowPart(sourcePosition[0]);\n      value[i++] = fp64LowPart(sourcePosition[1]);\n      value[i++] = fp64LowPart(targetPosition[0]);\n      value[i++] = fp64LowPart(targetPosition[1]);\n    }\n  }\n}\n\nLineLayer.layerName = 'LineLayer';\nLineLayer.defaultProps = defaultProps;\n"],"file":"line-layer.js"}