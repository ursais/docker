{"version":3,"sources":["../../../../src/text-layer/multi-icon-layer/multi-icon-layer.js"],"names":["DEFAULT_GAMMA","DEFAULT_BUFFER","defaultProps","getShiftInQueue","type","value","x","shift","getLengthOfQueue","len","getAnchorX","anchorX","getAnchorY","anchorY","getPixelOffset","getPickingIndex","objectIndex","MultiIconLayer","Object","assign","vs","fs","attributeManager","getAttributeManager","addInstanced","instancePixelOffset","size","transition","accessor","updateParams","changeFlags","updateTriggersChanged","invalidate","uniforms","sdf","props","buffer","gamma","Boolean","attribute","startRow","endRow","data","iconMapping","getIcon","i","iterable","object","icon","rect","shiftX","width","height","pickingColor","point","index","encodePickingColor","IconLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createIterable} from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport vs from './multi-icon-layer-vertex.glsl';\nimport fs from './multi-icon-layer-fragment.glsl';\n\n// TODO expose as layer properties\nconst DEFAULT_GAMMA = 0.2;\nconst DEFAULT_BUFFER = 192.0 / 256;\n\nconst defaultProps = {\n  getShiftInQueue: {type: 'accessor', value: x => x.shift || 0},\n  getLengthOfQueue: {type: 'accessor', value: x => x.len || 1},\n  // 1: left, 0: middle, -1: right\n  getAnchorX: {type: 'accessor', value: x => x.anchorX || 0},\n  // 1: top, 0: center, -1: bottom\n  getAnchorY: {type: 'accessor', value: x => x.anchorY || 0},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  // object with the same pickingIndex will be picked when any one of them is being picked\n  getPickingIndex: {type: 'accessor', value: x => x.objectIndex}\n};\n\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      vs,\n      fs\n    });\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    const {changeFlags} = updateParams;\n\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)\n    ) {\n      this.getAttributeManager().invalidate('instanceOffsets');\n    }\n  }\n\n  draw({uniforms}) {\n    const {sdf} = this.props;\n    super.draw({\n      uniforms: Object.assign({}, uniforms, {\n        // Refer the following doc about gamma and buffer\n        // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n        buffer: DEFAULT_BUFFER,\n        gamma: DEFAULT_GAMMA,\n        sdf: Boolean(sdf)\n      })\n    });\n  }\n\n  calculateInstanceOffsets(attribute, {startRow, endRow}) {\n    const {\n      data,\n      iconMapping,\n      getIcon,\n      getAnchorX,\n      getAnchorY,\n      getLengthOfQueue,\n      getShiftInQueue\n    } = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      const icon = getIcon(object);\n      const rect = iconMapping[icon] || {};\n      const len = getLengthOfQueue(object);\n      const shiftX = getShiftInQueue(object);\n\n      value[i++] = ((getAnchorX(object) - 1) * len) / 2 + rect.width / 2 + shiftX || 0;\n      value[i++] = (rect.height / 2) * getAnchorY(object) || 0;\n    }\n  }\n\n  calculateInstancePickingColors(attribute, {startRow, endRow}) {\n    const {data, getPickingIndex} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const pickingColor = [];\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const point of iterable) {\n      const index = getPickingIndex(point);\n      this.encodePickingColor(index, pickingColor);\n\n      value[i++] = pickingColor[0];\n      value[i++] = pickingColor[1];\n      value[i++] = pickingColor[2];\n    }\n  }\n}\n\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n"],"file":"multi-icon-layer.js"}