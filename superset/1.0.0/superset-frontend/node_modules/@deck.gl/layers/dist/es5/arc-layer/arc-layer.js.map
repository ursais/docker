{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","getStrokeWidth","deprecatedFor","ArcLayer","use64bitProjection","vs","vs64","fs","modules","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instancePositions64Low","calculateInstancePositions64Low","instanceSourceColors","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","draw","positions","NUM_SEGMENTS","i","concat","Model","getShaders","id","geometry","Geometry","drawMode","attributes","Float32Array","isInstanced","shaderCache","numSegments","attribute","startRow","endRow","data","iterable","objectInfo","object","index","isFP64","use64bitPositions","constant","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable} from '@deck.gl/core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, fp64} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\n\nimport vs from './arc-layer-vertex.glsl';\nimport vs64 from './arc-layer-vertex-64.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0},\n\n  // Deprecated, remove in v8\n  getStrokeWidth: {deprecatedFor: 'getWidth'}\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instancePositions64Low: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions64Low\n      },\n      instanceSourceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels} = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          widthScale: widthScale * widthMultiplier,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute, {startRow, endRow}) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      value[i++] = sourcePosition[0];\n      value[i++] = sourcePosition[1];\n      // Call `getTargetPosition` after `sourcePosition` is used in case both accessors write into\n      // the same temp array\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = targetPosition[0];\n      value[i++] = targetPosition[1];\n    }\n  }\n\n  calculateInstancePositions64Low(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      value[i++] = fp64LowPart(sourcePosition[0]);\n      value[i++] = fp64LowPart(sourcePosition[1]);\n      // Call `getTargetPosition` after `sourcePosition` is used in case both accessors write into\n      // the same temp array\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = fp64LowPart(targetPosition[0]);\n      value[i++] = fp64LowPart(targetPosition[1]);\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}