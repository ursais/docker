{"version":3,"sources":["../../../src/point-cloud-layer/point-cloud-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","DEFAULT_NORMAL","defaultMaterial","PhongMaterial","defaultProps","sizeUnits","pointSize","type","min","value","getPosition","x","position","getNormal","getColor","material","radiusPixels","deprecatedFor","PointCloudLayer","id","projectModule","use64bitProjection","vs","fs","modules","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceNormals","defaultValue","instanceColors","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","uniforms","viewport","sizeMultiplier","distanceScales","pixelsPerMeter","setUniforms","Object","assign","draw","positions","i","angle","Math","PI","push","cos","sin","Model","getShaders","geometry","Geometry","drawMode","attributes","Float32Array","isInstanced","shaderCache","attribute","startRow","endRow","isFP64","use64bitPositions","constant","data","iterable","objectInfo","object","index","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, fp64, PhongMaterial} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\n\nimport vs from './point-cloud-layer-vertex.glsl';\nimport fs from './point-cloud-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_NORMAL = [0, 0, 1];\nconst defaultMaterial = new PhongMaterial();\n\nconst defaultProps = {\n  sizeUnits: 'pixels',\n  pointSize: {type: 'number', min: 0, value: 10}, //  point radius in pixels\n  fp64: false,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getNormal: {type: 'accessor', value: DEFAULT_NORMAL},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  material: defaultMaterial,\n\n  // Depreated\n  radiusPixels: {deprecatedFor: 'pointSize'}\n};\n\nexport default class PointCloudLayer extends Layer {\n  getShaders(id) {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'gouraud-lighting', 'picking']};\n  }\n\n  initializeState() {\n    /* eslint-disable max-len */\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceNormals: {\n        size: 3,\n        transition: true,\n        accessor: 'getNormal',\n        defaultValue: DEFAULT_NORMAL\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {pointSize, sizeUnits} = this.props;\n\n    const sizeMultiplier = sizeUnits === 'meters' ? viewport.distanceScales.pixelsPerMeter[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          radiusPixels: pointSize * sizeMultiplier\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    // a triangle that minimally cover the unit circle\n    const positions = [];\n    for (let i = 0; i < 3; i++) {\n      const angle = (i / 3) * Math.PI * 2;\n      positions.push(Math.cos(angle) * 2, Math.sin(angle) * 2, 0);\n    }\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstancePositions64xyLow(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const position = getPosition(object, objectInfo);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nPointCloudLayer.layerName = 'PointCloudLayer';\nPointCloudLayer.defaultProps = defaultProps;\n"],"file":"point-cloud-layer.js"}