{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["DEFAULT_COLOR","defaultProps","widthUnits","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","fp64","dashJustified","billboard","getPath","object","path","getColor","getWidth","getDashArray","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","PathLayer","use64bitProjection","vs","vs64","fs","modules","noAlloc","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","transition","accessor","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","instanceLeftPositions","calculateLeftPositions","instanceRightPositions","calculateRightPositions","instanceNeighborPositions64xyLow","calculateInstanceNeighborPositions64xyLow","instanceStrokeWidths","defaultValue","instanceDashArrays","instanceColors","instancePickingColors","index","target","encodePickingColor","setState","pathTesselator","PathTesselator","oldProps","props","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","state","updateGeometry","data","getGeometry","positionFormat","use64bitPositions","numInstances","instanceCount","bufferLayout","invalidateAll","gl","context","model","delete","_getModel","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","jointType","alignMode","draw","SEGMENT_INDICES","SEGMENT_POSITIONS","Model","getShaders","id","geometry","Geometry","drawMode","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","attribute","get","isFP64","constant","color","pickedPathIndex","decodePickingColor","numVertices","startInstanceIndex","pathIndex","endInstanceIndex","fill","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  fp64: false,\n  dashJustified: false,\n  billboard: false,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getDashArray: {type: 'accessor', value: [0, 0]}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['project32', 'picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateStartPositions,\n        noAlloc\n      },\n      instanceEndPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateEndPositions,\n        noAlloc\n      },\n      instanceStartEndPositions64xyLow: {\n        size: 4,\n        update: this.calculateInstanceStartEndPositions64xyLow,\n        noAlloc\n      },\n      instanceLeftPositions: {\n        size: 3,\n        accessor: 'getPath',\n        update: this.calculateLeftPositions,\n        noAlloc\n      },\n      instanceRightPositions: {\n        size: 3,\n        accessor: 'getPath',\n        update: this.calculateRightPositions,\n        noAlloc\n      },\n      instanceNeighborPositions64xyLow: {\n        size: 4,\n        update: this.calculateInstanceNeighborPositions64xyLow,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray'},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) => this.encodePickingColor(index, value)\n      }\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({})\n    });\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      props.fp64 !== oldProps.fp64 ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      const {pathTesselator} = this.state;\n      pathTesselator.updateGeometry({\n        data: props.data,\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        fp64: this.use64bitPositions()\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        bufferLayout: pathTesselator.bufferLayout\n      });\n      attributeManager.invalidateAll();\n    }\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      rounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          jointType: Number(rounded),\n          billboard,\n          alignMode: Number(dashJustified),\n          widthScale: widthScale * widthMultiplier,\n          miterLimit,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateStartPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('startPositions');\n  }\n\n  calculateEndPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('endPositions');\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (isFP64) {\n      attribute.value = this.state.pathTesselator.get('startEndPositions64XyLow');\n    } else {\n      attribute.value = new Float32Array(4);\n    }\n  }\n\n  calculateLeftPositions(attribute) {\n    const {pathTesselator} = this.state;\n    attribute.value = pathTesselator.get('leftPositions');\n  }\n\n  calculateRightPositions(attribute) {\n    const {pathTesselator} = this.state;\n    attribute.value = pathTesselator.get('rightPositions');\n  }\n\n  calculateInstanceNeighborPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (isFP64) {\n      attribute.value = this.state.pathTesselator.get('neighborPositions64XyLow');\n    } else {\n      attribute.value = new Float32Array(4);\n    }\n  }\n\n  clearPickingColor(color) {\n    const pickedPathIndex = this.decodePickingColor(color);\n    const {bufferLayout} = this.state.pathTesselator;\n    const numVertices = bufferLayout[pickedPathIndex];\n\n    let startInstanceIndex = 0;\n    for (let pathIndex = 0; pathIndex < pickedPathIndex; pathIndex++) {\n      startInstanceIndex += bufferLayout[pathIndex];\n    }\n\n    const {instancePickingColors} = this.getAttributeManager().attributes;\n\n    const {value} = instancePickingColors;\n    const endInstanceIndex = startInstanceIndex + numVertices;\n    value.fill(0, startInstanceIndex * 3, endInstanceIndex * 3);\n    instancePickingColors.update({value});\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}