{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.js"],"names":["Layer","createIterable","fp64","ScenegraphNode","isWebGL2","pbr","log","load","MATRIX_ATTRIBUTES","vs","fs","fp64LowPart","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","fetch","url","propName","layer","getLoadOptions","then","response","json","getScene","scenes","getAnimator","animator","sizeScale","min","getPosition","x","position","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","ScenegraphLayer","attributeManager","getAttributeManager","addInstanced","instancePositions","size","accessor","transition","instancePositions64xy","update","calculateInstancePositions64xyLow","instanceColors","defaultValue","instanceModelMatrix","attribute","startRow","endRow","isFP64","use64bitPositions","constant","Float32Array","props","data","i","iterable","objectInfo","point","index","params","oldProps","_deleteScenegraph","_applyAllAttributes","_applyAnimationsProp","_animations","setState","warn","state","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","Object","keys","forEach","key","animation","assign","Number","isFinite","number","length","findResult","find","name","delete","source","context","gl","modules","push","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","addVersionToShader","isInstanced","useTangents","changedAttributes","getChangedAttributes","clearChangedFlags","moduleParameters","parameters","animate","animationProps","time","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","draw","uniforms","sceneModelMatrix","u_Camera","program","project_uCameraPosition","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global fetch */\nimport {Layer, createIterable} from '@deck.gl/core';\nimport {fp64, ScenegraphNode, isWebGL2, pbr, log} from '@luma.gl/core';\nimport {load} from '@loaders.gl/core';\n\nimport {MATRIX_ATTRIBUTES} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nconst {fp64LowPart} = fp64;\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\n\nconst defaultProps = {\n  scenegraph: {type: 'object', value: null, async: true},\n\n  fetch: (url, {propName, layer}) => {\n    if (propName === 'scenegraph') {\n      return load(url, layer.getLoadOptions());\n    }\n\n    return fetch(url).then(response => response.json());\n  },\n\n  getScene: scenegraph => (scenegraph && scenegraph.scenes ? scenegraph.scenes[0] : scenegraph),\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []}\n};\n\nexport default class ScenegraphLayer extends Layer {\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        accessor: 'getPosition',\n        transition: true\n      },\n      instancePositions64xy: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  calculateInstancePositions64xyLow(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const point of iterable) {\n      objectInfo.index++;\n      const position = getPosition(point, objectInfo);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      const scenegraph = props.getScene(props.scenegraph);\n      const animator = props.getAnimator(props.scenegraph);\n\n      if (scenegraph instanceof ScenegraphNode) {\n        this._deleteScenegraph();\n        this._applyAllAttributes(scenegraph);\n        this._applyAnimationsProp(scenegraph, animator, props._animations);\n        this.setState({scenegraph, animator});\n      } else if (scenegraph !== null) {\n        log.warn('invalid scenegraph:', scenegraph)();\n      }\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState() {\n    this._deleteScenegraph();\n  }\n\n  _applyAllAttributes(scenegraph) {\n    if (this.state.attributesAvailable) {\n      const allAttributes = this.getAttributeManager().getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  _applyAnimationsProp(scenegraph, animator, animationsProp) {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    Object.keys(animationsProp).forEach(key => {\n      // Key can be:\n      //  - number for index number\n      //  - name for animation name\n      //  - * to affect all animations\n      const value = animationsProp[key];\n\n      if (key === '*') {\n        animations.forEach(animation => {\n          Object.assign(animation, value);\n        });\n      } else if (Number.isFinite(Number(key))) {\n        const number = Number(key);\n        if (number >= 0 && number < animations.length) {\n          Object.assign(animations[number], value);\n        } else {\n          log.warn(`animation ${key} not found`)();\n        }\n      } else {\n        const findResult = animations.find(({name}) => name === key);\n        if (findResult) {\n          Object.assign(findResult, value);\n        } else {\n          log.warn(`animation ${key} not found`)();\n        }\n      }\n    });\n  }\n\n  _deleteScenegraph() {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  addVersionToShader(source) {\n    if (isWebGL2(this.context.gl)) {\n      return `#version 300 es\\n${source}`;\n    }\n\n    return source;\n  }\n\n  getLoadOptions() {\n    const modules = ['project32', 'picking'];\n    const {_lighting, _imageBasedLightingEnvironment} = this.props;\n\n    if (_lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    let env = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        vs: this.addVersionToShader(vs),\n        fs: this.addVersionToShader(fs),\n        modules,\n        isInstanced: true\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(props) {\n    super.updateAttributes(props);\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    const attributeManager = this.getAttributeManager();\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.animationProps.time);\n    }\n\n    const {sizeScale} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          u_Camera: model.model.program.uniforms.project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n\nScenegraphLayer.layerName = 'ScenegraphLayer';\nScenegraphLayer.defaultProps = defaultProps;\n"],"file":"scenegraph-layer.js"}