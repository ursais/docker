{"version":3,"sources":["../../../src/utils/matrix.js"],"names":["RADIAN_PER_DEGREE","Math","PI","modelMatrix","Float32Array","valueArray","calculateTransformMatrix","targetMatrix","orientation","scale","pitch","yaw","roll","sr","sin","sp","sw","cr","cos","cp","cw","scx","scy","scz","getExtendedMat3FromMat4","mat4","subarray","MATRIX_ATTRIBUTES","size","accessor","shaderAttributes","instanceModelMatrix__LOCATION_0","stride","offset","instanceModelMatrix__LOCATION_1","instanceModelMatrix__LOCATION_2","instanceTranslation","update","attribute","startRow","endRow","props","data","getOrientation","getScale","getTranslation","getTransformMatrix","arrayMatrix","Array","isArray","constantMatrix","length","constantScale","constantOrientation","constantTranslation","hasMatrix","Boolean","constant","instanceModelMatrixData","value","matrix","set","i","iterable","objectInfo","object","index"],"mappings":"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","sourcesContent":["import {createIterable} from '@deck.gl/core';\n\n/* eslint-disable max-statements, complexity */\nconst RADIAN_PER_DEGREE = Math.PI / 180;\nconst modelMatrix = new Float32Array(16);\nconst valueArray = new Float32Array(12);\n\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n  const pitch = orientation[0] * RADIAN_PER_DEGREE;\n  const yaw = orientation[1] * RADIAN_PER_DEGREE;\n  const roll = orientation[2] * RADIAN_PER_DEGREE;\n\n  const sr = Math.sin(roll);\n  const sp = Math.sin(pitch);\n  const sw = Math.sin(yaw);\n\n  const cr = Math.cos(roll);\n  const cp = Math.cos(pitch);\n  const cw = Math.cos(yaw);\n\n  const scx = scale[0];\n  const scy = scale[1];\n  const scz = scale[2];\n\n  targetMatrix[0] = scx * cw * cp; // 0,0\n  targetMatrix[1] = scx * sw * cp; // 1,0\n  targetMatrix[2] = scx * -sp; // 2,0\n  targetMatrix[3] = scy * (-sw * cr + cw * sp * sr); // 0,1\n  targetMatrix[4] = scy * (cw * cr + sw * sp * sr); // 1,1\n  targetMatrix[5] = scy * cp * sr; // 2,1\n  targetMatrix[6] = scz * (sw * sr + cw * sp * cr); // 0,2\n  targetMatrix[7] = scz * (-cw * sr + sw * sp * cr); // 1,2\n  targetMatrix[8] = scz * cp * cr; // 2,2\n}\n\nfunction getExtendedMat3FromMat4(mat4) {\n  mat4[0] = mat4[0];\n  mat4[1] = mat4[1];\n  mat4[2] = mat4[2];\n  mat4[3] = mat4[4];\n  mat4[4] = mat4[5];\n  mat4[5] = mat4[6];\n  mat4[6] = mat4[8];\n  mat4[7] = mat4[9];\n  mat4[8] = mat4[10];\n  mat4[9] = mat4[12];\n  mat4[10] = mat4[13];\n  mat4[11] = mat4[14];\n\n  return mat4.subarray(0, 12);\n}\n\nexport const MATRIX_ATTRIBUTES = {\n  size: 12,\n  accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n  shaderAttributes: {\n    instanceModelMatrix__LOCATION_0: {\n      size: 3,\n      stride: 48,\n      offset: 0\n    },\n    instanceModelMatrix__LOCATION_1: {\n      size: 3,\n      stride: 48,\n      offset: 12\n    },\n    instanceModelMatrix__LOCATION_2: {\n      size: 3,\n      stride: 48,\n      offset: 24\n    },\n    instanceTranslation: {\n      size: 3,\n      stride: 48,\n      offset: 36\n    }\n  },\n\n  update(attribute, {startRow, endRow}) {\n    // NOTE(Tarek): \"this\" will be bound to a layer!\n    const {data, getOrientation, getScale, getTranslation, getTransformMatrix} = this.props;\n\n    const arrayMatrix = Array.isArray(getTransformMatrix);\n    const constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n    const constantScale = Array.isArray(getScale);\n    const constantOrientation = Array.isArray(getOrientation);\n    const constantTranslation = Array.isArray(getTranslation);\n\n    const hasMatrix = constantMatrix || (!arrayMatrix && Boolean(getTransformMatrix(data[0])));\n\n    if (hasMatrix) {\n      attribute.constant = constantMatrix;\n    } else {\n      attribute.constant = constantOrientation && constantScale && constantTranslation;\n    }\n\n    const instanceModelMatrixData = attribute.value;\n\n    if (attribute.constant) {\n      let matrix;\n\n      if (hasMatrix) {\n        modelMatrix.set(getTransformMatrix);\n        matrix = getExtendedMat3FromMat4(modelMatrix);\n      } else {\n        matrix = valueArray;\n\n        const orientation = getOrientation;\n        const scale = getScale;\n\n        calculateTransformMatrix(matrix, orientation, scale);\n        matrix.set(getTranslation, 9);\n      }\n\n      attribute.value = new Float32Array(matrix);\n    } else {\n      let i = startRow * attribute.size;\n      const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n      for (const object of iterable) {\n        objectInfo.index++;\n        let matrix;\n\n        if (hasMatrix) {\n          modelMatrix.set(\n            constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo)\n          );\n          matrix = getExtendedMat3FromMat4(modelMatrix);\n        } else {\n          matrix = valueArray;\n\n          const orientation = constantOrientation\n            ? getOrientation\n            : getOrientation(object, objectInfo);\n          const scale = constantScale ? getScale : getScale(object, objectInfo);\n\n          calculateTransformMatrix(matrix, orientation, scale);\n          matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n        }\n\n        instanceModelMatrixData[i++] = matrix[0];\n        instanceModelMatrixData[i++] = matrix[1];\n        instanceModelMatrixData[i++] = matrix[2];\n        instanceModelMatrixData[i++] = matrix[3];\n        instanceModelMatrixData[i++] = matrix[4];\n        instanceModelMatrixData[i++] = matrix[5];\n        instanceModelMatrixData[i++] = matrix[6];\n        instanceModelMatrixData[i++] = matrix[7];\n        instanceModelMatrixData[i++] = matrix[8];\n        instanceModelMatrixData[i++] = matrix[9];\n        instanceModelMatrixData[i++] = matrix[10];\n        instanceModelMatrixData[i++] = matrix[11];\n      }\n    }\n  }\n};\n"],"file":"matrix.js"}