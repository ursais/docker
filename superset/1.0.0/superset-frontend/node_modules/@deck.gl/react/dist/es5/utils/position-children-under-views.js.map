{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["positionChildrenUnderViews","children","viewports","deck","ContextProvider","viewManager","views","length","defaultViewId","id","map","child","i","props","viewportId","log","removed","viewId","viewChildren","type","View","childStyle","style","viewport","getViewport","viewState","getViewState","x","y","width","height","position","zIndex","pointerEvents","left","top","key","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","_onViewStateChange","value"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport {View, log} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const defaultViewId = viewManager.views[0].id;\n\n  return children.map((child, i) => {\n    if (child.props.viewportId) {\n      log.removed('viewportId', '<View>')();\n    }\n    if (child.props.viewId) {\n      log.removed('viewId', '<View>')();\n    }\n\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n    const childStyle = viewChildren && viewChildren.props && viewChildren.props.style;\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (!viewport) {\n      return null;\n    }\n\n    // Resolve potentially relative dimensions using the deck.gl container size\n    const {x, y, width, height} = viewport;\n\n    viewChildren = evaluateChildren(viewChildren, {\n      x,\n      y,\n      width,\n      height,\n      viewport,\n      viewState\n    });\n\n    const style = {\n      position: 'absolute',\n      // Use child's z-index for ordering\n      zIndex: childStyle && childStyle.zIndex,\n      // If this container is on top, it will block interaction with the deck canvas\n      pointerEvents: 'none',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n    const key = `view-child-${viewId}-${i}`;\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: deck._onViewStateChange\n      };\n      viewChildren = createElement(ContextProvider, {value: contextValue}, viewChildren);\n    }\n\n    return createElement('div', {key, id: key, style}, viewChildren);\n  });\n}\n"],"file":"position-children-under-views.js"}