{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["createElement","View","log","inheritsFrom","evaluateChildren","positionChildrenUnderViews","children","viewports","deck","ContextProvider","viewManager","views","length","defaultViewId","id","map","child","i","props","viewportId","removed","viewId","viewChildren","type","childStyle","style","viewport","getViewport","viewState","getViewState","x","y","width","height","position","zIndex","pointerEvents","left","top","key","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","_onViewStateChange","value"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport {View, log} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const defaultViewId = viewManager.views[0].id;\n\n  return children.map((child, i) => {\n    if (child.props.viewportId) {\n      log.removed('viewportId', '<View>')();\n    }\n    if (child.props.viewId) {\n      log.removed('viewId', '<View>')();\n    }\n\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n    const childStyle = viewChildren && viewChildren.props && viewChildren.props.style;\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (!viewport) {\n      return null;\n    }\n\n    // Resolve potentially relative dimensions using the deck.gl container size\n    const {x, y, width, height} = viewport;\n\n    viewChildren = evaluateChildren(viewChildren, {\n      x,\n      y,\n      width,\n      height,\n      viewport,\n      viewState\n    });\n\n    const style = {\n      position: 'absolute',\n      // Use child's z-index for ordering\n      zIndex: childStyle && childStyle.zIndex,\n      // If this container is on top, it will block interaction with the deck canvas\n      pointerEvents: 'none',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n    const key = `view-child-${viewId}-${i}`;\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: deck._onViewStateChange\n      };\n      viewChildren = createElement(ContextProvider, {value: contextValue}, viewChildren);\n    }\n\n    return createElement('div', {key, id: key, style}, viewChildren);\n  });\n}\n"],"file":"position-children-under-views.js"}