{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["defaultProps","renderSubLayers","type","value","props","GeoJsonLayer","getTileData","x","y","z","Promise","resolve","onViewportLoaded","onTileError","err","console","error","maxZoom","minZoom","maxCacheSize","TileLayer","state","tiles","tileCache","TileCache","isLoaded","changeFlags","somethingChanged","oldProps","context","updateTriggersChanged","all","finalize","setState","maxSize","viewportChanged","viewport","getLayerZoomLevel","id","update","currTiles","filter","tile","allCurrTilesLoaded","every","map","data","then","_data","info","sourceLayer","Math","floor","zoom","parseInt","visible","Object","assign","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport TileCache from './utils/tile-cache';\n\nconst defaultProps = {\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props)},\n  getTileData: {type: 'function', value: ({x, y, z}) => Promise.resolve(null)},\n  onViewportLoaded: {type: 'function', value: () => {}},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err)},\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    const {maxZoom, minZoom, getTileData, onTileError} = this.props;\n    this.state = {\n      tiles: [],\n      tileCache: new TileCache({getTileData, maxZoom, minZoom, onTileError}),\n      isLoaded: false\n    };\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    const {onViewportLoaded, onTileError} = props;\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData)\n    ) {\n      const {getTileData, maxZoom, minZoom, maxCacheSize} = props;\n      this.state.tileCache.finalize();\n      this.setState({\n        tileCache: new TileCache({\n          getTileData,\n          maxSize: maxCacheSize,\n          maxZoom,\n          minZoom,\n          onTileError\n        })\n      });\n    }\n    if (changeFlags.viewportChanged) {\n      const {viewport} = context;\n      const z = this.getLayerZoomLevel();\n      if (viewport.id !== 'DEFAULT-INITIAL-VIEWPORT') {\n        this.state.tileCache.update(viewport, tiles => {\n          const currTiles = tiles.filter(tile => tile.z === z);\n          const allCurrTilesLoaded = currTiles.every(tile => tile.isLoaded);\n          this.setState({tiles, isLoaded: allCurrTilesLoaded});\n          if (!allCurrTilesLoaded) {\n            Promise.all(currTiles.map(tile => tile.data)).then(() => {\n              this.setState({isLoaded: true});\n              onViewportLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n            });\n          } else {\n            onViewportLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n          }\n        });\n      }\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  getLayerZoomLevel() {\n    const z = Math.floor(this.context.viewport.zoom);\n    const {maxZoom, minZoom} = this.props;\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom && z > maxZoom) {\n      return maxZoom;\n    } else if (minZoom && parseInt(minZoom, 10) === minZoom && z < minZoom) {\n      return minZoom;\n    }\n    return z;\n  }\n\n  renderLayers() {\n    const {renderSubLayers, visible} = this.props;\n    const z = this.getLayerZoomLevel();\n    return this.state.tiles.map(tile => {\n      return renderSubLayers(\n        Object.assign({}, this.props, {\n          id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n          data: tile.data,\n          visible: visible && (!this.state.isLoaded || tile.z === z),\n          tile\n        })\n      );\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}