{"version":3,"sources":["../../../src/lib/vector.js"],"names":["MathArray","checkNumber","assert","x","m","Error","Vector","Math","sqrt","lengthSquared","length","i","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","vectors","vector","scale","Array","isArray","multiply","distance","value","a","b","copy","add","subtract","constructor","multiplyScalar"],"mappings":"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","sourcesContent":["import MathArray from './math-array';\nimport {checkNumber} from './common';\n// import assert from 'assert';\nconst assert = (x, m) => {\n  if (!x) {\n    throw new Error(m);\n  }\n};\n\nexport default class Vector extends MathArray {\n  // ACCESSORS\n\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n\n  // NOTE: `length` is a reserved word for Arrays, so we can't use `v.length()`\n  // Offer `len` and `magnitude`\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  lengthSquared() {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize() {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  // negate() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = -this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  // inverse() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = 1 / this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  scaleAndAdd(vector, scale) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = this[i] * scale + vector[i];\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n"],"file":"vector.js"}