{"version":3,"sources":["../../../src/lib/matrix.js"],"names":["MathArray","checkNumber","config","Matrix","string","printRowMajor","row","RANK","col","i","ELEMENTS","j","columnMajor","value","columnIndex","result","Vector","firstIndex","columnVector"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,MAAR,QAAqB,UAArB;;IAEqBC,M;;;;;;;;;;;+BACR;AACV,UAAIC,MAAM,GAAE,GAAZ;;AACE,UAAIF,MAAM,CAACG,aAAX,EAA0B;AAC3BD,QAAAA,MAAM,IAAI,YAAV;;AACG,aAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKC,IAA7B,EAAmC,EAAED,GAArC,EAA0C;AAC3C,eAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKD,IAA7B,EAAmC,EAAEC,GAArC,EAA0C;AACrCJ,YAAAA,MAAM,eAAQ,KAAKE,GAAG,GAAG,KAAKC,IAAX,GAAkBC,GAAvB,CAAR,CAAN;AACF;AACD;AACF,OAPD,MAOO;AACLJ,QAAAA,MAAM,IAAI,YAAV;;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmC,EAAED,CAArC,EAAwC;AACtCL,UAAAA,MAAM,eAAQ,KAAKK,CAAL,CAAR,CAAN;AACD;AACF;;AACD,aAAOL,MAAP;AACF;;;+BAGUK,C,EAAGE,C,EAAwB;AAAA,UAArBC,WAAqB,uEAAP,KAAO;AACpC,aAAOA,WAAW,GAAG,KAAKH,CAAC,GAAG,CAAJ,GAAQE,CAAb,CAAH,GAAqB,KAAKA,CAAC,GAAG,CAAJ,GAAQF,CAAb,CAAvC;AACD;;;+BAGUA,C,EAAGE,C,EAAGE,K,EAA4B;AAAA,UAArBD,WAAqB,uEAAP,KAAO;;AAC3C,UAAIA,WAAJ,EAAiB;AACf,aAAKH,CAAC,GAAG,KAAKF,IAAT,GAAgBI,CAArB,IAA0BV,WAAW,CAACY,KAAD,CAArC;AACD,OAFD,MAEO;AACL,aAAKF,CAAC,GAAG,KAAKJ,IAAT,GAAgBE,CAArB,IAA0BR,WAAW,CAACY,KAAD,CAArC;AACD;;AACD,aAAO,IAAP;AACD;;;8BAESC,W,EAAyC;AAAA,UAA5BC,MAA4B,uEAAnB,IAAI,KAAKC,MAAT,EAAmB;AACjD,UAAMC,UAAU,GAAGH,WAAW,GAAG,KAAKP,IAAtC;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,IAAzB,EAA+B,EAAEE,CAAjC,EAAoC;AAClCM,QAAAA,MAAM,CAACN,CAAD,CAAN,GAAY,KAAKQ,UAAU,GAAGR,CAAlB,CAAZ;AACD;;AACD,aAAOM,MAAP;AACD;;;8BAESD,W,EAAaI,Y,EAAc;AACnC,UAAMD,UAAU,GAAGH,WAAW,GAAG,KAAKP,IAAtC;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,IAAzB,EAA+B,EAAEE,CAAjC,EAAoC;AAClC,aAAKQ,UAAU,GAAGR,CAAlB,IAAuBS,YAAY,CAACT,CAAD,CAAnC;AACD;;AACD,aAAO,IAAP;AACD;;;;EAhDiCT,S;;SAAfG,M","sourcesContent":["import MathArray from './math-array';\nimport {checkNumber} from './common';\nimport {config} from './common';\n\nexport default class Matrix extends MathArray {\n  toString() {\n  \tlet string ='[';\n     if (config.printRowMajor) {\n\t   string += 'row-major:'\n       for (let row = 0; row < this.RANK; ++row) {\n\t     for (let col = 0; col < this.RANK; ++col) {\n       \t   string += ` ${this[row * this.RANK + col]}`;\n       \t}\n       }\n     } else {\n       string += 'col-major:'\n       for (let i = 0; i < this.ELEMENTS; ++i) {\n         string += ` ${this[i]}`;\n       }\n     }\n     return string;\n  }\n\n  // By default assumes row major indices\n  getElement(i, j, columnMajor = false) {\n    return columnMajor ? this[i * 3 + j] : this[j * 3 + i];\n  }\n\n  // By default assumes row major indices\n  setElement(i, j, value, columnMajor = false) {\n    if (columnMajor) {\n      this[i * this.RANK + j] = checkNumber(value);\n    } else {\n      this[j * this.RANK + i] = checkNumber(value);\n    }\n    return this;\n  }\n\n  getColumn(columnIndex, result = new this.Vector()) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n"],"file":"matrix.js"}