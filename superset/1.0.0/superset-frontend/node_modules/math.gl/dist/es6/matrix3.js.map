{"version":3,"sources":["../../src/matrix3.js"],"names":["MathArray","validateVector","checkNumber","Vector2","Vector3","mat3","vec2","vec3","IDENTITY","validateMatrix3","m","length","Number","isFinite","Matrix3","constructor","args","Array","isArray","arguments","copy","identity","ELEMENTS","setRowMajor","m00","m01","m02","m10","m11","m12","m20","m21","m22","check","setColumnMajor","array","set","getElement","i","j","columnMajor","setElement","value","determinant","fromQuaternion","q","fromQuat","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotate","radians","scale","factor","translate","vec","transformVector2","vector","out","transformMat3","transformVector3","transformVector","Error"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {validateVector} from './lib/validators';\nimport {checkNumber} from './lib/common';\nimport Vector2 from './vector2';\nimport Vector3 from './vector3';\n\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n// eslint-disable-next-line complexity\nexport function validateMatrix3(m) {\n  return (\n    m.length === 9 &&\n    Number.isFinite(m[0]) &&\n    Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) &&\n    Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) &&\n    Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) &&\n    Number.isFinite(m[7]) &&\n    Number.isFinite(m[8])\n  );\n}\n\nexport default class Matrix3 extends MathArray {\n  constructor(...args) {\n    super(9);\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  /* eslint-disable max-params */\n  // accepts row major order, stores as column major\n  setRowMajor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  setColumnMajor(m00 = 1, m10 = 0, m20 = 0, m01 = 0, m11 = 1, m21 = 0, m02 = 0, m12 = 0, m22 = 1) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  copy(array) {\n    return this.setColumnMajor(...array);\n  }\n\n  set(...args) {\n    return this.setColumnMajor(...args);\n  }\n\n  // By default assumes row major indices\n  getElement(i, j, columnMajor = false) {\n    return columnMajor ? this[i * 3 + j] : this[j * 3 + i];\n  }\n\n  // By default assumes row major indices\n  setElement(i, j, value, columnMajor = false) {\n    if (columnMajor) {\n      this[i * 3 + j] = checkNumber(value);\n    } else {\n      this[j * 3 + i] = checkNumber(value);\n    }\n    return this;\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    for (let i = 0; i < IDENTITY.length; ++i) {\n      this[i] = IDENTITY[i];\n    }\n    return this.check();\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  transformVector2(vector, out) {\n    out = out || new Vector2();\n    vec2.transformMat3(out, vector, this);\n    validateVector(out, 2);\n    return out;\n  }\n\n  transformVector3(vector, out) {\n    out = out || new Vector3();\n    vec3.transformMat3(out, vector, this);\n    validateVector(out, 3);\n    return out;\n  }\n\n  transformVector(vector, out) {\n    switch (vector.length) {\n      case 2:\n        return this.transformVector2(vector, out);\n      case 3:\n        return this.transformVector3(vector, out);\n      default:\n        throw new Error('Illegal vector');\n    }\n  }\n}\n"],"file":"matrix3.js"}