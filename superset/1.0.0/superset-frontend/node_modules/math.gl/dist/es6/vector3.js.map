{"version":3,"sources":["../../src/vector3.js"],"names":["Vector","checkNumber","vec3","ORIGIN","Vector3","constructor","x","y","z","Array","isArray","arguments","length","copy","set","ELEMENTS","value","angle","vector","cross","check","rotateX","radians","origin","rotateY","rotateZ","operation","args"],"mappings":"AAoBA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAAQC,WAAR,QAA0B,cAA1B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf;AAEA,eAAe,MAAMC,OAAN,SAAsBJ,MAAtB,CAA6B;AAE1CK,EAAAA,WAAW,GAAsB;AAAA,QAArBC,CAAqB,uEAAjB,CAAiB;AAAA,QAAdC,CAAc,uEAAV,CAAU;AAAA,QAAPC,CAAO,uEAAH,CAAG;AAC/B,UAAM,CAAN;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcJ,CAAd,KAAoBK,SAAS,CAACC,MAAV,KAAqB,CAA7C,EAAgD;AAC9C,WAAKC,IAAL,CAAUP,CAAV;AACD,KAFD,MAEO;AACL,WAAKQ,GAAL,CAASR,CAAT,EAAYC,CAAZ,EAAeC,CAAf;AACD;AACF;;AAID,MAAIO,QAAJ,GAAe;AACb,WAAO,CAAP;AACD;;AAID,MAAIP,CAAJ,GAAQ;AACN,WAAO,KAAK,CAAL,CAAP;AACD;;AACD,MAAIA,CAAJ,CAAMQ,KAAN,EAAa;AACX,WAAQ,KAAK,CAAL,IAAUf,WAAW,CAACe,KAAD,CAA7B;AACD;;AAGDC,EAAAA,KAAK,CAACC,MAAD,EAAS;AACZ,WAAOhB,IAAI,CAACe,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAP;AACD;;AAIDC,EAAAA,KAAK,CAACD,MAAD,EAAS;AACZhB,IAAAA,IAAI,CAACiB,KAAL,CAAW,IAAX,EAAiB,IAAjB,EAAuBD,MAAvB;AACA,WAAO,KAAKE,KAAL,EAAP;AACD;;AAEDC,EAAAA,OAAO,OAA6B;AAAA,QAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,2BAAlBC,MAAkB;AAAA,QAAlBA,MAAkB,4BAATpB,MAAS;AAClCD,IAAAA,IAAI,CAACmB,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBE,MAAzB,EAAiCD,OAAjC;AACA,WAAO,KAAKF,KAAL,EAAP;AACD;;AAEDI,EAAAA,OAAO,QAA6B;AAAA,QAA3BF,OAA2B,SAA3BA,OAA2B;AAAA,6BAAlBC,MAAkB;AAAA,QAAlBA,MAAkB,6BAATpB,MAAS;AAClCD,IAAAA,IAAI,CAACsB,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBD,MAAzB,EAAiCD,OAAjC;AACA,WAAO,KAAKF,KAAL,EAAP;AACD;;AAEDK,EAAAA,OAAO,QAA6B;AAAA,QAA3BH,OAA2B,SAA3BA,OAA2B;AAAA,6BAAlBC,MAAkB;AAAA,QAAlBA,MAAkB,6BAATpB,MAAS;AAClCD,IAAAA,IAAI,CAACuB,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBF,MAAzB,EAAiCD,OAAjC;AACA,WAAO,KAAKF,KAAL,EAAP;AACD;;AAEDM,EAAAA,SAAS,CAACA,SAAD,EAAqB;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAC5BD,IAAAA,SAAS,CAAC,IAAD,EAAO,IAAP,EAAa,GAAGC,IAAhB,CAAT;AACA,WAAO,KAAKP,KAAL,EAAP;AACD;;AAxDyC","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './lib/vector';\nimport {checkNumber} from './lib/common';\n\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst ORIGIN = [0, 0, 0];\n\nexport default class Vector3 extends Vector {\n  // Creates a new vec3, either empty, or from an array or from values\n  constructor(x = 0, y = 0, z = 0) {\n    super(3);\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z);\n    }\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  operation(operation, ...args) {\n    operation(this, this, ...args);\n    return this.check();\n  }\n}\n"],"file":"vector3.js"}