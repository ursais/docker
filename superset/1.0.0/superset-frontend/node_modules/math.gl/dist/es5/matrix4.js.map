{"version":3,"sources":["../../src/matrix4.js"],"names":["IDENTITY","validateMatrix4","m","length","Number","isFinite","Matrix4","args","Array","isArray","arguments","copy","identity","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","check","setColumnMajor","i","j","columnMajor","value","mat4","determinant","q","fromQuat","left","right","bottom","top","near","far","frustum","eye","center","up","lookAt","ortho","fovy","Math","PI","aspect","focalDistance","Error","halfY","tan","fov","perspective","transpose","invert","a","multiply","radians","rotateX","rotateY","rotateZ","rx","ry","rz","axis","rotate","factor","scale","vec","translate","vector","out","Vector2","vec2","transformMat4","Vector3","vec3","Vector4","vec4","transformVector2","transformVector3","transformVector4","_transformVector","w","Boolean","x","y","z","MathArray"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber} from './lib/common';\nimport {validateVector} from './lib/validators';\nimport Vector2 from './vector2';\nimport Vector3 from './vector3';\nimport Vector4 from './vector4';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n// eslint-disable-next-line complexity\nexport function validateMatrix4(m) {\n  return (\n    m.length === 16 &&\n    Number.isFinite(m[0]) &&\n    Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) &&\n    Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) &&\n    Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) &&\n    Number.isFinite(m[7]) &&\n    Number.isFinite(m[8]) &&\n    Number.isFinite(m[9]) &&\n    Number.isFinite(m[10]) &&\n    Number.isFinite(m[11]) &&\n    Number.isFinite(m[12]) &&\n    Number.isFinite(m[13]) &&\n    Number.isFinite(m[14]) &&\n    Number.isFinite(m[15])\n  );\n}\n\nexport default class Matrix4 extends MathArray {\n  constructor(...args) {\n    super(16);\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  /* eslint-disable max-params */\n  // accepts row major order, stores as column major\n  setRowMajor(\n    m00 = 1,\n    m01 = 0,\n    m02 = 0,\n    m03 = 0,\n    m10 = 0,\n    m11 = 1,\n    m12 = 0,\n    m13 = 0,\n    m20 = 0,\n    m21 = 0,\n    m22 = 1,\n    m23 = 0,\n    m30 = 0,\n    m31 = 0,\n    m32 = 0,\n    m33 = 1\n  ) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  setColumnMajor(\n    m00 = 1,\n    m10 = 0,\n    m20 = 0,\n    m30 = 0,\n    m01 = 0,\n    m11 = 1,\n    m21 = 0,\n    m31 = 0,\n    m02 = 0,\n    m12 = 0,\n    m22 = 1,\n    m32 = 0,\n    m03 = 0,\n    m13 = 0,\n    m23 = 0,\n    m33 = 1\n  ) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // copy(array) {\n  //   // return this.setColumnMajor(...array);\n  // }\n\n  // Sets exact values (column major)\n  set(...args) {\n    return this.setColumnMajor(...args);\n  }\n\n  // By default assumes row major indices\n  getElement(i, j, columnMajor = false) {\n    return columnMajor ? this[i][j] : this[j][i];\n  }\n\n  // By default assumes row major indices\n  setElement(i, j, value, columnMajor = false) {\n    if (columnMajor) {\n      this[i][j] = checkNumber(value);\n    } else {\n      this[j][i] = checkNumber(value);\n    }\n    return this;\n  }\n\n  /* eslint-enable max-params */\n\n  // toString() {\n  //   if (config.printRowMajor) {\n  //     mat4.str(this);\n  //   } else {\n  //     mat4.str(this);\n  //   }\n  // }\n\n  // Accessors\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    mat4.frustum(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}) {\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({\n    fovy = (45 * Math.PI) / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy,\n    fov = (45 * Math.PI) / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx)\n      .rotateY(ry)\n      .rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  transformVector2(vector, out) {\n    // out = out || [0, 0];\n    out = out || new Vector2();\n    vec2.transformMat4(out, vector, this);\n    validateVector(out, 2);\n    return out;\n  }\n\n  transformVector3(vector, out) {\n    // out = out || [0, 0, 0];\n    out = out || new Vector3();\n    vec3.transformMat4(out, vector, this);\n    validateVector(out, 3);\n    return out;\n  }\n\n  transformVector4(vector, out) {\n    // out = out || [0, 0, 0, 0];\n    out = out || new Vector4();\n    vec4.transformMat4(out, vector, this);\n    validateVector(out, 4);\n    return out.check();\n  }\n\n  // Transforms any 2, 3 or 4 element vector\n  // returns a newly minted Vector2, Vector3 or Vector4\n  transformVector(vector, out) {\n    switch (vector.length) {\n      case 2:\n        return this.transformVector2(vector, out);\n      case 3:\n        return this.transformVector3(vector, out);\n      case 4:\n        return this.transformVector4(vector, out);\n      default:\n        throw new Error('Illegal vector');\n    }\n  }\n\n  transformDirection(vector, out) {\n    return this._transformVector(vector, out, 0);\n  }\n\n  transformPoint(vector, out) {\n    return this._transformVector(vector, out, 1);\n  }\n\n  _transformVector(vector, out, w) {\n    switch (vector.length) {\n      case 2:\n        out = out || new Vector2();\n        // out = out || [0, 0];\n        vec4.transformMat4(out, [vector[0], vector[1], 0, w], this);\n        out.length = 2;\n        validateVector(out, 2);\n        break;\n      case 3:\n        out = out || new Vector3();\n        // out = out || [0, 0, 0];\n        vec4.transformMat4(out, [vector[0], vector[1], vector[2], w], this);\n        out.length = 3;\n        validateVector(out, 3);\n        break;\n      case 4:\n        if (Boolean(w) !== Boolean(vector[3])) {\n          throw new Error('math.gl: Matrix4.transformPoint - invalid vector');\n        }\n        out = out || new Vector4();\n        // out = out || [0, 0, 0, 0];\n        vec4.transformMat4(out, vector, this);\n        validateVector(out, 4);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    return out;\n  }\n\n  // three.js compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n}\n"],"file":"matrix4.js"}