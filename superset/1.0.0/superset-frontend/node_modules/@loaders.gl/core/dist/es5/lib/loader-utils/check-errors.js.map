{"version":3,"sources":["../../../../src/lib/loader-utils/check-errors.js"],"names":["checkFetchResponseStatus","response","ok","errorMessage","status","text","Error","checkFetchResponseStatusSync"],"mappings":";;;;;;;;;;;;;;SAAsBA,wB;;;;;8FAAf,iBAAwCC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACAA,QAAQ,CAACC,EADT;AAAA;AAAA;AAAA;;AAECC,YAAAA,YAFD,0BAEgCF,QAAQ,CAACG,MAFzC;AAAA;AAAA;AAAA,mBAIkBH,QAAQ,CAACI,IAAT,EAJlB;;AAAA;AAIKA,YAAAA,IAJL;AAKDF,YAAAA,YAAY,IAAIE,IAAhB;AALC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBASG,IAAIC,KAAJ,CAAUH,YAAV,CATH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,SAASI,4BAAT,CAAsCN,QAAtC,EAAgD;AACrD,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAM,IAAII,KAAJ,wBAA0BL,QAAQ,CAACG,MAAnC,EAAN;AACD;AACF","sourcesContent":["export async function checkFetchResponseStatus(response) {\n  if (!response.ok) {\n    let errorMessage = `fetch failed ${response.status} `;\n    try {\n      const text = await response.text();\n      errorMessage += text;\n    } catch (error) {\n      // ignore error\n    }\n    throw new Error(errorMessage);\n  }\n}\n\nexport function checkFetchResponseStatusSync(response) {\n  if (!response.ok) {\n    throw new Error(`fetch failed ${response.status}`);\n  }\n}\n"],"file":"check-errors.js"}