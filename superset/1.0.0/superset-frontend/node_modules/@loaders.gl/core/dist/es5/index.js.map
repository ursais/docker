{"version":3,"sources":["../../src/index.js"],"names":["TextEncoder","global","TextDecoder","createReadStream","url","options","console","warn","response","body","parseFile","parse","parseFileSync","parseSync","loadFile","load"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAOA;;AAEA;;AACA;;AACA;;AAMA;;AAKA;;AACA;;AAIA;;AACA;;AAGA;;AAUA;;AAGA;;AAEA;;AAUA;;AAGA;;AAEA;;AACA;;AACA;;AAEA;;AAQO,IAAMA,WAAW,GAAGC,gBAAOD,WAA3B;;AACA,IAAME,WAAW,GAAGD,gBAAOC,WAA3B;;;SAGeC,gB;;;;;sFAAf,iBAAgCC,GAAhC,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,OAAO,CAACC,IAAR,CAAa,oEAAb;AACAH,YAAAA,GAAG,GAAG,8BAAYA,GAAZ,CAAN;AAHK;AAAA,mBAIkB,0BAAUA,GAAV,EAAeC,OAAf,CAJlB;;AAAA;AAICG,YAAAA,QAJD;AAAA,6CAKEA,QAAQ,CAACC,IALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQA,SAASC,SAAT,GAA4B;AACjCJ,EAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,SAAOI,qCAAP;AACD;;AAEM,SAASC,aAAT,GAAgC;AACrCN,EAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,SAAOM,6CAAP;AACD;;AAEM,SAASC,QAAT,GAA2B;AAChCR,EAAAA,OAAO,CAACC,IAAR,CAAa,mCAAb;AACA,SAAOQ,mCAAP;AACD","sourcesContent":["import {parse} from './lib/parse';\nimport {parseSync} from './lib/parse-sync';\nimport {fetchFile} from './lib/fetch/fetch-file';\nimport {load} from './lib/load';\nimport {resolvePath} from './lib/fetch/file-aliases';\nimport {global} from './utils/globals';\nimport * as path from './lib/path/path';\n\n// PATH\n\nexport {path};\n\n// FILE READING AND WRITING\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/fetch/file-aliases.js';\nexport {fetchFile} from './lib/fetch/fetch-file';\nexport {readFileSync} from './lib/fetch/read-file';\nexport {writeFile, writeFileSync} from './lib/fetch/write-file';\nexport {\n  getErrorMessageFromResponseSync as _getErrorMessageFromResponseSync,\n  getErrorMessageFromResponse as _getErrorMessageFromResponse\n} from './lib/fetch/fetch-error-message';\n\n// FILE PARSING AND ENCODING\nexport {registerLoaders} from './lib/register-loaders';\n\n// LOADING (READING + PARSING)\nexport {parse} from './lib/parse';\nexport {parseSync} from './lib/parse-sync';\nexport {parseInBatches} from './lib/parse-in-batches';\nexport {parseInBatchesSync} from './lib/parse-in-batches-sync';\nexport {load, loadInBatches} from './lib/load';\n\n// ENCODING AND SAVING\nexport {encode, encodeSync, encodeInBatches} from './lib/encode';\nexport {save, saveSync} from './lib/save';\n\n// \"JAVASCRIPT\" UTILS\nexport {\n  isPromise,\n  isIterable,\n  isAsyncIterable,\n  isIterator,\n  isFetchResponse,\n  isReadableStream,\n  isWritableStream\n} from './javascript-utils/is-type';\n\nexport {toArrayBuffer} from './javascript-utils/binary-utils';\n\n// ITERATOR UTILS\nexport {getStreamIterator} from './javascript-utils/stream-utils';\n\nexport {\n  forEach,\n  concatenateAsyncIterator,\n  lineAsyncIterator,\n  textDecoderAsyncIterator,\n  numberedLineAsyncIterator\n} from './javascript-utils/async-iterator-utils';\n\n// CORE UTILS\nexport {isBrowser, self, window, global, document} from './utils/globals';\nexport {default as assert} from './utils/assert';\n\n// EXPERIMENTAL\nexport {selectLoader as _selectLoader} from './lib/select-loader';\n\nexport {default as _WorkerThread} from './worker-utils/worker-thread';\nexport {default as _WorkerFarm} from './worker-utils/worker-farm';\nexport {default as _WorkerPool} from './worker-utils/worker-pool';\n\nexport {default as _fetchProgress} from './lib/progress/fetch-progress';\n\n// FOR TESTING\nexport {_unregisterLoaders} from './lib/register-loaders';\n\n// DEPRECATED\n\n// Use @loaders.gl/polyfills and global symbols instead\nexport const TextEncoder = global.TextEncoder;\nexport const TextDecoder = global.TextDecoder;\n\n// Returns a promise that resolves to a readable stream\nexport async function createReadStream(url, options) {\n  // eslint-disable-next-line\n  console.warn('createReadStream() deprecated, use fetch().then(resp => resp.body)');\n  url = resolvePath(url);\n  const response = await fetchFile(url, options);\n  return response.body;\n}\n\nexport function parseFile(...args) {\n  console.warn('parse() deprecated, use parse()'); // eslint-disable-line\n  return parse(...args);\n}\n\nexport function parseFileSync(...args) {\n  console.warn('parseSync() deprecated, use parseSync()'); // eslint-disable-line\n  return parseSync(...args);\n}\n\nexport function loadFile(...args) {\n  console.warn('loadFile() deprecated, use load()'); // eslint-disable-line\n  return load(...args);\n}\n"],"file":"index.js"}