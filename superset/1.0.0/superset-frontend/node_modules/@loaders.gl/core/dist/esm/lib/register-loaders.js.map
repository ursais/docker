{"version":3,"sources":["../../../src/lib/register-loaders.js"],"names":["normalizeLoader","registeredLoaders","registerLoaders","loaders","Array","isArray","loader","normalizedLoader","find","registeredLoader","unshift","getRegisteredLoaders","_unregisterLoaders"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,iCAA9B;AAEA,IAAIC,iBAAiB,GAAG,EAAxB;AAEA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvCA,EAAAA,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAA7C;AADuC;AAAA;AAAA;;AAAA;AAAA;AAAA,UAG5BG,MAH4B;AAIrC,UAAMC,gBAAgB,GAAGP,eAAe,CAACM,MAAD,CAAxC;;AACA,UAAI,CAACL,iBAAiB,CAACO,IAAlB,CAAuB,UAAAC,gBAAgB;AAAA,eAAIF,gBAAgB,KAAKE,gBAAzB;AAAA,OAAvC,CAAL,EAAwF;AAEtFR,QAAAA,iBAAiB,CAACS,OAAlB,CAA0BH,gBAA1B;AACD;AARoC;;AAGvC,yBAAqBJ,OAArB,8HAA8B;AAAA;AAM7B;AATsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUxC;AAED,OAAO,SAASQ,oBAAT,GAAgC;AACrC,SAAOV,iBAAP;AACD;AAGD,OAAO,SAASW,kBAAT,GAA8B;AACnCX,EAAAA,iBAAiB,GAAG,EAApB;AACD","sourcesContent":["import {normalizeLoader} from './loader-utils/normalize-loader';\n\nlet registeredLoaders = [];\n\nexport function registerLoaders(loaders) {\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  for (const loader of loaders) {\n    const normalizedLoader = normalizeLoader(loader);\n    if (!registeredLoaders.find(registeredLoader => normalizedLoader === registeredLoader)) {\n      // add to the beginning of the registeredLoaders, so the last registeredLoader get picked\n      registeredLoaders.unshift(normalizedLoader);\n    }\n  }\n}\n\nexport function getRegisteredLoaders() {\n  return registeredLoaders;\n}\n\n// For testing\nexport function _unregisterLoaders() {\n  registeredLoaders = [];\n}\n"],"file":"register-loaders.js"}