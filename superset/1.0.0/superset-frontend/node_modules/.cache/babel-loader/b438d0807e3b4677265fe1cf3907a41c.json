{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport FilterScope from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope';\nimport { setCrossFilterFieldValues } from 'src/dashboard/components/CrossFilterScopingModal/utils';\nimport { useForceUpdate } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CrossFilterScopingForm = ({ form, scope, chartId }) => {\n  const forceUpdate = useForceUpdate();\n  const formScope = form.getFieldValue('scope');\n  const formScoping = form.getFieldValue('scoping');\n  return ___EmotionJSX(FilterScope, { updateFormValues: values => {\n      setCrossFilterFieldValues(form, {\n        ...values });\n\n    }, scope: scope, chartId: chartId, formScope: formScope, forceUpdate: forceUpdate, formScoping: formScoping });\n};__signature__(CrossFilterScopingForm, \"useForceUpdate{forceUpdate}\", () => [useForceUpdate]);const _default =\nCrossFilterScopingForm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CrossFilterScopingForm, \"CrossFilterScopingForm\", \"/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingForm/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingForm/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingForm/index.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAA0B,OAA1B;AAEA,OAAO,WAAP,MAAwB,qGAAxB;AACA,SAAS,yBAAT,QAA0C,wDAA1C;AAEA,SAAS,cAAT,QAA+B,mFAA/B,C;AASA,MAAM,sBAAsB,GAAoC,CAAC,EAC/D,IAD+D,EAE/D,KAF+D,EAG/D,OAH+D,EAAD,KAI3D;AACH,QAAM,WAAW,GAAG,cAAc,EAAlC;AACA,QAAM,SAAS,GAAG,IAAI,CAAC,aAAL,CAAmB,OAAnB,CAAlB;AACA,QAAM,WAAW,GAAG,IAAI,CAAC,aAAL,CAAmB,SAAnB,CAApB;AACA,SACE,cAAC,WAAD,IACE,gBAAgB,EAAG,MAAD,IAAgB;AAChC,MAAA,yBAAyB,CAAC,IAAD,EAAO;AAC9B,WAAG,MAD2B,EAAP,CAAzB;;AAGD,KALH,EAME,KAAK,EAAE,KANT,EAOE,OAAO,EAAE,OAPX,EAQE,SAAS,EAAE,SARb,EASE,WAAW,EAAE,WATf,EAUE,WAAW,EAAE,WAVf,GADF;AAcD,CAtBD,C,cAAM,sB,wCAKgB,c;AAmBP,sB,CAAf,wB,iLAxBM,sB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport { FormInstance } from 'antd/lib/form';\nimport FilterScope from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope';\nimport { setCrossFilterFieldValues } from 'src/dashboard/components/CrossFilterScopingModal/utils';\nimport { Scope } from 'src/dashboard/components/nativeFilters/types';\nimport { useForceUpdate } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils';\nimport { CrossFilterScopingFormType } from 'src/dashboard/components/CrossFilterScopingModal/types';\n\ntype CrossFilterScopingFormProps = {\n  chartId: number;\n  scope: Scope;\n  form: FormInstance<CrossFilterScopingFormType>;\n};\n\nconst CrossFilterScopingForm: FC<CrossFilterScopingFormProps> = ({\n  form,\n  scope,\n  chartId,\n}) => {\n  const forceUpdate = useForceUpdate();\n  const formScope = form.getFieldValue('scope');\n  const formScoping = form.getFieldValue('scoping');\n  return (\n    <FilterScope\n      updateFormValues={(values: any) => {\n        setCrossFilterFieldValues(form, {\n          ...values,\n        });\n      }}\n      scope={scope}\n      chartId={chartId}\n      formScope={formScope}\n      forceUpdate={forceUpdate}\n      formScoping={formScoping}\n    />\n  );\n};\n\nexport default CrossFilterScopingForm;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}