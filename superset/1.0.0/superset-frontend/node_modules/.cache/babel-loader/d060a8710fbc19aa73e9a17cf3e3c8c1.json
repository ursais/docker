{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'src/components/Select';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nexport default class OnPasteSelect extends React.Component {\n  constructor(props) {var _context;\n    super(props);\n    this.onPaste = _bindInstanceProperty(_context = this.onPaste).call(_context, this);\n  }\n\n  onPaste(evt) {var _context2, _context3, _context4;\n    if (!this.props.isMulti) {\n      return;\n    }\n    evt.preventDefault();\n    const clipboard = evt.clipboardData.getData('Text');\n    if (!clipboard) {\n      return;\n    }\n    const regex = `[${this.props.separator}]+`;\n    const values = _mapInstanceProperty(_context2 = clipboard.split(new RegExp(regex))).call(_context2, v => _trimInstanceProperty(v).call(v));\n    const validator = this.props.isValidNewOption;\n    const selected = this.props.value || [];\n    const existingOptions = {};\n    const existing = {};\n    _forEachInstanceProperty(_context3 = this.props.options).call(_context3, v => {\n      existingOptions[v[this.props.valueKey]] = 1;\n    });\n    let options = [];\n    _forEachInstanceProperty(selected).call(selected, v => {\n      options.push({ [this.props.labelKey]: v, [this.props.valueKey]: v });\n      existing[v] = 1;\n    });\n    options = _concatInstanceProperty(options).call(options,\n    _mapInstanceProperty(_context4 = _filterInstanceProperty(values).call(values,\n    v => {\n      const notExists = !existing[v];\n      existing[v] = 1;\n      return (\n        notExists && (\n        validator ? validator({ [this.props.labelKey]: v }) : !!v));\n\n    })).call(_context4,\n    v => {\n      const opt = { [this.props.labelKey]: v, [this.props.valueKey]: v };\n      if (!existingOptions[v]) {\n        this.props.options.unshift(opt);\n      }\n      return opt;\n    }));\n\n    if (options.length) {\n      if (this.props.onChange) {\n        this.props.onChange(options);\n      }\n    }\n  }\n\n  render() {\n    const { selectWrap: SelectComponent, ...restProps } = this.props;\n    return ___EmotionJSX(SelectComponent, _extends({}, restProps, { onPaste: this.onPaste }));\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nOnPasteSelect.propTypes = {\n  separator: PropTypes.array,\n  selectWrap: PropTypes.elementType,\n  selectRef: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n  options: PropTypes.array,\n  isMulti: PropTypes.bool,\n  value: PropTypes.any,\n  isValidNewOption: PropTypes.func,\n  noResultsText: PropTypes.string,\n  forceOverflow: PropTypes.bool };\n\nOnPasteSelect.defaultProps = {\n  separator: [',', '\\n', '\\t', ';'],\n  selectWrap: Select,\n  valueKey: 'value',\n  labelKey: 'label',\n  options: [],\n  isMulti: false };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OnPasteSelect, \"OnPasteSelect\", \"/app/superset-frontend/src/components/Select/OnPasteSelect.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Select/OnPasteSelect.jsx"],"names":["React","PropTypes","Select","OnPasteSelect","Component","constructor","props","onPaste","evt","isMulti","preventDefault","clipboard","clipboardData","getData","regex","separator","values","split","RegExp","v","validator","isValidNewOption","selected","value","existingOptions","existing","options","valueKey","push","labelKey","notExists","opt","unshift","length","onChange","render","selectWrap","SelectComponent","restProps","propTypes","array","elementType","selectRef","func","isRequired","string","bool","any","noResultsText","forceOverflow","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'src/components/Select';\n\nexport default class OnPasteSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onPaste = this.onPaste.bind(this);\n  }\n\n  onPaste(evt) {\n    if (!this.props.isMulti) {\n      return;\n    }\n    evt.preventDefault();\n    const clipboard = evt.clipboardData.getData('Text');\n    if (!clipboard) {\n      return;\n    }\n    const regex = `[${this.props.separator}]+`;\n    const values = clipboard.split(new RegExp(regex)).map(v => v.trim());\n    const validator = this.props.isValidNewOption;\n    const selected = this.props.value || [];\n    const existingOptions = {};\n    const existing = {};\n    this.props.options.forEach(v => {\n      existingOptions[v[this.props.valueKey]] = 1;\n    });\n    let options = [];\n    selected.forEach(v => {\n      options.push({ [this.props.labelKey]: v, [this.props.valueKey]: v });\n      existing[v] = 1;\n    });\n    options = options.concat(\n      values\n        .filter(v => {\n          const notExists = !existing[v];\n          existing[v] = 1;\n          return (\n            notExists &&\n            (validator ? validator({ [this.props.labelKey]: v }) : !!v)\n          );\n        })\n        .map(v => {\n          const opt = { [this.props.labelKey]: v, [this.props.valueKey]: v };\n          if (!existingOptions[v]) {\n            this.props.options.unshift(opt);\n          }\n          return opt;\n        }),\n    );\n    if (options.length) {\n      if (this.props.onChange) {\n        this.props.onChange(options);\n      }\n    }\n  }\n\n  render() {\n    const { selectWrap: SelectComponent, ...restProps } = this.props;\n    return <SelectComponent {...restProps} onPaste={this.onPaste} />;\n  }\n}\n\nOnPasteSelect.propTypes = {\n  separator: PropTypes.array,\n  selectWrap: PropTypes.elementType,\n  selectRef: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  valueKey: PropTypes.string,\n  labelKey: PropTypes.string,\n  options: PropTypes.array,\n  isMulti: PropTypes.bool,\n  value: PropTypes.any,\n  isValidNewOption: PropTypes.func,\n  noResultsText: PropTypes.string,\n  forceOverflow: PropTypes.bool,\n};\nOnPasteSelect.defaultProps = {\n  separator: [',', '\\n', '\\t', ';'],\n  selectWrap: Select,\n  valueKey: 'value',\n  labelKey: 'label',\n  options: [],\n  isMulti: false,\n};\n"]},"metadata":{},"sourceType":"module"}