{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst NUM_COLUMNS = 12;\nexport default function ControlRow({ controls }) {\n  // ColorMapControl renders null and should not be counted\n  // in the columns number\n  const countableControls = _filterInstanceProperty(controls).call(controls, control => {var _context;return !_includesInstanceProperty(_context = ['ColorMapControl']).call(_context, control == null ? void 0 : control.props.type);});\n  const colSize = NUM_COLUMNS / countableControls.length;\n  return ___EmotionJSX(\"div\", { className: \"row space-1\" },\n  _mapInstanceProperty(controls).call(controls, (control, i) => ___EmotionJSX(\"div\", { className: `col-lg-${colSize} col-xs-12`, key: i },\n  control)));\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NUM_COLUMNS, \"NUM_COLUMNS\", \"/app/superset-frontend/src/explore/components/ControlRow.tsx\");reactHotLoader.register(ControlRow, \"ControlRow\", \"/app/superset-frontend/src/explore/components/ControlRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ControlRow.tsx"],"names":[],"mappings":"0jBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB,C;AAEA,MAAM,WAAW,GAAG,EAApB;AAIA,eAAc,SAAU,UAAV,CAAqB,EAAE,QAAF,EAArB,EAA0D;AACtE;AACA;AACA,QAAM,iBAAiB,GAAG,wBAAA,QAAQ,MAAR,CAAA,QAAQ,EAChC,OAAO,yBAAI,CAAC,sCAAC,iBAAD,kBAA6B,OAA7B,oBAA6B,OAAO,CAAE,KAAT,CAAe,IAA5C,CAAL,EADyB,CAAlC;AAGA,QAAM,OAAO,GAAG,WAAW,GAAG,iBAAiB,CAAC,MAAhD;AACA,SACE,uBAAK,SAAS,EAAC,aAAf;AACG,uBAAA,QAAQ,MAAR,CAAA,QAAQ,EAAK,CAAC,OAAD,EAAU,CAAV,KACZ,uBAAK,SAAS,EAAE,UAAU,OAAO,YAAjC,EAA+C,GAAG,EAAE,CAApD;AACG,EAAA,OADH,CADO,CADX,CADF;;;AASD,C,iLApBK,W,yGAIkB,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nconst NUM_COLUMNS = 12;\n\ntype Control = React.ReactElement | null;\n\nexport default function ControlRow({ controls }: { controls: Control[] }) {\n  // ColorMapControl renders null and should not be counted\n  // in the columns number\n  const countableControls = controls.filter(\n    control => !['ColorMapControl'].includes(control?.props.type),\n  );\n  const colSize = NUM_COLUMNS / countableControls.length;\n  return (\n    <div className=\"row space-1\">\n      {controls.map((control, i) => (\n        <div className={`col-lg-${colSize} col-xs-12`} key={i}>\n          {control}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}