{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\nfunction extractOwnerNames({ owners }) {\n  if (!owners)\n  return null;\n  return _mapInstanceProperty(owners).call(owners, owner => `${owner.first_name} ${owner.last_name}`);\n}\nconst ownerNamesQuery = rison.encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none'] });\n\nexport function useChartOwnerNames(chartId) {\n  return useTransformedResource(useApiV1Resource(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`), extractOwnerNames);\n}__signature__(useChartOwnerNames, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [useTransformedResource, useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractOwnerNames, \"extractOwnerNames\", \"/app/superset-frontend/src/common/hooks/apiResources/charts.ts\");reactHotLoader.register(ownerNamesQuery, \"ownerNamesQuery\", \"/app/superset-frontend/src/common/hooks/apiResources/charts.ts\");reactHotLoader.register(useChartOwnerNames, \"useChartOwnerNames\", \"/app/superset-frontend/src/common/hooks/apiResources/charts.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/common/hooks/apiResources/charts.ts"],"names":[],"mappings":"8XAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,gBAAT,EAA2B,sBAA3B,QAAyD,gBAAzD;AAEA,SAAS,iBAAT,CAA2B,EAAE,MAAF,EAA3B,EAA4C;AAC1C,MAAI,CAAC,MAAL;AAAa,SAAO,IAAP;AACb,SAAO,qBAAA,MAAM,MAAN,CAAA,MAAM,EAAK,KAAK,IAAI,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,EAApD,CAAb;AACD;AAED,MAAM,eAAe,GAAG,KAAK,CAAC,MAAN,CAAa;AACnC,EAAA,OAAO,EAAE,CAAC,mBAAD,EAAsB,kBAAtB,CAD0B;AAEnC,EAAA,IAAI,EAAE,CAAC,MAAD,CAF6B,EAAb,CAAxB;;AAKA,OAAM,SAAU,kBAAV,CAA6B,OAA7B,EAA4C;AAChD,SAAO,sBAAsB,CAC3B,gBAAgB,CAAQ,iBAAiB,OAAO,MAAM,eAAe,EAArD,CADW,EAE3B,iBAF2B,CAA7B;AAID,C,cALe,kB,yDACP,sB,EACL,gB,oLAZK,iB,iHAKH,e,+GAKU,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport rison from 'rison';\nimport Chart from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nfunction extractOwnerNames({ owners }: Chart) {\n  if (!owners) return null;\n  return owners.map(owner => `${owner.first_name} ${owner.last_name}`);\n}\n\nconst ownerNamesQuery = rison.encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none'],\n});\n\nexport function useChartOwnerNames(chartId: string) {\n  return useTransformedResource(\n    useApiV1Resource<Chart>(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`),\n    extractOwnerNames,\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}