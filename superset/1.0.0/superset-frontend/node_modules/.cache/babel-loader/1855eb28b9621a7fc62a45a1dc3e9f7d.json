{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport { StyledInputContainer, StyledJsonEditor, StyledExpandableForm, antdCollapseStyles } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst defaultExtra = '{\\n  \"metadata_params\": {},\\n  \"engine_params\": {},' +\n'\\n  \"metadata_cache_timeout\": {},\\n  \"schemas_allowed_for_csv_upload\": [] \\n}';\nconst ExtraOptions = ({ db, onInputChange, onTextChange, onEditorChange }) => {var _db$extra;\n  const expandableModalIsOpen = !!(db != null && db.expose_in_sqllab);\n  const createAsOpen = !!(db != null && db.allow_ctas || db != null && db.allow_cvas);\n  return ___EmotionJSX(Collapse, { expandIconPosition: \"right\", accordion: true, css: theme => antdCollapseStyles(theme) },\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, \"SQL Lab\"),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, \"Configure how this database will function in SQL Lab.\")),\n\n\n    key: \"1\" },\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"expose_in_sqllab\", indeterminate: false, checked: !!(db != null && db.expose_in_sqllab), onChange: onInputChange, labelText: t('Expose in SQL Lab') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow this database to be queried in SQL Lab') })),\n\n  ___EmotionJSX(StyledExpandableForm, { className: cx('expandable', {\n      open: expandableModalIsOpen,\n      'ctas-open': createAsOpen }) },\n\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_ctas\", indeterminate: false, checked: !!(db != null && db.allow_ctas), onChange: onInputChange, labelText: t('Allow CREATE TABLE AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new tables based on queries') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_cvas\", indeterminate: false, checked: !!(db != null && db.allow_cvas), onChange: onInputChange, labelText: t('Allow CREATE VIEW AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new views based on queries') })),\n\n  ___EmotionJSX(StyledInputContainer, { className: cx('expandable', { open: createAsOpen }) },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('CTAS & CVAS SCHEMA')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"force_ctas_schema\", value: (db == null ? void 0 : db.force_ctas_schema) || '', placeholder: t('Search or select schema'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('When allowing CREATE TABLE AS option in SQL Lab, this option ' +\n  'forces the table to be created in this schema.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_dml\", indeterminate: false, checked: !!(db != null && db.allow_dml), onChange: onInputChange, labelText: t('Allow DML') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_multi_schema_metadata_fetch\", indeterminate: false, checked: !!(db != null && db.allow_multi_schema_metadata_fetch), onChange: onInputChange, labelText: t('Allow multi schema metadata fetch') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow SQL Lab to fetch a list of all tables and all views across all database ' +\n    'schemas. For large data warehouse with thousands of tables, this can be ' +\n    'expensive and put strain on the system.') })))))),\n\n\n\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, \"Performance\"),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, \"Adjust settings that will impact the performance of this database.\")),\n\n\n    key: \"2\" },\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-8\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Chart cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"cache_timeout\", value: (db == null ? void 0 : db.cache_timeout) || '', placeholder: t('Chart cache timeout'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the caching timeout for charts of this database.' +\n  ' A timeout of 0 indicates that the cache never expires.' +\n  ' Note this defaults to the global timeout if undefined.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_run_async\", indeterminate: false, checked: !!(db != null && db.allow_run_async), onChange: onInputChange, labelText: t('Asynchronous query execution') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Operate the database in asynchronous mode, meaning that the queries ' +\n    'are executed on remote workers as opposed to on the web server itself. ' +\n    'This assumes that you have a Celery worker setup as well as a results ' +\n    'backend. Refer to the installation docs for more information.') })))),\n\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, \"Security\"),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, \"Add connection information for other systems.\")),\n\n\n    key: \"3\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Secure extra')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"encrypted_extra\", value: (db == null ? void 0 : db.encrypted_extra) || '', placeholder: t('Secure extra'), onChange: json => onEditorChange({ json, name: 'encrypted_extra' }), width: \"100%\", height: \"160px\" })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('JSON string containing additional connection configuration.')),\n\n  ___EmotionJSX(\"div\", null,\n  t('This is used to provide connection information for systems like Hive, ' +\n  'Presto, and BigQuery, which do not conform to the username:password syntax ' +\n  'normally used by SQLAlchemy.')))),\n\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Root certificate')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"textarea\", { name: \"server_cert\", value: (db == null ? void 0 : db.server_cert) || '', placeholder: t('Root certificate'), onChange: onTextChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Optional CA_BUNDLE contents to validate HTTPS requests. Only available on ' +\n  'certain database engines.')))),\n\n\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, \"Other\"),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, \"Additional settings.\")),\n    key: \"4\" },\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"impersonate_user\", indeterminate: false, checked: !!(db != null && db.impersonate_user), onChange: onInputChange, labelText: t('Impersonate Logged In User (Presto, Trino, Hive, and GSheets)') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n    'currently logged on user who must have permission to run them. If Hive ' +\n    'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n    'service account, but impersonate the currently logged on user via ' +\n    'hive.server2.proxy.user property.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-0\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_csv_upload\", indeterminate: false, checked: !!(db != null && db.allow_csv_upload), onChange: onInputChange, labelText: t('Allow data upload') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('If selected, please set the schemas allowed for data upload in Extra.') }))),\n\n\n  ___EmotionJSX(StyledInputContainer, { className: \"extra-container\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Extra')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"extra\", value: (_db$extra = db == null ? void 0 : db.extra) != null ? _db$extra : defaultExtra, placeholder: t('Secure extra'), onChange: json => onEditorChange({ json, name: 'extra' }), width: \"100%\", height: \"160px\" })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('JSON string containing extra configuration elements.')),\n\n  ___EmotionJSX(\"div\", null,\n  t('1. The engine_params object gets unpacked into the sqlalchemy.create_engine ' +\n  'call, while the metadata_params gets unpacked into the sqlalchemy.MetaData ' +\n  'call.')),\n\n  ___EmotionJSX(\"div\", null,\n  t('2. The metadata_cache_timeout is a cache timeout setting in seconds for ' +\n  'metadata fetch of this database. Specify it as \"metadata_cache_timeout\": ' +\n  '{\"schema_cache_timeout\": 600, \"table_cache_timeout\": 600}. If unset, cache ' +\n  'will not be enabled for the functionality. A timeout of 0 indicates that ' +\n  'the cache never expires.')),\n\n  ___EmotionJSX(\"div\", null,\n  t('3. The schemas_allowed_for_csv_upload is a comma separated list of schemas ' +\n  'that CSVs are allowed to upload to. Specify it as ' +\n  '\"schemas_allowed_for_csv_upload\": [\"public\", \"csv_upload\"]. If database ' +\n  'flavor does not support schema or any schema is allowed to be accessed, ' +\n  'just leave the list empty.')),\n\n  ___EmotionJSX(\"div\", null,\n  t(\"4. The version field is a string specifying this db's version. This \" +\n  'should be used with Presto DBs so that the syntax is correct.')),\n\n  ___EmotionJSX(\"div\", null,\n  t('5. The allows_virtual_table_explore field is a boolean specifying whether ' +\n  'or not the Explore button in SQL Lab results is shown.'))))));\n\n\n\n\n\n};const _default =\nExtraOptions;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultExtra, \"defaultExtra\", \"/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/ExtraOptions.tsx\");reactHotLoader.register(ExtraOptions, \"ExtraOptions\", \"/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/ExtraOptions.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/ExtraOptions.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/ExtraOptions.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, EventHandler } from 'react';\nimport cx from 'classnames';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport {\n  StyledInputContainer,\n  StyledJsonEditor,\n  StyledExpandableForm,\n  antdCollapseStyles,\n} from './styles';\nimport { DatabaseObject } from '../types';\n\nconst defaultExtra =\n  '{\\n  \"metadata_params\": {},\\n  \"engine_params\": {},' +\n  '\\n  \"metadata_cache_timeout\": {},\\n  \"schemas_allowed_for_csv_upload\": [] \\n}';\n\nconst ExtraOptions = ({\n  db,\n  onInputChange,\n  onTextChange,\n  onEditorChange,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onTextChange: EventHandler<ChangeEvent<HTMLTextAreaElement>>;\n  onEditorChange: Function;\n}) => {\n  const expandableModalIsOpen = !!db?.expose_in_sqllab;\n  const createAsOpen = !!(db?.allow_ctas || db?.allow_cvas);\n\n  return (\n    <Collapse\n      expandIconPosition=\"right\"\n      accordion\n      css={(theme: SupersetTheme) => antdCollapseStyles(theme)}\n    >\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>SQL Lab</h4>\n            <p className=\"helper\">\n              Configure how this database will function in SQL Lab.\n            </p>\n          </div>\n        }\n        key=\"1\"\n      >\n        <StyledInputContainer className=\"mb-0\">\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"expose_in_sqllab\"\n              indeterminate={false}\n              checked={!!db?.expose_in_sqllab}\n              onChange={onInputChange}\n              labelText={t('Expose in SQL Lab')}\n            />\n            <InfoTooltip\n              tooltip={t('Allow this database to be queried in SQL Lab')}\n            />\n          </div>\n          <StyledExpandableForm\n            className={cx('expandable', {\n              open: expandableModalIsOpen,\n              'ctas-open': createAsOpen,\n            })}\n          >\n            <StyledInputContainer className=\"mb-0\">\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_ctas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_ctas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE TABLE AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new tables based on queries')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer className=\"mb-0\">\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_cvas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_cvas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE VIEW AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new views based on queries')}\n                />\n              </div>\n              <StyledInputContainer\n                className={cx('expandable', { open: createAsOpen })}\n              >\n                <div className=\"control-label\">{t('CTAS & CVAS SCHEMA')}</div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"text\"\n                    name=\"force_ctas_schema\"\n                    value={db?.force_ctas_schema || ''}\n                    placeholder={t('Search or select schema')}\n                    onChange={onInputChange}\n                  />\n                </div>\n                <div className=\"helper\">\n                  {t(\n                    'When allowing CREATE TABLE AS option in SQL Lab, this option ' +\n                      'forces the table to be created in this schema.',\n                  )}\n                </div>\n              </StyledInputContainer>\n            </StyledInputContainer>\n            <StyledInputContainer className=\"mb-0\">\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_dml\"\n                  indeterminate={false}\n                  checked={!!db?.allow_dml}\n                  onChange={onInputChange}\n                  labelText={t('Allow DML')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_multi_schema_metadata_fetch\"\n                  indeterminate={false}\n                  checked={!!db?.allow_multi_schema_metadata_fetch}\n                  onChange={onInputChange}\n                  labelText={t('Allow multi schema metadata fetch')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow SQL Lab to fetch a list of all tables and all views across all database ' +\n                      'schemas. For large data warehouse with thousands of tables, this can be ' +\n                      'expensive and put strain on the system.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n          </StyledExpandableForm>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Performance</h4>\n            <p className=\"helper\">\n              Adjust settings that will impact the performance of this database.\n            </p>\n          </div>\n        }\n        key=\"2\"\n      >\n        <StyledInputContainer className=\"mb-8\">\n          <div className=\"control-label\">{t('Chart cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"cache_timeout\"\n              value={db?.cache_timeout || ''}\n              placeholder={t('Chart cache timeout')}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the caching timeout for charts of this database.' +\n                ' A timeout of 0 indicates that the cache never expires.' +\n                ' Note this defaults to the global timeout if undefined.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer className=\"mb-0\">\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_run_async\"\n              indeterminate={false}\n              checked={!!db?.allow_run_async}\n              onChange={onInputChange}\n              labelText={t('Asynchronous query execution')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Operate the database in asynchronous mode, meaning that the queries ' +\n                  'are executed on remote workers as opposed to on the web server itself. ' +\n                  'This assumes that you have a Celery worker setup as well as a results ' +\n                  'backend. Refer to the installation docs for more information.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Security</h4>\n            <p className=\"helper\">\n              Add connection information for other systems.\n            </p>\n          </div>\n        }\n        key=\"3\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Secure extra')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"encrypted_extra\"\n              value={db?.encrypted_extra || ''}\n              placeholder={t('Secure extra')}\n              onChange={(json: string) =>\n                onEditorChange({ json, name: 'encrypted_extra' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t('JSON string containing additional connection configuration.')}\n            </div>\n            <div>\n              {t(\n                'This is used to provide connection information for systems like Hive, ' +\n                  'Presto, and BigQuery, which do not conform to the username:password syntax ' +\n                  'normally used by SQLAlchemy.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Root certificate')}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"server_cert\"\n              value={db?.server_cert || ''}\n              placeholder={t('Root certificate')}\n              onChange={onTextChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Optional CA_BUNDLE contents to validate HTTPS requests. Only available on ' +\n                'certain database engines.',\n            )}\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>Other</h4>\n            <p className=\"helper\">Additional settings.</p>\n          </div>\n        }\n        key=\"4\"\n      >\n        <StyledInputContainer className=\"mb-0\">\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"impersonate_user\"\n              indeterminate={false}\n              checked={!!db?.impersonate_user}\n              onChange={onInputChange}\n              labelText={t(\n                'Impersonate Logged In User (Presto, Trino, Hive, and GSheets)',\n              )}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n                  'currently logged on user who must have permission to run them. If Hive ' +\n                  'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n                  'service account, but impersonate the currently logged on user via ' +\n                  'hive.server2.proxy.user property.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer className=\"mb-0\">\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_csv_upload\"\n              indeterminate={false}\n              checked={!!db?.allow_csv_upload}\n              onChange={onInputChange}\n              labelText={t('Allow data upload')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If selected, please set the schemas allowed for data upload in Extra.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer className=\"extra-container\">\n          <div className=\"control-label\">{t('Extra')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"extra\"\n              value={db?.extra ?? defaultExtra}\n              placeholder={t('Secure extra')}\n              onChange={(json: string) =>\n                onEditorChange({ json, name: 'extra' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t('JSON string containing extra configuration elements.')}\n            </div>\n            <div>\n              {t(\n                '1. The engine_params object gets unpacked into the sqlalchemy.create_engine ' +\n                  'call, while the metadata_params gets unpacked into the sqlalchemy.MetaData ' +\n                  'call.',\n              )}\n            </div>\n            <div>\n              {t(\n                '2. The metadata_cache_timeout is a cache timeout setting in seconds for ' +\n                  'metadata fetch of this database. Specify it as \"metadata_cache_timeout\": ' +\n                  '{\"schema_cache_timeout\": 600, \"table_cache_timeout\": 600}. If unset, cache ' +\n                  'will not be enabled for the functionality. A timeout of 0 indicates that ' +\n                  'the cache never expires.',\n              )}\n            </div>\n            <div>\n              {t(\n                '3. The schemas_allowed_for_csv_upload is a comma separated list of schemas ' +\n                  'that CSVs are allowed to upload to. Specify it as ' +\n                  '\"schemas_allowed_for_csv_upload\": [\"public\", \"csv_upload\"]. If database ' +\n                  'flavor does not support schema or any schema is allowed to be accessed, ' +\n                  'just leave the list empty.',\n              )}\n            </div>\n            <div>\n              {t(\n                \"4. The version field is a string specifying this db's version. This \" +\n                  'should be used with Presto DBs so that the syntax is correct.',\n              )}\n            </div>\n            <div>\n              {t(\n                '5. The allows_virtual_table_explore field is a boolean specifying whether ' +\n                  'or not the Explore button in SQL Lab results is shown.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n    </Collapse>\n  );\n};\n\nexport default ExtraOptions;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}