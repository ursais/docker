{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icon from 'src/components/Icon';\nimport { RecipientIconName } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledIcon = styled(Icon)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nexport default function RecipientIcon({ type }) {\n  const recipientIconConfig = {\n    name: '',\n    label: '' };\n\n  switch (type) {\n    case RecipientIconName.email:\n      recipientIconConfig.name = 'email';\n      recipientIconConfig.label = t(`${RecipientIconName.email}`);\n      break;\n    case RecipientIconName.slack:\n      recipientIconConfig.name = 'slack';\n      recipientIconConfig.label = t(`${RecipientIconName.slack}`);\n      break;\n    default:\n      recipientIconConfig.name = '';\n      recipientIconConfig.label = '';}\n\n  return recipientIconConfig.name.length ? ___EmotionJSX(Tooltip, { title: recipientIconConfig.label, placement: \"bottom\" },\n  ___EmotionJSX(StyledIcon, { name: recipientIconConfig.name })) :\n  null;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledIcon, \"StyledIcon\", \"/app/superset-frontend/src/views/CRUD/alert/components/RecipientIcon.tsx\");reactHotLoader.register(RecipientIcon, \"RecipientIcon\", \"/app/superset-frontend/src/views/CRUD/alert/components/RecipientIcon.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/alert/components/RecipientIcon.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,wBAAxB;AACA,OAAO,IAAP,MAA+B,qBAA/B;AACA,SAAS,iBAAT,QAAkC,UAAlC,C;AAEA,MAAM,UAAU,GAAG,MAAM,CAAC,IAAD,CAAM;WACpB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;kBACrC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;AAClD,CAHD;AAKA,eAAc,SAAU,aAAV,CAAwB,EAAE,IAAF,EAAxB,EAAkD;AAC9D,QAAM,mBAAmB,GAAG;AAC1B,IAAA,IAAI,EAAE,EADoB;AAE1B,IAAA,KAAK,EAAE,EAFmB,EAA5B;;AAIA,UAAQ,IAAR;AACE,SAAK,iBAAiB,CAAC,KAAvB;AACE,MAAA,mBAAmB,CAAC,IAApB,GAA2B,OAA3B;AACA,MAAA,mBAAmB,CAAC,KAApB,GAA4B,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAK,EAA3B,CAA7B;AACA;AACF,SAAK,iBAAiB,CAAC,KAAvB;AACE,MAAA,mBAAmB,CAAC,IAApB,GAA2B,OAA3B;AACA,MAAA,mBAAmB,CAAC,KAApB,GAA4B,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAK,EAA3B,CAA7B;AACA;AACF;AACE,MAAA,mBAAmB,CAAC,IAApB,GAA2B,EAA3B;AACA,MAAA,mBAAmB,CAAC,KAApB,GAA4B,EAA5B,CAXJ;;AAaA,SAAO,mBAAmB,CAAC,IAApB,CAAyB,MAAzB,GACL,cAAC,OAAD,IAAS,KAAK,EAAE,mBAAmB,CAAC,KAApC,EAA2C,SAAS,EAAC,QAArD;AACE,gBAAC,UAAD,IAAY,IAAI,EAAE,mBAAmB,CAAC,IAAtC,GADF,CADK;AAIH,MAJJ;AAKD,C,iLA5BK,U,oHAKkB,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icon, { IconName } from 'src/components/Icon';\nimport { RecipientIconName } from '../types';\n\nconst StyledIcon = styled(Icon)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nexport default function RecipientIcon({ type }: { type: string }) {\n  const recipientIconConfig = {\n    name: '',\n    label: '',\n  };\n  switch (type) {\n    case RecipientIconName.email:\n      recipientIconConfig.name = 'email';\n      recipientIconConfig.label = t(`${RecipientIconName.email}`);\n      break;\n    case RecipientIconName.slack:\n      recipientIconConfig.name = 'slack';\n      recipientIconConfig.label = t(`${RecipientIconName.slack}`);\n      break;\n    default:\n      recipientIconConfig.name = '';\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.name.length ? (\n    <Tooltip title={recipientIconConfig.label} placement=\"bottom\">\n      <StyledIcon name={recipientIconConfig.name as IconName} />\n    </Tooltip>\n  ) : null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}