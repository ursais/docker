{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { DEFAULT_FORM_DATA } from './types';\nexport default function transformProps(chartProps) {\n  const { formData, height, hooks, queriesData, width, behaviors, appSection, filterState, isRefreshing } = chartProps;\n  const newFormData = { ...DEFAULT_FORM_DATA, ...formData };\n  const { setDataMask = () => {}, setFocusedFilter = () => {}, unsetFocusedFilter = () => {} } = hooks;\n  const [queryData] = queriesData;\n  const { colnames = [], coltypes = [], data = [] } = queryData || {};\n  const coltypeMap = _reduceInstanceProperty(colnames).call(colnames, (accumulator, item, index) => ({ ...accumulator, [item]: coltypes[index] }), {});\n  return {\n    filterState,\n    coltypeMap,\n    appSection,\n    width,\n    behaviors,\n    height,\n    data,\n    formData: newFormData,\n    isRefreshing,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/app/superset-frontend/src/filters/components/Select/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Select/transformProps.ts"],"names":[],"mappings":"4bAmBA,SAAS,iBAAT,QAAgE,SAAhE;AAEA,eAAc,SAAU,cAAV,CACZ,UADY,EAC4B;AAExC,QAAM,EACJ,QADI,EAEJ,MAFI,EAGJ,KAHI,EAIJ,WAJI,EAKJ,KALI,EAMJ,SANI,EAOJ,UAPI,EAQJ,WARI,EASJ,YATI,KAUF,UAVJ;AAWA,QAAM,WAAW,GAAG,EAAE,GAAG,iBAAL,EAAwB,GAAG,QAA3B,EAApB;AACA,QAAM,EACJ,WAAW,GAAG,MAAK,CAAG,CADlB,EAEJ,gBAAgB,GAAG,MAAK,CAAG,CAFvB,EAGJ,kBAAkB,GAAG,MAAK,CAAG,CAHzB,KAIF,KAJJ;AAKA,QAAM,CAAC,SAAD,IAAc,WAApB;AACA,QAAM,EAAE,QAAQ,GAAG,EAAb,EAAiB,QAAQ,GAAG,EAA5B,EAAgC,IAAI,GAAG,EAAvC,KAA8C,SAAS,IAAI,EAAjE;AACA,QAAM,UAAU,GAAoC,wBAAA,QAAQ,MAAR,CAAA,QAAQ,EAC1D,CAAC,WAAD,EAAc,IAAd,EAAoB,KAApB,MAA+B,EAAE,GAAG,WAAL,EAAkB,CAAC,IAAD,GAAQ,QAAQ,CAAC,KAAD,CAAlC,EAA/B,CAD0D,EAE1D,EAF0D,CAA5D;AAKA,SAAO;AACL,IAAA,WADK;AAEL,IAAA,UAFK;AAGL,IAAA,UAHK;AAIL,IAAA,KAJK;AAKL,IAAA,SALK;AAML,IAAA,MANK;AAOL,IAAA,IAPK;AAQL,IAAA,QAAQ,EAAE,WARL;AASL,IAAA,YATK;AAUL,IAAA,WAVK;AAWL,IAAA,gBAXK;AAYL,IAAA,kBAZK,EAAP;;AAcD,C,iLAzCuB,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GenericDataType } from '@superset-ui/core';\nimport { DEFAULT_FORM_DATA, PluginFilterSelectChartProps } from './types';\n\nexport default function transformProps(\n  chartProps: PluginFilterSelectChartProps,\n) {\n  const {\n    formData,\n    height,\n    hooks,\n    queriesData,\n    width,\n    behaviors,\n    appSection,\n    filterState,\n    isRefreshing,\n  } = chartProps;\n  const newFormData = { ...DEFAULT_FORM_DATA, ...formData };\n  const {\n    setDataMask = () => {},\n    setFocusedFilter = () => {},\n    unsetFocusedFilter = () => {},\n  } = hooks;\n  const [queryData] = queriesData;\n  const { colnames = [], coltypes = [], data = [] } = queryData || {};\n  const coltypeMap: Record<string, GenericDataType> = colnames.reduce(\n    (accumulator, item, index) => ({ ...accumulator, [item]: coltypes[index] }),\n    {},\n  );\n\n  return {\n    filterState,\n    coltypeMap,\n    appSection,\n    width,\n    behaviors,\n    height,\n    data,\n    formData: newFormData,\n    isRefreshing,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}