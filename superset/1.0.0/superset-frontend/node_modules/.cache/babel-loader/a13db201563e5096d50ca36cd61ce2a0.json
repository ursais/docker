{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  expanded: PropTypes.arrayOf(\n  PropTypes.oneOfType([PropTypes.number, PropTypes.string])).\n  isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number };\n\n\nconst defaultProps = {\n  selectedChartId: null };\n\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId })\n{\n  return (\n    ___EmotionJSX(CheckboxTree, {\n      showExpandAll: true,\n      expandOnClick: true,\n      showNodeIcon: false,\n      nodes: renderFilterScopeTreeNodes({ nodes, selectedChartId }),\n      checked: checked,\n      expanded: expanded,\n      onCheck: onCheck,\n      onExpand: onExpand,\n      onClick: NOOP,\n      icons: treeIcons }));\n\n\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(NOOP, \"NOOP\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(FilterScopeTree, \"FilterScopeTree\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx"],"names":["React","PropTypes","CheckboxTree","filterScopeSelectorTreeNodePropShape","renderFilterScopeTreeNodes","treeIcons","propTypes","nodes","arrayOf","isRequired","checked","oneOfType","number","string","expanded","onCheck","func","onExpand","selectedChartId","defaultProps","NOOP","FilterScopeTree"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,oCAAT,QAAqD,+BAArD;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEN,SAAS,CAACO,OAAV,CAAkBL,oCAAlB,EAAwDM,UAD/C;AAEhBC,EAAAA,OAAO,EAAET,SAAS,CAACO,OAAV;AACPP,EAAAA,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,MAAX,EAAmBX,SAAS,CAACY,MAA7B,CAApB,CADO;AAEPJ,EAAAA,UAJc;AAKhBK,EAAAA,QAAQ,EAAEb,SAAS,CAACO,OAAV;AACRP,EAAAA,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,MAAX,EAAmBX,SAAS,CAACY,MAA7B,CAApB,CADQ;AAERJ,EAAAA,UAPc;AAQhBM,EAAAA,OAAO,EAAEd,SAAS,CAACe,IAAV,CAAeP,UARR;AAShBQ,EAAAA,QAAQ,EAAEhB,SAAS,CAACe,IAAV,CAAeP,UATT;AAUhBS,EAAAA,eAAe,EAAEjB,SAAS,CAACW,MAVX,EAAlB;;;AAaA,MAAMO,YAAY,GAAG;AACnBD,EAAAA,eAAe,EAAE,IADE,EAArB;;;AAIA,MAAME,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,eAAe,SAASC,eAAT,CAAyB;AACtCd,EAAAA,KAAK,GAAG,EAD8B;AAEtCG,EAAAA,OAAO,GAAG,EAF4B;AAGtCI,EAAAA,QAAQ,GAAG,EAH2B;AAItCC,EAAAA,OAJsC;AAKtCE,EAAAA,QALsC;AAMtCC,EAAAA,eANsC,EAAzB;AAOZ;AACD;AACE,kBAAC,YAAD;AACE,MAAA,aAAa,MADf;AAEE,MAAA,aAAa,MAFf;AAGE,MAAA,YAAY,EAAE,KAHhB;AAIE,MAAA,KAAK,EAAEd,0BAA0B,CAAC,EAAEG,KAAF,EAASW,eAAT,EAAD,CAJnC;AAKE,MAAA,OAAO,EAAER,OALX;AAME,MAAA,QAAQ,EAAEI,QANZ;AAOE,MAAA,OAAO,EAAEC,OAPX;AAQE,MAAA,QAAQ,EAAEE,QARZ;AASE,MAAA,OAAO,EAAEG,IATX;AAUE,MAAA,KAAK,EAAEf,SAVT,GADF;;;AAcD;;AAEDgB,eAAe,CAACf,SAAhB,GAA4BA,SAA5B;AACAe,eAAe,CAACF,YAAhB,GAA+BA,YAA/B,C,iLA5CMb,S,0HAaAa,Y,6HAIAC,I,qHAEkBC,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedChartId: null,\n};\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId,\n}) {\n  return (\n    <CheckboxTree\n      showExpandAll\n      expandOnClick\n      showNodeIcon={false}\n      nodes={renderFilterScopeTreeNodes({ nodes, selectedChartId })}\n      checked={checked}\n      expanded={expanded}\n      onCheck={onCheck}\n      onExpand={onExpand}\n      onClick={NOOP}\n      icons={treeIcons}\n    />\n  );\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}