{"ast":null,"code":"import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$fromEntries from \"@babel/runtime-corejs3/core-js-stable/object/from-entries\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function parseCookie(cookie = document.cookie) {var _context, _context2;\n  return _Object$fromEntries(_mapInstanceProperty(_context = _filterInstanceProperty(_context2 = cookie.\n  split('; ')).call(_context2,\n  x => x)).call(_context,\n  x => x.split('=')));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(parseCookie, \"parseCookie\", \"/app/superset-frontend/src/utils/parseCookie.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/parseCookie.ts"],"names":[],"mappings":"sjBAAA;;;;;;;;;;;;;;;;;AAiBG;AAIH,eAAc,SAAU,WAAV,CAAsB,MAAM,GAAG,QAAQ,CAAC,MAAxC,EAA8C;AAC1D,SAAO,oBACL,oEAAA,MAAM;AACH,EAAA,KADH,CACS,IADT;AAEU,EAAA,CAAC,IAAI,CAFf;AAGO,EAAA,CAAC,IAAI,CAAC,CAAC,KAAF,CAAQ,GAAR,CAHZ,CADK,CAAP;AAMD,C,iLAPuB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\ntype CookieMap = { [cookieId: string]: string };\n\nexport default function parseCookie(cookie = document.cookie): CookieMap {\n  return Object.fromEntries(\n    cookie\n      .split('; ')\n      .filter(x => x)\n      .map(x => x.split('=')),\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}