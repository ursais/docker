{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _startsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/starts-with\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { NATIVE_FILTER_PREFIX } from '../FiltersConfigModal/utils';\nexport const useFilterSets = () => useSelector(state => state.nativeFilters.filterSets || {});__signature__(useFilterSets, \"useSelector{}\", () => [useSelector]);\nexport const useFilters = () => useSelector(state => state.nativeFilters.filters);__signature__(useFilters, \"useSelector{}\", () => [useSelector]);\nexport const useNativeFiltersDataMask = () => {var _context, _context2;\n  const dataMask = useSelector(state => state.dataMask);\n  return _reduceInstanceProperty(_context = _filterInstanceProperty(_context2 = _Object$values(dataMask)).call(_context2,\n  item => {var _context3;return _startsWithInstanceProperty(_context3 = String(item.id)).call(_context3, NATIVE_FILTER_PREFIX);})).call(_context,\n  (prev, next) => ({ ...prev, [next.id]: next }), {});\n};__signature__(useNativeFiltersDataMask, \"useSelector{dataMask}\", () => [useSelector]);\nexport const useFilterUpdates = (dataMaskSelected, setDataMaskSelected) => {\n  const filters = useFilters();\n  const dataMaskApplied = useNativeFiltersDataMask();\n  useEffect(() => {var _context4;\n    // Remove deleted filters from local state\n    _forEachInstanceProperty(_context4 = _Object$keys(dataMaskSelected)).call(_context4, selectedId => {\n      if (!filters[selectedId]) {\n        setDataMaskSelected(draft => {\n          delete draft[selectedId];\n        });\n      }\n    });\n  }, [dataMaskApplied, dataMaskSelected, filters, setDataMaskSelected]);\n};\n// Load filters after charts loaded\n__signature__(useFilterUpdates, \"useFilters{filters}\\nuseNativeFiltersDataMask{dataMaskApplied}\\nuseEffect{}\", () => [useFilters, useNativeFiltersDataMask]);export const useInitialization = () => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const filters = useFilters();\n  const charts = useSelector(state => state.charts);\n  // We need to know how much charts now shown on dashboard to know how many of all charts should be loaded\n  let numberOfLoadingCharts = 0;\n  if (!isInitialized) {\n    numberOfLoadingCharts = document.querySelectorAll('[data-ui-anchor=\"chart\"]').length;\n  }\n  useEffect(() => {var _context5, _context6;\n    if (isInitialized) {\n      return;\n    }\n    if (_findInstanceProperty(_context5 = _Object$values(filters)).call(_context5, ({ requiredFirst }) => requiredFirst)) {\n      setIsInitialized(true);\n      return;\n    }\n    // For some dashboards may be there are no charts on first page,\n    // so we check up to 1 sec if there is at least on chart to load\n    let filterTimeout;\n    if (numberOfLoadingCharts === 0) {\n      filterTimeout = _setTimeout(() => {\n        setIsInitialized(true);\n      }, 1000);\n    }\n    // @ts-ignore\n    if (numberOfLoadingCharts > 0 && filterTimeout !== undefined) {\n      clearTimeout(filterTimeout);\n    }\n    const numberOfLoadedCharts = _filterInstanceProperty(_context6 = _Object$values(charts)).call(_context6, ({ chartStatus }) => chartStatus !== 'loading').length;\n    if (numberOfLoadingCharts > 0 &&\n    numberOfLoadedCharts >= numberOfLoadingCharts) {\n      setIsInitialized(true);\n    }\n  }, [charts, isInitialized, numberOfLoadingCharts]);\n  return isInitialized;\n};__signature__(useInitialization, \"useState{[isInitialized, setIsInitialized](false)}\\nuseFilters{filters}\\nuseSelector{charts}\\nuseEffect{}\", () => [useFilters, useSelector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterSets, \"useFilterSets\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useFilters, \"useFilters\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useNativeFiltersDataMask, \"useNativeFiltersDataMask\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useFilterUpdates, \"useFilterUpdates\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useInitialization, \"useInitialization\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { useSelector } from 'react-redux';\nimport {\n  Filters,\n  FilterSets as FilterSetsType,\n} from 'src/dashboard/reducers/types';\nimport {\n  DataMaskState,\n  DataMaskStateWithId,\n  DataMaskWithId,\n} from 'src/dataMask/types';\nimport { useEffect, useState } from 'react';\nimport { ChartsState, RootState } from 'src/dashboard/types';\nimport { NATIVE_FILTER_PREFIX } from '../FiltersConfigModal/utils';\n\nexport const useFilterSets = () =>\n  useSelector<any, FilterSetsType>(\n    state => state.nativeFilters.filterSets || {},\n  );\n\nexport const useFilters = () =>\n  useSelector<any, Filters>(state => state.nativeFilters.filters);\n\nexport const useNativeFiltersDataMask = () => {\n  const dataMask = useSelector<RootState, DataMaskStateWithId>(\n    state => state.dataMask,\n  );\n\n  return Object.values(dataMask)\n    .filter((item: DataMaskWithId) =>\n      String(item.id).startsWith(NATIVE_FILTER_PREFIX),\n    )\n    .reduce(\n      (prev, next: DataMaskWithId) => ({ ...prev, [next.id]: next }),\n      {},\n    ) as DataMaskStateWithId;\n};\n\nexport const useFilterUpdates = (\n  dataMaskSelected: DataMaskState,\n  setDataMaskSelected: (arg0: (arg0: DataMaskState) => void) => void,\n) => {\n  const filters = useFilters();\n  const dataMaskApplied = useNativeFiltersDataMask();\n\n  useEffect(() => {\n    // Remove deleted filters from local state\n    Object.keys(dataMaskSelected).forEach(selectedId => {\n      if (!filters[selectedId]) {\n        setDataMaskSelected(draft => {\n          delete draft[selectedId];\n        });\n      }\n    });\n  }, [dataMaskApplied, dataMaskSelected, filters, setDataMaskSelected]);\n};\n\n// Load filters after charts loaded\nexport const useInitialization = () => {\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\n  const filters = useFilters();\n  const charts = useSelector<RootState, ChartsState>(state => state.charts);\n\n  // We need to know how much charts now shown on dashboard to know how many of all charts should be loaded\n  let numberOfLoadingCharts = 0;\n  if (!isInitialized) {\n    numberOfLoadingCharts = document.querySelectorAll(\n      '[data-ui-anchor=\"chart\"]',\n    ).length;\n  }\n  useEffect(() => {\n    if (isInitialized) {\n      return;\n    }\n\n    if (Object.values(filters).find(({ requiredFirst }) => requiredFirst)) {\n      setIsInitialized(true);\n      return;\n    }\n\n    // For some dashboards may be there are no charts on first page,\n    // so we check up to 1 sec if there is at least on chart to load\n    let filterTimeout: NodeJS.Timeout;\n    if (numberOfLoadingCharts === 0) {\n      filterTimeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, 1000);\n    }\n\n    // @ts-ignore\n    if (numberOfLoadingCharts > 0 && filterTimeout !== undefined) {\n      clearTimeout(filterTimeout);\n    }\n\n    const numberOfLoadedCharts = Object.values(charts).filter(\n      ({ chartStatus }) => chartStatus !== 'loading',\n    ).length;\n    if (\n      numberOfLoadingCharts > 0 &&\n      numberOfLoadedCharts >= numberOfLoadingCharts\n    ) {\n      setIsInitialized(true);\n    }\n  }, [charts, isInitialized, numberOfLoadingCharts]);\n\n  return isInitialized;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}