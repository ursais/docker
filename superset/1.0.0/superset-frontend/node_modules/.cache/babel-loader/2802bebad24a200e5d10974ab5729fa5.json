{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport CssTemplateModal from './CssTemplateModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nfunction CssTemplatesList({ addDangerToast, addSuccessToast, user }) {\n  const { state: { loading, resourceCount: templatesCount, resourceCollection: templates, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('css_template', t('CSS templates'), addDangerToast);\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] = useState(false);\n  const [currentCssTemplate, setCurrentCssTemplate] = useState(null);\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const [templateCurrentlyDeleting, setTemplateCurrentlyDeleting] = useState(null);\n  const handleTemplateDelete = ({ id, template_name }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}` }).\n    then(() => {\n      refreshData();\n      setTemplateCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', template_name));\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting %s: %s', template_name, errMsg))));\n  };\n  const handleBulkTemplateDelete = templatesToDelete => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(_mapInstanceProperty(templatesToDelete).call(templatesToDelete, ({ id }) => id))}` }).\n    then(({ json = {} }) => {\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting the selected templates: %s', errMsg))));\n  };\n  function handleCssTemplateEdit(cssTemplate) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'template_name',\n    Header: t('Name') },\n\n  {\n    Cell: ({ row: { original: { changed_on_delta_humanized: changedOn, changed_by: changedBy } } }) => {\n      let name = 'null';\n      if (changedBy) {\n        name = `${changedBy.first_name} ${changedBy.last_name}`;\n      }\n      return ___EmotionJSX(Tooltip, { id: \"allow-run-async-header-tooltip\", title: t('Last modified by %s', name), placement: \"right\" },\n      ___EmotionJSX(\"span\", null, changedOn));\n\n    },\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    Cell: ({ row: { original: { created_on: createdOn } } }) => {\n      const date = new Date(createdOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).fromNow();\n    },\n    Header: t('Created on'),\n    accessor: 'created_on',\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    Header: t('Created by'),\n    Cell: ({ row: { original: { created_by: createdBy } } }) => createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original } }) => {var _context;\n      const handleEdit = () => handleCssTemplateEdit(original);\n      const handleDelete = () => setTemplateCurrentlyDeleting(original);\n      const actions = _filterInstanceProperty(_context = [\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit template'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit } :\n\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete template'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null]).call(_context,\n      item => !!item);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !canEdit && !canDelete,\n    size: 'xl' }],\n\n  [canDelete, canCreate]);\n  const menuData = {\n    name: t('CSS templates') };\n\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('CSS template')),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary' });\n\n  }\n  menuData.buttons = subMenuButtons;\n  const filters = useMemo(() => [\n  {\n    Header: t('Created by'),\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('css_template', 'created_by', createErrorHandler(errMsg => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user.userId),\n    paginate: true },\n\n  {\n    Header: t('Search'),\n    id: 'template_name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  ___EmotionJSX(CssTemplateModal, { addDangerToast: addDangerToast, cssTemplate: currentCssTemplate, onCssTemplateAdd: () => refreshData(), onHide: () => setCssTemplateModalOpen(false), show: cssTemplateModalOpen }),\n  templateCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete the template.'), onConfirm: () => {\n      if (templateCurrentlyDeleting) {\n        handleTemplateDelete(templateCurrentlyDeleting);\n      }\n    }, onHide: () => setTemplateCurrentlyDeleting(null), open: true, title: t('Delete Template?') }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected templates?'), onConfirm: handleBulkTemplateDelete },\n  confirmDelete => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"css-templates-list-view\", columns: columns, count: templatesCount, data: templates, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect });\n  }));\n\n\n}__signature__(CssTemplatesList, \"useListViewResource{{ state: { loading, resourceCount: templatesCount, resourceCollection: templates, bulkSelectEnabled, }, hasPerm, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[cssTemplateModalOpen, setCssTemplateModalOpen](false)}\\nuseState{[currentCssTemplate, setCurrentCssTemplate,](null)}\\nuseState{[templateCurrentlyDeleting, setTemplateCurrentlyDeleting,](null)}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource]);const _default =\nwithToasts(CssTemplatesList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/views/CRUD/csstemplates/CssTemplatesList.tsx\");reactHotLoader.register(CssTemplatesList, \"CssTemplatesList\", \"/app/superset-frontend/src/views/CRUD/csstemplates/CssTemplatesList.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/csstemplates/CssTemplatesList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/csstemplates/CssTemplatesList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { t, SupersetClient } from '@superset-ui/core';\n\nimport rison from 'rison';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/components/Menu/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport CssTemplateModal from './CssTemplateModal';\nimport { TemplateObject } from './types';\n\nconst PAGE_SIZE = 25;\n\ninterface CssTemplatesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n  };\n}\n\nfunction CssTemplatesList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: CssTemplatesListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: templatesCount,\n      resourceCollection: templates,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<TemplateObject>(\n    'css_template',\n    t('CSS templates'),\n    addDangerToast,\n  );\n  const [cssTemplateModalOpen, setCssTemplateModalOpen] = useState<boolean>(\n    false,\n  );\n  const [\n    currentCssTemplate,\n    setCurrentCssTemplate,\n  ] = useState<TemplateObject | null>(null);\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  const [\n    templateCurrentlyDeleting,\n    setTemplateCurrentlyDeleting,\n  ] = useState<TemplateObject | null>(null);\n\n  const handleTemplateDelete = ({ id, template_name }: TemplateObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setTemplateCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', template_name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', template_name, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkTemplateDelete = (templatesToDelete: TemplateObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/css_template/?q=${rison.encode(\n        templatesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected templates: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  function handleCssTemplateEdit(cssTemplate: TemplateObject) {\n    setCurrentCssTemplate(cssTemplate);\n    setCssTemplateModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'template_name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'template_name',\n        Header: t('Name'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => {\n          let name = 'null';\n\n          if (changedBy) {\n            name = `${changedBy.first_name} ${changedBy.last_name}`;\n          }\n\n          return (\n            <Tooltip\n              id=\"allow-run-async-header-tooltip\"\n              title={t('Last modified by %s', name)}\n              placement=\"right\"\n            >\n              <span>{changedOn}</span>\n            </Tooltip>\n          );\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleCssTemplateEdit(original);\n          const handleDelete = () => setTemplateCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const menuData: SubMenuProps = {\n    name: t('CSS templates'),\n  };\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('CSS template')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        setCurrentCssTemplate(null);\n        setCssTemplateModalOpen(true);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'css_template',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user.userId,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'template_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <CssTemplateModal\n        addDangerToast={addDangerToast}\n        cssTemplate={currentCssTemplate}\n        onCssTemplateAdd={() => refreshData()}\n        onHide={() => setCssTemplateModalOpen(false)}\n        show={cssTemplateModalOpen}\n      />\n      {templateCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the template.')}\n          onConfirm={() => {\n            if (templateCurrentlyDeleting) {\n              handleTemplateDelete(templateCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setTemplateCurrentlyDeleting(null)}\n          open\n          title={t('Delete Template?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected templates?',\n        )}\n        onConfirm={handleBulkTemplateDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<TemplateObject>\n              className=\"css-templates-list-view\"\n              columns={columns}\n              count={templatesCount}\n              data={templates}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(CssTemplatesList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}