{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _spliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/splice\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport componentIsResizable from './componentIsResizable';\nimport shouldWrapChildInRow from './shouldWrapChildInRow';\nimport newComponentFactory from './newComponentFactory';\nimport getComponentWidthFromDrop from './getComponentWidthFromDrop';\n\nimport { ROW_TYPE, TABS_TYPE, TAB_TYPE } from './componentTypes';\n\nexport default function newEntitiesFromDrop({ dropResult, layout }) {var _context;\n  const { dragging, destination } = dropResult;\n\n  const dragType = dragging.type;\n  const dropEntity = layout[destination.id];\n  const dropType = dropEntity.type;\n  let newDropChild = newComponentFactory(dragType, dragging.meta);\n  newDropChild.parents = _concatInstanceProperty(_context = dropEntity.parents || []).call(_context, dropEntity.id);\n\n  if (componentIsResizable(dragging)) {\n    newDropChild.meta.width = // don't set a 0 width\n    getComponentWidthFromDrop({ dropResult, layout }) || undefined;\n  }\n\n  const wrapChildInRow = shouldWrapChildInRow({\n    parentType: dropType,\n    childType: dragType });\n\n\n  const newEntities = {\n    [newDropChild.id]: newDropChild };\n\n\n  if (wrapChildInRow) {var _context2, _context3;\n    const rowWrapper = newComponentFactory(ROW_TYPE);\n    rowWrapper.children = [newDropChild.id];\n    rowWrapper.parents = _concatInstanceProperty(_context2 = dropEntity.parents || []).call(_context2, dropEntity.id);\n    newEntities[rowWrapper.id] = rowWrapper;\n    newDropChild = rowWrapper;\n    newDropChild.parents = _concatInstanceProperty(_context3 = rowWrapper.parents).call(_context3, rowWrapper.id);\n  } else if (dragType === TABS_TYPE) {var _context4;\n    // create a new tab component\n    const tabChild = newComponentFactory(TAB_TYPE);\n    tabChild.parents = _concatInstanceProperty(_context4 = dropEntity.parents || []).call(_context4, dropEntity.id);\n    newDropChild.children = [tabChild.id];\n    newEntities[tabChild.id] = tabChild;\n  }\n\n  const nextDropChildren = [...dropEntity.children];\n  _spliceInstanceProperty(nextDropChildren).call(nextDropChildren, destination.index, 0, newDropChild.id);\n\n  newEntities[destination.id] = {\n    ...dropEntity,\n    children: nextDropChildren };\n\n\n  return newEntities;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(newEntitiesFromDrop, \"newEntitiesFromDrop\", \"/app/superset-frontend/src/dashboard/util/newEntitiesFromDrop.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/newEntitiesFromDrop.js"],"names":["componentIsResizable","shouldWrapChildInRow","newComponentFactory","getComponentWidthFromDrop","ROW_TYPE","TABS_TYPE","TAB_TYPE","newEntitiesFromDrop","dropResult","layout","dragging","destination","dragType","type","dropEntity","id","dropType","newDropChild","meta","parents","width","undefined","wrapChildInRow","parentType","childType","newEntities","rowWrapper","children","tabChild","nextDropChildren","index"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport componentIsResizable from './componentIsResizable';\nimport shouldWrapChildInRow from './shouldWrapChildInRow';\nimport newComponentFactory from './newComponentFactory';\nimport getComponentWidthFromDrop from './getComponentWidthFromDrop';\n\nimport { ROW_TYPE, TABS_TYPE, TAB_TYPE } from './componentTypes';\n\nexport default function newEntitiesFromDrop({ dropResult, layout }) {\n  const { dragging, destination } = dropResult;\n\n  const dragType = dragging.type;\n  const dropEntity = layout[destination.id];\n  const dropType = dropEntity.type;\n  let newDropChild = newComponentFactory(dragType, dragging.meta);\n  newDropChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n\n  if (componentIsResizable(dragging)) {\n    newDropChild.meta.width = // don't set a 0 width\n      getComponentWidthFromDrop({ dropResult, layout }) || undefined;\n  }\n\n  const wrapChildInRow = shouldWrapChildInRow({\n    parentType: dropType,\n    childType: dragType,\n  });\n\n  const newEntities = {\n    [newDropChild.id]: newDropChild,\n  };\n\n  if (wrapChildInRow) {\n    const rowWrapper = newComponentFactory(ROW_TYPE);\n    rowWrapper.children = [newDropChild.id];\n    rowWrapper.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newEntities[rowWrapper.id] = rowWrapper;\n    newDropChild = rowWrapper;\n    newDropChild.parents = rowWrapper.parents.concat(rowWrapper.id);\n  } else if (dragType === TABS_TYPE) {\n    // create a new tab component\n    const tabChild = newComponentFactory(TAB_TYPE);\n    tabChild.parents = (dropEntity.parents || []).concat(dropEntity.id);\n    newDropChild.children = [tabChild.id];\n    newEntities[tabChild.id] = tabChild;\n  }\n\n  const nextDropChildren = [...dropEntity.children];\n  nextDropChildren.splice(destination.index, 0, newDropChild.id);\n\n  newEntities[destination.id] = {\n    ...dropEntity,\n    children: nextDropChildren,\n  };\n\n  return newEntities;\n}\n"]},"metadata":{},"sourceType":"module"}