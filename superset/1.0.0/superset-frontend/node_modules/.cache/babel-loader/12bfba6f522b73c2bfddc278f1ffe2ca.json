{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { styled } from '@superset-ui/core';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const Table = styled.table`\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  border-collapse: separate;\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n\n  thead > tr > th {\n    border: 0;\n  }\n\n  tbody {\n    tr:first-of-type > td {\n      border-top: 0;\n    }\n  }\n  th {\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    position: sticky;\n    top: 0;\n\n    &:first-of-type {\n      padding-left: ${({ theme }) => theme.gridUnit * 4}px;\n    }\n\n    &.xs {\n      min-width: 25px;\n    }\n    &.sm {\n      min-width: 50px;\n    }\n    &.md {\n      min-width: 75px;\n    }\n    &.lg {\n      min-width: 100px;\n    }\n    &.xl {\n      min-width: 150px;\n    }\n    &.xxl {\n      min-width: 200px;\n    }\n\n    span {\n      white-space: nowrap;\n      display: flex;\n      align-items: center;\n      line-height: 2;\n    }\n\n    svg {\n      display: inline-block;\n      position: relative;\n    }\n  }\n\n  td {\n    &.xs {\n      width: 25px;\n    }\n    &.sm {\n      width: 50px;\n    }\n    &.md {\n      width: 75px;\n    }\n    &.lg {\n      width: 100px;\n    }\n    &.xl {\n      width: 150px;\n    }\n    &.xxl {\n      width: 200px;\n    }\n  }\n\n  .table-cell-loader {\n    position: relative;\n\n    .loading-bar {\n      background-color: ${({ theme }) => theme.colors.secondary.light4};\n      border-radius: 7px;\n\n      span {\n        visibility: hidden;\n      }\n    }\n\n    &:after {\n      position: absolute;\n      transform: translateY(-50%);\n      top: 50%;\n      left: 0;\n      content: '';\n      display: block;\n      width: 100%;\n      height: 48px;\n      background-image: linear-gradient(\n        100deg,\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0.5) 60%,\n        rgba(255, 255, 255, 0) 80%\n      );\n      background-size: 200px 48px;\n      background-position: -100px 0;\n      background-repeat: no-repeat;\n      animation: loading-shimmer 1s infinite;\n    }\n  }\n\n  .actions {\n    white-space: nowrap;\n    min-width: 100px;\n\n    svg,\n    i {\n      margin-right: 8px;\n\n      &:hover {\n        path {\n          fill: ${({ theme }) => theme.colors.primary.base};\n        }\n      }\n    }\n  }\n\n  .table-row {\n    .actions {\n      opacity: 0;\n      font-size: ${({ theme }) => theme.typography.sizes.xl}px;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary.light5};\n\n      .actions {\n        opacity: 1;\n        transition: opacity ease-in ${({ theme }) => theme.transitionTiming}s;\n      }\n    }\n  }\n\n  .table-row-selected {\n    background-color: ${({ theme }) => theme.colors.secondary.light4};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary.light4};\n    }\n  }\n\n  .table-cell {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: 300px;\n    line-height: 1;\n    vertical-align: middle;\n    &:first-of-type {\n      padding-left: ${({ theme }) => theme.gridUnit * 4}px;\n    }\n  }\n\n  @keyframes loading-shimmer {\n    40% {\n      background-position: 100% 0;\n    }\n\n    100% {\n      background-position: 100% 0;\n    }\n  }\n`;\nTable.displayName = 'table';const _default = /*#__PURE__*/\nReact.memo(({ getTableProps, getTableBodyProps, prepareRow, headerGroups, columns, rows, loading, highlightRowId }) => {var _context2;return ___EmotionJSX(Table, _extends({}, getTableProps(), { className: \"table table-hover\", \"data-test\": \"listview-table\" }),\n  ___EmotionJSX(\"thead\", null,\n  _mapInstanceProperty(headerGroups).call(headerGroups, headerGroup => {var _context;return ___EmotionJSX(\"tr\", headerGroup.getHeaderGroupProps(),\n    _mapInstanceProperty(_context = headerGroup.headers).call(_context, column => {\n      let sortIcon = ___EmotionJSX(Icon, { name: \"sort\" });\n      if (column.isSorted && column.isSortedDesc) {\n        sortIcon = ___EmotionJSX(Icon, { name: \"sort-desc\" });\n      } else\n      if (column.isSorted && !column.isSortedDesc) {\n        sortIcon = ___EmotionJSX(Icon, { name: \"sort-asc\" });\n      }\n      return column.hidden ? null : ___EmotionJSX(\"th\", _extends({}, column.getHeaderProps(column.canSort ? column.getSortByToggleProps() : {}), { \"data-test\": \"sort-header\", className: cx({\n          [column.size || '']: column.size }) }),\n\n      ___EmotionJSX(\"span\", null,\n      column.render('Header'),\n      column.canSort && sortIcon));\n\n\n    }));})),\n\n\n  ___EmotionJSX(\"tbody\", getTableBodyProps(),\n  loading &&\n  rows.length === 0 &&\n  _mapInstanceProperty(_context2 = [...new Array(25)]).call(_context2, (_, i) => ___EmotionJSX(\"tr\", { key: i },\n  _mapInstanceProperty(columns).call(columns, (column, i2) => {\n    if (column.hidden)\n    return null;\n    return ___EmotionJSX(\"td\", { key: i2, className: cx('table-cell', {\n        'table-cell-loader': loading,\n        [column.size || '']: column.size }) },\n\n    ___EmotionJSX(\"span\", { className: \"loading-bar\", role: \"progressbar\" },\n    ___EmotionJSX(\"span\", null, \"LOADING\")));\n\n\n  }))),\n\n  rows.length > 0 &&\n  _mapInstanceProperty(rows).call(rows, row => {var _context3;\n    prepareRow(row);\n    // @ts-ignore\n    const rowId = row.original.id;\n    return ___EmotionJSX(\"tr\", _extends({ \"data-test\": \"table-row\" }, row.getRowProps(), { className: cx('table-row', {\n        'table-row-selected': row.isSelected ||\n        typeof rowId !== 'undefined' && rowId === highlightRowId }) }),\n\n    _mapInstanceProperty(_context3 = row.cells).call(_context3, cell => {\n      if (cell.column.hidden)\n      return null;\n      const columnCellProps = cell.column.cellProps || {};\n      return ___EmotionJSX(\"td\", _extends({ \"data-test\": \"table-row-cell\", className: cx('table-cell', {\n          'table-cell-loader': loading,\n          [cell.column.size || '']: cell.column.size }) },\n      cell.getCellProps(), columnCellProps),\n      ___EmotionJSX(\"span\", { className: cx({ 'loading-bar': loading }), role: loading ? 'progressbar' : undefined },\n      ___EmotionJSX(\"span\", { \"data-test\": \"cell-text\" }, cell.render('Cell'))));\n\n\n    }));\n\n  })));});export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Table, \"Table\", \"/app/superset-frontend/src/components/dataViewCommon/TableCollection.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/dataViewCommon/TableCollection.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/dataViewCommon/TableCollection.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { TableInstance } from 'react-table';\nimport { styled } from '@superset-ui/core';\nimport Icon from 'src/components/Icon';\n\ninterface TableCollectionProps {\n  getTableProps: (userProps?: any) => any;\n  getTableBodyProps: (userProps?: any) => any;\n  prepareRow: TableInstance['prepareRow'];\n  headerGroups: TableInstance['headerGroups'];\n  rows: TableInstance['rows'];\n  columns: TableInstance['column'][];\n  loading: boolean;\n  highlightRowId?: number;\n}\n\nexport const Table = styled.table`\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  border-collapse: separate;\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n\n  thead > tr > th {\n    border: 0;\n  }\n\n  tbody {\n    tr:first-of-type > td {\n      border-top: 0;\n    }\n  }\n  th {\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    position: sticky;\n    top: 0;\n\n    &:first-of-type {\n      padding-left: ${({ theme }) => theme.gridUnit * 4}px;\n    }\n\n    &.xs {\n      min-width: 25px;\n    }\n    &.sm {\n      min-width: 50px;\n    }\n    &.md {\n      min-width: 75px;\n    }\n    &.lg {\n      min-width: 100px;\n    }\n    &.xl {\n      min-width: 150px;\n    }\n    &.xxl {\n      min-width: 200px;\n    }\n\n    span {\n      white-space: nowrap;\n      display: flex;\n      align-items: center;\n      line-height: 2;\n    }\n\n    svg {\n      display: inline-block;\n      position: relative;\n    }\n  }\n\n  td {\n    &.xs {\n      width: 25px;\n    }\n    &.sm {\n      width: 50px;\n    }\n    &.md {\n      width: 75px;\n    }\n    &.lg {\n      width: 100px;\n    }\n    &.xl {\n      width: 150px;\n    }\n    &.xxl {\n      width: 200px;\n    }\n  }\n\n  .table-cell-loader {\n    position: relative;\n\n    .loading-bar {\n      background-color: ${({ theme }) => theme.colors.secondary.light4};\n      border-radius: 7px;\n\n      span {\n        visibility: hidden;\n      }\n    }\n\n    &:after {\n      position: absolute;\n      transform: translateY(-50%);\n      top: 50%;\n      left: 0;\n      content: '';\n      display: block;\n      width: 100%;\n      height: 48px;\n      background-image: linear-gradient(\n        100deg,\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0.5) 60%,\n        rgba(255, 255, 255, 0) 80%\n      );\n      background-size: 200px 48px;\n      background-position: -100px 0;\n      background-repeat: no-repeat;\n      animation: loading-shimmer 1s infinite;\n    }\n  }\n\n  .actions {\n    white-space: nowrap;\n    min-width: 100px;\n\n    svg,\n    i {\n      margin-right: 8px;\n\n      &:hover {\n        path {\n          fill: ${({ theme }) => theme.colors.primary.base};\n        }\n      }\n    }\n  }\n\n  .table-row {\n    .actions {\n      opacity: 0;\n      font-size: ${({ theme }) => theme.typography.sizes.xl}px;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary.light5};\n\n      .actions {\n        opacity: 1;\n        transition: opacity ease-in ${({ theme }) => theme.transitionTiming}s;\n      }\n    }\n  }\n\n  .table-row-selected {\n    background-color: ${({ theme }) => theme.colors.secondary.light4};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary.light4};\n    }\n  }\n\n  .table-cell {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: 300px;\n    line-height: 1;\n    vertical-align: middle;\n    &:first-of-type {\n      padding-left: ${({ theme }) => theme.gridUnit * 4}px;\n    }\n  }\n\n  @keyframes loading-shimmer {\n    40% {\n      background-position: 100% 0;\n    }\n\n    100% {\n      background-position: 100% 0;\n    }\n  }\n`;\n\nTable.displayName = 'table';\n\nexport default React.memo(\n  ({\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    columns,\n    rows,\n    loading,\n    highlightRowId,\n  }: TableCollectionProps) => (\n    <Table\n      {...getTableProps()}\n      className=\"table table-hover\"\n      data-test=\"listview-table\"\n    >\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => {\n              let sortIcon = <Icon name=\"sort\" />;\n              if (column.isSorted && column.isSortedDesc) {\n                sortIcon = <Icon name=\"sort-desc\" />;\n              } else if (column.isSorted && !column.isSortedDesc) {\n                sortIcon = <Icon name=\"sort-asc\" />;\n              }\n              return column.hidden ? null : (\n                <th\n                  {...column.getHeaderProps(\n                    column.canSort ? column.getSortByToggleProps() : {},\n                  )}\n                  data-test=\"sort-header\"\n                  className={cx({\n                    [column.size || '']: column.size,\n                  })}\n                >\n                  <span>\n                    {column.render('Header')}\n                    {column.canSort && sortIcon}\n                  </span>\n                </th>\n              );\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {loading &&\n          rows.length === 0 &&\n          [...new Array(25)].map((_, i) => (\n            <tr key={i}>\n              {columns.map((column, i2) => {\n                if (column.hidden) return null;\n                return (\n                  <td\n                    key={i2}\n                    className={cx('table-cell', {\n                      'table-cell-loader': loading,\n                      [column.size || '']: column.size,\n                    })}\n                  >\n                    <span className=\"loading-bar\" role=\"progressbar\">\n                      <span>LOADING</span>\n                    </span>\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        {rows.length > 0 &&\n          rows.map(row => {\n            prepareRow(row);\n            // @ts-ignore\n            const rowId = row.original.id;\n            return (\n              <tr\n                data-test=\"table-row\"\n                {...row.getRowProps()}\n                className={cx('table-row', {\n                  'table-row-selected':\n                    row.isSelected ||\n                    (typeof rowId !== 'undefined' && rowId === highlightRowId),\n                })}\n              >\n                {row.cells.map(cell => {\n                  if (cell.column.hidden) return null;\n\n                  const columnCellProps = cell.column.cellProps || {};\n                  return (\n                    <td\n                      data-test=\"table-row-cell\"\n                      className={cx('table-cell', {\n                        'table-cell-loader': loading,\n                        [cell.column.size || '']: cell.column.size,\n                      })}\n                      {...cell.getCellProps()}\n                      {...columnCellProps}\n                    >\n                      <span\n                        className={cx({ 'loading-bar': loading })}\n                        role={loading ? 'progressbar' : undefined}\n                      >\n                        <span data-test=\"cell-text\">{cell.render('Cell')}</span>\n                      </span>\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n      </tbody>\n    </Table>\n  ),\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}