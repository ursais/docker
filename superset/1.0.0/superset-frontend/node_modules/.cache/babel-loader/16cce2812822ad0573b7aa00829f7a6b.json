{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nexport const getByUser = async userId => {\n  const queryParams = rison.encode({\n    filters: [\n    {\n      col: 'owners',\n      opr: 'rel_m_m',\n      value: userId }],\n\n\n    order_column: 'changed_on_delta_humanized',\n    order_direction: 'desc' });\n\n  const endpoint = `/api/v1/dataset?q=${queryParams}`;\n  const data = await SupersetClient.get({\n    endpoint });\n\n  return data.json.result;\n};\nexport const put = async (datasetId, dbId, sql, columns, overrideColumns) => {\n  const endpoint = `api/v1/dataset/${datasetId}?override_columns=${overrideColumns}`;\n  const headers = { 'Content-Type': 'application/json' };\n  const body = _JSON$stringify({\n    sql,\n    columns,\n    database_id: dbId });\n\n  const data = await SupersetClient.put({\n    endpoint,\n    headers,\n    body });\n\n  return data.json.result;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getByUser, \"getByUser\", \"/app/superset-frontend/src/api/dataset.ts\");reactHotLoader.register(put, \"put\", \"/app/superset-frontend/src/api/dataset.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/api/dataset.ts"],"names":[],"mappings":"2XAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAS,cAAT,QAA6C,mBAA7C;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAM,SAAS,GAAG,MAAO,MAAP,IAAyB;AAChD,QAAM,WAAW,GAAG,KAAK,CAAC,MAAN,CAAa;AAC/B,IAAA,OAAO,EAAE;AACP;AACE,MAAA,GAAG,EAAE,QADP;AAEE,MAAA,GAAG,EAAE,SAFP;AAGE,MAAA,KAAK,EAAE,MAHT,EADO,CADsB;;;AAQ/B,IAAA,YAAY,EAAE,4BARiB;AAS/B,IAAA,eAAe,EAAE,MATc,EAAb,CAApB;;AAWA,QAAM,QAAQ,GAAG,qBAAqB,WAAW,EAAjD;AACA,QAAM,IAAI,GAAiB,MAAM,cAAc,CAAC,GAAf,CAAmB;AAClD,IAAA,QADkD,EAAnB,CAAjC;;AAGA,SAAO,IAAI,CAAC,IAAL,CAAU,MAAjB;AACD,CAjBM;AAmBP,OAAO,MAAM,GAAG,GAAG,OACjB,SADiB,EAEjB,IAFiB,EAGjB,GAHiB,EAIjB,OAJiB,EAKjB,eALiB,KAMf;AACF,QAAM,QAAQ,GAAG,kBAAkB,SAAS,qBAAqB,eAAe,EAAhF;AACA,QAAM,OAAO,GAAG,EAAE,gBAAgB,kBAAlB,EAAhB;AACA,QAAM,IAAI,GAAG,gBAAe;AAC1B,IAAA,GAD0B;AAE1B,IAAA,OAF0B;AAG1B,IAAA,WAAW,EAAE,IAHa,EAAf,CAAb;;AAMA,QAAM,IAAI,GAAiB,MAAM,cAAc,CAAC,GAAf,CAAmB;AAClD,IAAA,QADkD;AAElD,IAAA,OAFkD;AAGlD,IAAA,IAHkD,EAAnB,CAAjC;;AAKA,SAAO,IAAI,CAAC,IAAL,CAAU,MAAjB;AACD,CArBM,C,iLAnBM,S,oFAmBA,G","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, JsonResponse } from '@superset-ui/core';\nimport rison from 'rison';\n\nexport const getByUser = async (userId: number) => {\n  const queryParams = rison.encode({\n    filters: [\n      {\n        col: 'owners',\n        opr: 'rel_m_m',\n        value: userId,\n      },\n    ],\n    order_column: 'changed_on_delta_humanized',\n    order_direction: 'desc',\n  });\n  const endpoint = `/api/v1/dataset?q=${queryParams}`;\n  const data: JsonResponse = await SupersetClient.get({\n    endpoint,\n  });\n  return data.json.result;\n};\n\nexport const put = async (\n  datasetId: number,\n  dbId: number,\n  sql: string,\n  columns: Array<Record<string, any>>,\n  overrideColumns: boolean,\n) => {\n  const endpoint = `api/v1/dataset/${datasetId}?override_columns=${overrideColumns}`;\n  const headers = { 'Content-Type': 'application/json' };\n  const body = JSON.stringify({\n    sql,\n    columns,\n    database_id: dbId,\n  });\n\n  const data: JsonResponse = await SupersetClient.put({\n    endpoint,\n    headers,\n    body,\n  });\n  return data.json.result;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}