{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';\nimport * as actions from '../actions/sqlLab';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  table: PropTypes.string.isRequired,\n  schema: PropTypes.string,\n  dbId: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  templateParams: PropTypes.string };\n\n\nclass ExploreCtasResultsButton extends React.PureComponent {\n  constructor(props) {var _context, _context2;\n    super(props);\n    this.visualize = _bindInstanceProperty(_context = this.visualize).call(_context, this);\n    this.onClick = _bindInstanceProperty(_context2 = this.onClick).call(_context2, this);\n  }\n\n  onClick() {\n    this.visualize();\n  }\n\n  buildVizOptions() {\n    return {\n      datasourceName: this.props.table,\n      schema: this.props.schema,\n      dbId: this.props.dbId,\n      templateParams: this.props.templateParams };\n\n  }\n\n  visualize() {\n    this.props.actions.\n    createCtasDatasource(this.buildVizOptions()).\n    then(data => {\n      const formData = {\n        datasource: `${data.table_id}__table`,\n        metrics: ['count'],\n        groupby: [],\n        viz_type: 'table',\n        since: '100 years ago',\n        all_columns: [],\n        row_limit: 1000 };\n\n      this.props.actions.addInfoToast(\n      t('Creating a data source and creating a new tab'));\n\n\n      // open new window for data visualization\n      exploreChart(formData);\n    }).\n    catch(() => {\n      this.props.actions.addDangerToast(\n      this.props.errorMessage || t('An error occurred'));\n\n    });\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        onClick: this.onClick,\n        tooltip: t('Explore the result set in the data exploration view') },\n\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        icon: \"line-chart\",\n        placement: \"top\",\n        label: \"explore\" }),\n      ' ',\n      t('Explore'))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ExploreCtasResultsButton.propTypes = propTypes;\n\nfunction mapStateToProps({ sqlLab, common }) {\n  return {\n    errorMessage: sqlLab.errorMessage,\n    timeout: common.conf ? common.conf.SUPERSET_WEBSERVER_TIMEOUT : null };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nExploreCtasResultsButton);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx\");reactHotLoader.register(ExploreCtasResultsButton, \"ExploreCtasResultsButton\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton.jsx"],"names":["React","PropTypes","bindActionCreators","connect","t","InfoTooltipWithTrigger","Button","exploreChart","actions","propTypes","object","isRequired","table","string","schema","dbId","number","errorMessage","templateParams","ExploreCtasResultsButton","PureComponent","constructor","props","visualize","onClick","buildVizOptions","datasourceName","createCtasDatasource","then","data","formData","datasource","table_id","metrics","groupby","viz_type","since","all_columns","row_limit","addInfoToast","catch","addDangerToast","render","mapStateToProps","sqlLab","common","timeout","conf","SUPERSET_WEBSERVER_TIMEOUT","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';\nimport * as actions from '../actions/sqlLab';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  table: PropTypes.string.isRequired,\n  schema: PropTypes.string,\n  dbId: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  templateParams: PropTypes.string,\n};\n\nclass ExploreCtasResultsButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.visualize = this.visualize.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.visualize();\n  }\n\n  buildVizOptions() {\n    return {\n      datasourceName: this.props.table,\n      schema: this.props.schema,\n      dbId: this.props.dbId,\n      templateParams: this.props.templateParams,\n    };\n  }\n\n  visualize() {\n    this.props.actions\n      .createCtasDatasource(this.buildVizOptions())\n      .then(data => {\n        const formData = {\n          datasource: `${data.table_id}__table`,\n          metrics: ['count'],\n          groupby: [],\n          viz_type: 'table',\n          since: '100 years ago',\n          all_columns: [],\n          row_limit: 1000,\n        };\n        this.props.actions.addInfoToast(\n          t('Creating a data source and creating a new tab'),\n        );\n\n        // open new window for data visualization\n        exploreChart(formData);\n      })\n      .catch(() => {\n        this.props.actions.addDangerToast(\n          this.props.errorMessage || t('An error occurred'),\n        );\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          buttonSize=\"small\"\n          onClick={this.onClick}\n          tooltip={t('Explore the result set in the data exploration view')}\n        >\n          <InfoTooltipWithTrigger\n            icon=\"line-chart\"\n            placement=\"top\"\n            label=\"explore\"\n          />{' '}\n          {t('Explore')}\n        </Button>\n      </>\n    );\n  }\n}\nExploreCtasResultsButton.propTypes = propTypes;\n\nfunction mapStateToProps({ sqlLab, common }) {\n  return {\n    errorMessage: sqlLab.errorMessage,\n    timeout: common.conf ? common.conf.SUPERSET_WEBSERVER_TIMEOUT : null,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExploreCtasResultsButton);\n"]},"metadata":{},"sourceType":"module"}