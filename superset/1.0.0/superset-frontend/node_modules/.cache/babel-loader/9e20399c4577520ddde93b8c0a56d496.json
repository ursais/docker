{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport getErrorMessageComponentRegistry from './getErrorMessageComponentRegistry';\nimport ErrorAlert from './ErrorAlert';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_TITLE = t('Unexpected error');\nexport default function ErrorMessageWithStackTrace({ title = DEFAULT_TITLE, error, subtitle, copyText, link, stackTrace, source }) {\n  // Check if a custom error message component was registered for this message\n  if (error) {\n    const ErrorMessageComponent = getErrorMessageComponentRegistry().get(error.error_type);\n    if (ErrorMessageComponent) {\n      return ___EmotionJSX(ErrorMessageComponent, { error: error, source: source, subtitle: subtitle });\n    }\n  }\n  return ___EmotionJSX(ErrorAlert, { level: \"warning\", title: title, subtitle: subtitle, copyText: copyText, source: source, body: link || stackTrace ? ___EmotionJSX(React.Fragment, null,\n    link && ___EmotionJSX(\"a\", { href: link, target: \"_blank\", rel: \"noopener noreferrer\" }, \"(Request Access)\"),\n\n\n    ___EmotionJSX(\"br\", null),\n    stackTrace && ___EmotionJSX(\"pre\", null, stackTrace)) :\n    undefined });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_TITLE, \"DEFAULT_TITLE\", \"/app/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx\");reactHotLoader.register(ErrorMessageWithStackTrace, \"ErrorMessageWithStackTrace\", \"/app/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AAEA,OAAO,gCAAP,MAA6C,oCAA7C;AAEA,OAAO,UAAP,MAAuB,cAAvB,C;AAEA,MAAM,aAAa,GAAG,CAAC,CAAC,kBAAD,CAAvB;AAYA,eAAc,SAAU,0BAAV,CAAqC,EACjD,KAAK,GAAG,aADyC,EAEjD,KAFiD,EAGjD,QAHiD,EAIjD,QAJiD,EAKjD,IALiD,EAMjD,UANiD,EAOjD,MAPiD,EAArC,EAQN;AACN;AACA,MAAI,KAAJ,EAAW;AACT,UAAM,qBAAqB,GAAG,gCAAgC,GAAG,GAAnC,CAC5B,KAAK,CAAC,UADsB,CAA9B;AAGA,QAAI,qBAAJ,EAA2B;AACzB,aACE,cAAC,qBAAD,IACE,KAAK,EAAE,KADT,EAEE,MAAM,EAAE,MAFV,EAGE,QAAQ,EAAE,QAHZ,GADF;AAOD;AACF;AAED,SACE,cAAC,UAAD,IACE,KAAK,EAAC,SADR,EAEE,KAAK,EAAE,KAFT,EAGE,QAAQ,EAAE,QAHZ,EAIE,QAAQ,EAAE,QAJZ,EAKE,MAAM,EAAE,MALV,EAME,IAAI,EACF,IAAI,IAAI,UAAR,GACE;AACG,IAAA,IAAI,IACH,qBAAG,IAAI,EAAE,IAAT,EAAe,MAAM,EAAC,QAAtB,EAA+B,GAAG,EAAC,qBAAnC,uBAFJ;;;AAME,6BANF;AAOG,IAAA,UAAU,IAAI,2BAAM,UAAN,CAPjB,CADF;AAUI,IAAA,SAjBR,GADF;AAsBD,C,iLA3DK,a,gIAYkB,0B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport getErrorMessageComponentRegistry from './getErrorMessageComponentRegistry';\nimport { SupersetError, ErrorSource } from './types';\nimport ErrorAlert from './ErrorAlert';\n\nconst DEFAULT_TITLE = t('Unexpected error');\n\ntype Props = {\n  title?: string;\n  error?: SupersetError;\n  link?: string;\n  subtitle?: React.ReactNode;\n  copyText?: string;\n  stackTrace?: string;\n  source?: ErrorSource;\n};\n\nexport default function ErrorMessageWithStackTrace({\n  title = DEFAULT_TITLE,\n  error,\n  subtitle,\n  copyText,\n  link,\n  stackTrace,\n  source,\n}: Props) {\n  // Check if a custom error message component was registered for this message\n  if (error) {\n    const ErrorMessageComponent = getErrorMessageComponentRegistry().get(\n      error.error_type,\n    );\n    if (ErrorMessageComponent) {\n      return (\n        <ErrorMessageComponent\n          error={error}\n          source={source}\n          subtitle={subtitle}\n        />\n      );\n    }\n  }\n\n  return (\n    <ErrorAlert\n      level=\"warning\"\n      title={title}\n      subtitle={subtitle}\n      copyText={copyText}\n      source={source}\n      body={\n        link || stackTrace ? (\n          <>\n            {link && (\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                (Request Access)\n              </a>\n            )}\n            <br />\n            {stackTrace && <pre>{stackTrace}</pre>}\n          </>\n        ) : undefined\n      }\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}