{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PopoverDropdown from 'src/components/PopoverDropdown';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst dropdownOptions = [\n{\n  value: 'edit',\n  label: t('Edit') },\n\n{\n  value: 'preview',\n  label: t('Preview') }];\n\n\nexport default class MarkdownModeDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return ___EmotionJSX(PopoverDropdown, { id: id, options: dropdownOptions, value: value, onChange: onChange });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(dropdownOptions, \"dropdownOptions\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx\");reactHotLoader.register(MarkdownModeDropdown, \"MarkdownModeDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AAEA,OAAO,eAAP,MAEO,gCAFP,C;AAUA,MAAM,eAAe,GAAG;AACtB;AACE,EAAA,KAAK,EAAE,MADT;AAEE,EAAA,KAAK,EAAE,CAAC,CAAC,MAAD,CAFV,EADsB;;AAKtB;AACE,EAAA,KAAK,EAAE,SADT;AAEE,EAAA,KAAK,EAAE,CAAC,CAAC,SAAD,CAFV,EALsB,CAAxB;;;AAWA,eAAc,MAAO,oBAAP,SAAoC,KAAK,CAAC,aAA1C,CAAkF;AAC9F,EAAA,MAAM,GAAA;AACJ,UAAM,EAAE,EAAF,EAAM,KAAN,EAAa,QAAb,KAA0B,KAAK,KAArC;AAEA,WACE,cAAC,eAAD,IACE,EAAE,EAAE,EADN,EAEE,OAAO,EAAE,eAFX,EAGE,KAAK,EAAE,KAHT,EAIE,QAAQ,EAAE,QAJZ,GADF;AAQD,GAZ6F;AAAA;AAAA,6B,iLAX1F,e,8HAWe,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport PopoverDropdown, {\n  OnChangeHandler,\n} from 'src/components/PopoverDropdown';\n\ninterface MarkdownModeDropdownProps {\n  id: string;\n  value: string;\n  onChange: OnChangeHandler;\n}\n\nconst dropdownOptions = [\n  {\n    value: 'edit',\n    label: t('Edit'),\n  },\n  {\n    value: 'preview',\n    label: t('Preview'),\n  },\n];\n\nexport default class MarkdownModeDropdown extends React.PureComponent<MarkdownModeDropdownProps> {\n  render() {\n    const { id, value, onChange } = this.props;\n\n    return (\n      <PopoverDropdown\n        id={id}\n        options={dropdownOptions}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}