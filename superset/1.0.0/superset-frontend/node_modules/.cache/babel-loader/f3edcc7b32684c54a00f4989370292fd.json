{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  colorScheme: PropTypes.string,\n  colorNamespace: PropTypes.string };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  value: {},\n  colorScheme: undefined,\n  colorNamespace: undefined };\n\n\nexport default class ColorMapControl extends React.PureComponent {\n  constructor(props) {var _context;\n    super(props);\n    _forEachInstanceProperty(_context = _Object$keys(this.props.value)).call(_context, label => {\n      CategoricalColorNamespace.getScale(\n      this.props.colorScheme,\n      this.props.colorNamespace).\n      setColor(label, this.props.value[label]);\n    });\n  }\n\n  render() {\n    return null;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nColorMapControl.propTypes = propTypes;\nColorMapControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/ColorMapControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/ColorMapControl.jsx\");reactHotLoader.register(ColorMapControl, \"ColorMapControl\", \"/app/superset-frontend/src/explore/components/controls/ColorMapControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/ColorMapControl.jsx"],"names":["PropTypes","React","CategoricalColorNamespace","propTypes","onChange","func","value","object","colorScheme","string","colorNamespace","defaultProps","undefined","ColorMapControl","PureComponent","constructor","props","label","getScale","setColor","render"],"mappings":"odAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,QAA0C,mBAA1C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEJ,SAAS,CAACK,IADJ;AAEhBC,EAAAA,KAAK,EAAEN,SAAS,CAACO,MAFD;AAGhBC,EAAAA,WAAW,EAAER,SAAS,CAACS,MAHP;AAIhBC,EAAAA,cAAc,EAAEV,SAAS,CAACS,MAJV,EAAlB;;;AAOA,MAAME,YAAY,GAAG;AACnBP,EAAAA,QAAQ,EAAE,MAAM,CAAE,CADC;AAEnBE,EAAAA,KAAK,EAAE,EAFY;AAGnBE,EAAAA,WAAW,EAAEI,SAHM;AAInBF,EAAAA,cAAc,EAAEE,SAJG,EAArB;;;AAOA,eAAe,MAAMC,eAAN,SAA8BZ,KAAK,CAACa,aAApC,CAAkD;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,qDAAY,KAAKA,KAAL,CAAWV,KAAvB,kBAAsCW,KAAK,IAAI;AAC7Cf,MAAAA,yBAAyB,CAACgB,QAA1B;AACE,WAAKF,KAAL,CAAWR,WADb;AAEE,WAAKQ,KAAL,CAAWN,cAFb;AAGES,MAAAA,QAHF,CAGWF,KAHX,EAGkB,KAAKD,KAAL,CAAWV,KAAX,CAAiBW,KAAjB,CAHlB;AAID,KALD;AAMD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD,GAb8D;AAAA;AAAA;AAgBjEP,eAAe,CAACV,SAAhB,GAA4BA,SAA5B;AACAU,eAAe,CAACF,YAAhB,GAA+BA,YAA/B,C,iLA/BMR,S,qHAOAQ,Y,wHAOeE,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  colorScheme: PropTypes.string,\n  colorNamespace: PropTypes.string,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  value: {},\n  colorScheme: undefined,\n  colorNamespace: undefined,\n};\n\nexport default class ColorMapControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    Object.keys(this.props.value).forEach(label => {\n      CategoricalColorNamespace.getScale(\n        this.props.colorScheme,\n        this.props.colorNamespace,\n      ).setColor(label, this.props.value[label]);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nColorMapControl.propTypes = propTypes;\nColorMapControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}