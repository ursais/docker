{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\nDASHBOARD_GRID_TYPE,\nCHART_TYPE,\nCOLUMN_TYPE,\nMARKDOWN_TYPE,\nTAB_TYPE } from\n'./componentTypes';\n\nconst typeToWrapChildLookup = {\n  [DASHBOARD_GRID_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true },\n\n\n  [TAB_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true } };\n\n\n\nexport default function shouldWrapChildInRow({ parentType, childType }) {\n  if (!parentType || !childType) return false;\n\n  const wrapChildLookup = typeToWrapChildLookup[parentType];\n  if (!wrapChildLookup) return false;\n\n  return Boolean(wrapChildLookup[childType]);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(typeToWrapChildLookup, \"typeToWrapChildLookup\", \"/app/superset-frontend/src/dashboard/util/shouldWrapChildInRow.js\");reactHotLoader.register(shouldWrapChildInRow, \"shouldWrapChildInRow\", \"/app/superset-frontend/src/dashboard/util/shouldWrapChildInRow.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/shouldWrapChildInRow.js"],"names":["DASHBOARD_GRID_TYPE","CHART_TYPE","COLUMN_TYPE","MARKDOWN_TYPE","TAB_TYPE","typeToWrapChildLookup","shouldWrapChildInRow","parentType","childType","wrapChildLookup","Boolean"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,mBADF;AAEEC,UAFF;AAGEC,WAHF;AAIEC,aAJF;AAKEC,QALF;AAMO,kBANP;;AAQA,MAAMC,qBAAqB,GAAG;AAC5B,GAACL,mBAAD,GAAuB;AACrB,KAACC,UAAD,GAAc,IADO;AAErB,KAACC,WAAD,GAAe,IAFM;AAGrB,KAACC,aAAD,GAAiB,IAHI,EADK;;;AAO5B,GAACC,QAAD,GAAY;AACV,KAACH,UAAD,GAAc,IADJ;AAEV,KAACC,WAAD,GAAe,IAFL;AAGV,KAACC,aAAD,GAAiB,IAHP,EAPgB,EAA9B;;;;AAcA,eAAe,SAASG,oBAAT,CAA8B,EAAEC,UAAF,EAAcC,SAAd,EAA9B,EAAyD;AACtE,MAAI,CAACD,UAAD,IAAe,CAACC,SAApB,EAA+B,OAAO,KAAP;;AAE/B,QAAMC,eAAe,GAAGJ,qBAAqB,CAACE,UAAD,CAA7C;AACA,MAAI,CAACE,eAAL,EAAsB,OAAO,KAAP;;AAEtB,SAAOC,OAAO,CAACD,eAAe,CAACD,SAAD,CAAhB,CAAd;AACD,C,iLArBKH,qB,wHAckBC,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_GRID_TYPE,\n  CHART_TYPE,\n  COLUMN_TYPE,\n  MARKDOWN_TYPE,\n  TAB_TYPE,\n} from './componentTypes';\n\nconst typeToWrapChildLookup = {\n  [DASHBOARD_GRID_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n\n  [TAB_TYPE]: {\n    [CHART_TYPE]: true,\n    [COLUMN_TYPE]: true,\n    [MARKDOWN_TYPE]: true,\n  },\n};\n\nexport default function shouldWrapChildInRow({ parentType, childType }) {\n  if (!parentType || !childType) return false;\n\n  const wrapChildLookup = typeToWrapChildLookup[parentType];\n  if (!wrapChildLookup) return false;\n\n  return Boolean(wrapChildLookup[childType]);\n}\n"]},"metadata":{},"sourceType":"module"}