{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { ToastType } from '../types';\nexport function getToastUuid(type) {\n  return `${type}-${shortid.generate()}`;\n}\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast({ toastType, text, duration = 8000, noDuplicate = false }) {\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate } };\n\n\n}\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id } };\n\n\n}\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.INFO,\n    duration: 4000,\n    ...options });\n\n}\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.SUCCESS,\n    duration: 4000,\n    ...options });\n\n}\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.WARNING,\n    duration: 6000,\n    ...options });\n\n}\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.DANGER,\n    duration: 8000,\n    ...options });\n\n}\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getToastUuid, \"getToastUuid\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(ADD_TOAST, \"ADD_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(addToast, \"addToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(REMOVE_TOAST, \"REMOVE_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(removeToast, \"removeToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(ADD_INFO_TOAST, \"ADD_INFO_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(addInfoToast, \"addInfoToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(ADD_SUCCESS_TOAST, \"ADD_SUCCESS_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(addSuccessToast, \"addSuccessToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(ADD_WARNING_TOAST, \"ADD_WARNING_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(addWarningToast, \"addWarningToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(ADD_DANGER_TOAST, \"ADD_DANGER_TOAST\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(addDangerToast, \"addDangerToast\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");reactHotLoader.register(toastActions, \"toastActions\", \"/app/superset-frontend/src/messageToasts/actions/index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/messageToasts/actions/index.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,OAAP,MAAoB,SAApB;AACA,SAAS,SAAT,QAAqC,UAArC;AAIA,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAsC;AAC1C,SAAO,GAAG,IAAI,IAAI,OAAO,CAAC,QAAR,EAAkB,EAApC;AACD;AAED,OAAO,MAAM,SAAS,GAAG,WAAlB;AACP,OAAM,SAAU,QAAV,CAAmB,EACvB,SADuB,EAEvB,IAFuB,EAGvB,QAAQ,GAAG,IAHY,EAIvB,WAAW,GAAG,KAJS,EAAnB,EAKkB;AACtB,SAAO;AACL,IAAA,IAAI,EAAE,SADD;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,EAAE,EAAE,YAAY,CAAC,SAAD,CADT;AAEP,MAAA,SAFO;AAGP,MAAA,IAHO;AAIP,MAAA,QAJO;AAKP,MAAA,WALO,EAFJ,EAAP;;;AAUD;AAED,OAAO,MAAM,YAAY,GAAG,cAArB;AACP,OAAM,SAAU,WAAV,CAAsB,EAAtB,EAAgC;AACpC,SAAO;AACL,IAAA,IAAI,EAAE,YADD;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,EADO,EAFJ,EAAP;;;AAMD;AAED;AACA,OAAO,MAAM,cAAc,GAAG,gBAAvB;AACP,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAqC,OAArC,EAA2D;AAC/D,SAAO,QAAQ,CAAC;AACd,IAAA,IADc;AAEd,IAAA,SAAS,EAAE,SAAS,CAAC,IAFP;AAGd,IAAA,QAAQ,EAAE,IAHI;AAId,OAAG,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAM,iBAAiB,GAAG,mBAA1B;AACP,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAwC,OAAxC,EAA8D;AAClE,SAAO,QAAQ,CAAC;AACd,IAAA,IADc;AAEd,IAAA,SAAS,EAAE,SAAS,CAAC,OAFP;AAGd,IAAA,QAAQ,EAAE,IAHI;AAId,OAAG,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAM,iBAAiB,GAAG,mBAA1B;AACP,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAwC,OAAxC,EAA8D;AAClE,SAAO,QAAQ,CAAC;AACd,IAAA,IADc;AAEd,IAAA,SAAS,EAAE,SAAS,CAAC,OAFP;AAGd,IAAA,QAAQ,EAAE,IAHI;AAId,OAAG,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAM,gBAAgB,GAAG,kBAAzB;AACP,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAuC,OAAvC,EAA6D;AACjE,SAAO,QAAQ,CAAC;AACd,IAAA,IADc;AAEd,IAAA,SAAS,EAAE,SAAS,CAAC,MAFP;AAGd,IAAA,QAAQ,EAAE,IAHI;AAId,OAAG,OAJW,EAAD,CAAf;;AAMD;AAED,OAAO,MAAM,YAAY,GAAG;AAC1B,EAAA,YAD0B;AAE1B,EAAA,eAF0B;AAG1B,EAAA,eAH0B;AAI1B,EAAA,cAJ0B,EAArB,C,iLA1ES,Y,uGAIH,S,oGACG,Q,mGAkBH,Y,uGACG,W,sGAUH,c,yGACG,Y,uGASH,iB,4GACG,e,0GASH,iB,4GACG,e,0GASH,gB,2GACG,c,yGASH,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { ToastType, ToastMeta } from '../types';\n\ntype ToastOptions = Partial<Omit<ToastMeta, 'id' | 'toastType' | 'text'>>;\n\nexport function getToastUuid(type: ToastType) {\n  return `${type}-${shortid.generate()}`;\n}\n\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast({\n  toastType,\n  text,\n  duration = 8000,\n  noDuplicate = false,\n}: Omit<ToastMeta, 'id'>) {\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate,\n    },\n  };\n}\n\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id: string) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id,\n    },\n  };\n}\n\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.INFO,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.SUCCESS,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.WARNING,\n    duration: 6000,\n    ...options,\n  });\n}\n\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.DANGER,\n    duration: 8000,\n    ...options,\n  });\n}\n\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}