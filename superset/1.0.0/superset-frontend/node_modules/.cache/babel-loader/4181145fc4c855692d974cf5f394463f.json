{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch } from 'react-redux';\nimport { addDangerToast, addInfoToast, addSuccessToast, addWarningToast } from '../actions';\nconst toasters = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast };\n\n// To work properly the redux state must have a `messageToasts` subtree\nexport default function withToasts(BaseComponent) {\n  return connect(null, dispatch => bindActionCreators(toasters, dispatch))(BaseComponent);\n  // Redux has some confusing typings that cause problems for consumers of this function.\n  // If someone can fix the types, great, but for now it's just any.\n}\nexport function useToasts() {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(toasters, dispatch), [dispatch]);\n}__signature__(useToasts, \"useDispatch{dispatch}\\nuseMemo{}\", () => [useDispatch]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(toasters, \"toasters\", \"/app/superset-frontend/src/messageToasts/enhancers/withToasts.tsx\");reactHotLoader.register(withToasts, \"withToasts\", \"/app/superset-frontend/src/messageToasts/enhancers/withToasts.tsx\");reactHotLoader.register(useToasts, \"useToasts\", \"/app/superset-frontend/src/messageToasts/enhancers/withToasts.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/messageToasts/enhancers/withToasts.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAwB,OAAxB,QAAuC,OAAvC;AACA,SAAS,kBAAT,QAAmC,OAAnC;AACA,SAAS,OAAT,EAAkB,WAAlB,QAAqC,aAArC;AAEA,SACE,cADF,EAEE,YAFF,EAGE,eAHF,EAIE,eAJF,QAKO,YALP;AAcA,MAAM,QAAQ,GAAG;AACf,EAAA,YADe;AAEf,EAAA,eAFe;AAGf,EAAA,eAHe;AAIf,EAAA,cAJe,EAAjB;;AAOA;AACA,eAAc,SAAU,UAAV,CAAqB,aAArB,EAAsD;AAClE,SAAO,OAAO,CAAC,IAAD,EAAO,QAAQ,IAAI,kBAAkB,CAAC,QAAD,EAAW,QAAX,CAArC,CAAP,CACL,aADK,CAAP;AAGA;AACA;AACD;AAED,OAAM,SAAU,SAAV,GAAmB;AACvB,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,SAAO,OAAO,CAAC,MAAM,kBAAkB,CAAC,QAAD,EAAW,QAAX,CAAzB,EAA+C,CAAC,QAAD,CAA/C,CAAd;AACD,C,cAHe,S,6CACG,W,oLAjBb,Q,2GAQkB,U,6GAQR,S","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ComponentType, useMemo } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch } from 'react-redux';\n\nimport {\n  addDangerToast,\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n} from '../actions';\n\nexport interface ToastProps {\n  addDangerToast: typeof addDangerToast;\n  addInfoToast: typeof addInfoToast;\n  addSuccessToast: typeof addSuccessToast;\n  addWarningToast: typeof addWarningToast;\n}\n\nconst toasters = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n};\n\n// To work properly the redux state must have a `messageToasts` subtree\nexport default function withToasts(BaseComponent: ComponentType<any>) {\n  return connect(null, dispatch => bindActionCreators(toasters, dispatch))(\n    BaseComponent,\n  ) as any;\n  // Redux has some confusing typings that cause problems for consumers of this function.\n  // If someone can fix the types, great, but for now it's just any.\n}\n\nexport function useToasts() {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(toasters, dispatch), [dispatch]);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}