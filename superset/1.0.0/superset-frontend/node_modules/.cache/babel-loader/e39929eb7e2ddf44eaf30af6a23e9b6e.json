{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";var _context;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Select from 'src/components/Select';\nimport { t, styled } from '@superset-ui/core';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const options = _mapInstanceProperty(_context = [\n[0, t(\"Don't refresh\")],\n[10, t('10 seconds')],\n[30, t('30 seconds')],\n[60, t('1 minute')],\n[300, t('5 minutes')],\n[1800, t('30 minutes')],\n[3600, t('1 hour')],\n[21600, t('6 hours')],\n[43200, t('12 hours')],\n[86400, t('24 hours')]]).call(_context,\no => ({ value: o[0], label: o[1] }));\nconst StyledModalTrigger = styled(ModalTrigger)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\nconst RefreshWarningContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 6}px;\n`;\nclass RefreshIntervalModal extends React.PureComponent {\n  constructor(props) {var _context2, _context3, _context4;\n    super(props);\n    this.modalRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      refreshFrequency: props.refreshFrequency };\n\n    this.handleFrequencyChange = _bindInstanceProperty(_context2 = this.handleFrequencyChange).call(_context2, this);\n    this.onSave = _bindInstanceProperty(_context3 = this.onSave).call(_context3, this);\n    this.onCancel = _bindInstanceProperty(_context4 = this.onCancel).call(_context4, this);\n  }\n  onSave() {var _this$modalRef$curren;\n    this.props.onChange(this.state.refreshFrequency, this.props.editMode);\n    (_this$modalRef$curren = this.modalRef.current) == null ? void 0 : _this$modalRef$curren.close();\n  }\n  onCancel() {var _this$modalRef$curren2;\n    this.setState({\n      refreshFrequency: this.props.refreshFrequency });\n\n    (_this$modalRef$curren2 = this.modalRef.current) == null ? void 0 : _this$modalRef$curren2.close();\n  }\n  handleFrequencyChange(opt) {\n    const value = opt ? opt.value : options[0].value;\n    this.setState({\n      refreshFrequency: value });\n\n  }\n  render() {\n    const { refreshLimit = 0, refreshWarning, editMode } = this.props;\n    const { refreshFrequency = 0 } = this.state;\n    const showRefreshWarning = !!refreshFrequency && !!refreshWarning && refreshFrequency < refreshLimit;\n    return ___EmotionJSX(StyledModalTrigger, { ref: this.modalRef, triggerNode: this.props.triggerNode, modalTitle: t('Refresh interval'), modalBody: ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(FormLabel, null, t('Refresh frequency')),\n      ___EmotionJSX(Select, { options: options, value: { value: refreshFrequency }, onChange: this.handleFrequencyChange, forceOverflow: true }),\n      showRefreshWarning && ___EmotionJSX(RefreshWarningContainer, null,\n      ___EmotionJSX(Alert, { type: \"warning\", message: ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(\"div\", null, refreshWarning),\n        ___EmotionJSX(\"br\", null),\n        ___EmotionJSX(\"strong\", null, t('Are you sure you want to proceed?'))) }))),\n\n\n      modalFooter: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, { buttonStyle: \"primary\", buttonSize: \"small\", onClick: this.onSave },\n      editMode ? t('Save') : t('Save for this session')),\n\n      ___EmotionJSX(Button, { onClick: this.onCancel, buttonSize: \"small\" },\n      t('Cancel'))) });\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}RefreshIntervalModal.defaultProps = {\n  refreshLimit: 0,\n  refreshWarning: null };const _default =\n\nRefreshIntervalModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(options, \"options\", \"/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(StyledModalTrigger, \"StyledModalTrigger\", \"/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(RefreshWarningContainer, \"RefreshWarningContainer\", \"/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(RefreshIntervalModal, \"RefreshIntervalModal\", \"/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/RefreshIntervalModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { RefObject } from 'react';\nimport Select from 'src/components/Select';\nimport { t, styled } from '@superset-ui/core';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\n\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { FormLabel } from 'src/components/Form';\n\nexport const options = [\n  [0, t(\"Don't refresh\")],\n  [10, t('10 seconds')],\n  [30, t('30 seconds')],\n  [60, t('1 minute')],\n  [300, t('5 minutes')],\n  [1800, t('30 minutes')],\n  [3600, t('1 hour')],\n  [21600, t('6 hours')],\n  [43200, t('12 hours')],\n  [86400, t('24 hours')],\n].map(o => ({ value: o[0], label: o[1] }));\n\nconst StyledModalTrigger = styled(ModalTrigger)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\n\nconst RefreshWarningContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\ntype RefreshIntervalModalProps = {\n  triggerNode: JSX.Element;\n  refreshFrequency: number;\n  onChange: (refreshLimit: number, editMode: boolean) => void;\n  editMode: boolean;\n  refreshLimit?: number;\n  refreshWarning: string | null;\n};\n\ntype RefreshIntervalModalState = {\n  refreshFrequency: number;\n};\n\nclass RefreshIntervalModal extends React.PureComponent<\n  RefreshIntervalModalProps,\n  RefreshIntervalModalState\n> {\n  static defaultProps = {\n    refreshLimit: 0,\n    refreshWarning: null,\n  };\n\n  modalRef: RefObject<ModalTrigger>;\n\n  constructor(props: RefreshIntervalModalProps) {\n    super(props);\n    this.modalRef = React.createRef();\n    this.state = {\n      refreshFrequency: props.refreshFrequency,\n    };\n    this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  onSave() {\n    this.props.onChange(this.state.refreshFrequency, this.props.editMode);\n    this.modalRef.current?.close();\n  }\n\n  onCancel() {\n    this.setState({\n      refreshFrequency: this.props.refreshFrequency,\n    });\n    this.modalRef.current?.close();\n  }\n\n  handleFrequencyChange(opt: Record<string, any>) {\n    const value = opt ? opt.value : options[0].value;\n    this.setState({\n      refreshFrequency: value,\n    });\n  }\n\n  render() {\n    const { refreshLimit = 0, refreshWarning, editMode } = this.props;\n    const { refreshFrequency = 0 } = this.state;\n    const showRefreshWarning =\n      !!refreshFrequency && !!refreshWarning && refreshFrequency < refreshLimit;\n\n    return (\n      <StyledModalTrigger\n        ref={this.modalRef}\n        triggerNode={this.props.triggerNode}\n        modalTitle={t('Refresh interval')}\n        modalBody={\n          <div>\n            <FormLabel>{t('Refresh frequency')}</FormLabel>\n            <Select\n              options={options}\n              value={{ value: refreshFrequency }}\n              onChange={this.handleFrequencyChange}\n              forceOverflow\n            />\n            {showRefreshWarning && (\n              <RefreshWarningContainer>\n                <Alert\n                  type=\"warning\"\n                  message={\n                    <>\n                      <div>{refreshWarning}</div>\n                      <br />\n                      <strong>{t('Are you sure you want to proceed?')}</strong>\n                    </>\n                  }\n                />\n              </RefreshWarningContainer>\n            )}\n          </div>\n        }\n        modalFooter={\n          <>\n            <Button\n              buttonStyle=\"primary\"\n              buttonSize=\"small\"\n              onClick={this.onSave}\n            >\n              {editMode ? t('Save') : t('Save for this session')}\n            </Button>\n            <Button onClick={this.onCancel} buttonSize=\"small\">\n              {t('Cancel')}\n            </Button>\n          </>\n        }\n      />\n    );\n  }\n}\n\nexport default RefreshIntervalModal;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}