{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, getChartMetadataRegistry, styled, t } from '@superset-ui/core';\nimport React, { useCallback, useEffect, useState, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormItem } from 'src/components/Form';\nimport { Checkbox, Input } from 'src/common/components';\nimport { Select } from 'src/components/Select';\nimport SupersetResourceSelect, { cachedSupersetGet } from 'src/components/SupersetResourceSelect';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport Collapse from 'src/components/Collapse';\nimport { getChartDataRequest } from 'src/chart/chartAction';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport Tabs from 'src/components/Tabs';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport { ColumnSelect } from './ColumnSelect';\nimport { datasetToSelectOption, setNativeFilterFieldValues, useForceUpdate } from './utils';\nimport { useBackendFormUpdate } from './state';\nimport { getFormData } from '../../utils';\nimport getControlItemsMap from './getControlItemsMap';\nimport FilterScope from './FilterScope/FilterScope';\nimport RemovedFilter from './RemovedFilter';\nimport DefaultValue from './DefaultValue';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { CASCADING_FILTERS, getFiltersConfigModalTestId } from '../FiltersConfigModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { TabPane } = Tabs;\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0px;\n  padding-bottom: 0px;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst StyledCollapse = styled(Collapse)`\n  margin-left: ${({ theme }) => theme.gridUnit * -4 - 1}px;\n  margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n  border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0px;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0px;\n  }\n\n  .ant-collapse-content {\n    border: 0px;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0px;\n    border-radius: 0px;\n  }\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    margin-left: ${({ theme }) => theme.gridUnit * -4}px;\n    margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n    top: 0px;\n    background: white;\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0px;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n`;\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Configuration') },\n\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping') } };\n\n\nconst FilterPanels = {\n  basic: {\n    key: 'basic',\n    name: t('Basic') },\n\n  advanced: {\n    key: 'advanced',\n    name: t('Advanced') } };\n\n\n// TODO: Need to do with it something\nconst FILTERS_WITHOUT_COLUMN = [\n'filter_timegrain',\n'filter_timecolumn',\n'filter_groupby'];\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\nconst BASIC_CONTROL_ITEMS = ['enableEmptyFilter', 'multiSelect'];\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by') };\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = ({ filterId, filterToEdit, removed, restoreFilter, form, parentFilters }, ref) => {var _filterToEdit$default, _filterToEdit$default2, _form$getFieldValue, _context, _context2, _nativeFilterItems$fo, _nativeFilterItems$fo2, _nativeFilterItems$fo3, _nativeFilterItems$fo4, _formFilter$dataset, _formFilter$isDataDir, _context3, _filterToEdit$targets, _filterToEdit$targets2, _filterToEdit$targets3, _filterToEdit$targets4, _filterToEdit$control, _formFilter$adhoc_fil, _context6, _context7, _context8, _context9, _context10, _datasetDetails$colum, _filterToEdit$control2;\n  const [error, setError] = useState('');\n  const [metrics, setMetrics] = useState([]);\n  const [activeTabKey, setActiveTabKey] = useState(FilterTabs.configuration.key);\n  const [activeFilterPanelKey, setActiveFilterPanelKey] = useState(FilterPanels.basic.key);\n  const [hasDefaultValue, setHasDefaultValue] = useState(!!(filterToEdit != null && (_filterToEdit$default = filterToEdit.defaultDataMask) != null && (_filterToEdit$default2 = _filterToEdit$default.filterState) != null && _filterToEdit$default2.value));\n  const forceUpdate = useForceUpdate();\n  const [datasetDetails, setDatasetDetails] = useState();\n  const defaultFormFilter = useMemo(() => {}, []);\n  const formFilter = ((_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId]) || defaultFormFilter;\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = _mapInstanceProperty(_context = _filterInstanceProperty(_context2 = _Object$entries(nativeFilterItems)\n  // @ts-ignore\n  ).call(_context2, ([, { value }]) => {var _value$behaviors;return (_value$behaviors = value.behaviors) == null ? void 0 : _includesInstanceProperty(_value$behaviors).call(_value$behaviors, Behavior.NATIVE_FILTER);})).call(_context,\n  ([key]) => key);\n  const loadedDatasets = useSelector(({ datasources }) => datasources);\n  // @ts-ignore\n  const hasDataset = !!((_nativeFilterItems$fo = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo2 = _nativeFilterItems$fo.value) != null && _nativeFilterItems$fo2.\n  datasourceCount);\n  const hasColumn = hasDataset && !_includesInstanceProperty(FILTERS_WITHOUT_COLUMN).call(FILTERS_WITHOUT_COLUMN, formFilter == null ? void 0 : formFilter.filterType);\n  // @ts-ignore\n  const enableNoResults = !!((_nativeFilterItems$fo3 = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo4 = _nativeFilterItems$fo3.value) != null && _nativeFilterItems$fo4.\n  enableNoResults);\n  const datasetId = formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value;\n  useEffect(() => {\n    if (datasetId && hasColumn) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}` }).\n\n      then(response => {var _response$json, _response$json$result, _response$json2;\n        setMetrics((_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result) == null ? void 0 : _response$json$result.metrics);\n        const dataset = (_response$json2 = response.json) == null ? void 0 : _response$json2.result;\n        // modify the response to fit structure expected by AdhocFilterControl\n        dataset.type = dataset.datasource_type;\n        dataset.filter_select = true;\n        setDatasetDetails(dataset);\n      }).\n      catch(response => {\n        addDangerToast(response.message);\n      });\n    }\n  }, [datasetId, hasColumn]);\n  useImperativeHandle(ref, () => ({\n    changeTab(tab) {\n      setActiveTabKey(tab);\n    } }));\n\n  const hasMetrics = hasColumn && !!metrics.length;\n  const hasFilledDataset = !hasDataset || datasetId && ((formFilter == null ? void 0 : formFilter.column) || !hasColumn);\n  const hasAdditionalFilters = _includesInstanceProperty(FILTERS_WITH_ADHOC_FILTERS).call(FILTERS_WITH_ADHOC_FILTERS, formFilter == null ? void 0 : formFilter.filterType);\n  const isCascadingFilter = _includesInstanceProperty(CASCADING_FILTERS).call(CASCADING_FILTERS, formFilter == null ? void 0 : formFilter.filterType);\n  const isDataDirty = (_formFilter$isDataDir = formFilter == null ? void 0 : formFilter.isDataDirty) != null ? _formFilter$isDataDir : true;\n  useBackendFormUpdate(form, filterId);\n  const setNativeFilterFieldValuesWrapper = values => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError('');\n    forceUpdate();\n  };\n  const setErrorWrapper = error => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null });\n\n    setError(error);\n    forceUpdate();\n  };\n  const refreshHandler = useCallback(() => {var _formFilter$dataset2, _formFilter$dataset3;\n    if (!hasDataset || !(formFilter != null && (_formFilter$dataset2 = formFilter.dataset) != null && _formFilter$dataset2.value)) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter == null ? void 0 : (_formFilter$dataset3 = formFilter.dataset) == null ? void 0 : _formFilter$dataset3.value,\n      groupby: formFilter == null ? void 0 : formFilter.column,\n      ...formFilter });\n\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false });\n\n    getChartDataRequest({\n      formData,\n      force: false,\n      requestParams: { dashboardId: 0 } }).\n\n    then(response => {\n      if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n        // deal with getChartDataRequest transforming the response data\n        const result = 'result' in response ? response.result[0] : response;\n        waitForAsyncData(result).\n        then(asyncResult => {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: asyncResult });\n\n        }).\n        catch(error => {\n          setError(error.message || error.error || t('Check configuration'));\n        });\n      } else\n      {\n        setNativeFilterFieldValuesWrapper({\n          defaultValueQueriesData: response.result });\n\n      }\n    }).\n    catch(error => {\n      error.json().then(body => {\n        setErrorWrapper(body.message || error.statusText || t('Check configuration'));\n      });\n    });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset]);\n  const defaultDatasetSelectOptions = _mapInstanceProperty(_context3 = _Object$values(loadedDatasets)).call(_context3, datasetToSelectOption);\n  const initialDatasetId = (_filterToEdit$targets = filterToEdit == null ? void 0 : (_filterToEdit$targets2 = filterToEdit.targets[0]) == null ? void 0 : _filterToEdit$targets2.datasetId) != null ? _filterToEdit$targets :\n  defaultDatasetSelectOptions.length === 1 ?\n  defaultDatasetSelectOptions[0].value :\n  undefined;\n  const initColumn = filterToEdit == null ? void 0 : (_filterToEdit$targets3 = filterToEdit.targets[0]) == null ? void 0 : (_filterToEdit$targets4 = _filterToEdit$targets3.column) == null ? void 0 : _filterToEdit$targets4.name;\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter == null ? void 0 : formFilter.column : undefined,\n    ...formFilter });\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n  hasDataset,\n  hasFilledDataset,\n  hasDefaultValue,\n  formFilter,\n  isDataDirty,\n  refreshHandler]);\n\n  const onDatasetSelectError = useCallback(({ error, message }) => {\n    let errorText = message || error || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this dashboard');\n    }\n    addDangerToast(errorText);\n  }, []);\n  const parentFilterOptions = _mapInstanceProperty(parentFilters).call(parentFilters, filter => ({\n    value: filter.id,\n    label: filter.title }));\n\n  const parentFilter = _findInstanceProperty(parentFilterOptions).call(parentFilterOptions, ({ value }) => value === (filterToEdit == null ? void 0 : filterToEdit.cascadeParentIds[0]));\n  const hasParentFilter = !!parentFilter;\n  const hasPreFilter = !!(filterToEdit != null && filterToEdit.adhoc_filters) || !!(filterToEdit != null && filterToEdit.time_range);\n  const hasSorting = typeof (filterToEdit == null ? void 0 : (_filterToEdit$control = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control.sortAscending) === 'boolean';\n  const showDefaultValue = !hasDataset || !isDataDirty && hasFilledDataset;\n  const controlItems = formFilter ?\n  getControlItemsMap({\n    disabled: false,\n    forceUpdate,\n    form,\n    filterId,\n    filterType: formFilter.filterType,\n    filterToEdit,\n    formFilter }) :\n\n  {};\n  const onSortChanged = value => {var _form$getFieldValue2;\n    const previous = (_form$getFieldValue2 = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue2[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value } });\n\n\n    forceUpdate();\n  };\n  const validatePreFilter = () => _setTimeout(() => form.validateFields([\n  ['filters', filterId, 'adhoc_filters'],\n  ['filters', filterId, 'time_range']]),\n  0);\n  const hasTimeRange = (formFilter == null ? void 0 : formFilter.time_range) && formFilter.time_range !== 'No filter';\n  const hasAdhoc = (formFilter == null ? void 0 : (_formFilter$adhoc_fil = formFilter.adhoc_filters) == null ? void 0 : _formFilter$adhoc_fil.length) > 0;\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return _Promise.resolve();\n    }\n    return _Promise.reject(new Error(t('Pre-filter is required')));\n  };\n  let hasCheckedAdvancedControl = hasParentFilter || hasPreFilter || hasSorting;\n  if (!hasCheckedAdvancedControl) {var _context4, _context5;\n    hasCheckedAdvancedControl = _someInstanceProperty(_context4 = _filterInstanceProperty(_context5 = _Object$keys(controlItems)).call(_context5,\n    key => !_includesInstanceProperty(BASIC_CONTROL_ITEMS).call(BASIC_CONTROL_ITEMS, key))).call(_context4,\n    key => controlItems[key].checked);\n  }\n  useEffect(() => {\n    const activeFilterPanelKey = [FilterPanels.basic.key];\n    if (hasCheckedAdvancedControl) {\n      activeFilterPanelKey.push(FilterPanels.advanced.key);\n    }\n    setActiveFilterPanelKey(activeFilterPanelKey);\n  }, [hasCheckedAdvancedControl]);\n  if (removed) {\n    return ___EmotionJSX(RemovedFilter, { onClick: () => restoreFilter(filterId) });\n  }\n  return ___EmotionJSX(StyledTabs, { activeKey: activeTabKey, onChange: activeKey => setActiveTabKey(activeKey), centered: true },\n  ___EmotionJSX(TabPane, { tab: FilterTabs.configuration.name, key: FilterTabs.configuration.key, forceRender: true },\n  ___EmotionJSX(StyledContainer, null,\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'name'], label: ___EmotionJSX(StyledLabel, null, t('Filter name')), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !removed, message: t('Name is required') }] },\n  ___EmotionJSX(Input, getFiltersConfigModalTestId('name-input'))),\n\n  ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'filterType'], rules: [{ required: !removed, message: t('Name is required') }], initialValue: (filterToEdit == null ? void 0 : filterToEdit.filterType) || 'filter_select', label: ___EmotionJSX(StyledLabel, null, t('Filter Type')) }, getFiltersConfigModalTestId('filter-type')),\n  ___EmotionJSX(Select, { options: _mapInstanceProperty(nativeFilterVizTypes).call(nativeFilterVizTypes, filterType => {var _nativeFilterItems$fi;\n      // @ts-ignore\n      const name = (_nativeFilterItems$fi = nativeFilterItems[filterType]) == null ? void 0 : _nativeFilterItems$fi.value.name;\n      const mappedName = name ?\n      FILTER_TYPE_NAME_MAPPING[name] :\n      undefined;\n      return {\n        value: filterType,\n        label: mappedName || name };\n\n    }), onChange: ({ value }) => {\n      setNativeFilterFieldValues(form, filterId, {\n        filterType: value,\n        defaultDataMask: null });\n\n      forceUpdate();\n    } }))),\n\n\n  hasDataset && ___EmotionJSX(StyledRowContainer, null,\n  ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'dataset'], initialValue: { value: initialDatasetId }, label: ___EmotionJSX(StyledLabel, null, t('Dataset')), rules: [\n    { required: !removed, message: t('Dataset is required') }] },\n  getFiltersConfigModalTestId('datasource-input')),\n  ___EmotionJSX(SupersetResourceSelect, { initialId: initialDatasetId, resource: \"dataset\", searchColumn: \"table_name\", transformItem: datasetToSelectOption, isMulti: false, onError: onDatasetSelectError, defaultOptions: _mapInstanceProperty(_context6 = _Object$values(loadedDatasets)).call(_context6, datasetToSelectOption), onChange: e => {\n      // We need reset column when dataset changed\n      if (datasetId && (e == null ? void 0 : e.value) !== datasetId) {\n        setNativeFilterFieldValues(form, filterId, {\n          defaultDataMask: null,\n          column: null });\n\n      }\n      forceUpdate();\n    } })),\n\n  hasColumn && ___EmotionJSX(StyledFormItem\n  // don't show the column select unless we have a dataset\n  // style={{ display: datasetId == null ? undefined : 'none' }}\n  , { name: ['filters', filterId, 'column'], initialValue: initColumn, label: ___EmotionJSX(StyledLabel, null, t('Column')), rules: [\n    { required: !removed, message: t('Column is required') }],\n    \"data-test\": \"field-input\" },\n  ___EmotionJSX(ColumnSelect, { form: form, filterId: filterId, datasetId: datasetId, onChange: () => {\n      // We need reset default value when when column changed\n      setNativeFilterFieldValues(form, filterId, {\n        defaultDataMask: null });\n\n      forceUpdate();\n    } }))),\n\n\n  ___EmotionJSX(StyledCollapse, { activeKey: activeFilterPanelKey, onChange: key => setActiveFilterPanelKey(key), expandIconPosition: \"right\" },\n  ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.basic.name, key: FilterPanels.basic.key },\n  hasFilledDataset && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValueFormData'], hidden: true, initialValue: newFormData }),\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValueQueriesData'], hidden: true, initialValue: null }),\n  ___EmotionJSX(CollapsibleControl, { title: t('Filter has default value'), checked: hasDefaultValue, onChange: value => setHasDefaultValue(value) },\n  ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'defaultDataMask'], initialValue: filterToEdit == null ? void 0 : filterToEdit.defaultDataMask, \"data-test\": \"default-input\", label: ___EmotionJSX(StyledLabel, null, t('Default Value')), required: true, rules: [\n    {\n      required: true },\n\n    {\n      validator: (rule, value) => {var _value$filterState, _formFilter$controlVa;\n        const hasValue = !!(value != null && (_value$filterState = value.filterState) != null && _value$filterState.value);\n        if (hasValue ||\n        // TODO: do more generic\n        (_formFilter$controlVa = formFilter.controlValues) != null && _formFilter$controlVa.defaultToFirstItem) {\n          return _Promise.resolve();\n        }\n        return _Promise.reject(new Error(t('Default value is required')));\n      } }] },\n\n\n  error ? ___EmotionJSX(BasicErrorAlert, { title: t('Cannot load filter'), body: error, level: \"error\" }) : showDefaultValue ? ___EmotionJSX(DefaultValue, { setDataMask: dataMask => {\n      setNativeFilterFieldValues(form, filterId, {\n        defaultDataMask: dataMask });\n\n      form.validateFields([\n      ['filters', filterId, 'defaultDataMask']]);\n\n      forceUpdate();\n    }, filterId: filterId, hasDataset: hasDataset, form: form, formData: newFormData, enableNoResults: enableNoResults }) : t('Fill all required fields to enable \"Default Value\"'))),\n\n\n  _mapInstanceProperty(_context7 = _filterInstanceProperty(_context8 = _Object$keys(controlItems)).call(_context8,\n  key => _includesInstanceProperty(BASIC_CONTROL_ITEMS).call(BASIC_CONTROL_ITEMS, key))).call(_context7,\n  key => controlItems[key].element),\n  ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'isInstant'], initialValue: (filterToEdit == null ? void 0 : filterToEdit.isInstant) || false, valuePropName: \"checked\", colon: false },\n  ___EmotionJSX(Checkbox, { \"data-test\": \"apply-changes-instantly-checkbox\" },\n  t('Apply changes instantly')))),\n\n\n\n  (hasDataset && hasAdditionalFilters || hasMetrics) && ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.advanced.name, key: FilterPanels.advanced.key },\n  isCascadingFilter && ___EmotionJSX(CollapsibleControl, { title: t('Filter is hierarchical'), checked: hasParentFilter, onChange: checked => {\n      if (checked) {\n        // execute after render\n        _setTimeout(() => form.validateFields([\n        ['filters', filterId, 'parentFilter']]),\n        0);\n      }\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'parentFilter'], label: ___EmotionJSX(StyledLabel, null, t('Parent filter')), initialValue: parentFilter, \"data-test\": \"parent-filter-input\", required: true, rules: [\n    {\n      required: true,\n      message: t('Parent filter is required') }] },\n\n\n  ___EmotionJSX(Select, { placeholder: t('None'), options: parentFilterOptions, isClearable: true }))),\n\n\n  _mapInstanceProperty(_context9 = _filterInstanceProperty(_context10 = _Object$keys(controlItems)).call(_context10,\n  key => !_includesInstanceProperty(BASIC_CONTROL_ITEMS).call(BASIC_CONTROL_ITEMS, key))).call(_context9,\n  key => controlItems[key].element),\n  hasDataset && hasAdditionalFilters && ___EmotionJSX(CollapsibleControl, { title: t('Pre-filter available values'), checked: hasPreFilter, onChange: checked => {\n      if (checked) {\n        validatePreFilter();\n      }\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'adhoc_filters'], initialValue: filterToEdit == null ? void 0 : filterToEdit.adhoc_filters, required: true, rules: [\n    {\n      validator: preFilterValidator }] },\n\n\n  ___EmotionJSX(AdhocFilterControl, { columns: (datasetDetails == null ? void 0 : (_datasetDetails$colum = datasetDetails.columns) == null ? void 0 : _filterInstanceProperty(_datasetDetails$colum).call(_datasetDetails$colum, c => c.filterable)) || [], savedMetrics: (datasetDetails == null ? void 0 : datasetDetails.metrics) || [], datasource: datasetDetails, onChange: filters => {\n      setNativeFilterFieldValues(form, filterId, {\n        adhoc_filters: filters });\n\n      forceUpdate();\n      validatePreFilter();\n    }, label: ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(StyledLabel, null, t('Pre-filter')),\n    !hasTimeRange && ___EmotionJSX(StyledAsterisk, null)) })),\n\n\n  ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'time_range'], label: ___EmotionJSX(StyledLabel, null, t('Time range')), initialValue: (filterToEdit == null ? void 0 : filterToEdit.time_range) || 'No filter', required: !hasAdhoc, rules: [\n    {\n      validator: preFilterValidator }] },\n\n\n  ___EmotionJSX(DateFilterControl, { name: \"time_range\", onChange: timeRange => {\n      setNativeFilterFieldValues(form, filterId, {\n        time_range: timeRange });\n\n      forceUpdate();\n      validatePreFilter();\n    } }))),\n\n\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_range' && ___EmotionJSX(CollapsibleControl, { title: t('Sort filter values'), onChange: checked => onSortChanged(checked || undefined), checked: hasSorting },\n  ___EmotionJSX(StyledRowContainer, null,\n  ___EmotionJSX(StyledFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'sortAscending'],\n    initialValue: filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2.sortAscending, label: ___EmotionJSX(StyledLabel, null, t('Sort type')) },\n  ___EmotionJSX(Select, { form: form, filterId: filterId, name: \"sortAscending\", options: [\n    {\n      value: true,\n      label: t('Sort ascending') },\n\n    {\n      value: false,\n      label: t('Sort descending') }],\n\n    onChange: ({ value }) => onSortChanged(value) })),\n\n  hasMetrics && ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'sortMetric'], initialValue: filterToEdit == null ? void 0 : filterToEdit.sortMetric, label: ___EmotionJSX(StyledLabel, null, t('Sort Metric')), \"data-test\": \"field-input\" },\n  ___EmotionJSX(SelectControl, { form: form, filterId: filterId, name: \"sortMetric\", options: _mapInstanceProperty(metrics).call(metrics, metric => {var _metric$verbose_name;return {\n        value: metric.metric_name,\n        label: (_metric$verbose_name = metric.verbose_name) != null ? _metric$verbose_name : metric.metric_name };}),\n    onChange: value => {\n      if (value !== undefined) {\n        setNativeFilterFieldValues(form, filterId, {\n          sortMetric: value });\n\n        forceUpdate();\n      }\n    } }))))))),\n\n\n\n\n\n\n  ___EmotionJSX(TabPane, { tab: FilterTabs.scoping.name, key: FilterTabs.scoping.key, forceRender: true },\n  ___EmotionJSX(FilterScope, { updateFormValues: values => setNativeFilterFieldValues(form, filterId, values), pathToFormValue: ['filters', filterId], forceUpdate: forceUpdate, scope: filterToEdit == null ? void 0 : filterToEdit.scope, formScope: formFilter == null ? void 0 : formFilter.scope, formScoping: formFilter == null ? void 0 : formFilter.scoping })));\n\n\n};__signature__(FiltersConfigForm, \"useState{[error, setError]('')}\\nuseState{[metrics, setMetrics]([])}\\nuseState{[activeTabKey, setActiveTabKey](FilterTabs.configuration.key)}\\nuseState{[activeFilterPanelKey, setActiveFilterPanelKey](FilterPanels.basic.key)}\\nuseState{[hasDefaultValue, setHasDefaultValue](!!filterToEdit?.defaultDataMask?.filterState?.value)}\\nuseForceUpdate{forceUpdate}\\nuseState{[datasetDetails, setDatasetDetails]}\\nuseMemo{defaultFormFilter}\\nuseSelector{loadedDatasets}\\nuseEffect{}\\nuseImperativeHandle{}\\nuseBackendFormUpdate{}\\nuseCallback{refreshHandler}\\nuseEffect{}\\nuseCallback{onDatasetSelectError}\\nuseEffect{}\", () => [useForceUpdate, useSelector, useImperativeHandle, useBackendFormUpdate]);const _default = /*#__PURE__*/\nforwardRef(FiltersConfigForm);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TabPane, \"TabPane\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowContainer, \"StyledRowContainer\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledFormItem, \"StyledFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowFormItem, \"StyledRowFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledLabel, \"StyledLabel\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledCollapse, \"StyledCollapse\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledTabs, \"StyledTabs\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledAsterisk, \"StyledAsterisk\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTabs, \"FilterTabs\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterPanels, \"FilterPanels\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTERS_WITHOUT_COLUMN, \"FILTERS_WITHOUT_COLUMN\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTERS_WITH_ADHOC_FILTERS, \"FILTERS_WITH_ADHOC_FILTERS\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(BASIC_CONTROL_ITEMS, \"BASIC_CONTROL_ITEMS\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTER_TYPE_NAME_MAPPING, \"FILTER_TYPE_NAME_MAPPING\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FiltersConfigForm, \"FiltersConfigForm\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  Behavior,\n  ChartDataResponseResult,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetApiError,\n  t,\n} from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  DatasourceMeta,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport { FormInstance } from 'antd/lib/form';\nimport React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormItem } from 'src/components/Form';\nimport { Checkbox, Input } from 'src/common/components';\nimport { Select } from 'src/components/Select';\nimport SupersetResourceSelect, {\n  cachedSupersetGet,\n} from 'src/components/SupersetResourceSelect';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { ClientErrorObject } from 'src/utils/getClientErrorObject';\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport Collapse from 'src/components/Collapse';\nimport { getChartDataRequest } from 'src/chart/chartAction';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport Tabs from 'src/components/Tabs';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport { ColumnSelect } from './ColumnSelect';\nimport { NativeFiltersForm } from '../types';\nimport {\n  datasetToSelectOption,\n  setNativeFilterFieldValues,\n  useForceUpdate,\n} from './utils';\nimport { useBackendFormUpdate } from './state';\nimport { getFormData } from '../../utils';\nimport { Filter } from '../../types';\nimport getControlItemsMap from './getControlItemsMap';\nimport FilterScope from './FilterScope/FilterScope';\nimport RemovedFilter from './RemovedFilter';\nimport DefaultValue from './DefaultValue';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport {\n  CASCADING_FILTERS,\n  getFiltersConfigModalTestId,\n} from '../FiltersConfigModal';\n\nconst { TabPane } = Tabs;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\n\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0px;\n  padding-bottom: 0px;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\n\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  margin-left: ${({ theme }) => theme.gridUnit * -4 - 1}px;\n  margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n  border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0px;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0px;\n  }\n\n  .ant-collapse-content {\n    border: 0px;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0px;\n    border-radius: 0px;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    margin-left: ${({ theme }) => theme.gridUnit * -4}px;\n    margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n    top: 0px;\n    background: white;\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0px;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0px;\n  }\n`;\n\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\n\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Configuration'),\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping'),\n  },\n};\n\nconst FilterPanels = {\n  basic: {\n    key: 'basic',\n    name: t('Basic'),\n  },\n  advanced: {\n    key: 'advanced',\n    name: t('Advanced'),\n  },\n};\n\nexport interface FiltersConfigFormProps {\n  filterId: string;\n  filterToEdit?: Filter;\n  removed?: boolean;\n  restoreFilter: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  parentFilters: { id: string; title: string }[];\n}\n\n// TODO: Need to do with it something\nconst FILTERS_WITHOUT_COLUMN = [\n  'filter_timegrain',\n  'filter_timecolumn',\n  'filter_groupby',\n];\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n\nconst BASIC_CONTROL_ITEMS = ['enableEmptyFilter', 'multiSelect'];\n\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by'),\n};\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (\n  {\n    filterId,\n    filterToEdit,\n    removed,\n    restoreFilter,\n    form,\n    parentFilters,\n  }: FiltersConfigFormProps,\n  ref: React.RefObject<any>,\n) => {\n  const [error, setError] = useState<string>('');\n  const [metrics, setMetrics] = useState<Metric[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    FilterTabs.configuration.key,\n  );\n  const [activeFilterPanelKey, setActiveFilterPanelKey] = useState<\n    string | string[]\n  >(FilterPanels.basic.key);\n  const [hasDefaultValue, setHasDefaultValue] = useState(\n    !!filterToEdit?.defaultDataMask?.filterState?.value,\n  );\n  const forceUpdate = useForceUpdate();\n  const [datasetDetails, setDatasetDetails] = useState<Record<string, any>>();\n  const defaultFormFilter = useMemo(() => {}, []);\n  const formFilter =\n    form.getFieldValue('filters')?.[filterId] || defaultFormFilter;\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n    // @ts-ignore\n    .filter(([, { value }]) =>\n      value.behaviors?.includes(Behavior.NATIVE_FILTER),\n    )\n    .map(([key]) => key);\n\n  const loadedDatasets = useSelector<any, DatasourceMeta>(\n    ({ datasources }) => datasources,\n  );\n\n  // @ts-ignore\n  const hasDataset = !!nativeFilterItems[formFilter?.filterType]?.value\n    ?.datasourceCount;\n  const hasColumn =\n    hasDataset && !FILTERS_WITHOUT_COLUMN.includes(formFilter?.filterType);\n  // @ts-ignore\n  const enableNoResults = !!nativeFilterItems[formFilter?.filterType]?.value\n    ?.enableNoResults;\n  const datasetId = formFilter?.dataset?.value;\n\n  useEffect(() => {\n    if (datasetId && hasColumn) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}`,\n      })\n        .then((response: JsonResponse) => {\n          setMetrics(response.json?.result?.metrics);\n          const dataset = response.json?.result;\n          // modify the response to fit structure expected by AdhocFilterControl\n          dataset.type = dataset.datasource_type;\n          dataset.filter_select = true;\n          setDatasetDetails(dataset);\n        })\n        .catch((response: SupersetApiError) => {\n          addDangerToast(response.message);\n        });\n    }\n  }, [datasetId, hasColumn]);\n\n  useImperativeHandle(ref, () => ({\n    changeTab(tab: 'configuration' | 'scoping') {\n      setActiveTabKey(tab);\n    },\n  }));\n\n  const hasMetrics = hasColumn && !!metrics.length;\n\n  const hasFilledDataset =\n    !hasDataset || (datasetId && (formFilter?.column || !hasColumn));\n\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(\n    formFilter?.filterType,\n  );\n\n  const isCascadingFilter = CASCADING_FILTERS.includes(formFilter?.filterType);\n\n  const isDataDirty = formFilter?.isDataDirty ?? true;\n\n  useBackendFormUpdate(form, filterId);\n\n  const setNativeFilterFieldValuesWrapper = (values: object) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError('');\n    forceUpdate();\n  };\n\n  const setErrorWrapper = (error: string) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null,\n    });\n    setError(error);\n    forceUpdate();\n  };\n\n  const refreshHandler = useCallback(() => {\n    if (!hasDataset || !formFilter?.dataset?.value) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter?.dataset?.value,\n      groupby: formFilter?.column,\n      ...formFilter,\n    });\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false,\n    });\n    getChartDataRequest({\n      formData,\n      force: false,\n      requestParams: { dashboardId: 0 },\n    })\n      .then(response => {\n        if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n          // deal with getChartDataRequest transforming the response data\n          const result = 'result' in response ? response.result[0] : response;\n          waitForAsyncData(result)\n            .then((asyncResult: ChartDataResponseResult[]) => {\n              setNativeFilterFieldValuesWrapper({\n                defaultValueQueriesData: asyncResult,\n              });\n            })\n            .catch((error: ClientErrorObject) => {\n              setError(\n                error.message || error.error || t('Check configuration'),\n              );\n            });\n        } else {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: response.result,\n          });\n        }\n      })\n      .catch((error: Response) => {\n        error.json().then(body => {\n          setErrorWrapper(\n            body.message || error.statusText || t('Check configuration'),\n          );\n        });\n      });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset]);\n\n  const defaultDatasetSelectOptions = Object.values(loadedDatasets).map(\n    datasetToSelectOption,\n  );\n  const initialDatasetId =\n    filterToEdit?.targets[0]?.datasetId ??\n    (defaultDatasetSelectOptions.length === 1\n      ? defaultDatasetSelectOptions[0].value\n      : undefined);\n  const initColumn = filterToEdit?.targets[0]?.column?.name;\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter?.column : undefined,\n    ...formFilter,\n  });\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n    hasDataset,\n    hasFilledDataset,\n    hasDefaultValue,\n    formFilter,\n    isDataDirty,\n    refreshHandler,\n  ]);\n\n  const onDatasetSelectError = useCallback(\n    ({ error, message }: ClientErrorObject) => {\n      let errorText = message || error || t('An error has occurred');\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      addDangerToast(errorText);\n    },\n    [],\n  );\n\n  const parentFilterOptions = parentFilters.map(filter => ({\n    value: filter.id,\n    label: filter.title,\n  }));\n\n  const parentFilter = parentFilterOptions.find(\n    ({ value }) => value === filterToEdit?.cascadeParentIds[0],\n  );\n\n  const hasParentFilter = !!parentFilter;\n\n  const hasPreFilter =\n    !!filterToEdit?.adhoc_filters || !!filterToEdit?.time_range;\n\n  const hasSorting =\n    typeof filterToEdit?.controlValues?.sortAscending === 'boolean';\n\n  const showDefaultValue = !hasDataset || (!isDataDirty && hasFilledDataset);\n\n  const controlItems = formFilter\n    ? getControlItemsMap({\n        disabled: false,\n        forceUpdate,\n        form,\n        filterId,\n        filterType: formFilter.filterType,\n        filterToEdit,\n        formFilter,\n      })\n    : {};\n\n  const onSortChanged = (value: boolean | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const validatePreFilter = () =>\n    setTimeout(\n      () =>\n        form.validateFields([\n          ['filters', filterId, 'adhoc_filters'],\n          ['filters', filterId, 'time_range'],\n        ]),\n      0,\n    );\n\n  const hasTimeRange =\n    formFilter?.time_range && formFilter.time_range !== 'No filter';\n\n  const hasAdhoc = formFilter?.adhoc_filters?.length > 0;\n\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n\n  let hasCheckedAdvancedControl = hasParentFilter || hasPreFilter || hasSorting;\n  if (!hasCheckedAdvancedControl) {\n    hasCheckedAdvancedControl = Object.keys(controlItems)\n      .filter(key => !BASIC_CONTROL_ITEMS.includes(key))\n      .some(key => controlItems[key].checked);\n  }\n\n  useEffect(() => {\n    const activeFilterPanelKey = [FilterPanels.basic.key];\n    if (hasCheckedAdvancedControl) {\n      activeFilterPanelKey.push(FilterPanels.advanced.key);\n    }\n    setActiveFilterPanelKey(activeFilterPanelKey);\n  }, [hasCheckedAdvancedControl]);\n\n  if (removed) {\n    return <RemovedFilter onClick={() => restoreFilter(filterId)} />;\n  }\n\n  return (\n    <StyledTabs\n      activeKey={activeTabKey}\n      onChange={activeKey => setActiveTabKey(activeKey)}\n      centered\n    >\n      <TabPane\n        tab={FilterTabs.configuration.name}\n        key={FilterTabs.configuration.key}\n        forceRender\n      >\n        <StyledContainer>\n          <StyledFormItem\n            name={['filters', filterId, 'name']}\n            label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n            initialValue={filterToEdit?.name}\n            rules={[{ required: !removed, message: t('Name is required') }]}\n          >\n            <Input {...getFiltersConfigModalTestId('name-input')} />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'filterType']}\n            rules={[{ required: !removed, message: t('Name is required') }]}\n            initialValue={filterToEdit?.filterType || 'filter_select'}\n            label={<StyledLabel>{t('Filter Type')}</StyledLabel>}\n            {...getFiltersConfigModalTestId('filter-type')}\n          >\n            <Select\n              options={nativeFilterVizTypes.map(filterType => {\n                // @ts-ignore\n                const name = nativeFilterItems[filterType]?.value.name;\n                const mappedName = name\n                  ? FILTER_TYPE_NAME_MAPPING[name]\n                  : undefined;\n                return {\n                  value: filterType,\n                  label: mappedName || name,\n                };\n              })}\n              onChange={({ value }: { value: string }) => {\n                setNativeFilterFieldValues(form, filterId, {\n                  filterType: value,\n                  defaultDataMask: null,\n                });\n                forceUpdate();\n              }}\n            />\n          </StyledFormItem>\n        </StyledContainer>\n        {hasDataset && (\n          <StyledRowContainer>\n            <StyledFormItem\n              name={['filters', filterId, 'dataset']}\n              initialValue={{ value: initialDatasetId }}\n              label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n              rules={[\n                { required: !removed, message: t('Dataset is required') },\n              ]}\n              {...getFiltersConfigModalTestId('datasource-input')}\n            >\n              <SupersetResourceSelect\n                initialId={initialDatasetId}\n                resource=\"dataset\"\n                searchColumn=\"table_name\"\n                transformItem={datasetToSelectOption}\n                isMulti={false}\n                onError={onDatasetSelectError}\n                defaultOptions={Object.values(loadedDatasets).map(\n                  datasetToSelectOption,\n                )}\n                onChange={e => {\n                  // We need reset column when dataset changed\n                  if (datasetId && e?.value !== datasetId) {\n                    setNativeFilterFieldValues(form, filterId, {\n                      defaultDataMask: null,\n                      column: null,\n                    });\n                  }\n                  forceUpdate();\n                }}\n              />\n            </StyledFormItem>\n            {hasColumn && (\n              <StyledFormItem\n                // don't show the column select unless we have a dataset\n                // style={{ display: datasetId == null ? undefined : 'none' }}\n                name={['filters', filterId, 'column']}\n                initialValue={initColumn}\n                label={<StyledLabel>{t('Column')}</StyledLabel>}\n                rules={[\n                  { required: !removed, message: t('Column is required') },\n                ]}\n                data-test=\"field-input\"\n              >\n                <ColumnSelect\n                  form={form}\n                  filterId={filterId}\n                  datasetId={datasetId}\n                  onChange={() => {\n                    // We need reset default value when when column changed\n                    setNativeFilterFieldValues(form, filterId, {\n                      defaultDataMask: null,\n                    });\n                    forceUpdate();\n                  }}\n                />\n              </StyledFormItem>\n            )}\n          </StyledRowContainer>\n        )}\n        <StyledCollapse\n          activeKey={activeFilterPanelKey}\n          onChange={key => setActiveFilterPanelKey(key)}\n          expandIconPosition=\"right\"\n        >\n          <Collapse.Panel\n            forceRender\n            header={FilterPanels.basic.name}\n            key={FilterPanels.basic.key}\n          >\n            {hasFilledDataset && (\n              <CleanFormItem\n                name={['filters', filterId, 'defaultValueFormData']}\n                hidden\n                initialValue={newFormData}\n              />\n            )}\n            <CleanFormItem\n              name={['filters', filterId, 'defaultValueQueriesData']}\n              hidden\n              initialValue={null}\n            />\n            <CollapsibleControl\n              title={t('Filter has default value')}\n              checked={hasDefaultValue}\n              onChange={value => setHasDefaultValue(value)}\n            >\n              <StyledRowFormItem\n                name={['filters', filterId, 'defaultDataMask']}\n                initialValue={filterToEdit?.defaultDataMask}\n                data-test=\"default-input\"\n                label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n                required\n                rules={[\n                  {\n                    required: true,\n                  },\n                  {\n                    validator: (rule, value) => {\n                      const hasValue = !!value?.filterState?.value;\n                      if (\n                        hasValue ||\n                        // TODO: do more generic\n                        formFilter.controlValues?.defaultToFirstItem\n                      ) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        new Error(t('Default value is required')),\n                      );\n                    },\n                  },\n                ]}\n              >\n                {error ? (\n                  <BasicErrorAlert\n                    title={t('Cannot load filter')}\n                    body={error}\n                    level=\"error\"\n                  />\n                ) : showDefaultValue ? (\n                  <DefaultValue\n                    setDataMask={dataMask => {\n                      setNativeFilterFieldValues(form, filterId, {\n                        defaultDataMask: dataMask,\n                      });\n                      form.validateFields([\n                        ['filters', filterId, 'defaultDataMask'],\n                      ]);\n                      forceUpdate();\n                    }}\n                    filterId={filterId}\n                    hasDataset={hasDataset}\n                    form={form}\n                    formData={newFormData}\n                    enableNoResults={enableNoResults}\n                  />\n                ) : (\n                  t('Fill all required fields to enable \"Default Value\"')\n                )}\n              </StyledRowFormItem>\n            </CollapsibleControl>\n            {Object.keys(controlItems)\n              .filter(key => BASIC_CONTROL_ITEMS.includes(key))\n              .map(key => controlItems[key].element)}\n            <StyledRowFormItem\n              name={['filters', filterId, 'isInstant']}\n              initialValue={filterToEdit?.isInstant || false}\n              valuePropName=\"checked\"\n              colon={false}\n            >\n              <Checkbox data-test=\"apply-changes-instantly-checkbox\">\n                {t('Apply changes instantly')}\n              </Checkbox>\n            </StyledRowFormItem>\n          </Collapse.Panel>\n          {((hasDataset && hasAdditionalFilters) || hasMetrics) && (\n            <Collapse.Panel\n              forceRender\n              header={FilterPanels.advanced.name}\n              key={FilterPanels.advanced.key}\n            >\n              {isCascadingFilter && (\n                <CollapsibleControl\n                  title={t('Filter is hierarchical')}\n                  checked={hasParentFilter}\n                  onChange={checked => {\n                    if (checked) {\n                      // execute after render\n                      setTimeout(\n                        () =>\n                          form.validateFields([\n                            ['filters', filterId, 'parentFilter'],\n                          ]),\n                        0,\n                      );\n                    }\n                  }}\n                >\n                  <StyledRowFormItem\n                    name={['filters', filterId, 'parentFilter']}\n                    label={<StyledLabel>{t('Parent filter')}</StyledLabel>}\n                    initialValue={parentFilter}\n                    data-test=\"parent-filter-input\"\n                    required\n                    rules={[\n                      {\n                        required: true,\n                        message: t('Parent filter is required'),\n                      },\n                    ]}\n                  >\n                    <Select\n                      placeholder={t('None')}\n                      options={parentFilterOptions}\n                      isClearable\n                    />\n                  </StyledRowFormItem>\n                </CollapsibleControl>\n              )}\n              {Object.keys(controlItems)\n                .filter(key => !BASIC_CONTROL_ITEMS.includes(key))\n                .map(key => controlItems[key].element)}\n              {hasDataset && hasAdditionalFilters && (\n                <CollapsibleControl\n                  title={t('Pre-filter available values')}\n                  checked={hasPreFilter}\n                  onChange={checked => {\n                    if (checked) {\n                      validatePreFilter();\n                    }\n                  }}\n                >\n                  <StyledRowFormItem\n                    name={['filters', filterId, 'adhoc_filters']}\n                    initialValue={filterToEdit?.adhoc_filters}\n                    required\n                    rules={[\n                      {\n                        validator: preFilterValidator,\n                      },\n                    ]}\n                  >\n                    <AdhocFilterControl\n                      columns={\n                        datasetDetails?.columns?.filter(\n                          (c: ColumnMeta) => c.filterable,\n                        ) || []\n                      }\n                      savedMetrics={datasetDetails?.metrics || []}\n                      datasource={datasetDetails}\n                      onChange={(filters: AdhocFilter[]) => {\n                        setNativeFilterFieldValues(form, filterId, {\n                          adhoc_filters: filters,\n                        });\n                        forceUpdate();\n                        validatePreFilter();\n                      }}\n                      label={\n                        <span>\n                          <StyledLabel>{t('Pre-filter')}</StyledLabel>\n                          {!hasTimeRange && <StyledAsterisk />}\n                        </span>\n                      }\n                    />\n                  </StyledRowFormItem>\n                  <StyledRowFormItem\n                    name={['filters', filterId, 'time_range']}\n                    label={<StyledLabel>{t('Time range')}</StyledLabel>}\n                    initialValue={filterToEdit?.time_range || 'No filter'}\n                    required={!hasAdhoc}\n                    rules={[\n                      {\n                        validator: preFilterValidator,\n                      },\n                    ]}\n                  >\n                    <DateFilterControl\n                      name=\"time_range\"\n                      onChange={timeRange => {\n                        setNativeFilterFieldValues(form, filterId, {\n                          time_range: timeRange,\n                        });\n                        forceUpdate();\n                        validatePreFilter();\n                      }}\n                    />\n                  </StyledRowFormItem>\n                </CollapsibleControl>\n              )}\n              {formFilter?.filterType !== 'filter_range' && (\n                <CollapsibleControl\n                  title={t('Sort filter values')}\n                  onChange={checked => onSortChanged(checked || undefined)}\n                  checked={hasSorting}\n                >\n                  <StyledRowContainer>\n                    <StyledFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'sortAscending',\n                      ]}\n                      initialValue={filterToEdit?.controlValues?.sortAscending}\n                      label={<StyledLabel>{t('Sort type')}</StyledLabel>}\n                    >\n                      <Select\n                        form={form}\n                        filterId={filterId}\n                        name=\"sortAscending\"\n                        options={[\n                          {\n                            value: true,\n                            label: t('Sort ascending'),\n                          },\n                          {\n                            value: false,\n                            label: t('Sort descending'),\n                          },\n                        ]}\n                        onChange={({ value }: { value: boolean }) =>\n                          onSortChanged(value)\n                        }\n                      />\n                    </StyledFormItem>\n                    {hasMetrics && (\n                      <StyledFormItem\n                        name={['filters', filterId, 'sortMetric']}\n                        initialValue={filterToEdit?.sortMetric}\n                        label={<StyledLabel>{t('Sort Metric')}</StyledLabel>}\n                        data-test=\"field-input\"\n                      >\n                        <SelectControl\n                          form={form}\n                          filterId={filterId}\n                          name=\"sortMetric\"\n                          options={metrics.map((metric: Metric) => ({\n                            value: metric.metric_name,\n                            label: metric.verbose_name ?? metric.metric_name,\n                          }))}\n                          onChange={(value: string | null): void => {\n                            if (value !== undefined) {\n                              setNativeFilterFieldValues(form, filterId, {\n                                sortMetric: value,\n                              });\n                              forceUpdate();\n                            }\n                          }}\n                        />\n                      </StyledFormItem>\n                    )}\n                  </StyledRowContainer>\n                </CollapsibleControl>\n              )}\n            </Collapse.Panel>\n          )}\n        </StyledCollapse>\n      </TabPane>\n      <TabPane\n        tab={FilterTabs.scoping.name}\n        key={FilterTabs.scoping.key}\n        forceRender\n      >\n        <FilterScope\n          updateFormValues={(values: any) =>\n            setNativeFilterFieldValues(form, filterId, values)\n          }\n          pathToFormValue={['filters', filterId]}\n          forceUpdate={forceUpdate}\n          scope={filterToEdit?.scope}\n          formScope={formFilter?.scope}\n          formScoping={formFilter?.scoping}\n        />\n      </TabPane>\n    </StyledTabs>\n  );\n};\n\nexport default forwardRef<typeof FiltersConfigForm, FiltersConfigFormProps>(\n  FiltersConfigForm,\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}