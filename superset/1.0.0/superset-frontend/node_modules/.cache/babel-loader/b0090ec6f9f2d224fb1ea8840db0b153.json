{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export var TableTabTypes;\n(function (TableTabTypes) {\n  TableTabTypes[\"FAVORITE\"] = \"Favorite\";\n  TableTabTypes[\"MINE\"] = \"Mine\";\n})(TableTabTypes || (TableTabTypes = {}));\nexport var QueryObjectColumns;\n(function (QueryObjectColumns) {\n  QueryObjectColumns[\"id\"] = \"id\";\n  QueryObjectColumns[\"changed_on\"] = \"changed_on\";\n  QueryObjectColumns[\"database\"] = \"database\";\n  QueryObjectColumns[\"database_name\"] = \"database.database_name\";\n  QueryObjectColumns[\"schema\"] = \"schema\";\n  QueryObjectColumns[\"sql\"] = \"sql\";\n  QueryObjectColumns[\"executed_sql\"] = \"exceuted_sql\";\n  QueryObjectColumns[\"sql_tables\"] = \"sql_tables\";\n  QueryObjectColumns[\"status\"] = \"status\";\n  QueryObjectColumns[\"tab_name\"] = \"tab_name\";\n  QueryObjectColumns[\"user\"] = \"user\";\n  QueryObjectColumns[\"user_first_name\"] = \"user.first_name\";\n  QueryObjectColumns[\"start_time\"] = \"start_time\";\n  QueryObjectColumns[\"end_time\"] = \"end_time\";\n  QueryObjectColumns[\"rows\"] = \"rows\";\n  QueryObjectColumns[\"tmp_table_name\"] = \"tmp_table_name\";\n  QueryObjectColumns[\"tracking_url\"] = \"tracking_url\";\n})(QueryObjectColumns || (QueryObjectColumns = {}));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableTabTypes, \"TableTabTypes\", \"/app/superset-frontend/src/views/CRUD/types.ts\");reactHotLoader.register(QueryObjectColumns, \"QueryObjectColumns\", \"/app/superset-frontend/src/views/CRUD/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/types.ts"],"names":[],"mappings":"uSAyBA,OAAA,IAAY,aAAZ;AAAA,CAAA,UAAY,aAAZ,EAAyB;AACvB,EAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,aAAa,KAAb,aAAa,GAAA,EAAA,CAAzB;AAqFA,OAAA,IAAY,kBAAZ;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,wBAAA;AACA,EAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,kBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACA,EAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACD,CAlBD,EAAY,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAA9B,E,iLArFY,a,6FAqFA,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { User } from 'src/types/bootstrapTypes';\nimport Owner from 'src/types/Owner';\n\nexport type FavoriteStatus = {\n  [id: number]: boolean;\n};\n\nexport enum TableTabTypes {\n  FAVORITE = 'Favorite',\n  MINE = 'Mine',\n}\n\nexport type Filters = {\n  col: string;\n  opr: string;\n  value: string;\n};\n\nexport interface DashboardTableProps {\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n  search: string;\n  user?: User;\n  mine: Array<Dashboard>;\n  showThumbnails?: boolean;\n  featureFlag?: boolean;\n}\n\nexport interface Dashboard {\n  changed_by_name: string;\n  changed_by_url: string;\n  changed_on_delta_humanized?: string;\n  changed_on_utc?: string;\n  changed_by: string;\n  dashboard_title: string;\n  slice_name?: string;\n  id: number;\n  published: boolean;\n  url: string;\n  thumbnail_url: string;\n  owners: Owner[];\n  loading?: boolean;\n}\n\nexport type SavedQueryObject = {\n  id: number;\n  changed_on: string;\n  changed_on_delta_humanized: string;\n  database: {\n    database_name: string;\n    id: number;\n  };\n  db_id: number;\n  description?: string;\n  label: string;\n  schema: string;\n  sql: string | null;\n  sql_tables?: { catalog?: string; schema: string; table: string }[];\n};\n\nexport interface QueryObject {\n  id: number;\n  changed_on: string;\n  database: {\n    database_name: string;\n  };\n  schema: string;\n  sql: string;\n  executed_sql: string | null;\n  sql_tables?: { catalog?: string; schema: string; table: string }[];\n  status:\n    | 'success'\n    | 'failed'\n    | 'stopped'\n    | 'running'\n    | 'timed_out'\n    | 'scheduled'\n    | 'pending';\n  tab_name: string;\n  user: {\n    first_name: string;\n    id: number;\n    last_name: string;\n    username: string;\n  };\n  start_time: number;\n  end_time: number;\n  rows: number;\n  tmp_table_name: string;\n  tracking_url: string;\n}\n\nexport enum QueryObjectColumns {\n  id = 'id',\n  changed_on = 'changed_on',\n  database = 'database',\n  database_name = 'database.database_name',\n  schema = 'schema',\n  sql = 'sql',\n  executed_sql = 'exceuted_sql',\n  sql_tables = 'sql_tables',\n  status = 'status',\n  tab_name = 'tab_name',\n  user = 'user',\n  user_first_name = 'user.first_name',\n  start_time = 'start_time',\n  end_time = 'end_time',\n  rows = 'rows',\n  tmp_table_name = 'tmp_table_name',\n  tracking_url = 'tracking_url',\n}\n\nexport type ImportResourceName =\n  | 'chart'\n  | 'dashboard'\n  | 'database'\n  | 'dataset'\n  | 'saved_query';\n\nexport type DatabaseObject = {\n  allow_run_async?: boolean;\n  database_name?: string;\n  encrypted_extra?: string;\n  extra?: string;\n  impersonate_user?: boolean;\n  server_cert?: string;\n  sqlalchemy_uri: string;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}