{"ast":null,"code":"import _findIndexInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find-index\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef, useEffect } from 'react';\nimport { FixedSizeList as WindowedList } from 'react-window';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_OPTION_HEIGHT = 30;\n/**\n * Get the index of the last selected option.\n */\nfunction getLastSelected(children) {\n  return _Array$isArray(children) ?\n  _findIndexInstanceProperty(children).call(children, ({ props: { isFocused = false } = {} }) => isFocused) || 0 :\n  -1;\n}\n/**\n * Calculate probable option height as set in theme configs\n */\nfunction detectHeight({ spacing: { baseUnit, lineHeight } }) {\n  // Option item expects 2 * baseUnit for each of top and bottom padding.\n  return baseUnit * 4 + lineHeight;\n}\nexport default function WindowedMenuList({ children, ...props }) {\n  const { maxHeight, selectProps, theme, getStyles, cx, innerRef, isMulti, className } = props;\n  const {\n    // Expose react-window VariableSizeList instance and HTML elements\n    windowListRef: windowListRef_, windowListInnerRef } = selectProps;\n  const defaultWindowListRef = useRef(null);\n  const windowListRef = windowListRef_ || defaultWindowListRef;\n  // try get default option height from theme configs\n  let { optionHeight } = selectProps;\n  if (!optionHeight) {\n    optionHeight = theme ? detectHeight(theme) : DEFAULT_OPTION_HEIGHT;\n  }\n  const itemCount = children.length;\n  const totalHeight = optionHeight * itemCount;\n  const Row = ({ data, index, style }) => ___EmotionJSX(\"div\", { style: style }, data[index]);\n  useEffect(() => {\n    const lastSelected = getLastSelected(children);\n    if (windowListRef.current && lastSelected) {\n      windowListRef.current.scrollToItem(lastSelected);\n    }\n  }, [children, windowListRef]);\n  return ___EmotionJSX(WindowedList, { css: getStyles('menuList', props), className: cx({\n      'menu-list': true,\n      'menu-list--is-multi': isMulti },\n    className), ref: windowListRef, outerRef: innerRef, innerRef: windowListInnerRef, height: Math.min(totalHeight, maxHeight), width: \"100%\", itemData: children, itemCount: children.length, itemSize: optionHeight },\n  Row);\n\n}__signature__(WindowedMenuList, \"useRef{defaultWindowListRef}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_OPTION_HEIGHT, \"DEFAULT_OPTION_HEIGHT\", \"/app/superset-frontend/src/components/Select/WindowedSelect/WindowedMenuList.tsx\");reactHotLoader.register(getLastSelected, \"getLastSelected\", \"/app/superset-frontend/src/components/Select/WindowedSelect/WindowedMenuList.tsx\");reactHotLoader.register(detectHeight, \"detectHeight\", \"/app/superset-frontend/src/components/Select/WindowedSelect/WindowedMenuList.tsx\");reactHotLoader.register(WindowedMenuList, \"WindowedMenuList\", \"/app/superset-frontend/src/components/Select/WindowedSelect/WindowedMenuList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Select/WindowedSelect/WindowedMenuList.tsx"],"names":[],"mappings":"6dAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IACE,MADF,EAEE,SAFF,QAOO,OAPP;AAQA,SAEE,aAAa,IAAI,YAFnB,QAGO,cAHP,C;AA6CA,MAAM,qBAAqB,GAAG,EAA9B;AAEA;;AAEG;AACH,SAAS,eAAT,CAAyB,QAAzB,EAA6D;AAC3D,SAAO,eAAc,QAAd;AACH,6BAAA,QAAQ,MAAR,CAAA,QAAQ,EACN,CAAC,EAAE,KAAK,EAAE,EAAE,SAAS,GAAG,KAAd,KAAwB,EAAjC,EAAD,KAA2C,SADrC,CAAR,IAEK,CAHF;AAIH,GAAC,CAJL;AAKD;AAED;;AAEG;AACH,SAAS,YAAT,CAAsB,EAAE,OAAO,EAAE,EAAE,QAAF,EAAY,UAAZ,EAAX,EAAtB,EAAwE;AACtE;AACA,SAAO,QAAQ,GAAG,CAAX,GAAe,UAAtB;AACD;AAED,eAAc,SAAU,gBAAV,CAA8D,EAC1E,QAD0E,EAE1E,GAAG,KAFuE,EAA9D,EAGc;AAC1B,QAAM,EACJ,SADI,EAEJ,WAFI,EAGJ,KAHI,EAIJ,SAJI,EAKJ,EALI,EAMJ,QANI,EAOJ,OAPI,EAQJ,SARI,KASF,KATJ;AAUA,QAAM;AACJ;AACA,IAAA,aAAa,EAAE,cAFX,EAGJ,kBAHI,KAIF,WAJJ;AAKA,QAAM,oBAAoB,GAAG,MAAM,CAAe,IAAf,CAAnC;AACA,QAAM,aAAa,GAAG,cAAc,IAAI,oBAAxC;AAEA;AACA,MAAI,EAAE,YAAF,KAAmB,WAAvB;AACA,MAAI,CAAC,YAAL,EAAmB;AACjB,IAAA,YAAY,GAAG,KAAK,GAAG,YAAY,CAAC,KAAD,CAAf,GAAyB,qBAA7C;AACD;AAED,QAAM,SAAS,GAAG,QAAQ,CAAC,MAA3B;AACA,QAAM,WAAW,GAAG,YAAY,GAAG,SAAnC;AAEA,QAAM,GAAG,GAA+C,CAAC,EACvD,IADuD,EAEvD,KAFuD,EAGvD,KAHuD,EAAD,KAIlD,uBAAK,KAAK,EAAE,KAAZ,IAAoB,IAAI,CAAC,KAAD,CAAxB,CAJN;AAMA,EAAA,SAAS,CAAC,MAAK;AACb,UAAM,YAAY,GAAG,eAAe,CAAC,QAAD,CAApC;AACA,QAAI,aAAa,CAAC,OAAd,IAAyB,YAA7B,EAA2C;AACzC,MAAA,aAAa,CAAC,OAAd,CAAsB,YAAtB,CAAmC,YAAnC;AACD;AACF,GALQ,EAKN,CAAC,QAAD,EAAW,aAAX,CALM,CAAT;AAOA,SACE,cAAC,YAAD,IACE,GAAG,EAAE,SAAS,CAAC,UAAD,EAAa,KAAb,CADhB,EAEE,SAAS,EAAE,EAAE,CACX;AACE,mBAAa,IADf;AAEE,6BAAuB,OAFzB,EADW;AAKX,IAAA,SALW,CAFf,EASE,GAAG,EAAE,aATP,EAUE,QAAQ,EAAE,QAVZ,EAWE,QAAQ,EAAE,kBAXZ,EAYE,MAAM,EAAE,IAAI,CAAC,GAAL,CAAS,WAAT,EAAsB,SAAtB,CAZV,EAaE,KAAK,EAAC,MAbR,EAcE,QAAQ,EAAE,QAdZ,EAeE,SAAS,EAAE,QAAQ,CAAC,MAftB,EAgBE,QAAQ,EAAE,YAhBZ;AAkBG,EAAA,GAlBH,CADF;;AAsBD,C,cAlEuB,gB,gOArBlB,qB,uIAKG,e,iIAWA,Y,8HAKe,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  Component,\n  FunctionComponent,\n  ReactElement,\n  RefObject,\n} from 'react';\nimport {\n  ListChildComponentProps,\n  FixedSizeList as WindowedList,\n} from 'react-window';\nimport {\n  OptionTypeBase,\n  OptionProps,\n  MenuListComponentProps,\n} from 'react-select';\nimport { ThemeConfig } from '../styles';\n\nexport type WindowedMenuListProps = {\n  selectProps: {\n    windowListRef?: RefObject<WindowedList>;\n    optionHeight?: number;\n  };\n};\n\n/**\n * MenuListComponentProps should always have `children` elements, as guaranteed\n * by https://github.com/JedWatson/react-select/blob/32ad5c040bdd96cd1ca71010c2558842d684629c/packages/react-select/src/Select.js#L1686-L1719\n *\n * `children` may also be `Component<NoticeProps<OptionType>>` if options are not\n * provided (e.g., when async list is still loading, or no results), but that's\n * not possible because this MenuList will only be rendered when\n * optionsLength > windowThreshold.\n *\n * If may also be `Component<GroupProps<OptionType>>[]` but we are not supporting\n * grouped options just yet.\n */\n\ntype MenuListPropsChildren<OptionType> =\n  | Component<OptionProps<OptionType>>[]\n  | ReactElement[];\n\nexport type MenuListProps<\n  OptionType extends OptionTypeBase\n> = MenuListComponentProps<OptionType> & {\n  children: MenuListPropsChildren<OptionType>;\n  // theme is not present with built-in @types/react-select, but is actually\n  // available via CommonProps.\n  theme?: ThemeConfig;\n  className?: string;\n} & WindowedMenuListProps;\n\nconst DEFAULT_OPTION_HEIGHT = 30;\n\n/**\n * Get the index of the last selected option.\n */\nfunction getLastSelected(children: MenuListPropsChildren<any>) {\n  return Array.isArray(children)\n    ? children.findIndex(\n        ({ props: { isFocused = false } = {} }) => isFocused,\n      ) || 0\n    : -1;\n}\n\n/**\n * Calculate probable option height as set in theme configs\n */\nfunction detectHeight({ spacing: { baseUnit, lineHeight } }: ThemeConfig) {\n  // Option item expects 2 * baseUnit for each of top and bottom padding.\n  return baseUnit * 4 + lineHeight;\n}\n\nexport default function WindowedMenuList<OptionType extends OptionTypeBase>({\n  children,\n  ...props\n}: MenuListProps<OptionType>) {\n  const {\n    maxHeight,\n    selectProps,\n    theme,\n    getStyles,\n    cx,\n    innerRef,\n    isMulti,\n    className,\n  } = props;\n  const {\n    // Expose react-window VariableSizeList instance and HTML elements\n    windowListRef: windowListRef_,\n    windowListInnerRef,\n  } = selectProps;\n  const defaultWindowListRef = useRef<WindowedList>(null);\n  const windowListRef = windowListRef_ || defaultWindowListRef;\n\n  // try get default option height from theme configs\n  let { optionHeight } = selectProps;\n  if (!optionHeight) {\n    optionHeight = theme ? detectHeight(theme) : DEFAULT_OPTION_HEIGHT;\n  }\n\n  const itemCount = children.length;\n  const totalHeight = optionHeight * itemCount;\n\n  const Row: FunctionComponent<ListChildComponentProps> = ({\n    data,\n    index,\n    style,\n  }) => <div style={style}>{data[index]}</div>;\n\n  useEffect(() => {\n    const lastSelected = getLastSelected(children);\n    if (windowListRef.current && lastSelected) {\n      windowListRef.current.scrollToItem(lastSelected);\n    }\n  }, [children, windowListRef]);\n\n  return (\n    <WindowedList\n      css={getStyles('menuList', props)}\n      className={cx(\n        {\n          'menu-list': true,\n          'menu-list--is-multi': isMulti,\n        },\n        className,\n      )}\n      ref={windowListRef}\n      outerRef={innerRef}\n      innerRef={windowListInnerRef}\n      height={Math.min(totalHeight, maxHeight)}\n      width=\"100%\"\n      itemData={children}\n      itemCount={children.length}\n      itemSize={optionHeight}\n    >\n      {Row}\n    </WindowedList>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}