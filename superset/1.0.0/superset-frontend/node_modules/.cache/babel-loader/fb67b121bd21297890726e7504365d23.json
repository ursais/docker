{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _parseFloat from \"@babel/runtime-corejs3/core-js-stable/parse-float\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { legacyValidateNumber, legacyValidateInteger } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Input } from 'src/common/components';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst safeStringify = value => value == null ? '' : String(value);\nexport default class TextControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = inputValue => {var _this$props$onChange, _this$props;\n      let parsedValue = inputValue;\n      // Validation & casting\n      const errors = [];\n      if (inputValue !== '' && this.props.isFloat) {\n        const error = legacyValidateNumber(inputValue);\n        if (error) {\n          errors.push(error);\n        } else\n        {\n          parsedValue = inputValue.match(/.*([.0])$/g) ?\n          inputValue :\n          _parseFloat(inputValue);\n        }\n      }\n      if (inputValue !== '' && this.props.isInt) {\n        const error = legacyValidateInteger(inputValue);\n        if (error) {\n          errors.push(error);\n        } else\n        {\n          parsedValue = _parseInt(inputValue, 10);\n        }\n      }\n      (_this$props$onChange = (_this$props = this.props).onChange) == null ? void 0 : _this$props$onChange.call(_this$props, parsedValue, errors);\n    };\n    this.debouncedOnChange = debounce(inputValue => {\n      this.onChange(inputValue);\n    }, FAST_DEBOUNCE);\n    this.onChangeWrapper = event => {\n      const { value } = event.target;\n      this.setState({ value }, () => {\n        this.debouncedOnChange(value);\n      });\n    };\n    this.render = () => {\n      let { value } = this.state;\n      if (this.initialValue !== this.props.value) {\n        this.initialValue = this.props.value;\n        value = safeStringify(this.props.value);\n      }\n      return ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(Input, { type: \"text\", \"data-test\": \"inline-name\", placeholder: this.props.placeholder, onChange: this.onChangeWrapper, onFocus: this.props.onFocus, value: value, disabled: this.props.disabled, \"aria-label\": this.props.label }));\n\n    };\n    this.initialValue = props.value;\n    this.state = {\n      value: safeStringify(this.initialValue) };\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(safeStringify, \"safeStringify\", \"/app/superset-frontend/src/explore/components/controls/TextControl/index.tsx\");reactHotLoader.register(TextControl, \"TextControl\", \"/app/superset-frontend/src/explore/components/controls/TextControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/TextControl/index.tsx"],"names":[],"mappings":"4bAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,oBAAT,EAA+B,qBAA/B,QAA4D,mBAA5D;AACA,OAAO,QAAP,MAAqB,iBAArB;AACA,SAAS,aAAT,QAA8B,eAA9B;AACA,OAAO,aAAP,MAA0B,sCAA1B;AACA,SAAS,KAAT,QAAsB,uBAAtB,C;AAqBA,MAAM,aAAa,GAAI,KAAD,IACpB,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,MAAM,CAAC,KAAD,CAD7B;AAGA,eAAc,MAAO,WAAP,SAEJ,KAAK,CAAC,SAFF,CAEkD;AAG9D,EAAA,WAAA,CAAY,KAAZ,EAAsC;AACpC,UAAM,KAAN;AAOF,SAAA,QAAA,GAAY,UAAD,IAAuB;AAChC,UAAI,WAAW,GAAmB,UAAlC;AACA;AACA,YAAM,MAAM,GAAG,EAAf;AACA,UAAI,UAAU,KAAK,EAAf,IAAqB,KAAK,KAAL,CAAW,OAApC,EAA6C;AAC3C,cAAM,KAAK,GAAG,oBAAoB,CAAC,UAAD,CAAlC;AACA,YAAI,KAAJ,EAAW;AACT,UAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD,SAFD;AAEO;AACL,UAAA,WAAW,GAAG,UAAU,CAAC,KAAX,CAAiB,YAAjB;AACV,UAAA,UADU;AAEV,sBAAW,UAAX,CAFJ;AAGD;AACF;AACD,UAAI,UAAU,KAAK,EAAf,IAAqB,KAAK,KAAL,CAAW,KAApC,EAA2C;AACzC,cAAM,KAAK,GAAG,qBAAqB,CAAC,UAAD,CAAnC;AACA,YAAI,KAAJ,EAAW;AACT,UAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD,SAFD;AAEO;AACL,UAAA,WAAW,GAAG,UAAS,UAAT,EAAqB,EAArB,CAAd;AACD;AACF;AACD,kDAAK,KAAL,EAAW,QAAX,4DAAsB,WAAtB,EAAwC,MAAxC;AACD,KAvBD;AAyBA,SAAA,iBAAA,GAAoB,QAAQ,CAAE,UAAD,IAAuB;AAClD,WAAK,QAAL,CAAc,UAAd;AACD,KAF2B,EAEzB,aAFyB,CAA5B;AAIA,SAAA,eAAA,GAAmB,KAAD,IAA+C;AAC/D,YAAM,EAAE,KAAF,KAAY,KAAK,CAAC,MAAxB;AACA,WAAK,QAAL,CAAc,EAAE,KAAF,EAAd,EAAyB,MAAK;AAC5B,aAAK,iBAAL,CAAuB,KAAvB;AACD,OAFD;AAGD,KALD;AAOA,SAAA,MAAA,GAAS,MAAK;AACZ,UAAI,EAAE,KAAF,KAAY,KAAK,KAArB;AACA,UAAI,KAAK,YAAL,KAAsB,KAAK,KAAL,CAAW,KAArC,EAA4C;AAC1C,aAAK,YAAL,GAAoB,KAAK,KAAL,CAAW,KAA/B;AACA,QAAA,KAAK,GAAG,aAAa,CAAC,KAAK,KAAL,CAAW,KAAZ,CAArB;AACD;AACD,aACE;AACE,oBAAC,aAAD,EAAmB,KAAK,KAAxB,CADF;AAEE,oBAAC,KAAD,IACE,IAAI,EAAC,MADP,EAEE,aAAU,aAFZ,EAGE,WAAW,EAAE,KAAK,KAAL,CAAW,WAH1B,EAIE,QAAQ,EAAE,KAAK,eAJjB,EAKE,OAAO,EAAE,KAAK,KAAL,CAAW,OALtB,EAME,KAAK,EAAE,KANT,EAOE,QAAQ,EAAE,KAAK,KAAL,CAAW,QAPvB,EAQE,cAAY,KAAK,KAAL,CAAW,KARzB,GAFF,CADF;;AAeD,KArBD;AA1CE,SAAK,YAAL,GAAoB,KAAK,CAAC,KAA1B;AACA,SAAK,KAAL,GAAa;AACX,MAAA,KAAK,EAAE,aAAa,CAAC,KAAK,YAAN,CADT,EAAb;;AAGD,GAT6D;AAAA;AAAA,6B,iLAL1D,a,2HAGe,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { legacyValidateNumber, legacyValidateInteger } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Input } from 'src/common/components';\n\ntype InputValueType = string | number;\n\nexport interface TextControlProps<T extends InputValueType = InputValueType> {\n  label?: string;\n  disabled?: boolean;\n  isFloat?: boolean;\n  isInt?: boolean;\n  onChange?: (value: T, errors: any) => {};\n  onFocus?: () => {};\n  placeholder?: string;\n  value?: T | null;\n  controlId?: string;\n  renderTrigger?: boolean;\n}\n\nexport interface TextControlState {\n  value: string;\n}\n\nconst safeStringify = (value?: InputValueType | null) =>\n  value == null ? '' : String(value);\n\nexport default class TextControl<\n  T extends InputValueType = InputValueType\n> extends React.Component<TextControlProps<T>, TextControlState> {\n  initialValue?: TextControlProps['value'];\n\n  constructor(props: TextControlProps<T>) {\n    super(props);\n    this.initialValue = props.value;\n    this.state = {\n      value: safeStringify(this.initialValue),\n    };\n  }\n\n  onChange = (inputValue: string) => {\n    let parsedValue: InputValueType = inputValue;\n    // Validation & casting\n    const errors = [];\n    if (inputValue !== '' && this.props.isFloat) {\n      const error = legacyValidateNumber(inputValue);\n      if (error) {\n        errors.push(error);\n      } else {\n        parsedValue = inputValue.match(/.*([.0])$/g)\n          ? inputValue\n          : parseFloat(inputValue);\n      }\n    }\n    if (inputValue !== '' && this.props.isInt) {\n      const error = legacyValidateInteger(inputValue);\n      if (error) {\n        errors.push(error);\n      } else {\n        parsedValue = parseInt(inputValue, 10);\n      }\n    }\n    this.props.onChange?.(parsedValue as T, errors);\n  };\n\n  debouncedOnChange = debounce((inputValue: string) => {\n    this.onChange(inputValue);\n  }, FAST_DEBOUNCE);\n\n  onChangeWrapper = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.setState({ value }, () => {\n      this.debouncedOnChange(value);\n    });\n  };\n\n  render = () => {\n    let { value } = this.state;\n    if (this.initialValue !== this.props.value) {\n      this.initialValue = this.props.value;\n      value = safeStringify(this.props.value);\n    }\n    return (\n      <div>\n        <ControlHeader {...this.props} />\n        <Input\n          type=\"text\"\n          data-test=\"inline-name\"\n          placeholder={this.props.placeholder}\n          onChange={this.onChangeWrapper}\n          onFocus={this.props.onFocus}\n          value={value}\n          disabled={this.props.disabled}\n          aria-label={this.props.label}\n        />\n      </div>\n    );\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}