{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport Button from 'src/components/Button';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from './AnnotationLayerModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\nfunction AnnotationLayersList({ addDangerToast, addSuccessToast, user }) {\n  const { state: { loading, resourceCount: layersCount, resourceCollection: layers, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('annotation_layer', t('Annotation layers'), addDangerToast);\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] = useState(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] = useState(null);\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] = useState(null);\n  const handleLayerDelete = ({ id, name }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}` }).\n    then(() => {\n      refreshData();\n      setLayerCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkLayerDelete = layersToDelete => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(_mapInstanceProperty(layersToDelete).call(layersToDelete, ({ id }) => id))}` }).\n    then(({ json = {} }) => {\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting the selected layers: %s', errMsg))));\n  };\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  function handleAnnotationLayerEdit(layer) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    Cell: __signature__(({ row: { original: { id, name } } }) => {\n      let hasHistory = true;\n      try {\n        useHistory();\n      }\n      catch (err) {\n        // If error is thrown, we know not to use <Link> in render\n        hasHistory = false;\n      }\n      if (hasHistory) {\n        return ___EmotionJSX(Link, { to: `/annotationmodelview/${id}/annotation` }, name);\n      }\n      return ___EmotionJSX(\"a\", { href: `/annotationmodelview/${id}/annotation` }, name);\n    }, \"useHistory{}\", () => [useHistory]) },\n\n  {\n    accessor: 'descr',\n    Header: t('Description') },\n\n  {\n    Cell: ({ row: { original: { changed_on: changedOn } } }) => {\n      const date = new Date(changedOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).format(MOMENT_FORMAT);\n    },\n    Header: t('Last modified'),\n    accessor: 'changed_on',\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original: { created_on: createdOn } } }) => {\n      const date = new Date(createdOn);\n      const utc = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return moment(utc).format(MOMENT_FORMAT);\n    },\n    Header: t('Created on'),\n    accessor: 'created_on',\n    size: 'xl' },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    Header: t('Created by'),\n    Cell: ({ row: { original: { created_by: createdBy } } }) => createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original } }) => {var _context;\n      const handleEdit = () => handleAnnotationLayerEdit(original);\n      const handleDelete = () => setLayerCurrentlyDeleting(original);\n      const actions = _filterInstanceProperty(_context = [\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit template'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit } :\n\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete template'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null]).call(_context,\n      item => !!item);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !canEdit && !canDelete,\n    size: 'xl' }],\n\n  [canDelete, canCreate]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary' });\n\n  }\n  const filters = useMemo(() => [\n  {\n    Header: t('Created by'),\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('annotation_layer', 'created_by', createErrorHandler(errMsg => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user.userId),\n    paginate: true },\n\n  {\n    Header: t('Search'),\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  const EmptyStateButton = ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: () => {\n      handleAnnotationLayerEdit(null);\n    } },\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')));\n\n\n  const emptyState = {\n    message: t('No annotation layers yet'),\n    slot: EmptyStateButton };\n\n  const onLayerAdd = id => {\n    window.location.href = `/annotationmodelview/${id}/annotation`;\n  };\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: t('Annotation layers'), buttons: subMenuButtons }),\n  ___EmotionJSX(AnnotationLayerModal, { addDangerToast: addDangerToast, layer: currentAnnotationLayer, onLayerAdd: onLayerAdd, onHide: onModalHide, show: annotationLayerModalOpen }),\n  layerCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete the layer.'), onConfirm: () => {\n      if (layerCurrentlyDeleting) {\n        handleLayerDelete(layerCurrentlyDeleting);\n      }\n    }, onHide: () => setLayerCurrentlyDeleting(null), open: true, title: t('Delete Layer?') }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected layers?'), onConfirm: handleBulkLayerDelete },\n  confirmDelete => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"annotation-layers-list-view\", columns: columns, count: layersCount, data: layers, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, emptyState: emptyState });\n  }));\n\n\n}__signature__(AnnotationLayersList, \"useListViewResource{{ state: { loading, resourceCount: layersCount, resourceCollection: layers, bulkSelectEnabled, }, hasPerm, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[annotationLayerModalOpen, setAnnotationLayerModalOpen,](false)}\\nuseState{[currentAnnotationLayer, setCurrentAnnotationLayer,](null)}\\nuseState{[layerCurrentlyDeleting, setLayerCurrentlyDeleting,](null)}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource]);const _default =\nwithToasts(AnnotationLayersList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayersList.tsx\");reactHotLoader.register(MOMENT_FORMAT, \"MOMENT_FORMAT\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayersList.tsx\");reactHotLoader.register(AnnotationLayersList, \"AnnotationLayersList\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayersList.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayersList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayersList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/components/Menu/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Button from 'src/components/Button';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from './AnnotationLayerModal';\nimport { AnnotationLayerObject } from './types';\n\nconst PAGE_SIZE = 25;\nconst MOMENT_FORMAT = 'MMM DD, YYYY';\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [\n    annotationLayerModalOpen,\n    setAnnotationLayerModalOpen,\n  ] = useState<boolean>(false);\n  const [\n    currentAnnotationLayer,\n    setCurrentAnnotationLayer,\n  ] = useState<AnnotationLayerObject | null>(null);\n\n  const [\n    layerCurrentlyDeleting,\n    setLayerCurrentlyDeleting,\n  ] = useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return (\n              <Link to={`/annotationmodelview/${id}/annotation`}>{name}</Link>\n            );\n          }\n\n          return <a href={`/annotationmodelview/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on: changedOn },\n          },\n        }: any) => {\n          const date = new Date(changedOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).format(MOMENT_FORMAT);\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        Header: t('Created by'),\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user.userId,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  const EmptyStateButton = (\n    <Button\n      buttonStyle=\"primary\"\n      onClick={() => {\n        handleAnnotationLayerEdit(null);\n      }}\n    >\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    </Button>\n  );\n\n  const emptyState = {\n    message: t('No annotation layers yet'),\n    slot: EmptyStateButton,\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationmodelview/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}