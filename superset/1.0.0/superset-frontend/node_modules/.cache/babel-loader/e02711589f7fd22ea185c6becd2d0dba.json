{"ast":null,"code":"import _Number$isNaN from \"@babel/runtime-corejs3/core-js-stable/number/is-nan\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NEW_COMPONENTS_SOURCE_ID } from './constants';\nimport findParentId from './findParentId';\nimport getDetailedComponentWidth from './getDetailedComponentWidth';\nimport newComponentFactory from './newComponentFactory';\n\nexport default function getComponentWidthFromDrop({\n  dropResult,\n  layout: components })\n{\n  const { source, destination, dragging } = dropResult;\n\n  const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n  const component = isNewComponent ?\n  newComponentFactory(dragging.type) :\n  components[dragging.id] || {};\n\n  // moving a component within the same container shouldn't change its width\n  if (source.id === destination.id) {\n    return component.meta.width;\n  }\n\n  const {\n    width: draggingWidth,\n    minimumWidth: minDraggingWidth } =\n  getDetailedComponentWidth({\n    component,\n    components });\n\n\n  const {\n    width: destinationWidth,\n    occupiedWidth: draggingOccupiedWidth } =\n  getDetailedComponentWidth({\n    id: destination.id,\n    components });\n\n\n  let destinationCapacity = Number(destinationWidth - draggingOccupiedWidth);\n\n  if (_Number$isNaN(destinationCapacity)) {\n    const {\n      width: grandparentWidth,\n      occupiedWidth: grandparentOccupiedWidth } =\n    getDetailedComponentWidth({\n      id: findParentId({\n        childId: destination.id,\n        layout: components }),\n\n      components });\n\n\n    destinationCapacity = Number(grandparentWidth - grandparentOccupiedWidth);\n  }\n\n  if (\n  _Number$isNaN(destinationCapacity) ||\n  _Number$isNaN(Number(draggingWidth)))\n  {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= draggingWidth) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= minDraggingWidth) {\n    return destinationCapacity;\n  }\n\n  return -1;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getComponentWidthFromDrop, \"getComponentWidthFromDrop\", \"/app/superset-frontend/src/dashboard/util/getComponentWidthFromDrop.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getComponentWidthFromDrop.js"],"names":["NEW_COMPONENTS_SOURCE_ID","findParentId","getDetailedComponentWidth","newComponentFactory","getComponentWidthFromDrop","dropResult","layout","components","source","destination","dragging","isNewComponent","id","component","type","meta","width","draggingWidth","minimumWidth","minDraggingWidth","destinationWidth","occupiedWidth","draggingOccupiedWidth","destinationCapacity","Number","grandparentWidth","grandparentOccupiedWidth","childId"],"mappings":"wXAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,wBAAT,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,eAAe,SAASC,yBAAT,CAAmC;AAChDC,EAAAA,UADgD;AAEhDC,EAAAA,MAAM,EAAEC,UAFwC,EAAnC;AAGZ;AACD,QAAM,EAAEC,MAAF,EAAUC,WAAV,EAAuBC,QAAvB,KAAoCL,UAA1C;;AAEA,QAAMM,cAAc,GAAGH,MAAM,CAACI,EAAP,KAAcZ,wBAArC;AACA,QAAMa,SAAS,GAAGF,cAAc;AAC5BR,EAAAA,mBAAmB,CAACO,QAAQ,CAACI,IAAV,CADS;AAE5BP,EAAAA,UAAU,CAACG,QAAQ,CAACE,EAAV,CAAV,IAA2B,EAF/B;;AAIA;AACA,MAAIJ,MAAM,CAACI,EAAP,KAAcH,WAAW,CAACG,EAA9B,EAAkC;AAChC,WAAOC,SAAS,CAACE,IAAV,CAAeC,KAAtB;AACD;;AAED,QAAM;AACJA,IAAAA,KAAK,EAAEC,aADH;AAEJC,IAAAA,YAAY,EAAEC,gBAFV;AAGFjB,EAAAA,yBAAyB,CAAC;AAC5BW,IAAAA,SAD4B;AAE5BN,IAAAA,UAF4B,EAAD,CAH7B;;;AAQA,QAAM;AACJS,IAAAA,KAAK,EAAEI,gBADH;AAEJC,IAAAA,aAAa,EAAEC,qBAFX;AAGFpB,EAAAA,yBAAyB,CAAC;AAC5BU,IAAAA,EAAE,EAAEH,WAAW,CAACG,EADY;AAE5BL,IAAAA,UAF4B,EAAD,CAH7B;;;AAQA,MAAIgB,mBAAmB,GAAGC,MAAM,CAACJ,gBAAgB,GAAGE,qBAApB,CAAhC;;AAEA,MAAI,cAAaC,mBAAb,CAAJ,EAAuC;AACrC,UAAM;AACJP,MAAAA,KAAK,EAAES,gBADH;AAEJJ,MAAAA,aAAa,EAAEK,wBAFX;AAGFxB,IAAAA,yBAAyB,CAAC;AAC5BU,MAAAA,EAAE,EAAEX,YAAY,CAAC;AACf0B,QAAAA,OAAO,EAAElB,WAAW,CAACG,EADN;AAEfN,QAAAA,MAAM,EAAEC,UAFO,EAAD,CADY;;AAK5BA,MAAAA,UAL4B,EAAD,CAH7B;;;AAWAgB,IAAAA,mBAAmB,GAAGC,MAAM,CAACC,gBAAgB,GAAGC,wBAApB,CAA5B;AACD;;AAED;AACE,gBAAaH,mBAAb;AACA,gBAAaC,MAAM,CAACP,aAAD,CAAnB,CAFF;AAGE;AACA,WAAOA,aAAP;AACD;AACD,MAAIM,mBAAmB,IAAIN,aAA3B,EAA0C;AACxC,WAAOA,aAAP;AACD;AACD,MAAIM,mBAAmB,IAAIJ,gBAA3B,EAA6C;AAC3C,WAAOI,mBAAP;AACD;;AAED,SAAO,CAAC,CAAR;AACD,C,iLA/DuBnB,yB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NEW_COMPONENTS_SOURCE_ID } from './constants';\nimport findParentId from './findParentId';\nimport getDetailedComponentWidth from './getDetailedComponentWidth';\nimport newComponentFactory from './newComponentFactory';\n\nexport default function getComponentWidthFromDrop({\n  dropResult,\n  layout: components,\n}) {\n  const { source, destination, dragging } = dropResult;\n\n  const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n  const component = isNewComponent\n    ? newComponentFactory(dragging.type)\n    : components[dragging.id] || {};\n\n  // moving a component within the same container shouldn't change its width\n  if (source.id === destination.id) {\n    return component.meta.width;\n  }\n\n  const {\n    width: draggingWidth,\n    minimumWidth: minDraggingWidth,\n  } = getDetailedComponentWidth({\n    component,\n    components,\n  });\n\n  const {\n    width: destinationWidth,\n    occupiedWidth: draggingOccupiedWidth,\n  } = getDetailedComponentWidth({\n    id: destination.id,\n    components,\n  });\n\n  let destinationCapacity = Number(destinationWidth - draggingOccupiedWidth);\n\n  if (Number.isNaN(destinationCapacity)) {\n    const {\n      width: grandparentWidth,\n      occupiedWidth: grandparentOccupiedWidth,\n    } = getDetailedComponentWidth({\n      id: findParentId({\n        childId: destination.id,\n        layout: components,\n      }),\n      components,\n    });\n\n    destinationCapacity = Number(grandparentWidth - grandparentOccupiedWidth);\n  }\n\n  if (\n    Number.isNaN(destinationCapacity) ||\n    Number.isNaN(Number(draggingWidth))\n  ) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= draggingWidth) {\n    return draggingWidth;\n  }\n  if (destinationCapacity >= minDraggingWidth) {\n    return destinationCapacity;\n  }\n\n  return -1;\n}\n"]},"metadata":{},"sourceType":"module"}