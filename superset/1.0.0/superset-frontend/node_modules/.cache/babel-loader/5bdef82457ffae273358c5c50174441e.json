{"ast":null,"code":"import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { fDuration } from 'src/modules/dates';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport { useListViewResource, useSingleViewResource } from 'src/views/CRUD/hooks';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  a,\n  Link {\n    margin-left: 16px;\n    font-size: 12px;\n    font-weight: normal;\n    text-decoration: underline;\n  }\n`;\nfunction ExecutionLog({ addDangerToast, isReportEnabled }) {\n  const { alertId } = useParams();\n  const { state: { loading, resourceCount: logCount, resourceCollection: logs }, fetchData } = useListViewResource(`report/${alertId}/log`, t('log'), addDangerToast, false);\n  const { state: { loading: alertLoading, resource: alertResource }, fetchResource } = useSingleViewResource('report', t('reports'), addDangerToast);\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(() => [\n  {\n    Cell: ({ row: { original: { state } } }) => ___EmotionJSX(AlertStatusIcon, { state: state, isReportEnabled: isReportEnabled }),\n    accessor: 'state',\n    Header: t('State'),\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: ({ row: { original: { uuid: executionId } } }) => executionId ? _sliceInstanceProperty(executionId).call(executionId, 0, 6) : 'none',\n    accessor: 'uuid',\n    Header: t('Execution ID'),\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: ({ row: { original: { scheduled_dttm: scheduledDttm } } }) => moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n    accessor: 'scheduled_dttm',\n    Header: t('Scheduled at (UTC)') },\n\n  {\n    Cell: ({ row: { original: { start_dttm: startDttm } } }) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n    Header: t('Start at (UTC)'),\n    accessor: 'start_dttm' },\n\n  {\n    Cell: ({ row: { original: { start_dttm: startDttm, end_dttm: endDttm } } }) => fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n    Header: t('Duration'),\n    disableSortBy: true },\n\n  {\n    accessor: 'value',\n    Header: t('Value') },\n\n  {\n    accessor: 'error_message',\n    Header: t('Error message') }],\n\n  [isReportEnabled]);\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: ___EmotionJSX(StyledHeader, null,\n    ___EmotionJSX(\"span\", null,\n    t(`${alertResource == null ? void 0 : alertResource.type}`), \" \", alertResource == null ? void 0 : alertResource.name),\n\n    ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(Link, { to: path }, \"Back to all\"))) }),\n\n\n  ___EmotionJSX(ListView, { className: \"execution-log-list-view\", columns: columns, count: logCount, data: logs, fetchData: fetchData, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE }));\n\n}__signature__(ExecutionLog, \"useParams{{ alertId }}\\nuseListViewResource{{ state: { loading, resourceCount: logCount, resourceCollection: logs }, fetchData, }}\\nuseSingleViewResource{{ state: { loading: alertLoading, resource: alertResource }, fetchResource, }}\\nuseEffect{}\\nuseMemo{columns}\", () => [useParams, useListViewResource, useSingleViewResource]);const _default =\nwithToasts(ExecutionLog);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/views/CRUD/alert/ExecutionLog.tsx\");reactHotLoader.register(StyledHeader, \"StyledHeader\", \"/app/superset-frontend/src/views/CRUD/alert/ExecutionLog.tsx\");reactHotLoader.register(ExecutionLog, \"ExecutionLog\", \"/app/superset-frontend/src/views/CRUD/alert/ExecutionLog.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/alert/ExecutionLog.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/alert/ExecutionLog.tsx"],"names":[],"mappings":"kYAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,OAAO,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,OAA3B,QAA0C,OAA1C;AACA,SAAS,IAAT,EAAe,SAAf,QAAgC,kBAAhC;AACA,OAAO,QAAP,MAAqB,yBAArB;AACA,OAAO,OAAP,MAAoB,6BAApB;AACA,OAAO,UAAP,MAAuB,wCAAvB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AACA,OAAO,eAAP,MAA4B,iDAA5B;AACA,SACE,mBADF,EAEE,qBAFF,QAGO,sBAHP,C;AAMA,MAAM,SAAS,GAAG,EAAlB;AAEA,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG;;;;;;;;;;;AAW9B,CAXD;AAmBA,SAAS,YAAT,CAAsB,EAAE,cAAF,EAAkB,eAAlB,EAAtB,EAA4E;AAC1E,QAAM,EAAE,OAAF,KAAmB,SAAS,EAAlC;AACA,QAAM,EACJ,KAAK,EAAE,EAAE,OAAF,EAAW,aAAa,EAAE,QAA1B,EAAoC,kBAAkB,EAAE,IAAxD,EADH,EAEJ,SAFI,KAGF,mBAAmB,CACrB,UAAU,OAAO,MADI,EAErB,CAAC,CAAC,KAAD,CAFoB,EAGrB,cAHqB,EAIrB,KAJqB,CAHvB;AASA,QAAM,EACJ,KAAK,EAAE,EAAE,OAAO,EAAE,YAAX,EAAyB,QAAQ,EAAE,aAAnC,EADH,EAEJ,aAFI,KAGF,qBAAqB,CACvB,QADuB,EAEvB,CAAC,CAAC,SAAD,CAFsB,EAGvB,cAHuB,CAHzB;AASA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,OAAO,KAAK,IAAZ,IAAoB,CAAC,YAAzB,EAAuC;AACrC,MAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAAC,OAAD,CAJM,CAAT;AAMA,QAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,YAAN,EAAoB,IAAI,EAAE,IAA1B,EAAD,CAApB;AACA,QAAM,OAAO,GAAG,OAAO,CACrB,MAAM;AACJ;AACE,IAAA,IAAI,EAAE,CAAC,EACL,GAAG,EAAE,EACH,QAAQ,EAAE,EAAE,KAAF,EADP,EADA,EAAD,KAKJ,cAAC,eAAD,IAAiB,KAAK,EAAE,KAAxB,EAA+B,eAAe,EAAE,eAAhD,GANJ;AAQE,IAAA,QAAQ,EAAE,OARZ;AASE,IAAA,MAAM,EAAE,CAAC,CAAC,OAAD,CATX;AAUE,IAAA,IAAI,EAAE,IAVR;AAWE,IAAA,aAAa,EAAE,IAXjB,EADI;;AAcJ;AACE,IAAA,IAAI,EAAE,CAAC,EACL,GAAG,EAAE,EACH,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAR,EADP,EADA,EAAD,KAIM,WAAW,GAAG,uBAAA,WAAW,MAAX,CAAA,WAAW,EAAO,CAAP,EAAU,CAAV,CAAd,GAA6B,MALtD;AAME,IAAA,QAAQ,EAAE,MANZ;AAOE,IAAA,MAAM,EAAE,CAAC,CAAC,cAAD,CAPX;AAQE,IAAA,IAAI,EAAE,IARR;AASE,IAAA,aAAa,EAAE,IATjB,EAdI;;AAyBJ;AACE,IAAA,IAAI,EAAE,CAAC,EACL,GAAG,EAAE,EACH,QAAQ,EAAE,EAAE,cAAc,EAAE,aAAlB,EADP,EADA,EAAD,KAKJ,MAAM,CAAC,IAAI,IAAJ,CAAS,aAAT,CAAD,CAAN,CAAgC,MAAhC,CAAuC,uBAAvC,CANJ;AAOE,IAAA,QAAQ,EAAE,gBAPZ;AAQE,IAAA,MAAM,EAAE,CAAC,CAAC,oBAAD,CARX,EAzBI;;AAmCJ;AACE,IAAA,IAAI,EAAE,CAAC,EACL,GAAG,EAAE,EACH,QAAQ,EAAE,EAAE,UAAU,EAAE,SAAd,EADP,EADA,EAAD,KAIK,MAAM,CAAC,IAAI,IAAJ,CAAS,SAAT,CAAD,CAAN,CAA4B,MAA5B,CAAmC,uBAAnC,CALb;AAME,IAAA,MAAM,EAAE,CAAC,CAAC,gBAAD,CANX;AAOE,IAAA,QAAQ,EAAE,YAPZ,EAnCI;;AA4CJ;AACE,IAAA,IAAI,EAAE,CAAC,EACL,GAAG,EAAE,EACH,QAAQ,EAAE,EAAE,UAAU,EAAE,SAAd,EAAyB,QAAQ,EAAE,OAAnC,EADP,EADA,EAAD,KAKJ,SAAS,CAAC,IAAI,IAAJ,CAAS,SAAT,EAAoB,OAApB,EAAD,EAAgC,IAAI,IAAJ,CAAS,OAAT,EAAkB,OAAlB,EAAhC,CANb;AAOE,IAAA,MAAM,EAAE,CAAC,CAAC,UAAD,CAPX;AAQE,IAAA,aAAa,EAAE,IARjB,EA5CI;;AAsDJ;AACE,IAAA,QAAQ,EAAE,OADZ;AAEE,IAAA,MAAM,EAAE,CAAC,CAAC,OAAD,CAFX,EAtDI;;AA0DJ;AACE,IAAA,QAAQ,EAAE,eADZ;AAEE,IAAA,MAAM,EAAE,CAAC,CAAC,eAAD,CAFX,EA1DI,CADe;;AAgErB,GAAC,eAAD,CAhEqB,CAAvB;AAkEA,QAAM,IAAI,GAAG,IAAI,eAAe,GAAG,QAAH,GAAc,OAAO,QAArD;AACA,SACE;AACE,gBAAC,OAAD,IACE,IAAI,EACF,cAAC,YAAD;AACE;AACG,IAAA,CAAC,CAAC,GAAG,aAAH,oBAAG,aAAa,CAAE,IAAI,EAAvB,CADJ,OACiC,aADjC,oBACiC,aAAa,CAAE,IADhD,CADF;;AAIE;AACE,kBAAC,IAAD,IAAM,EAAE,EAAE,IAAV,kBADF,CAJF,CAFJ,GADF;;;AAaE,gBAAC,QAAD,IACE,SAAS,EAAC,yBADZ,EAEE,OAAO,EAAE,OAFX,EAGE,KAAK,EAAE,QAHT,EAIE,IAAI,EAAE,IAJR,EAKE,SAAS,EAAE,SALb,EAME,WAAW,EAAE,WANf,EAOE,OAAO,EAAE,OAPX,EAQE,QAAQ,EAAE,SARZ,GAbF,CADF;;AA0BD,C,cAxHQ,Y,oRACkB,S,EAIrB,mB,EASA,qB;AA4GS,UAAU,CAAC,YAAD,C,CAAzB,wB,iLA/IM,S,uGAEA,Y,0GAmBG,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { fDuration } from 'src/modules/dates';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { AlertObject, LogObject } from './types';\n\nconst PAGE_SIZE = 25;\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  a,\n  Link {\n    margin-left: 16px;\n    font-size: 12px;\n    font-weight: normal;\n    text-decoration: underline;\n  }\n`;\n\ninterface ExecutionLogProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n}\n\nfunction ExecutionLog({ addDangerToast, isReportEnabled }: ExecutionLogProps) {\n  const { alertId }: any = useParams();\n  const {\n    state: { loading, resourceCount: logCount, resourceCollection: logs },\n    fetchData,\n  } = useListViewResource<LogObject>(\n    `report/${alertId}/log`,\n    t('log'),\n    addDangerToast,\n    false,\n  );\n  const {\n    state: { loading: alertLoading, resource: alertResource },\n    fetchResource,\n  } = useSingleViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { state },\n          },\n        }: any) => (\n          <AlertStatusIcon state={state} isReportEnabled={isReportEnabled} />\n        ),\n        accessor: 'state',\n        Header: t('State'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { uuid: executionId },\n          },\n        }: any) => (executionId ? executionId.slice(0, 6) : 'none'),\n        accessor: 'uuid',\n        Header: t('Execution ID'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { scheduled_dttm: scheduledDttm },\n          },\n        }: any) =>\n          moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        accessor: 'scheduled_dttm',\n        Header: t('Scheduled at (UTC)'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        Header: t('Start at (UTC)'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm, end_dttm: endDttm },\n          },\n        }: any) =>\n          fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n        Header: t('Duration'),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'value',\n        Header: t('Value'),\n      },\n      {\n        accessor: 'error_message',\n        Header: t('Error message'),\n      },\n    ],\n    [isReportEnabled],\n  );\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>\n              {t(`${alertResource?.type}`)} {alertResource?.name}\n            </span>\n            <span>\n              <Link to={path}>Back to all</Link>\n            </span>\n          </StyledHeader>\n        }\n      />\n      <ListView<LogObject>\n        className=\"execution-log-list-view\"\n        columns={columns}\n        count={logCount}\n        data={logs}\n        fetchData={fetchData}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n      />\n    </>\n  );\n}\n\nexport default withToasts(ExecutionLog);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}