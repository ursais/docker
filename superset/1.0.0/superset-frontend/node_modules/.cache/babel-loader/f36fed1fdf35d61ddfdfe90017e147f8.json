{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Radio } from 'src/components/Radio';\nimport { AutoComplete, Input } from 'src/common/components';\nimport StyledModal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { styled, t } from '@superset-ui/core';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.div`\n  .smd-body {\n    margin: 0 8px;\n  }\n  .smd-input {\n    margin-left: 45px;\n    width: 401px;\n  }\n  .smd-autocomplete {\n    margin-left: 8px;\n    width: 401px;\n  }\n  .smd-radio {\n    display: block;\n    height: 30px;\n    margin: 10px 0px;\n    line-height: 30px;\n  }\n  .smd-overwrite-msg {\n    margin: 7px;\n  }\n`;\n// eslint-disable-next-line no-empty-pattern\nexport const SaveDatasetModal = ({ visible, onOk, onHide, handleDatasetNameChange, handleSaveDatasetRadioBtnState, saveDatasetRadioBtnState, shouldOverwriteDataset, handleOverwriteCancel, handleOverwriteDataset, handleOverwriteDatasetOption, defaultCreateDatasetValue, disableSaveAndExploreBtn, handleSaveDatasetModalSearch, filterAutocompleteOption, userDatasetOptions, onChangeAutoComplete }) => ___EmotionJSX(StyledModal, { show: visible, title: \"Save or Overwrite Dataset\", onHide: onHide, footer: ___EmotionJSX(React.Fragment, null,\n  !shouldOverwriteDataset && ___EmotionJSX(Button, { disabled: disableSaveAndExploreBtn, buttonStyle: \"primary\", onClick: onOk },\n  t('Save & Explore')),\n\n  shouldOverwriteDataset && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Button, { onClick: handleOverwriteCancel }, \"Back\"),\n  ___EmotionJSX(Button, { className: \"md\", buttonStyle: \"primary\", onClick: handleOverwriteDataset, disabled: disableSaveAndExploreBtn },\n  t('Overwrite & Explore')))) },\n\n\n\n___EmotionJSX(Styles, null,\n!shouldOverwriteDataset && ___EmotionJSX(\"div\", { className: \"smd-body\" },\n___EmotionJSX(\"div\", { className: \"smd-prompt\" }, \"Save this query as a virtual dataset to continue exploring\"),\n\n\n___EmotionJSX(Radio.Group, { onChange: handleSaveDatasetRadioBtnState, value: saveDatasetRadioBtnState },\n___EmotionJSX(Radio, { className: \"smd-radio\", value: 1 }, \"Save as new\",\n\n___EmotionJSX(Input, { className: \"smd-input\", defaultValue: defaultCreateDatasetValue, onChange: handleDatasetNameChange, disabled: saveDatasetRadioBtnState !== 1 })),\n\n___EmotionJSX(Radio, { className: \"smd-radio\", value: 2 }, \"Overwrite existing\",\n\n___EmotionJSX(AutoComplete, { className: \"smd-autocomplete\", options: userDatasetOptions, onSelect: handleOverwriteDatasetOption, onSearch: handleSaveDatasetModalSearch, onChange: onChangeAutoComplete, placeholder: \"Select or type dataset name\", filterOption: filterAutocompleteOption, disabled: saveDatasetRadioBtnState !== 2 })))),\n\n\n\nshouldOverwriteDataset && ___EmotionJSX(\"div\", { className: \"smd-overwrite-msg\" }, \"Are you sure you want to overwrite this dataset?\")));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/SqlLab/components/SaveDatasetModal.tsx\");reactHotLoader.register(SaveDatasetModal, \"SaveDatasetModal\", \"/app/superset-frontend/src/SqlLab/components/SaveDatasetModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/SaveDatasetModal.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,MAAyC,OAAzC;AAEA,SAAS,KAAT,QAAsB,sBAAtB;AACA,SAAS,YAAT,EAAuB,KAAvB,QAAoC,uBAApC;AACA,OAAO,WAAP,MAAwB,sBAAxB;AACA,OAAO,MAAP,MAAmB,uBAAnB;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B,C;AA4BA,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;AAqBxB,CArBD;AAuBA;AACA,OAAO,MAAM,gBAAgB,GAA6C,CAAC,EACzE,OADyE,EAEzE,IAFyE,EAGzE,MAHyE,EAIzE,uBAJyE,EAKzE,8BALyE,EAMzE,wBANyE,EAOzE,sBAPyE,EAQzE,qBARyE,EASzE,sBATyE,EAUzE,4BAVyE,EAWzE,yBAXyE,EAYzE,wBAZyE,EAazE,4BAbyE,EAczE,wBAdyE,EAezE,kBAfyE,EAgBzE,oBAhByE,EAAD,KAkBxE,cAAC,WAAD,IACE,IAAI,EAAE,OADR,EAEE,KAAK,EAAC,2BAFR,EAGE,MAAM,EAAE,MAHV,EAIE,MAAM,EACJ;AACG,GAAC,sBAAD,IACC,cAAC,MAAD,IACE,QAAQ,EAAE,wBADZ,EAEE,WAAW,EAAC,SAFd,EAGE,OAAO,EAAE,IAHX;AAKG,EAAA,CAAC,CAAC,gBAAD,CALJ,CAFJ;;AAUG,EAAA,sBAAsB,IACrB;AACE,gBAAC,MAAD,IAAQ,OAAO,EAAE,qBAAjB,WADF;AAEE,gBAAC,MAAD,IACE,SAAS,EAAC,IADZ,EAEE,WAAW,EAAC,SAFd,EAGE,OAAO,EAAE,sBAHX,EAIE,QAAQ,EAAE,wBAJZ;AAMG,EAAA,CAAC,CAAC,qBAAD,CANJ,CAFF,CAXJ,CALJ;;;;AA+BE,cAAC,MAAD;AACG,CAAC,sBAAD,IACC,uBAAK,SAAS,EAAC,UAAf;AACE,uBAAK,SAAS,EAAC,YAAf,iEADF;;;AAIE,cAAC,KAAD,CAAO,KAAP,IACE,QAAQ,EAAE,8BADZ,EAEE,KAAK,EAAE,wBAFT;AAIE,cAAC,KAAD,IAAO,SAAS,EAAC,WAAjB,EAA6B,KAAK,EAAE,CAApC;;AAEE,cAAC,KAAD,IACE,SAAS,EAAC,WADZ,EAEE,YAAY,EAAE,yBAFhB,EAGE,QAAQ,EAAE,uBAHZ,EAIE,QAAQ,EAAE,wBAAwB,KAAK,CAJzC,GAFF,CAJF;;AAaE,cAAC,KAAD,IAAO,SAAS,EAAC,WAAjB,EAA6B,KAAK,EAAE,CAApC;;AAEE,cAAC,YAAD,IACE,SAAS,EAAC,kBADZ,EAEE,OAAO,EAAE,kBAFX,EAGE,QAAQ,EAAE,4BAHZ,EAIE,QAAQ,EAAE,4BAJZ,EAKE,QAAQ,EAAE,oBALZ,EAME,WAAW,EAAC,6BANd,EAOE,YAAY,EAAE,wBAPhB,EAQE,QAAQ,EAAE,wBAAwB,KAAK,CARzC,GAFF,CAbF,CAJF,CAFJ;;;;AAmCG,sBAAsB,IACrB,uBAAK,SAAS,EAAC,mBAAf,uDApCJ,CA/BF,CAlBK,C,iLAxBD,M,yGAwBO,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FunctionComponent } from 'react';\nimport { AutoCompleteProps } from 'antd/lib/auto-complete';\nimport { Radio } from 'src/components/Radio';\nimport { AutoComplete, Input } from 'src/common/components';\nimport StyledModal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { styled, t } from '@superset-ui/core';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\ninterface SaveDatasetModalProps {\n  visible: boolean;\n  onOk: () => void;\n  onHide: () => void;\n  handleDatasetNameChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  handleSaveDatasetModalSearch: (searchText: string) => Promise<void>;\n  filterAutocompleteOption: (\n    inputValue: string,\n    option: { value: string; datasetId: number },\n  ) => boolean;\n  handleSaveDatasetRadioBtnState: (e: RadioChangeEvent) => void;\n  handleOverwriteCancel: () => void;\n  handleOverwriteDataset: () => void;\n  handleOverwriteDatasetOption: (\n    data: string,\n    option: Record<string, any>,\n  ) => void;\n  onChangeAutoComplete: () => void;\n  defaultCreateDatasetValue: string;\n  disableSaveAndExploreBtn: boolean;\n  saveDatasetRadioBtnState: number;\n  shouldOverwriteDataset: boolean;\n  userDatasetOptions: AutoCompleteProps['options'];\n}\n\nconst Styles = styled.div`\n  .smd-body {\n    margin: 0 8px;\n  }\n  .smd-input {\n    margin-left: 45px;\n    width: 401px;\n  }\n  .smd-autocomplete {\n    margin-left: 8px;\n    width: 401px;\n  }\n  .smd-radio {\n    display: block;\n    height: 30px;\n    margin: 10px 0px;\n    line-height: 30px;\n  }\n  .smd-overwrite-msg {\n    margin: 7px;\n  }\n`;\n\n// eslint-disable-next-line no-empty-pattern\nexport const SaveDatasetModal: FunctionComponent<SaveDatasetModalProps> = ({\n  visible,\n  onOk,\n  onHide,\n  handleDatasetNameChange,\n  handleSaveDatasetRadioBtnState,\n  saveDatasetRadioBtnState,\n  shouldOverwriteDataset,\n  handleOverwriteCancel,\n  handleOverwriteDataset,\n  handleOverwriteDatasetOption,\n  defaultCreateDatasetValue,\n  disableSaveAndExploreBtn,\n  handleSaveDatasetModalSearch,\n  filterAutocompleteOption,\n  userDatasetOptions,\n  onChangeAutoComplete,\n}) => (\n  <StyledModal\n    show={visible}\n    title=\"Save or Overwrite Dataset\"\n    onHide={onHide}\n    footer={\n      <>\n        {!shouldOverwriteDataset && (\n          <Button\n            disabled={disableSaveAndExploreBtn}\n            buttonStyle=\"primary\"\n            onClick={onOk}\n          >\n            {t('Save & Explore')}\n          </Button>\n        )}\n        {shouldOverwriteDataset && (\n          <>\n            <Button onClick={handleOverwriteCancel}>Back</Button>\n            <Button\n              className=\"md\"\n              buttonStyle=\"primary\"\n              onClick={handleOverwriteDataset}\n              disabled={disableSaveAndExploreBtn}\n            >\n              {t('Overwrite & Explore')}\n            </Button>\n          </>\n        )}\n      </>\n    }\n  >\n    <Styles>\n      {!shouldOverwriteDataset && (\n        <div className=\"smd-body\">\n          <div className=\"smd-prompt\">\n            Save this query as a virtual dataset to continue exploring\n          </div>\n          <Radio.Group\n            onChange={handleSaveDatasetRadioBtnState}\n            value={saveDatasetRadioBtnState}\n          >\n            <Radio className=\"smd-radio\" value={1}>\n              Save as new\n              <Input\n                className=\"smd-input\"\n                defaultValue={defaultCreateDatasetValue}\n                onChange={handleDatasetNameChange}\n                disabled={saveDatasetRadioBtnState !== 1}\n              />\n            </Radio>\n            <Radio className=\"smd-radio\" value={2}>\n              Overwrite existing\n              <AutoComplete\n                className=\"smd-autocomplete\"\n                options={userDatasetOptions}\n                onSelect={handleOverwriteDatasetOption}\n                onSearch={handleSaveDatasetModalSearch}\n                onChange={onChangeAutoComplete}\n                placeholder=\"Select or type dataset name\"\n                filterOption={filterAutocompleteOption}\n                disabled={saveDatasetRadioBtnState !== 2}\n              />\n            </Radio>\n          </Radio.Group>\n        </div>\n      )}\n      {shouldOverwriteDataset && (\n        <div className=\"smd-overwrite-msg\">\n          Are you sure you want to overwrite this dataset?\n        </div>\n      )}\n    </Styles>\n  </StyledModal>\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}