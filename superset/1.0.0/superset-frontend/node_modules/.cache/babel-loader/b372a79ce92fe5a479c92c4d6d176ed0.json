{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  position: relative;\n  width: ${({ theme }) => theme.gridUnit * 8}px;\n  flex: 0 0 ${({ theme }) => theme.gridUnit * 8}px;\n  /* these animations (which can be enabled with the \"animated\" class) look glitchy due to chart resizing */\n  /* keeping these for posterity, in case we can improve that resizing performance */\n  /* &.animated {\n    transition: width 0;\n    transition-delay: ${({ theme }) => theme.transitionTiming * 2}s;\n  } */\n  &.open {\n    width: 250px;\n    flex: 0 0 250px;\n    /* &.animated {\n      transition-delay: 0s;\n    } */\n  }\n`;\nconst Contents = styled.div`\n  display: grid;\n  position: absolute;\n  overflow: auto;\n  height: 100%;\n`;\n/**\n * A vertical sidebar that uses sticky position to stay\n * fixed on the page after the sitenav is scrolled out of the viewport.\n *\n * TODO use css position: sticky when sufficiently supported\n * (should have better performance)\n */\nexport const StickyVerticalBar = ({ topOffset, children, filtersOpen }) => ___EmotionJSX(Wrapper, { className: cx({ open: filtersOpen }) },\n___EmotionJSX(StickyContainer, null,\n___EmotionJSX(Sticky, { topOffset: -topOffset, bottomOffset: Infinity },\n({ style, isSticky, distanceFromTop }) => ___EmotionJSX(Contents, { style: isSticky ?\n  {\n    ...style,\n    top: topOffset,\n    height: `calc(100vh - ${topOffset}px)` } :\n\n  {\n    height: `calc(100vh - ${distanceFromTop}px)` } },\n\nchildren))));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/app/superset-frontend/src/dashboard/components/StickyVerticalBar.tsx\");reactHotLoader.register(Contents, \"Contents\", \"/app/superset-frontend/src/dashboard/components/StickyVerticalBar.tsx\");reactHotLoader.register(StickyVerticalBar, \"StickyVerticalBar\", \"/app/superset-frontend/src/dashboard/components/StickyVerticalBar.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/StickyVerticalBar.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,eAAT,EAA0B,MAA1B,QAAwC,cAAxC;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,EAAP,MAAe,YAAf,C;AAEA,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG;;WAEf,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;cAC9B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;;;wBAKvB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,gBAAN,GAAyB,CAAC;;;;;;;;;AAShE,CAjBD;AAmBA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG;;;;;AAK1B,CALD;AAaA;;;;;;AAMG;AACH,OAAO,MAAM,iBAAiB,GAAuB,CAAC,EACpD,SADoD,EAEpD,QAFoD,EAGpD,WAHoD,EAAD,KAKnD,cAAC,OAAD,IAAS,SAAS,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,WAAR,EAAD,CAAtB;AACE,cAAC,eAAD;AACE,cAAC,MAAD,IAAQ,SAAS,EAAE,CAAC,SAApB,EAA+B,YAAY,EAAE,QAA7C;AACG,CAAC,EACA,KADA,EAEA,QAFA,EAGA,eAHA,EAAD,KASC,cAAC,QAAD,IACE,KAAK,EACH,QAAQ;AACJ;AACE,OAAG,KADL;AAEE,IAAA,GAAG,EAAE,SAFP;AAGE,IAAA,MAAM,EAAE,gBAAgB,SAAS,KAHnC,EADI;;AAMJ;AACE,IAAA,MAAM,EAAE,gBAAgB,eAAe,KADzC,EARR;;AAaG,QAbH,CAVJ,CADF,CADF,CALK,C,iLAvCD,O,8GAmBA,Q,+GAoBO,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: ${({ theme }) => theme.gridUnit * 8}px;\n  flex: 0 0 ${({ theme }) => theme.gridUnit * 8}px;\n  /* these animations (which can be enabled with the \"animated\" class) look glitchy due to chart resizing */\n  /* keeping these for posterity, in case we can improve that resizing performance */\n  /* &.animated {\n    transition: width 0;\n    transition-delay: ${({ theme }) => theme.transitionTiming * 2}s;\n  } */\n  &.open {\n    width: 250px;\n    flex: 0 0 250px;\n    /* &.animated {\n      transition-delay: 0s;\n    } */\n  }\n`;\n\nconst Contents = styled.div`\n  display: grid;\n  position: absolute;\n  overflow: auto;\n  height: 100%;\n`;\n\nexport interface SVBProps {\n  topOffset: number;\n  width?: number;\n  filtersOpen: boolean;\n}\n\n/**\n * A vertical sidebar that uses sticky position to stay\n * fixed on the page after the sitenav is scrolled out of the viewport.\n *\n * TODO use css position: sticky when sufficiently supported\n * (should have better performance)\n */\nexport const StickyVerticalBar: React.FC<SVBProps> = ({\n  topOffset,\n  children,\n  filtersOpen,\n}) => (\n  <Wrapper className={cx({ open: filtersOpen })}>\n    <StickyContainer>\n      <Sticky topOffset={-topOffset} bottomOffset={Infinity}>\n        {({\n          style,\n          isSticky,\n          distanceFromTop,\n        }: {\n          style: any;\n          isSticky: boolean;\n          distanceFromTop: number;\n        }) => (\n          <Contents\n            style={\n              isSticky\n                ? {\n                    ...style,\n                    top: topOffset,\n                    height: `calc(100vh - ${topOffset}px)`,\n                  }\n                : {\n                    height: `calc(100vh - ${distanceFromTop}px)`,\n                  }\n            }\n          >\n            {children}\n          </Contents>\n        )}\n      </Sticky>\n    </StickyContainer>\n  </Wrapper>\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}