{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Button from 'src/components/Button';\nimport Select from 'src/components/Select';\nimport { styled, t, SupersetClient } from '@superset-ui/core';\n\nimport Loading from '../../components/Loading';\nimport QueryTable from './QueryTable';\nimport { now, epochTimeXHoursAgo, epochTimeXDaysAgo, epochTimeXYearsAgo } from '../../modules/dates';\nimport { STATUS_OPTIONS, TIME_OPTIONS } from '../constants';\nimport AsyncSelect from '../../components/AsyncSelect';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TableWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  height: 100%;\n`;\nconst TableStyles = styled.div`\n  table {\n    background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n\n  .table > thead > tr > th {\n    border-bottom: ${({ theme }) => theme.gridUnit / 2}px solid\n      ${({ theme }) => theme.colors.grayscale.light2};\n    background: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n`;\nconst StyledTableStylesContainer = styled.div`\n  overflow: auto;\n`;\nfunction QuerySearch({ actions, displayLimit }) {var _context, _context2;\n  const [databaseId, setDatabaseId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [from, setFrom] = useState('28 days ago');\n  const [to, setTo] = useState('now');\n  const [status, setStatus] = useState('success');\n  const [queriesArray, setQueriesArray] = useState([]);\n  const [queriesLoading, setQueriesLoading] = useState(true);\n  const getTimeFromSelection = selection => {\n    switch (selection) {\n      case 'now':\n        return now();\n      case '1 hour ago':\n        return epochTimeXHoursAgo(1);\n      case '1 day ago':\n        return epochTimeXDaysAgo(1);\n      case '7 days ago':\n        return epochTimeXDaysAgo(7);\n      case '28 days ago':\n        return epochTimeXDaysAgo(28);\n      case '90 days ago':\n        return epochTimeXDaysAgo(90);\n      case '1 year ago':\n        return epochTimeXYearsAgo(1);\n      default:\n        return null;}\n\n  };\n  const insertParams = (baseUrl, params) => {\n    const validParams = _filterInstanceProperty(params).call(params, function (p) {\n      return p !== '';\n    });\n    return `${baseUrl}?${validParams.join('&')}`;\n  };\n  const refreshQueries = async () => {\n    setQueriesLoading(true);\n    const params = [\n    userId && `user_id=${userId}`,\n    databaseId && `database_id=${databaseId}`,\n    searchText && `search_text=${searchText}`,\n    status && `status=${status}`,\n    from && `from=${getTimeFromSelection(from)}`,\n    to && `to=${getTimeFromSelection(to)}`];\n\n    try {\n      const response = await SupersetClient.get({\n        endpoint: insertParams('/superset/search_queries', params) });\n\n      const queries = _Object$values(response.json);\n      setQueriesArray(queries);\n    }\n    catch (err) {\n      actions.addDangerToast(t('An error occurred when refreshing queries'));\n    } finally\n    {\n      setQueriesLoading(false);\n    }\n  };\n  useEffect(() => {\n    refreshQueries();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onUserClicked = userId => {\n    setUserId(userId);\n    refreshQueries();\n  };\n  const onDbClicked = dbId => {\n    setDatabaseId(dbId);\n    refreshQueries();\n  };\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      refreshQueries();\n    }\n  };\n  const onChange = e => {\n    e.persist();\n    const handleChange = _debounce(e => {\n      setSearchText(e.target.value);\n    }, 200);\n    handleChange(e);\n  };\n  const userMutator = ({ result }) => _mapInstanceProperty(result).call(result, ({ value, text }) => ({\n    label: text,\n    value }));\n\n  const dbMutator = ({ result }) => {\n    const options = _mapInstanceProperty(result).call(result, ({ id, database_name }) => ({\n      value: id,\n      label: database_name }));\n\n    actions.setDatabases(result);\n    if (result.length === 0) {\n      actions.addDangerToast(t(\"It seems you don't have access to any database\"));\n    }\n    return options;\n  };\n  return ___EmotionJSX(TableWrapper, null,\n  ___EmotionJSX(\"div\", { id: \"search-header\", className: \"row space-1\" },\n  ___EmotionJSX(\"div\", { className: \"col-sm-2\" },\n  ___EmotionJSX(AsyncSelect, { dataEndpoint: \"api/v1/query/related/user\", mutator: userMutator, value: userId, onChange: selected => setUserId(selected == null ? void 0 : selected.value), placeholder: t('Filter by user') })),\n\n  ___EmotionJSX(\"div\", { className: \"col-sm-2\" },\n  ___EmotionJSX(AsyncSelect, { onChange: db => setDatabaseId(db == null ? void 0 : db.value), dataEndpoint: \"/api/v1/database/?q=(filters:!((col:expose_in_sqllab,opr:eq,value:!t)))\", value: databaseId, mutator: dbMutator, placeholder: t('Filter by database') })),\n\n  ___EmotionJSX(\"div\", { className: \"col-sm-4\" },\n  ___EmotionJSX(\"input\", { type: \"text\", onChange: onChange, onKeyDown: onKeyDown, className: \"form-control input-sm\", placeholder: t('Query search string') })),\n\n  ___EmotionJSX(\"div\", { className: \"col-sm-4 search-date-filter-container\" },\n  ___EmotionJSX(Select, { name: \"select-from\", placeholder: t('[From]-'), options: _mapInstanceProperty(_context = _sliceInstanceProperty(TIME_OPTIONS).call(TIME_OPTIONS, 1, TIME_OPTIONS.length)).call(_context, xt => ({\n      value: xt,\n      label: xt })),\n    value: from, autosize: false, onChange: selected => setFrom(selected == null ? void 0 : selected.value) }),\n\n  ___EmotionJSX(Select, { name: \"select-to\", placeholder: t('[To]-'), options: _mapInstanceProperty(TIME_OPTIONS).call(TIME_OPTIONS, xt => ({ value: xt, label: xt })), value: to, autosize: false, onChange: selected => setTo(selected == null ? void 0 : selected.value) }),\n\n  ___EmotionJSX(Select, { name: \"select-status\", placeholder: t('Filter by status'), options: _mapInstanceProperty(_context2 = _Object$keys(STATUS_OPTIONS)).call(_context2, s => ({\n      value: s,\n      label: s })),\n    value: status, isLoading: false, autosize: false, onChange: selected => setStatus(selected == null ? void 0 : selected.value) }),\n\n  ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"success\", onClick: refreshQueries },\n  t('Search')))),\n\n\n\n  ___EmotionJSX(StyledTableStylesContainer, null,\n  queriesLoading ? ___EmotionJSX(Loading, null) : ___EmotionJSX(TableStyles, null,\n  ___EmotionJSX(QueryTable, { columns: [\n    'state',\n    'db',\n    'user',\n    'time',\n    'progress',\n    'rows',\n    'sql',\n    'querylink'],\n    onUserClicked: onUserClicked, onDbClicked: onDbClicked, queries: queriesArray, actions: actions, displayLimit: displayLimit }))));\n\n\n\n}__signature__(QuerySearch, \"useState{[databaseId, setDatabaseId]('')}\\nuseState{[userId, setUserId]('')}\\nuseState{[searchText, setSearchText]('')}\\nuseState{[from, setFrom]('28 days ago')}\\nuseState{[to, setTo]('now')}\\nuseState{[status, setStatus]('success')}\\nuseState{[queriesArray, setQueriesArray]([])}\\nuseState{[queriesLoading, setQueriesLoading](true)}\\nuseEffect{}\");const _default =\nQuerySearch;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableWrapper, \"TableWrapper\", \"/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx\");reactHotLoader.register(TableStyles, \"TableStyles\", \"/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx\");reactHotLoader.register(StyledTableStylesContainer, \"StyledTableStylesContainer\", \"/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx\");reactHotLoader.register(QuerySearch, \"QuerySearch\", \"/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/QuerySearch.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Button from 'src/components/Button';\nimport Select from 'src/components/Select';\nimport { styled, t, SupersetClient } from '@superset-ui/core';\nimport { debounce } from 'lodash';\nimport Loading from '../../components/Loading';\nimport QueryTable from './QueryTable';\nimport {\n  now,\n  epochTimeXHoursAgo,\n  epochTimeXDaysAgo,\n  epochTimeXYearsAgo,\n} from '../../modules/dates';\nimport { STATUS_OPTIONS, TIME_OPTIONS } from '../constants';\nimport AsyncSelect from '../../components/AsyncSelect';\nimport { Query } from '../types';\n\ninterface QuerySearchProps {\n  actions: {\n    addDangerToast: (msg: string) => void;\n    setDatabases: (data: Record<string, any>) => Record<string, any>;\n  };\n  displayLimit: number;\n}\n\ninterface UserMutatorProps {\n  value: number;\n  text: string;\n}\n\ninterface DbMutatorProps {\n  id: number;\n  database_name: string;\n}\n\nconst TableWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  height: 100%;\n`;\n\nconst TableStyles = styled.div`\n  table {\n    background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n\n  .table > thead > tr > th {\n    border-bottom: ${({ theme }) => theme.gridUnit / 2}px solid\n      ${({ theme }) => theme.colors.grayscale.light2};\n    background: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n`;\n\nconst StyledTableStylesContainer = styled.div`\n  overflow: auto;\n`;\nfunction QuerySearch({ actions, displayLimit }: QuerySearchProps) {\n  const [databaseId, setDatabaseId] = useState<string>('');\n  const [userId, setUserId] = useState<string>('');\n  const [searchText, setSearchText] = useState<string>('');\n  const [from, setFrom] = useState<string>('28 days ago');\n  const [to, setTo] = useState<string>('now');\n  const [status, setStatus] = useState<string>('success');\n  const [queriesArray, setQueriesArray] = useState<Query[]>([]);\n  const [queriesLoading, setQueriesLoading] = useState<boolean>(true);\n\n  const getTimeFromSelection = (selection: string) => {\n    switch (selection) {\n      case 'now':\n        return now();\n      case '1 hour ago':\n        return epochTimeXHoursAgo(1);\n      case '1 day ago':\n        return epochTimeXDaysAgo(1);\n      case '7 days ago':\n        return epochTimeXDaysAgo(7);\n      case '28 days ago':\n        return epochTimeXDaysAgo(28);\n      case '90 days ago':\n        return epochTimeXDaysAgo(90);\n      case '1 year ago':\n        return epochTimeXYearsAgo(1);\n      default:\n        return null;\n    }\n  };\n\n  const insertParams = (baseUrl: string, params: string[]) => {\n    const validParams = params.filter(function (p) {\n      return p !== '';\n    });\n    return `${baseUrl}?${validParams.join('&')}`;\n  };\n\n  const refreshQueries = async () => {\n    setQueriesLoading(true);\n    const params = [\n      userId && `user_id=${userId}`,\n      databaseId && `database_id=${databaseId}`,\n      searchText && `search_text=${searchText}`,\n      status && `status=${status}`,\n      from && `from=${getTimeFromSelection(from)}`,\n      to && `to=${getTimeFromSelection(to)}`,\n    ];\n\n    try {\n      const response = await SupersetClient.get({\n        endpoint: insertParams('/superset/search_queries', params),\n      });\n      const queries = Object.values(response.json);\n      setQueriesArray(queries);\n    } catch (err) {\n      actions.addDangerToast(t('An error occurred when refreshing queries'));\n    } finally {\n      setQueriesLoading(false);\n    }\n  };\n  useEffect(() => {\n    refreshQueries();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onUserClicked = (userId: string) => {\n    setUserId(userId);\n    refreshQueries();\n  };\n\n  const onDbClicked = (dbId: string) => {\n    setDatabaseId(dbId);\n    refreshQueries();\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    if (event.keyCode === 13) {\n      refreshQueries();\n    }\n  };\n\n  const onChange = (e: React.ChangeEvent) => {\n    e.persist();\n    const handleChange = debounce(e => {\n      setSearchText(e.target.value);\n    }, 200);\n    handleChange(e);\n  };\n\n  const userMutator = ({ result }: { result: UserMutatorProps[] }) =>\n    result.map(({ value, text }: UserMutatorProps) => ({\n      label: text,\n      value,\n    }));\n\n  const dbMutator = ({ result }: { result: DbMutatorProps[] }) => {\n    const options = result.map(({ id, database_name }: DbMutatorProps) => ({\n      value: id,\n      label: database_name,\n    }));\n    actions.setDatabases(result);\n    if (result.length === 0) {\n      actions.addDangerToast(\n        t(\"It seems you don't have access to any database\"),\n      );\n    }\n    return options;\n  };\n\n  return (\n    <TableWrapper>\n      <div id=\"search-header\" className=\"row space-1\">\n        <div className=\"col-sm-2\">\n          <AsyncSelect\n            dataEndpoint=\"api/v1/query/related/user\"\n            mutator={userMutator}\n            value={userId}\n            onChange={(selected: any) => setUserId(selected?.value)}\n            placeholder={t('Filter by user')}\n          />\n        </div>\n        <div className=\"col-sm-2\">\n          <AsyncSelect\n            onChange={(db: any) => setDatabaseId(db?.value)}\n            dataEndpoint=\"/api/v1/database/?q=(filters:!((col:expose_in_sqllab,opr:eq,value:!t)))\"\n            value={databaseId}\n            mutator={dbMutator}\n            placeholder={t('Filter by database')}\n          />\n        </div>\n        <div className=\"col-sm-4\">\n          <input\n            type=\"text\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            className=\"form-control input-sm\"\n            placeholder={t('Query search string')}\n          />\n        </div>\n        <div className=\"col-sm-4 search-date-filter-container\">\n          <Select\n            name=\"select-from\"\n            placeholder={t('[From]-')}\n            options={TIME_OPTIONS.slice(1, TIME_OPTIONS.length).map(xt => ({\n              value: xt,\n              label: xt,\n            }))}\n            value={(from as unknown) as undefined}\n            autosize={false}\n            onChange={(selected: any) => setFrom(selected?.value)}\n          />\n\n          <Select\n            name=\"select-to\"\n            placeholder={t('[To]-')}\n            options={TIME_OPTIONS.map(xt => ({ value: xt, label: xt }))}\n            value={(to as unknown) as undefined}\n            autosize={false}\n            onChange={(selected: any) => setTo(selected?.value)}\n          />\n\n          <Select\n            name=\"select-status\"\n            placeholder={t('Filter by status')}\n            options={Object.keys(STATUS_OPTIONS).map(s => ({\n              value: s,\n              label: s,\n            }))}\n            value={(status as unknown) as undefined}\n            isLoading={false}\n            autosize={false}\n            onChange={(selected: any) => setStatus(selected?.value)}\n          />\n\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"success\"\n            onClick={refreshQueries}\n          >\n            {t('Search')}\n          </Button>\n        </div>\n      </div>\n      <StyledTableStylesContainer>\n        {queriesLoading ? (\n          <Loading />\n        ) : (\n          <TableStyles>\n            <QueryTable\n              columns={[\n                'state',\n                'db',\n                'user',\n                'time',\n                'progress',\n                'rows',\n                'sql',\n                'querylink',\n              ]}\n              onUserClicked={onUserClicked}\n              onDbClicked={onDbClicked}\n              queries={queriesArray}\n              actions={actions}\n              displayLimit={displayLimit}\n            />\n          </TableStyles>\n        )}\n      </StyledTableStylesContainer>\n    </TableWrapper>\n  );\n}\nexport default QuerySearch;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}