{"ast":null,"code":"import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Number$isNaN from \"@babel/runtime-corejs3/core-js-stable/number/is-nan\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, GenericDataType } from '@superset-ui/core';\nimport { DEFAULT_FORM_DATA } from './types';\nconst buildQuery = (formData, options) => {\n  const { search, coltypeMap } = (options == null ? void 0 : options.ownState) || {};\n  const { sortAscending, sortMetric } = { ...DEFAULT_FORM_DATA, ...formData };\n  return buildQueryContext(formData, baseQueryObject => {\n    const { columns = [], filters = [] } = baseQueryObject;\n    const extra_filters = _mapInstanceProperty(columns).call(columns, column => {\n      if (search && coltypeMap[column] === GenericDataType.STRING) {\n        return {\n          col: column,\n          op: 'ILIKE',\n          val: `%${search}%` };\n\n      }\n      if (search &&\n      coltypeMap[column] === GenericDataType.NUMERIC &&\n      !_Number$isNaN(Number(search))) {\n        // for numeric columns we apply a >= where clause\n        return {\n          col: column,\n          op: '>=',\n          val: Number(search) };\n\n      }\n      // if no search is defined, make sure the col value is not null\n      return { col: column, op: 'IS NOT NULL' };\n    });\n    const sortColumns = sortMetric ? [sortMetric] : columns;\n    const query = [\n    {\n      ...baseQueryObject,\n      groupby: columns,\n      metrics: sortMetric ? [sortMetric] : [],\n      filters: _concatInstanceProperty(filters).call(filters, extra_filters),\n      orderby: sortMetric || sortAscending !== undefined ?\n      _mapInstanceProperty(sortColumns).call(sortColumns, column => [column, !!sortAscending]) :\n      [] }];\n\n\n    return query;\n  });\n};const _default =\nbuildQuery;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildQuery, \"buildQuery\", \"/app/superset-frontend/src/filters/components/Select/buildQuery.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/filters/components/Select/buildQuery.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Select/buildQuery.ts"],"names":[],"mappings":"0iBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SACE,iBADF,EAEE,eAFF,QAKO,mBALP;AAOA,SAAS,iBAAT,QAAmE,SAAnE;AAEA,MAAM,UAAU,GAAgD,CAC9D,QAD8D,EAE9D,OAF8D,KAG5D;AACF,QAAM,EAAE,MAAF,EAAU,UAAV,KAAyB,CAAA,OAAO,QAAP,YAAA,OAAO,CAAE,QAAT,KAAqB,EAApD;AACA,QAAM,EAAE,aAAF,EAAiB,UAAjB,KAAgC,EAAE,GAAG,iBAAL,EAAwB,GAAG,QAA3B,EAAtC;AACA,SAAO,iBAAiB,CAAC,QAAD,EAAW,eAAe,IAAG;AACnD,UAAM,EAAE,OAAO,GAAG,EAAZ,EAAgB,OAAO,GAAG,EAA1B,KAAiC,eAAvC;AACA,UAAM,aAAa,GAA8B,qBAAA,OAAO,MAAP,CAAA,OAAO,EAAK,MAAM,IAAG;AACpE,UAAI,MAAM,IAAI,UAAU,CAAC,MAAD,CAAV,KAAuB,eAAe,CAAC,MAArD,EAA6D;AAC3D,eAAO;AACL,UAAA,GAAG,EAAE,MADA;AAEL,UAAA,EAAE,EAAE,OAFC;AAGL,UAAA,GAAG,EAAE,IAAI,MAAM,GAHV,EAAP;;AAKD;AACD,UACE,MAAM;AACN,MAAA,UAAU,CAAC,MAAD,CAAV,KAAuB,eAAe,CAAC,OADvC;AAEA,OAAC,cAAa,MAAM,CAAC,MAAD,CAAnB,CAHH,EAIE;AACA;AACA,eAAO;AACL,UAAA,GAAG,EAAE,MADA;AAEL,UAAA,EAAE,EAAE,IAFC;AAGL,UAAA,GAAG,EAAE,MAAM,CAAC,MAAD,CAHN,EAAP;;AAKD;AACD;AACA,aAAO,EAAE,GAAG,EAAE,MAAP,EAAe,EAAE,EAAE,aAAnB,EAAP;AACD,KAtBuD,CAAxD;AAwBA,UAAM,WAAW,GAAG,UAAU,GAAG,CAAC,UAAD,CAAH,GAAkB,OAAhD;AACA,UAAM,KAAK,GAAkB;AAC3B;AACE,SAAG,eADL;AAEE,MAAA,OAAO,EAAE,OAFX;AAGE,MAAA,OAAO,EAAE,UAAU,GAAG,CAAC,UAAD,CAAH,GAAkB,EAHvC;AAIE,MAAA,OAAO,EAAE,wBAAA,OAAO,MAAP,CAAA,OAAO,EAAQ,aAAR,CAJlB;AAKE,MAAA,OAAO,EACL,UAAU,IAAI,aAAa,KAAK,SAAhC;AACI,2BAAA,WAAW,MAAX,CAAA,WAAW,EAAK,MAAM,IAAI,CAAC,MAAD,EAAS,CAAC,CAAC,aAAX,CAAf,CADf;AAEI,QARR,EAD2B,CAA7B;;;AAYA,WAAO,KAAP;AACD,GAxCuB,CAAxB;AAyCD,CA/CD,C;AAiDe,U,CAAf,wB,iLAjDM,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  buildQueryContext,\n  GenericDataType,\n  QueryObject,\n  QueryObjectFilterClause,\n} from '@superset-ui/core';\nimport { BuildQuery } from '@superset-ui/core/lib/chart/registries/ChartBuildQueryRegistrySingleton';\nimport { DEFAULT_FORM_DATA, PluginFilterSelectQueryFormData } from './types';\n\nconst buildQuery: BuildQuery<PluginFilterSelectQueryFormData> = (\n  formData: PluginFilterSelectQueryFormData,\n  options,\n) => {\n  const { search, coltypeMap } = options?.ownState || {};\n  const { sortAscending, sortMetric } = { ...DEFAULT_FORM_DATA, ...formData };\n  return buildQueryContext(formData, baseQueryObject => {\n    const { columns = [], filters = [] } = baseQueryObject;\n    const extra_filters: QueryObjectFilterClause[] = columns.map(column => {\n      if (search && coltypeMap[column] === GenericDataType.STRING) {\n        return {\n          col: column,\n          op: 'ILIKE',\n          val: `%${search}%`,\n        };\n      }\n      if (\n        search &&\n        coltypeMap[column] === GenericDataType.NUMERIC &&\n        !Number.isNaN(Number(search))\n      ) {\n        // for numeric columns we apply a >= where clause\n        return {\n          col: column,\n          op: '>=',\n          val: Number(search),\n        };\n      }\n      // if no search is defined, make sure the col value is not null\n      return { col: column, op: 'IS NOT NULL' };\n    });\n\n    const sortColumns = sortMetric ? [sortMetric] : columns;\n    const query: QueryObject[] = [\n      {\n        ...baseQueryObject,\n        groupby: columns,\n        metrics: sortMetric ? [sortMetric] : [],\n        filters: filters.concat(extra_filters),\n        orderby:\n          sortMetric || sortAscending !== undefined\n            ? sortColumns.map(column => [column, !!sortAscending])\n            : [],\n      },\n    ];\n    return query;\n  });\n};\n\nexport default buildQuery;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}