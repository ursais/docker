{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { withTheme } from '@superset-ui/core';\nimport { Select, PaginatedSelect } from 'src/components/Select';\nimport { filterSelectStyles } from 'src/components/ListView/utils';\nimport { FilterContainer, FilterTitle } from './Base';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CLEAR_SELECT_FILTER_VALUE = 'CLEAR_SELECT_FILTER_VALUE';\nfunction SelectFilter({ Header, emptyLabel = 'None', fetchSelects, initialValue, onSelect, paginate = false, selects = [], theme }) {\n  const filterSelectTheme = {\n    spacing: {\n      baseUnit: 2,\n      fontSize: theme.typography.sizes.s,\n      minWidth: '5em' } };\n\n\n  const clearFilterSelect = {\n    label: emptyLabel,\n    value: CLEAR_SELECT_FILTER_VALUE };\n\n  const options = [clearFilterSelect, ...selects];\n  let initialOption = clearFilterSelect;\n  // Set initial value if not async\n  if (!fetchSelects) {\n    const matchingOption = _findInstanceProperty(options).call(options, x => x.value === initialValue);\n    if (matchingOption) {\n      initialOption = matchingOption;\n    }\n  }\n  const [selectedOption, setSelectedOption] = useState(initialOption);\n  const onChange = selected => {\n    if (selected === null)\n    return;\n    onSelect(selected.value === CLEAR_SELECT_FILTER_VALUE ? undefined : selected.value);\n    setSelectedOption(selected);\n  };\n  const fetchAndFormatSelects = async (inputValue, loadedOptions, { page }) => {\n    // only include clear filter when filter value does not exist\n    let result = inputValue || page > 0 ? [] : [clearFilterSelect];\n    let hasMore = paginate;\n    if (fetchSelects) {\n      const selectValues = await fetchSelects(inputValue, page);\n      // update matching option at initial load\n      if (!selectValues.length) {\n        hasMore = false;\n      }\n      result = [...result, ...selectValues];\n      const matchingOption = _findInstanceProperty(result).call(result, x => x.value === initialValue);\n      if (matchingOption) {\n        setSelectedOption(matchingOption);\n      }\n    }\n    return {\n      options: result,\n      hasMore,\n      additional: {\n        page: page + 1 } };\n\n\n  };\n  return ___EmotionJSX(FilterContainer, null,\n  ___EmotionJSX(FilterTitle, null, Header, \":\"),\n  fetchSelects ? ___EmotionJSX(PaginatedSelect, { \"data-test\": \"filters-select\", defaultOptions: true, themeConfig: filterSelectTheme, stylesConfig: filterSelectStyles\n    // @ts-ignore\n    , value: selectedOption\n    // @ts-ignore\n    , onChange: onChange\n    // @ts-ignore\n    , loadOptions: fetchAndFormatSelects, placeholder: emptyLabel, clearable: false, additional: {\n      page: 0 } }) :\n  ___EmotionJSX(Select, { \"data-test\": \"filters-select\", themeConfig: filterSelectTheme, stylesConfig: filterSelectStyles, value: selectedOption, options: options, onChange: onChange, clearable: false }));\n\n}__signature__(SelectFilter, \"useState{[selectedOption, setSelectedOption](initialOption)}\");const _default =\nwithTheme(SelectFilter);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CLEAR_SELECT_FILTER_VALUE, \"CLEAR_SELECT_FILTER_VALUE\", \"/app/superset-frontend/src/components/ListView/Filters/Select.tsx\");reactHotLoader.register(SelectFilter, \"SelectFilter\", \"/app/superset-frontend/src/components/ListView/Filters/Select.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/ListView/Filters/Select.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ListView/Filters/Select.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { withTheme, SupersetThemeProps } from '@superset-ui/core';\nimport {\n  Select,\n  PaginatedSelect,\n  PartialThemeConfig,\n} from 'src/components/Select';\nimport { Filter, SelectOption } from 'src/components/ListView/types';\nimport { filterSelectStyles } from 'src/components/ListView/utils';\nimport { FilterContainer, BaseFilter, FilterTitle } from './Base';\n\ninterface SelectFilterProps extends BaseFilter {\n  emptyLabel?: string;\n  fetchSelects?: Filter['fetchSelects'];\n  name?: string;\n  onSelect: (selected: any) => any;\n  paginate?: boolean;\n  selects: Filter['selects'];\n  theme: SupersetThemeProps['theme'];\n}\n\nconst CLEAR_SELECT_FILTER_VALUE = 'CLEAR_SELECT_FILTER_VALUE';\n\nfunction SelectFilter({\n  Header,\n  emptyLabel = 'None',\n  fetchSelects,\n  initialValue,\n  onSelect,\n  paginate = false,\n  selects = [],\n  theme,\n}: SelectFilterProps) {\n  const filterSelectTheme: PartialThemeConfig = {\n    spacing: {\n      baseUnit: 2,\n      fontSize: theme.typography.sizes.s,\n      minWidth: '5em',\n    },\n  };\n\n  const clearFilterSelect = {\n    label: emptyLabel,\n    value: CLEAR_SELECT_FILTER_VALUE,\n  };\n\n  const options = [clearFilterSelect, ...selects];\n  let initialOption = clearFilterSelect;\n\n  // Set initial value if not async\n  if (!fetchSelects) {\n    const matchingOption = options.find(x => x.value === initialValue);\n\n    if (matchingOption) {\n      initialOption = matchingOption;\n    }\n  }\n\n  const [selectedOption, setSelectedOption] = useState(initialOption);\n  const onChange = (selected: SelectOption | null) => {\n    if (selected === null) return;\n    onSelect(\n      selected.value === CLEAR_SELECT_FILTER_VALUE ? undefined : selected.value,\n    );\n    setSelectedOption(selected);\n  };\n\n  const fetchAndFormatSelects = async (\n    inputValue: string,\n    loadedOptions: SelectOption[],\n    { page }: { page: number },\n  ) => {\n    // only include clear filter when filter value does not exist\n    let result = inputValue || page > 0 ? [] : [clearFilterSelect];\n    let hasMore = paginate;\n    if (fetchSelects) {\n      const selectValues = await fetchSelects(inputValue, page);\n      // update matching option at initial load\n      if (!selectValues.length) {\n        hasMore = false;\n      }\n      result = [...result, ...selectValues];\n\n      const matchingOption = result.find(x => x.value === initialValue);\n\n      if (matchingOption) {\n        setSelectedOption(matchingOption);\n      }\n    }\n\n    return {\n      options: result,\n      hasMore,\n      additional: {\n        page: page + 1,\n      },\n    };\n  };\n\n  return (\n    <FilterContainer>\n      <FilterTitle>{Header}:</FilterTitle>\n      {fetchSelects ? (\n        <PaginatedSelect\n          data-test=\"filters-select\"\n          defaultOptions\n          themeConfig={filterSelectTheme}\n          stylesConfig={filterSelectStyles}\n          // @ts-ignore\n          value={selectedOption}\n          // @ts-ignore\n          onChange={onChange}\n          // @ts-ignore\n          loadOptions={fetchAndFormatSelects}\n          placeholder={emptyLabel}\n          clearable={false}\n          additional={{\n            page: 0,\n          }}\n        />\n      ) : (\n        <Select\n          data-test=\"filters-select\"\n          themeConfig={filterSelectTheme}\n          stylesConfig={filterSelectStyles}\n          value={selectedOption}\n          options={options}\n          onChange={onChange}\n          clearable={false}\n        />\n      )}\n    </FilterContainer>\n  );\n}\nexport default withTheme(SelectFilter);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}