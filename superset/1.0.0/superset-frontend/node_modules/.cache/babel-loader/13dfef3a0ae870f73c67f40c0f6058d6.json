{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ConfirmStatusChange({ title, description, onConfirm, children }) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState([]);\n  const showConfirm = (...callbackArgs) => {\n    // check if any args are DOM events, if so, call persist\n    _forEachInstanceProperty(callbackArgs).call(callbackArgs, arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  children && children(showConfirm),\n  ___EmotionJSX(DeleteModal, { description: description, onConfirm: confirm, onHide: hide, open: open, title: title }));\n\n}__signature__(ConfirmStatusChange, \"useState{[open, setOpen](false)}\\nuseState{[currentCallbackArgs, setCurrentCallbackArgs]([])}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ConfirmStatusChange, \"ConfirmStatusChange\", \"/app/superset-frontend/src/components/ConfirmStatusChange/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ConfirmStatusChange/index.tsx"],"names":[],"mappings":"gcAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,MAAwB,4BAAxB,C;AAWA,eAAc,SAAU,mBAAV,CAA8B,EAC1C,KAD0C,EAE1C,WAF0C,EAG1C,SAH0C,EAI1C,QAJ0C,EAA9B,EAKa;AACzB,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC,mBAAD,EAAsB,sBAAtB,IAAgD,QAAQ,CAAQ,EAAR,CAA9D;AAEA,QAAM,WAAW,GAAG,CAAC,GAAG,YAAJ,KAA2B;AAC7C;AACA,6BAAA,YAAY,MAAZ,CAAA,YAAY,EAAS,GAAG,IAAG;AACzB,UAAI,CAAC,GAAL,EAAU;AACR;AACD;AACD,UAAI,OAAO,GAAG,CAAC,OAAX,KAAuB,UAA3B,EAAuC;AACrC,QAAA,GAAG,CAAC,OAAJ;AACD;AACD,UAAI,OAAO,GAAG,CAAC,cAAX,KAA8B,UAAlC,EAA8C;AAC5C,QAAA,GAAG,CAAC,cAAJ;AACD;AACD,UAAI,OAAO,GAAG,CAAC,eAAX,KAA+B,UAAnC,EAA+C;AAC7C,QAAA,GAAG,CAAC,eAAJ;AACD;AACF,KAbW,CAAZ;AAcA,IAAA,OAAO,CAAC,IAAD,CAAP;AACA,IAAA,sBAAsB,CAAC,YAAD,CAAtB;AACD,GAlBD;AAoBA,QAAM,IAAI,GAAG,MAAK;AAChB,IAAA,OAAO,CAAC,KAAD,CAAP;AACA,IAAA,sBAAsB,CAAC,EAAD,CAAtB;AACD,GAHD;AAKA,QAAM,OAAO,GAAG,MAAK;AACnB,IAAA,SAAS,CAAC,GAAG,mBAAJ,CAAT;AACA,IAAA,IAAI;AACL,GAHD;AAKA,SACE;AACG,EAAA,QAAQ,IAAI,QAAQ,CAAC,WAAD,CADvB;AAEE,gBAAC,WAAD,IACE,WAAW,EAAE,WADf,EAEE,SAAS,EAAE,OAFb,EAGE,MAAM,EAAE,IAHV,EAIE,IAAI,EAAE,IAJR,EAKE,KAAK,EAAE,KALT,GAFF,CADF;;AAYD,C,cAnDuB,mB,oRAAA,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';\n\nexport type Callback = (...args: any[]) => void;\n\nexport interface ConfirmStatusChangeProps {\n  title: React.ReactNode;\n  description: React.ReactNode;\n  onConfirm: Callback;\n  children: (showConfirm: Callback) => React.ReactNode;\n}\n\nexport default function ConfirmStatusChange({\n  title,\n  description,\n  onConfirm,\n  children,\n}: ConfirmStatusChangeProps) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState<any[]>([]);\n\n  const showConfirm = (...callbackArgs: any[]) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach(arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n\n  return (\n    <>\n      {children && children(showConfirm)}\n      <DeleteModal\n        description={description}\n        onConfirm={confirm}\n        onHide={hide}\n        open={open}\n        title={title}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}