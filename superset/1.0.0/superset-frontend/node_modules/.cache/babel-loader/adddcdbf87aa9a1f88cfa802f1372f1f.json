{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE, DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport { buildTree } from './utils';\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterScopeTree(currentChartId) {\n  const layout = useSelector(({ dashboardLayout: { present } }) => present);\n  const charts = useSelector(({ charts }) => charts);\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title: t('All panels') };\n\n  // We need to get only nodes that have charts as children or grandchildren\n  const validNodes = useMemo(() => {var _context;return _reduceInstanceProperty(_context = _Object$values(layout)).call(_context, (acc, cur) => {\n      const { id, parents = [], type, meta } = cur;\n      if (type === CHART_TYPE && currentChartId !== (meta == null ? void 0 : meta.chartId)) {\n        return [...new _Set([...acc, ...parents, id])];\n      }\n      return acc;\n    }, []);}, [layout, currentChartId]);\n  useMemo(() => {\n    buildTree(layout[DASHBOARD_ROOT_ID], tree, layout, charts, validNodes);\n  }, [charts, layout, tree]);\n  return { treeData: [tree], layout };\n}__signature__(useFilterScopeTree, \"useSelector{layout}\\nuseSelector{charts}\\nuseMemo{validNodes}\\nuseMemo{}\", () => [useSelector, useSelector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterScopeTree, \"useFilterScopeTree\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/state.ts"],"names":[],"mappings":"2kBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,OAAT,QAAwB,OAAxB;AACA,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,CAAT,QAAkB,mBAAlB;AAEA,SAAS,iBAAT,QAAkC,8BAAlC;AACA,SACE,UADF,EAEE,mBAFF,QAGO,mCAHP;AAKA,SAAS,SAAT,QAA0B,SAA1B;AAEA;AACA,OAAM,SAAU,kBAAV,CACJ,cADI,EACmB;AAKvB,QAAM,MAAM,GAAG,WAAW,CACxB,CAAC,EAAE,eAAe,EAAE,EAAE,OAAF,EAAnB,EAAD,KAAsC,OADd,CAA1B;AAIA,QAAM,MAAM,GAAG,WAAW,CAAoB,CAAC,EAAE,MAAF,EAAD,KAAgB,MAApC,CAA1B;AACA,QAAM,IAAI,GAAG;AACX,IAAA,QAAQ,EAAE,EADC;AAEX,IAAA,GAAG,EAAE,iBAFM;AAGX,IAAA,IAAI,EAAE,mBAHK;AAIX,IAAA,KAAK,EAAE,CAAC,CAAC,YAAD,CAJG,EAAb;;AAOA;AACA,QAAM,UAAU,GAAG,OAAO,CACxB,2BACE,kDAAc,MAAd,kBAAuC,CAAC,GAAD,EAAM,GAAN,KAAa;AAClD,YAAM,EAAE,EAAF,EAAM,OAAO,GAAG,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,KAAmC,GAAzC;AACA,UAAI,IAAI,KAAK,UAAT,IAAuB,cAAc,MAAK,IAAL,oBAAK,IAAI,CAAE,OAAX,CAAzC,EAA6D;AAC3D,eAAO,CAAC,GAAG,SAAQ,CAAC,GAAG,GAAJ,EAAS,GAAG,OAAZ,EAAqB,EAArB,CAAR,CAAJ,CAAP;AACD;AACD,aAAO,GAAP;AACD,KAND,EAMG,EANH,CADF,EADwB,EASxB,CAAC,MAAD,EAAS,cAAT,CATwB,CAA1B;AAYA,EAAA,OAAO,CAAC,MAAK;AACX,IAAA,SAAS,CAAC,MAAM,CAAC,iBAAD,CAAP,EAA4B,IAA5B,EAAkC,MAAlC,EAA0C,MAA1C,EAAkD,UAAlD,CAAT;AACD,GAFM,EAEJ,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,CAFI,CAAP;AAIA,SAAO,EAAE,QAAQ,EAAE,CAAC,IAAD,CAAZ,EAAoB,MAApB,EAAP;AACD,C,cApCe,kB,qFAMC,W,EAIA,W,oLAVD,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { Charts, Layout, RootState } from 'src/dashboard/types';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport {\n  CHART_TYPE,\n  DASHBOARD_ROOT_TYPE,\n} from 'src/dashboard/util/componentTypes';\nimport { TreeItem } from './types';\nimport { buildTree } from './utils';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterScopeTree(\n  currentChartId?: number,\n): {\n  treeData: [TreeItem];\n  layout: Layout;\n} {\n  const layout = useSelector<RootState, Layout>(\n    ({ dashboardLayout: { present } }) => present,\n  );\n\n  const charts = useSelector<RootState, Charts>(({ charts }) => charts);\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title: t('All panels'),\n  };\n\n  // We need to get only nodes that have charts as children or grandchildren\n  const validNodes = useMemo(\n    () =>\n      Object.values(layout).reduce<string[]>((acc, cur) => {\n        const { id, parents = [], type, meta } = cur;\n        if (type === CHART_TYPE && currentChartId !== meta?.chartId) {\n          return [...new Set([...acc, ...parents, id])];\n        }\n        return acc;\n      }, []),\n    [layout, currentChartId],\n  );\n\n  useMemo(() => {\n    buildTree(layout[DASHBOARD_ROOT_ID], tree, layout, charts, validNodes);\n  }, [charts, layout, tree]);\n\n  return { treeData: [tree], layout };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}