{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * All possible draggable items for the chart controls.\n */\nexport var DndItemType;\n(function (DndItemType) {\n  // an existing column in table\n  DndItemType[\"Column\"] = \"column\";\n  // a selected column option in ColumnSelectControl\n  DndItemType[\"ColumnOption\"] = \"columnOption\";\n  // an adhoc column option in ColumnSelectControl\n  DndItemType[\"AdhocColumnOption\"] = \"adhocColumn\";\n  // a saved metric\n  DndItemType[\"Metric\"] = \"metric\";\n  // a selected saved metric in MetricsControl\n  DndItemType[\"MetricOption\"] = \"metricOption\";\n  // an adhoc metric option in MetricsControl\n  DndItemType[\"AdhocMetricOption\"] = \"adhocMetric\";\n  // an adhoc filter option\n  DndItemType[\"FilterOption\"] = \"filterOption\";\n})(DndItemType || (DndItemType = {}));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DndItemType, \"DndItemType\", \"/app/superset-frontend/src/explore/components/DndItemType.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/DndItemType.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH;;AAEG;AACH,OAAA,IAAY,WAAZ;AAAA,CAAA,UAAY,WAAZ,EAAuB;AACrB;AACA,EAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA;AACA,EAAA,WAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA;AACA,EAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,aAAA;AAEA;AACA,EAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA;AACA,EAAA,WAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA;AACA,EAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,aAAA;AAEA;AACA,EAAA,WAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACD,CAjBD,EAAY,WAAW,KAAX,WAAW,GAAA,EAAA,CAAvB,E,iLAAY,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * All possible draggable items for the chart controls.\n */\nexport enum DndItemType {\n  // an existing column in table\n  Column = 'column',\n  // a selected column option in ColumnSelectControl\n  ColumnOption = 'columnOption',\n  // an adhoc column option in ColumnSelectControl\n  AdhocColumnOption = 'adhocColumn',\n\n  // a saved metric\n  Metric = 'metric',\n  // a selected saved metric in MetricsControl\n  MetricOption = 'metricOption',\n  // an adhoc metric option in MetricsControl\n  AdhocMetricOption = 'adhocMetric',\n\n  // an adhoc filter option\n  FilterOption = 'filterOption',\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}