{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { height, datasource, formData, queriesData } = chartProps;\n  const { columnCollection = [], groupby, metrics, url } = formData;\n  const { records, columns } = queriesData[0].data;\n  const isGroupBy = (groupby == null ? void 0 : groupby.length) > 0;\n\n  // When there is a \"group by\",\n  // each row in the table is a database column\n  // Otherwise,\n  // each row in the table is a metric\n  let rows;\n  if (isGroupBy) {\n    rows = _mapInstanceProperty(columns).call(columns, (column) =>\n    typeof column === 'object' ? column : { label: column });\n\n  } else {var _context;\n    const metricMap = _reduceInstanceProperty(_context = datasource.metrics).call(_context, (acc, current) => {\n      const map = acc;\n      map[current.metric_name] = current;\n      return map;\n    }, {});\n\n    rows = _mapInstanceProperty(metrics).call(metrics, (metric) =>\n    typeof metric === 'object' ? metric : metricMap[metric]);\n\n  }\n\n  // TODO: Better parse this from controls instead of mutative value here.\n  _forEachInstanceProperty(columnCollection).call(columnCollection, column => {\n    const c = column;\n    if (c.timeLag !== undefined && c.timeLag !== null && c.timeLag !== '') {\n      c.timeLag = _parseInt(c.timeLag, 10);\n    }\n  });\n\n  return {\n    height,\n    data: records,\n    columnConfigs: columnCollection,\n    rows,\n    rowType: isGroupBy ? 'column' : 'metric',\n    url };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/app/superset-frontend/src/visualizations/TimeTable/transformProps.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/visualizations/TimeTable/transformProps.js"],"names":["transformProps","chartProps","height","datasource","formData","queriesData","columnCollection","groupby","metrics","url","records","columns","data","isGroupBy","length","rows","column","label","metricMap","acc","current","map","metric_name","metric","c","timeLag","undefined","columnConfigs","rowType"],"mappings":"ioBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACjD,QAAM,EAAEC,MAAF,EAAUC,UAAV,EAAsBC,QAAtB,EAAgCC,WAAhC,KAAgDJ,UAAtD;AACA,QAAM,EAAEK,gBAAgB,GAAG,EAArB,EAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CC,GAA3C,KAAmDL,QAAzD;AACA,QAAM,EAAEM,OAAF,EAAWC,OAAX,KAAuBN,WAAW,CAAC,CAAD,CAAX,CAAeO,IAA5C;AACA,QAAMC,SAAS,GAAG,CAAAN,OAAO,QAAP,YAAAA,OAAO,CAAEO,MAAT,IAAkB,CAApC;;AAEA;AACA;AACA;AACA;AACA,MAAIC,IAAJ;AACA,MAAIF,SAAJ,EAAe;AACbE,IAAAA,IAAI,GAAG,qBAAAJ,OAAO,MAAP,CAAAA,OAAO,EAAK,CAAAK,MAAM;AACvB,WAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,EAAEC,KAAK,EAAED,MAAT,EAD1B,CAAd;;AAGD,GAJD,MAIO;AACL,UAAME,SAAS,GAAG,mCAAAf,UAAU,CAACK,OAAX,iBAA0B,CAACW,GAAD,EAAMC,OAAN,KAAkB;AAC5D,YAAMC,GAAG,GAAGF,GAAZ;AACAE,MAAAA,GAAG,CAACD,OAAO,CAACE,WAAT,CAAH,GAA2BF,OAA3B;AACA,aAAOC,GAAP;AACD,KAJiB,EAIf,EAJe,CAAlB;;AAMAN,IAAAA,IAAI,GAAG,qBAAAP,OAAO,MAAP,CAAAA,OAAO,EAAK,CAAAe,MAAM;AACvB,WAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCL,SAAS,CAACK,MAAD,CADnC,CAAd;;AAGD;;AAED;AACA,2BAAAjB,gBAAgB,MAAhB,CAAAA,gBAAgB,EAASU,MAAM,IAAI;AACjC,UAAMQ,CAAC,GAAGR,MAAV;AACA,QAAIQ,CAAC,CAACC,OAAF,KAAcC,SAAd,IAA2BF,CAAC,CAACC,OAAF,KAAc,IAAzC,IAAiDD,CAAC,CAACC,OAAF,KAAc,EAAnE,EAAuE;AACrED,MAAAA,CAAC,CAACC,OAAF,GAAY,UAASD,CAAC,CAACC,OAAX,EAAoB,EAApB,CAAZ;AACD;AACF,GALe,CAAhB;;AAOA,SAAO;AACLvB,IAAAA,MADK;AAELU,IAAAA,IAAI,EAAEF,OAFD;AAGLiB,IAAAA,aAAa,EAAErB,gBAHV;AAILS,IAAAA,IAJK;AAKLa,IAAAA,OAAO,EAAEf,SAAS,GAAG,QAAH,GAAc,QAL3B;AAMLJ,IAAAA,GANK,EAAP;;AAQD,C,iLA3CuBT,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { height, datasource, formData, queriesData } = chartProps;\n  const { columnCollection = [], groupby, metrics, url } = formData;\n  const { records, columns } = queriesData[0].data;\n  const isGroupBy = groupby?.length > 0;\n\n  // When there is a \"group by\",\n  // each row in the table is a database column\n  // Otherwise,\n  // each row in the table is a metric\n  let rows;\n  if (isGroupBy) {\n    rows = columns.map(column =>\n      typeof column === 'object' ? column : { label: column },\n    );\n  } else {\n    const metricMap = datasource.metrics.reduce((acc, current) => {\n      const map = acc;\n      map[current.metric_name] = current;\n      return map;\n    }, {});\n\n    rows = metrics.map(metric =>\n      typeof metric === 'object' ? metric : metricMap[metric],\n    );\n  }\n\n  // TODO: Better parse this from controls instead of mutative value here.\n  columnCollection.forEach(column => {\n    const c = column;\n    if (c.timeLag !== undefined && c.timeLag !== null && c.timeLag !== '') {\n      c.timeLag = parseInt(c.timeLag, 10);\n    }\n  });\n\n  return {\n    height,\n    data: records,\n    columnConfigs: columnCollection,\n    rows,\n    rowType: isGroupBy ? 'column' : 'metric',\n    url,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}