{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Date$now from \"@babel/runtime-corejs3/core-js-stable/date/now\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { createRef } from 'react';\nimport shortid from 'shortid';\nimport Alert from 'src/components/Alert';\nimport Tabs from 'src/components/Tabs';\nimport { t, styled } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Label from 'src/components/Label';\nimport QueryHistory from '../QueryHistory';\nimport ResultSet from '../ResultSet';\nimport { STATUS_OPTIONS, STATE_TYPE_MAP, LOCALSTORAGE_MAX_QUERY_AGE_MS } from '../../constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TAB_HEIGHT = 140;\nconst StyledPane = styled.div`\n  width: 100%;\n\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .ant-tabs-tabpane {\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\nexport default function SouthPane({ editorQueries, latestQueryId, dataPreviewQueries, actions, activeSouthPaneTab = 'Results', height, databases, offline = false, displayLimit, user, defaultQueryLimit }) {\n  const innerTabContentHeight = height - TAB_HEIGHT;\n  const southPaneRef = /*#__PURE__*/createRef();\n  const switchTab = id => {\n    actions.setActiveSouthPaneTab(id);\n  };\n  const renderOfflineStatus = () => ___EmotionJSX(Label, { className: \"m-r-3\", type: STATE_TYPE_MAP[STATUS_OPTIONS.offline] },\n  STATUS_OPTIONS.offline);\n\n  const renderResults = () => {\n    let latestQuery;\n    if (editorQueries.length > 0) {\n      // get the latest query\n      latestQuery = _findInstanceProperty(editorQueries).call(editorQueries, ({ id }) => id === latestQueryId);\n    }\n    let results;\n    if (latestQuery) {\n      if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery.state === 'success' &&\n      !latestQuery.resultsKey &&\n      !latestQuery.results) {\n        results = ___EmotionJSX(Alert, { type: \"warning\", message: t('No stored results found, you need to re-run your query') });\n        return results;\n      }\n      if (_Date$now() - latestQuery.startDttm <= LOCALSTORAGE_MAX_QUERY_AGE_MS) {\n        results = ___EmotionJSX(ResultSet, { showControls: true, search: true, query: latestQuery, actions: actions, user: user, height: innerTabContentHeight, database: databases[latestQuery.dbId], displayLimit: displayLimit, defaultQueryLimit: defaultQueryLimit });\n      }\n    } else\n    {\n      results = ___EmotionJSX(Alert, { type: \"info\", message: t('Run a query to display results here') });\n    }\n    return results;\n  };\n  const renderDataPreviewTabs = () => _mapInstanceProperty(dataPreviewQueries).call(dataPreviewQueries, query => ___EmotionJSX(Tabs.TabPane, { tab: t('Preview: `%s`', decodeURIComponent(query.tableName)), key: query.id },\n  ___EmotionJSX(ResultSet, { query: query, visualize: false, csv: false, actions: actions, cache: true, user: user, height: innerTabContentHeight, displayLimit: displayLimit, defaultQueryLimit: defaultQueryLimit })));\n\n  return offline ? renderOfflineStatus() : ___EmotionJSX(StyledPane, { className: \"SouthPane\", ref: southPaneRef },\n  ___EmotionJSX(Tabs, { activeKey: activeSouthPaneTab, className: \"SouthPaneTabs\", onChange: switchTab, id: shortid.generate(), fullWidth: false, animated: false },\n  ___EmotionJSX(Tabs.TabPane, { tab: t('Results'), key: \"Results\" },\n  renderResults()),\n\n  ___EmotionJSX(Tabs.TabPane, { tab: t('Query history'), key: \"History\" },\n  ___EmotionJSX(QueryHistory, { queries: editorQueries, actions: actions, displayLimit: displayLimit })),\n\n  renderDataPreviewTabs()));\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TAB_HEIGHT, \"TAB_HEIGHT\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/SouthPane.tsx\");reactHotLoader.register(StyledPane, \"StyledPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/SouthPane.tsx\");reactHotLoader.register(SouthPane, \"SouthPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/SouthPane.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/SouthPane/SouthPane.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { createRef } from 'react';\nimport shortid from 'shortid';\nimport Alert from 'src/components/Alert';\nimport Tabs from 'src/components/Tabs';\nimport { t, styled } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport Label from 'src/components/Label';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport QueryHistory from '../QueryHistory';\nimport ResultSet from '../ResultSet';\nimport {\n  STATUS_OPTIONS,\n  STATE_TYPE_MAP,\n  LOCALSTORAGE_MAX_QUERY_AGE_MS,\n} from '../../constants';\n\nconst TAB_HEIGHT = 140;\n\n/*\n    editorQueries are queries executed by users passed from SqlEditor component\n    dataPrebiewQueries are all queries executed for preview of table data (from SqlEditorLeft)\n*/\ninterface SouthPanePropTypes {\n  editorQueries: any[];\n  latestQueryId?: string;\n  dataPreviewQueries: any[];\n  actions: Record<string, Function>;\n  activeSouthPaneTab?: string;\n  height: number;\n  databases: Record<string, any>;\n  offline?: boolean;\n  displayLimit: number;\n  user: UserWithPermissionsAndRoles;\n  defaultQueryLimit: number;\n}\n\nconst StyledPane = styled.div`\n  width: 100%;\n\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .ant-tabs-tabpane {\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nexport default function SouthPane({\n  editorQueries,\n  latestQueryId,\n  dataPreviewQueries,\n  actions,\n  activeSouthPaneTab = 'Results',\n  height,\n  databases,\n  offline = false,\n  displayLimit,\n  user,\n  defaultQueryLimit,\n}: SouthPanePropTypes) {\n  const innerTabContentHeight = height - TAB_HEIGHT;\n  const southPaneRef = createRef<HTMLDivElement>();\n  const switchTab = (id: string) => {\n    actions.setActiveSouthPaneTab(id);\n  };\n  const renderOfflineStatus = () => (\n    <Label className=\"m-r-3\" type={STATE_TYPE_MAP[STATUS_OPTIONS.offline]}>\n      {STATUS_OPTIONS.offline}\n    </Label>\n  );\n\n  const renderResults = () => {\n    let latestQuery;\n    if (editorQueries.length > 0) {\n      // get the latest query\n      latestQuery = editorQueries.find(({ id }) => id === latestQueryId);\n    }\n    let results;\n    if (latestQuery) {\n      if (\n        isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n        latestQuery.state === 'success' &&\n        !latestQuery.resultsKey &&\n        !latestQuery.results\n      ) {\n        results = (\n          <Alert\n            type=\"warning\"\n            message={t(\n              'No stored results found, you need to re-run your query',\n            )}\n          />\n        );\n        return results;\n      }\n      if (Date.now() - latestQuery.startDttm <= LOCALSTORAGE_MAX_QUERY_AGE_MS) {\n        results = (\n          <ResultSet\n            showControls\n            search\n            query={latestQuery}\n            actions={actions}\n            user={user}\n            height={innerTabContentHeight}\n            database={databases[latestQuery.dbId]}\n            displayLimit={displayLimit}\n            defaultQueryLimit={defaultQueryLimit}\n          />\n        );\n      }\n    } else {\n      results = (\n        <Alert type=\"info\" message={t('Run a query to display results here')} />\n      );\n    }\n    return results;\n  };\n\n  const renderDataPreviewTabs = () =>\n    dataPreviewQueries.map(query => (\n      <Tabs.TabPane\n        tab={t('Preview: `%s`', decodeURIComponent(query.tableName))}\n        key={query.id}\n      >\n        <ResultSet\n          query={query}\n          visualize={false}\n          csv={false}\n          actions={actions}\n          cache\n          user={user}\n          height={innerTabContentHeight}\n          displayLimit={displayLimit}\n          defaultQueryLimit={defaultQueryLimit}\n        />\n      </Tabs.TabPane>\n    ));\n  return offline ? (\n    renderOfflineStatus()\n  ) : (\n    <StyledPane className=\"SouthPane\" ref={southPaneRef}>\n      <Tabs\n        activeKey={activeSouthPaneTab}\n        className=\"SouthPaneTabs\"\n        onChange={switchTab}\n        id={shortid.generate()}\n        fullWidth={false}\n        animated={false}\n      >\n        <Tabs.TabPane tab={t('Results')} key=\"Results\">\n          {renderResults()}\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={t('Query history')} key=\"History\">\n          <QueryHistory\n            queries={editorQueries}\n            actions={actions}\n            displayLimit={displayLimit}\n          />\n        </Tabs.TabPane>\n        {renderDataPreviewTabs()}\n      </Tabs>\n    </StyledPane>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}