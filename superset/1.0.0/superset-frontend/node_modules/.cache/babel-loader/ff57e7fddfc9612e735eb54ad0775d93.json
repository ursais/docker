{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Modal from 'src/components/Modal';\nimport { useComponentDidMount } from 'src/common/hooks/useComponentDidMount';\nimport { Omnibar } from './Omnibar';\nimport { LOG_ACTIONS_OMNIBAR_TRIGGERED } from '../../logger/LogUtils';\nimport { getDashboards } from './getDashboards';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst OmniModal = styled(Modal)`\n  margin-top: 20%;\n\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\nexport default function OmniContainer({ logEvent }) {\n  const showOmni = useRef();\n  const [showModal, setShowModal] = useState(false);\n  useComponentDidMount(() => {\n    showOmni.current = false;\n    function handleKeydown(event) {var _context;\n      if (!isFeatureEnabled(FeatureFlag.OMNIBAR))\n      return;\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      const isOk = _includesInstanceProperty(_context = ['KeyK', 'KeyS']).call(_context, event.code); // valid keys \"s\" or \"k\"\n      if (controlOrCommand && isOk) {\n        logEvent(LOG_ACTIONS_OMNIBAR_TRIGGERED, {\n          show_omni: !!showOmni.current });\n\n        showOmni.current = !showOmni.current;\n        setShowModal(showOmni.current);\n        if (showOmni.current) {var _document$getElementB;\n          (_document$getElementB = document.getElementById('InputOmnibar')) == null ? void 0 : _document$getElementB.focus();\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => document.removeEventListener('keydown', handleKeydown);\n  });\n  return ___EmotionJSX(OmniModal, { title: \"\", show: showModal, hideFooter: true, closable: false, onHide: () => {} },\n  ___EmotionJSX(Omnibar, { id: \"InputOmnibar\", placeholder: \"Search all dashboards\", extensions: [getDashboards] }));\n\n}__signature__(OmniContainer, \"useRef{showOmni}\\nuseState{[showModal, setShowModal](false)}\\nuseComponentDidMount{}\", () => [useComponentDidMount]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OmniModal, \"OmniModal\", \"/app/superset-frontend/src/components/OmniContainer/index.tsx\");reactHotLoader.register(OmniContainer, \"OmniContainer\", \"/app/superset-frontend/src/components/OmniContainer/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/OmniContainer/index.tsx"],"names":[],"mappings":"icAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,IAAgB,MAAhB,EAAwB,QAAxB,QAAwC,OAAxC;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,gBAAT,EAA2B,WAA3B,QAA8C,kBAA9C;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SAAS,oBAAT,QAAqC,uCAArC;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,6BAAT,QAA8C,uBAA9C;AACA,SAAS,aAAT,QAA8B,iBAA9B,C;AAEA,MAAM,SAAS,GAAG,MAAM,CAAC,KAAD,CAAO;;;;;;AAM9B,CAND;AAYA,eAAc,SAAU,aAAV,CAAwB,EAAE,QAAF,EAAxB,EAA2C;AACvD,QAAM,QAAQ,GAAG,MAAM,EAAvB;AACA,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,KAAD,CAA1C;AAEA,EAAA,oBAAoB,CAAC,MAAK;AACxB,IAAA,QAAQ,CAAC,OAAT,GAAmB,KAAnB;AACA,aAAS,aAAT,CAAuB,KAAvB,EAA2C;AACzC,UAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAb,CAArB;AAA4C;AAC5C,YAAM,gBAAgB,GAAG,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAhD;AACA,YAAM,IAAI,GAAG,sCAAC,MAAD,EAAS,MAAT,kBAA0B,KAAK,CAAC,IAAhC,CAAb,CAHyC,CAGW;AACpD,UAAI,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B,QAAA,QAAQ,CAAC,6BAAD,EAAgC;AACtC,UAAA,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,OADgB,EAAhC,CAAR;;AAGA,QAAA,QAAQ,CAAC,OAAT,GAAmB,CAAC,QAAQ,CAAC,OAA7B;AACA,QAAA,YAAY,CAAC,QAAQ,CAAC,OAAV,CAAZ;AACA,YAAI,QAAQ,CAAC,OAAb,EAAsB;AACpB,mCAAA,QAAQ,CAAC,cAAT,CAAwB,cAAxB,4CAAyC,KAAzC;AACD;AACF;AACF;AAED,IAAA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,aAArC;AACA,WAAO,MAAM,QAAQ,CAAC,mBAAT,CAA6B,SAA7B,EAAwC,aAAxC,CAAb;AACD,GApBmB,CAApB;AAsBA,SACE,cAAC,SAAD,IACE,KAAK,EAAC,EADR,EAEE,IAAI,EAAE,SAFR,EAGE,UAAU,MAHZ,EAIE,QAAQ,EAAE,KAJZ,EAKE,MAAM,EAAE,MAAK,CAAG,CALlB;AAOE,gBAAC,OAAD,IACE,EAAE,EAAC,cADL,EAEE,WAAW,EAAC,uBAFd,EAGE,UAAU,EAAE,CAAC,aAAD,CAHd,GAPF,CADF;;AAeD,C,cAzCuB,a,iGAItB,oB,oLAhBI,S,wGAYkB,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Modal from 'src/components/Modal';\nimport { useComponentDidMount } from 'src/common/hooks/useComponentDidMount';\nimport { Omnibar } from './Omnibar';\nimport { LOG_ACTIONS_OMNIBAR_TRIGGERED } from '../../logger/LogUtils';\nimport { getDashboards } from './getDashboards';\n\nconst OmniModal = styled(Modal)`\n  margin-top: 20%;\n\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\ninterface Props {\n  logEvent: (log: string, object: object) => void;\n}\n\nexport default function OmniContainer({ logEvent }: Props) {\n  const showOmni = useRef<boolean>();\n  const [showModal, setShowModal] = useState(false);\n\n  useComponentDidMount(() => {\n    showOmni.current = false;\n    function handleKeydown(event: KeyboardEvent) {\n      if (!isFeatureEnabled(FeatureFlag.OMNIBAR)) return;\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      const isOk = ['KeyK', 'KeyS'].includes(event.code); // valid keys \"s\" or \"k\"\n      if (controlOrCommand && isOk) {\n        logEvent(LOG_ACTIONS_OMNIBAR_TRIGGERED, {\n          show_omni: !!showOmni.current,\n        });\n        showOmni.current = !showOmni.current;\n        setShowModal(showOmni.current);\n        if (showOmni.current) {\n          document.getElementById('InputOmnibar')?.focus();\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeydown);\n    return () => document.removeEventListener('keydown', handleKeydown);\n  });\n\n  return (\n    <OmniModal\n      title=\"\"\n      show={showModal}\n      hideFooter\n      closable={false}\n      onHide={() => {}}\n    >\n      <Omnibar\n        id=\"InputOmnibar\"\n        placeholder=\"Search all dashboards\"\n        extensions={[getDashboards]}\n      />\n    </OmniModal>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}