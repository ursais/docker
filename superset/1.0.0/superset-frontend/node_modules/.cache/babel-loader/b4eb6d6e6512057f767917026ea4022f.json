{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\n\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport function setDatasource(datasource, key) {\n  return { type: SET_DATASOURCE, datasource, key };\n}\n\nexport const FETCH_DATASOURCE_STARTED = 'FETCH_DATASOURCE_STARTED';\nexport function fetchDatasourceStarted(key) {\n  return { type: FETCH_DATASOURCE_STARTED, key };\n}\n\nexport const FETCH_DATASOURCE_FAILED = 'FETCH_DATASOURCE_FAILED';\nexport function fetchDatasourceFailed(error, key) {\n  return { type: FETCH_DATASOURCE_FAILED, error, key };\n}\n\nexport function fetchDatasourceMetadata(key) {\n  return (dispatch, getState) => {\n    const { datasources } = getState();\n    const datasource = datasources[key];\n\n    if (datasource) {\n      return dispatch(setDatasource(datasource, key));\n    }\n\n    return SupersetClient.get({\n      endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${key}` }).\n\n    then(({ json }) => dispatch(setDatasource(json, key))).\n    catch((response) =>\n    getClientErrorObject(response).then(({ error }) =>\n    dispatch(fetchDatasourceFailed(error, key))));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_DATASOURCE, \"SET_DATASOURCE\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(setDatasource, \"setDatasource\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(FETCH_DATASOURCE_STARTED, \"FETCH_DATASOURCE_STARTED\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(fetchDatasourceStarted, \"fetchDatasourceStarted\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(FETCH_DATASOURCE_FAILED, \"FETCH_DATASOURCE_FAILED\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(fetchDatasourceFailed, \"fetchDatasourceFailed\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");reactHotLoader.register(fetchDatasourceMetadata, \"fetchDatasourceMetadata\", \"/app/superset-frontend/src/dashboard/actions/datasources.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/actions/datasources.js"],"names":["SupersetClient","getClientErrorObject","SET_DATASOURCE","setDatasource","datasource","key","type","FETCH_DATASOURCE_STARTED","fetchDatasourceStarted","FETCH_DATASOURCE_FAILED","fetchDatasourceFailed","error","fetchDatasourceMetadata","dispatch","getState","datasources","get","endpoint","then","json","catch","response"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,GAAnC,EAAwC;AAC7C,SAAO,EAAEC,IAAI,EAAEJ,cAAR,EAAwBE,UAAxB,EAAoCC,GAApC,EAAP;AACD;;AAED,OAAO,MAAME,wBAAwB,GAAG,0BAAjC;AACP,OAAO,SAASC,sBAAT,CAAgCH,GAAhC,EAAqC;AAC1C,SAAO,EAAEC,IAAI,EAAEC,wBAAR,EAAkCF,GAAlC,EAAP;AACD;;AAED,OAAO,MAAMI,uBAAuB,GAAG,yBAAhC;AACP,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCN,GAAtC,EAA2C;AAChD,SAAO,EAAEC,IAAI,EAAEG,uBAAR,EAAiCE,KAAjC,EAAwCN,GAAxC,EAAP;AACD;;AAED,OAAO,SAASO,uBAAT,CAAiCP,GAAjC,EAAsC;AAC3C,SAAO,CAACQ,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM,EAAEC,WAAF,KAAkBD,QAAQ,EAAhC;AACA,UAAMV,UAAU,GAAGW,WAAW,CAACV,GAAD,CAA9B;;AAEA,QAAID,UAAJ,EAAgB;AACd,aAAOS,QAAQ,CAACV,aAAa,CAACC,UAAD,EAAaC,GAAb,CAAd,CAAf;AACD;;AAED,WAAOL,cAAc,CAACgB,GAAf,CAAmB;AACxBC,MAAAA,QAAQ,EAAG,qDAAoDZ,GAAI,EAD3C,EAAnB;;AAGJa,IAAAA,IAHI,CAGC,CAAC,EAAEC,IAAF,EAAD,KAAcN,QAAQ,CAACV,aAAa,CAACgB,IAAD,EAAOd,GAAP,CAAd,CAHvB;AAIJe,IAAAA,KAJI,CAIE,CAAAC,QAAQ;AACbpB,IAAAA,oBAAoB,CAACoB,QAAD,CAApB,CAA+BH,IAA/B,CAAoC,CAAC,EAAEP,KAAF,EAAD;AAClCE,IAAAA,QAAQ,CAACH,qBAAqB,CAACC,KAAD,EAAQN,GAAR,CAAtB,CADV,CALG,CAAP;;;AASD,GAjBD;AAkBD,C,iLAlCYH,c,2GACGC,a,0GAIHI,wB,qHACGC,sB,mHAIHC,uB,oHACGC,qB,kHAIAE,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\n\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport function setDatasource(datasource, key) {\n  return { type: SET_DATASOURCE, datasource, key };\n}\n\nexport const FETCH_DATASOURCE_STARTED = 'FETCH_DATASOURCE_STARTED';\nexport function fetchDatasourceStarted(key) {\n  return { type: FETCH_DATASOURCE_STARTED, key };\n}\n\nexport const FETCH_DATASOURCE_FAILED = 'FETCH_DATASOURCE_FAILED';\nexport function fetchDatasourceFailed(error, key) {\n  return { type: FETCH_DATASOURCE_FAILED, error, key };\n}\n\nexport function fetchDatasourceMetadata(key) {\n  return (dispatch, getState) => {\n    const { datasources } = getState();\n    const datasource = datasources[key];\n\n    if (datasource) {\n      return dispatch(setDatasource(datasource, key));\n    }\n\n    return SupersetClient.get({\n      endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${key}`,\n    })\n      .then(({ json }) => dispatch(setDatasource(json, key)))\n      .catch(response =>\n        getClientErrorObject(response).then(({ error }) =>\n          dispatch(fetchDatasourceFailed(error, key)),\n        ),\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}