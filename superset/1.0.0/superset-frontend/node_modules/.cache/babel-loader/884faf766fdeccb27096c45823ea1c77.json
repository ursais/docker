{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport parseCookie from 'src/utils/parseCookie';\nimport rison from 'rison';\nimport shortid from 'shortid';\nexport default function handleResourceExport(resource, ids, done, interval = 200) {\n  const token = shortid.generate();\n  const url = `/api/v1/${resource}/export/?q=${rison.encode(ids)}&token=${token}`;\n  // create new iframe for export\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = url;\n  document.body.appendChild(iframe);\n  const timer = window.setInterval(() => {\n    const cookie = parseCookie();\n    if (cookie[token] === 'done') {\n      window.clearInterval(timer);\n      document.body.removeChild(iframe);\n      done();\n    }\n  }, interval);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(handleResourceExport, \"handleResourceExport\", \"/app/superset-frontend/src/utils/export.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/export.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,OAAP,MAAoB,SAApB;AAEA,eAAc,SAAU,oBAAV,CACZ,QADY,EAEZ,GAFY,EAGZ,IAHY,EAIZ,QAAQ,GAAG,GAJC,EAIE;AAEd,QAAM,KAAK,GAAG,OAAO,CAAC,QAAR,EAAd;AACA,QAAM,GAAG,GAAG,WAAW,QAAQ,cAAc,KAAK,CAAC,MAAN,CAC3C,GAD2C,CAE5C,UAAU,KAAK,EAFhB;AAIA;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,OAAb,GAAuB,MAAvB;AACA,EAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B;AAEA,QAAM,KAAK,GAAG,MAAM,CAAC,WAAP,CAAmB,MAAK;AACpC,UAAM,MAAM,GAAmC,WAAW,EAA1D;AACA,QAAI,MAAM,CAAC,KAAD,CAAN,KAAkB,MAAtB,EAA8B;AAC5B,MAAA,MAAM,CAAC,aAAP,CAAqB,KAArB;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACA,MAAA,IAAI;AACL;AACF,GAPa,EAOX,QAPW,CAAd;AAQD,C,iLAzBuB,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport parseCookie from 'src/utils/parseCookie';\nimport rison from 'rison';\nimport shortid from 'shortid';\n\nexport default function handleResourceExport(\n  resource: string,\n  ids: number[],\n  done: () => void,\n  interval = 200,\n): void {\n  const token = shortid.generate();\n  const url = `/api/v1/${resource}/export/?q=${rison.encode(\n    ids,\n  )}&token=${token}`;\n\n  // create new iframe for export\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = url;\n  document.body.appendChild(iframe);\n\n  const timer = window.setInterval(() => {\n    const cookie: { [cookieId: string]: string } = parseCookie();\n    if (cookie[token] === 'done') {\n      window.clearInterval(timer);\n      document.body.removeChild(iframe);\n      done();\n    }\n  }, interval);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}