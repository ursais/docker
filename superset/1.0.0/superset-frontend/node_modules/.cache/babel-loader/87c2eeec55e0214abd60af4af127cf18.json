{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst NOOP = () => {};\n\nexport default function transformProps(chartProps) {\n  const {\n    datasource,\n    formData,\n    hooks,\n    initialValues,\n    queriesData,\n    rawDatasource,\n    rawFormData,\n    width,\n    height } =\n  chartProps;\n  const {\n    onAddFilter = NOOP,\n    onFilterMenuOpen = NOOP,\n    onFilterMenuClose = NOOP } =\n  hooks;\n  const {\n    sliceId,\n    dateFilter,\n    instantFiltering,\n    showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGranularity } =\n  formData;\n  const { verboseMap } = datasource;\n  const filterConfigs = formData.filterConfigs || [];\n\n  const filtersFields = _mapInstanceProperty(filterConfigs).call(filterConfigs, flt => ({\n    ...flt,\n    key: flt.column,\n    label: flt.label || verboseMap[flt.column] || flt.column }));\n\n\n  return {\n    chartId: sliceId,\n    width,\n    height,\n    datasource: rawDatasource,\n    filtersChoices: queriesData[0].data,\n    filtersFields,\n    instantFiltering,\n    onChange: onAddFilter,\n    onFilterMenuOpen,\n    onFilterMenuClose,\n    origSelectedValues: initialValues || {},\n    showDateFilter: dateFilter,\n    showDruidTimeGrain: showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGrain: showSqlaTimeGranularity,\n    // the original form data, needed for async select options\n    rawFormData };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NOOP, \"NOOP\", \"/app/superset-frontend/src/visualizations/FilterBox/transformProps.js\");reactHotLoader.register(transformProps, \"transformProps\", \"/app/superset-frontend/src/visualizations/FilterBox/transformProps.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/visualizations/FilterBox/transformProps.js"],"names":["NOOP","transformProps","chartProps","datasource","formData","hooks","initialValues","queriesData","rawDatasource","rawFormData","width","height","onAddFilter","onFilterMenuOpen","onFilterMenuClose","sliceId","dateFilter","instantFiltering","showDruidTimeGranularity","showDruidTimeOrigin","showSqlaTimeColumn","showSqlaTimeGranularity","verboseMap","filterConfigs","filtersFields","flt","key","column","label","chartId","filtersChoices","data","onChange","origSelectedValues","showDateFilter","showDruidTimeGrain","showSqlaTimeGrain"],"mappings":"8XAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AACjD,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,KARI;AASJC,IAAAA,MATI;AAUFT,EAAAA,UAVJ;AAWA,QAAM;AACJU,IAAAA,WAAW,GAAGZ,IADV;AAEJa,IAAAA,gBAAgB,GAAGb,IAFf;AAGJc,IAAAA,iBAAiB,GAAGd,IAHhB;AAIFK,EAAAA,KAJJ;AAKA,QAAM;AACJU,IAAAA,OADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,wBAJI;AAKJC,IAAAA,mBALI;AAMJC,IAAAA,kBANI;AAOJC,IAAAA,uBAPI;AAQFjB,EAAAA,QARJ;AASA,QAAM,EAAEkB,UAAF,KAAiBnB,UAAvB;AACA,QAAMoB,aAAa,GAAGnB,QAAQ,CAACmB,aAAT,IAA0B,EAAhD;;AAEA,QAAMC,aAAa,GAAG,qBAAAD,aAAa,MAAb,CAAAA,aAAa,EAAKE,GAAG,KAAK;AAC9C,OAAGA,GAD2C;AAE9CC,IAAAA,GAAG,EAAED,GAAG,CAACE,MAFqC;AAG9CC,IAAAA,KAAK,EAAEH,GAAG,CAACG,KAAJ,IAAaN,UAAU,CAACG,GAAG,CAACE,MAAL,CAAvB,IAAuCF,GAAG,CAACE,MAHJ,EAAL,CAAR,CAAnC;;;AAMA,SAAO;AACLE,IAAAA,OAAO,EAAEd,OADJ;AAELL,IAAAA,KAFK;AAGLC,IAAAA,MAHK;AAILR,IAAAA,UAAU,EAAEK,aAJP;AAKLsB,IAAAA,cAAc,EAAEvB,WAAW,CAAC,CAAD,CAAX,CAAewB,IAL1B;AAMLP,IAAAA,aANK;AAOLP,IAAAA,gBAPK;AAQLe,IAAAA,QAAQ,EAAEpB,WARL;AASLC,IAAAA,gBATK;AAULC,IAAAA,iBAVK;AAWLmB,IAAAA,kBAAkB,EAAE3B,aAAa,IAAI,EAXhC;AAYL4B,IAAAA,cAAc,EAAElB,UAZX;AAaLmB,IAAAA,kBAAkB,EAAEjB,wBAbf;AAcLC,IAAAA,mBAdK;AAeLC,IAAAA,kBAfK;AAgBLgB,IAAAA,iBAAiB,EAAEf,uBAhBd;AAiBL;AACAZ,IAAAA,WAlBK,EAAP;;AAoBD,C,iLAzDKT,I,2GAEkBC,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst NOOP = () => {};\n\nexport default function transformProps(chartProps) {\n  const {\n    datasource,\n    formData,\n    hooks,\n    initialValues,\n    queriesData,\n    rawDatasource,\n    rawFormData,\n    width,\n    height,\n  } = chartProps;\n  const {\n    onAddFilter = NOOP,\n    onFilterMenuOpen = NOOP,\n    onFilterMenuClose = NOOP,\n  } = hooks;\n  const {\n    sliceId,\n    dateFilter,\n    instantFiltering,\n    showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGranularity,\n  } = formData;\n  const { verboseMap } = datasource;\n  const filterConfigs = formData.filterConfigs || [];\n\n  const filtersFields = filterConfigs.map(flt => ({\n    ...flt,\n    key: flt.column,\n    label: flt.label || verboseMap[flt.column] || flt.column,\n  }));\n\n  return {\n    chartId: sliceId,\n    width,\n    height,\n    datasource: rawDatasource,\n    filtersChoices: queriesData[0].data,\n    filtersFields,\n    instantFiltering,\n    onChange: onAddFilter,\n    onFilterMenuOpen,\n    onFilterMenuClose,\n    origSelectedValues: initialValues || {},\n    showDateFilter: dateFilter,\n    showDruidTimeGrain: showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGrain: showSqlaTimeGranularity,\n    // the original form data, needed for async select options\n    rawFormData,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}