{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport moment from 'moment';\nimport { Behavior, getChartMetadataRegistry, styled, t } from '@superset-ui/core';\nimport { Menu, NoAnimationDropdown } from 'src/common/components';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport getDashboardUrl from 'src/dashboard/util/getDashboardUrl';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport CrossFilterScopingModal from 'src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingModal';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst MENU_KEYS = {\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  EXPORT_FULL_CSV: 'export_full_csv',\n  FORCE_REFRESH: 'force_refresh',\n  RESIZE_LABEL: 'resize_label',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  VIEW_QUERY: 'view_query' };\n\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: ${({ theme }) => theme.typography.sizes.m * 1.5}px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\nconst SCREENSHOT_NODE_SELECTOR = '.dashboard-component-chart-holder';\nconst VerticalDotsTrigger = () => ___EmotionJSX(VerticalDotsContainer, null,\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }));\n\nclass SliceHeaderControls extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.toggleControls = _bindInstanceProperty(_context = this.toggleControls).call(_context, this);\n    this.refreshChart = _bindInstanceProperty(_context2 = this.refreshChart).call(_context2, this);\n    this.handleMenuClick = _bindInstanceProperty(_context3 = this.handleMenuClick).call(_context3, this);\n    this.state = {\n      showControls: false,\n      showCrossFilterScopingModal: false };\n\n  }\n  refreshChart() {\n    if (this.props.updatedDttm) {\n      this.props.forceRefresh(_sliceInstanceProperty(this.props).slice_id, this.props.dashboardId);\n    }\n  }\n  toggleControls() {\n    this.setState(prevState => ({\n      showControls: !prevState.showControls }));\n\n  }\n  handleMenuClick({ key, domEvent }) {\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        this.refreshChart();\n        break;\n      case MENU_KEYS.CROSS_FILTER_SCOPING:\n        this.setState({ showCrossFilterScopingModal: true });\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.toggleExpandSlice &&\n        this.props.toggleExpandSlice(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exploreChart &&\n        this.props.exploreChart(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exportCSV && this.props.exportCSV(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.RESIZE_LABEL:\n        this.props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.EXPORT_FULL_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exportFullCSV &&\n        this.props.exportFullCSV(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:{\n          // menu closes with a delay, we need to hide it manually,\n          // so that we don't capture it on the screenshot\n          const menu = document.querySelector('.ant-dropdown:not(.ant-dropdown-hidden)');\n          menu.style.visibility = 'hidden';\n          downloadAsImage(SCREENSHOT_NODE_SELECTOR, _sliceInstanceProperty(this.props).slice_name)(domEvent).then(() => {\n            menu.style.visibility = 'visible';\n          });\n          break;\n        }\n      default:\n        break;}\n\n  }\n  render() {var _context4, _context5, _context6;\n    const { slice, isFullSize, componentId, cachedDttm = [], updatedDttm = null, addSuccessToast = () => {}, addDangerToast = () => {}, supersetCanShare = false, isCached = [] } = this.props;\n    const crossFilterItems = getChartMetadataRegistry().items;\n    const isTable = slice.viz_type === 'table';\n    const isCrossFilter = _findInstanceProperty(_context4 = _filterInstanceProperty(_context5 = _Object$entries(crossFilterItems)\n    // @ts-ignore\n    ).call(_context5, ([, { value }]) => {var _value$behaviors;return (_value$behaviors = value.behaviors) == null ? void 0 : _includesInstanceProperty(_value$behaviors).call(_value$behaviors, Behavior.INTERACTIVE_CHART);})).call(_context4,\n    ([key]) => key === slice.viz_type);\n    const cachedWhen = _mapInstanceProperty(_context6 = cachedDttm || []).call(_context6, itemCachedDttm => moment.utc(itemCachedDttm).fromNow());\n    const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n    const getCachedTitle = itemCached => {\n      if (itemCached) {\n        return t('Cached %s', cachedWhen);\n      }\n      if (updatedWhen) {\n        return t('Fetched %s', updatedWhen);\n      }\n      return '';\n    };\n    const refreshTooltipData = [...new _Set(_mapInstanceProperty(isCached).call(isCached, getCachedTitle) || '')];\n    // If all queries have same cache time we can unit them to one\n    const refreshTooltip = _mapInstanceProperty(refreshTooltipData).call(refreshTooltipData, (item, index) => ___EmotionJSX(\"div\", { key: `tooltip-${index}` },\n    refreshTooltipData.length > 1 ?\n    `${t('Query')} ${index + 1}: ${item}` :\n    item));\n\n    const resizeLabel = isFullSize ? t('Minimize chart') : t('Maximize chart');\n    const menu = ___EmotionJSX(Menu, { onClick: this.handleMenuClick, selectable: false, \"data-test\": `slice_${slice.slice_id}-menu` },\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.FORCE_REFRESH, disabled: this.props.chartStatus === 'loading', style: { height: 'auto', lineHeight: 'initial' }, \"data-test\": \"refresh-chart-menu-item\" },\n    t('Force refresh'),\n    ___EmotionJSX(RefreshTooltip, { \"data-test\": \"dashboard-slice-refresh-tooltip\" },\n    refreshTooltip)),\n\n\n\n    ___EmotionJSX(Menu.Divider, null),\n\n    slice.description && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.TOGGLE_CHART_DESCRIPTION },\n    t('Toggle chart description')),\n\n\n    this.props.supersetCanExplore && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPLORE_CHART },\n    t('View chart in Explore')),\n\n\n    this.props.supersetCanExplore && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.VIEW_QUERY },\n    ___EmotionJSX(ModalTrigger, { triggerNode: ___EmotionJSX(\"span\", { \"data-test\": \"view-query-menu-item\" }, t('View query')), modalTitle: t('View query'), modalBody: ___EmotionJSX(ViewQueryModal, { latestQueryFormData: this.props.formData }), responsive: true })),\n\n\n    supersetCanShare && ___EmotionJSX(ShareMenuItems, { url: getDashboardUrl(window.location.pathname, getActiveFilters(), componentId), copyMenuItemTitle: t('Copy chart URL'), emailMenuItemTitle: t('Share chart by email'), emailSubject: t('Superset chart'), emailBody: t('Check out this chart: '), addSuccessToast: addSuccessToast, addDangerToast: addDangerToast }),\n\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.RESIZE_LABEL }, resizeLabel),\n\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.DOWNLOAD_AS_IMAGE },\n    t('Download as image')),\n\n\n    this.props.supersetCanCSV && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_CSV }, t('Export CSV')),\n    isFeatureEnabled(FeatureFlag.ALLOW_FULL_CSV_EXPORT) &&\n    this.props.supersetCanCSV &&\n    isTable && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_FULL_CSV },\n    t('Export full CSV')),\n\n    isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n    isCrossFilter && ___EmotionJSX(Menu.Item, { key: MENU_KEYS.CROSS_FILTER_SCOPING },\n    t('Cross-filter scoping')));\n\n\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(CrossFilterScopingModal, { chartId: slice.slice_id, isOpen: this.state.showCrossFilterScopingModal, onClose: () => this.setState({ showCrossFilterScopingModal: false }) }),\n    isFullSize && ___EmotionJSX(Icons.FullscreenExitOutlined, { style: { fontSize: 22 }, onClick: () => {\n        this.props.handleToggleFullSize();\n      } }),\n    ___EmotionJSX(NoAnimationDropdown, { overlay: menu, trigger: ['click'], placement: \"bottomRight\", getPopupContainer: triggerNode => triggerNode.closest(SCREENSHOT_NODE_SELECTOR) },\n    ___EmotionJSX(\"span\", { id: `slice_${slice.slice_id}-controls`, role: \"button\", \"aria-label\": \"More Options\" },\n    ___EmotionJSX(VerticalDotsTrigger, null))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default = SliceHeaderControls;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(MENU_KEYS, \"MENU_KEYS\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(VerticalDotsContainer, \"VerticalDotsContainer\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(RefreshTooltip, \"RefreshTooltip\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(SCREENSHOT_NODE_SELECTOR, \"SCREENSHOT_NODE_SELECTOR\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(VerticalDotsTrigger, \"VerticalDotsTrigger\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(SliceHeaderControls, \"SliceHeaderControls\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx"],"names":[],"mappings":"6gCAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,QAAnB;AACA,SACE,QADF,EAEE,wBAFF,EAGE,MAHF,EAIE,CAJF,QAKO,mBALP;AAMA,SAAS,IAAT,EAAe,mBAAf,QAA0C,uBAA1C;AACA,OAAO,cAAP,MAA2B,8CAA3B;AACA,OAAO,eAAP,MAA4B,2BAA5B;AACA,OAAO,eAAP,MAA4B,oCAA5B;AACA,SAAS,gBAAT,QAAiC,2CAAjC;AACA,SAAS,WAAT,EAAsB,gBAAtB,QAA8C,kBAA9C;AACA,OAAO,uBAAP,MAAoC,0EAApC;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,OAAO,YAAP,MAAyB,6BAAzB;AACA,OAAO,cAAP,MAA2B,gDAA3B,C;AAEA,MAAM,SAAS,GAAG;AAChB,EAAA,oBAAoB,EAAE,sBADN;AAEhB,EAAA,iBAAiB,EAAE,mBAFH;AAGhB,EAAA,aAAa,EAAE,eAHC;AAIhB,EAAA,UAAU,EAAE,YAJI;AAKhB,EAAA,eAAe,EAAE,iBALD;AAMhB,EAAA,aAAa,EAAE,eANC;AAOhB,EAAA,YAAY,EAAE,cAPE;AAQhB,EAAA,wBAAwB,EAAE,0BARV;AAShB,EAAA,UAAU,EAAE,YATI,EAAlB;;AAYA,MAAM,qBAAqB,GAAG,MAAM,CAAC,GAAG;aAC3B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;MACxC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,GAAG;;;;;;;;;AASxC,CAXD;AAaA,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG;;YAErB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;WAC9B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,IAAI;iBACpC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAvB,GAA2B,GAAG;;;;;AAK7D,CATD;AAWA,MAAM,wBAAwB,GAAG,mCAAjC;AAEA,MAAM,mBAAmB,GAAG,MAC1B,cAAC,qBAAD;AACE,wBAAM,SAAS,EAAC,KAAhB,GADF;AAEE,wBAAM,SAAS,EAAC,KAAhB,GAFF;AAGE,wBAAM,SAAS,EAAC,KAAhB,GAHF,CADF;;AA0CA,MAAM,mBAAN,SAAkC,KAAK,CAAC,aAAxC,CAAmE;AACjE,EAAA,WAAA,CAAY,KAAZ,EAAwB;AACtB,UAAM,KAAN;AACA,SAAK,cAAL,GAAsB,sCAAK,cAAL,iBAAyB,IAAzB,CAAtB;AACA,SAAK,YAAL,GAAoB,uCAAK,YAAL,kBAAuB,IAAvB,CAApB;AACA,SAAK,eAAL,GAAuB,uCAAK,eAAL,kBAA0B,IAA1B,CAAvB;AAEA,SAAK,KAAL,GAAa;AACX,MAAA,YAAY,EAAE,KADH;AAEX,MAAA,2BAA2B,EAAE,KAFlB,EAAb;;AAID;AAED,EAAA,YAAY,GAAA;AACV,QAAI,KAAK,KAAL,CAAW,WAAf,EAA4B;AAC1B,WAAK,KAAL,CAAW,YAAX,CACE,4BAAK,KAAL,EAAiB,QADnB,EAEE,KAAK,KAAL,CAAW,WAFb;AAID;AACF;AAED,EAAA,cAAc,GAAA;AACZ,SAAK,QAAL,CAAc,SAAS,KAAK;AAC1B,MAAA,YAAY,EAAE,CAAC,SAAS,CAAC,YADC,EAAL,CAAvB;;AAGD;AAED,EAAA,eAAe,CAAC,EACd,GADc,EAEd,QAFc,EAAD,EAMd;AACC,YAAQ,GAAR;AACE,WAAK,SAAS,CAAC,aAAf;AACE,aAAK,YAAL;AACA;AACF,WAAK,SAAS,CAAC,oBAAf;AACE,aAAK,QAAL,CAAc,EAAE,2BAA2B,EAAE,IAA/B,EAAd;AACA;AACF,WAAK,SAAS,CAAC,wBAAf;AACE;AACA,aAAK,KAAL,CAAW,iBAAX;AACE,aAAK,KAAL,CAAW,iBAAX,CAA6B,4BAAK,KAAL,EAAiB,QAA9C,CADF;AAEA;AACF,WAAK,SAAS,CAAC,aAAf;AACE;AACA,aAAK,KAAL,CAAW,YAAX;AACE,aAAK,KAAL,CAAW,YAAX,CAAwB,4BAAK,KAAL,EAAiB,QAAzC,CADF;AAEA;AACF,WAAK,SAAS,CAAC,UAAf;AACE;AACA,aAAK,KAAL,CAAW,SAAX,IAAwB,KAAK,KAAL,CAAW,SAAX,CAAqB,4BAAK,KAAL,EAAiB,QAAtC,CAAxB;AACA;AACF,WAAK,SAAS,CAAC,YAAf;AACE,aAAK,KAAL,CAAW,oBAAX;AACA;AACF,WAAK,SAAS,CAAC,eAAf;AACE;AACA,aAAK,KAAL,CAAW,aAAX;AACE,aAAK,KAAL,CAAW,aAAX,CAAyB,4BAAK,KAAL,EAAiB,QAA1C,CADF;AAEA;AACF,WAAK,SAAS,CAAC,iBAAf,CAAkC;AAChC;AACA;AACA,gBAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CACX,yCADW,CAAb;AAGA,UAAA,IAAI,CAAC,KAAL,CAAW,UAAX,GAAwB,QAAxB;AACA,UAAA,eAAe,CACb,wBADa,EAEb,4BAAK,KAAL,EAAiB,UAFJ,CAAf,CAIE,QAJF,EAIY,IAJZ,CAIiB,MAAK;AACpB,YAAA,IAAI,CAAC,KAAL,CAAW,UAAX,GAAwB,SAAxB;AACD,WAND;AAOA;AACD;AACD;AACE,cA9CJ;;AAgDD;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,EACJ,KADI,EAEJ,UAFI,EAGJ,WAHI,EAIJ,UAAU,GAAG,EAJT,EAKJ,WAAW,GAAG,IALV,EAMJ,eAAe,GAAG,MAAK,CAAG,CANtB,EAOJ,cAAc,GAAG,MAAK,CAAG,CAPrB,EAQJ,gBAAgB,GAAG,KARf,EASJ,QAAQ,GAAG,EATP,KAUF,KAAK,KAVT;AAWA,UAAM,gBAAgB,GAAG,wBAAwB,GAAG,KAApD;AACA,UAAM,OAAO,GAAG,KAAK,CAAC,QAAN,KAAmB,OAAnC;AACA,UAAM,aAAa,GAAG,sFAAe,gBAAf;AACpB;AADoB,sBAEZ,CAAC,GAAG,EAAE,KAAF,EAAH,CAAD,sDACN,KAAK,CAAC,SADA,qBACN,mEAA0B,QAAQ,CAAC,iBAAnC,CADM,EAFY;AAKd,KAAC,CAAC,GAAD,CAAD,KAAW,GAAG,KAAK,KAAK,CAAC,QALX,CAAtB;AAOA,UAAM,UAAU,GAAG,iCAAC,UAAU,IAAI,EAAf,kBAAuB,cAAc,IACtD,MAAM,CAAC,GAAP,CAAW,cAAX,EAA2B,OAA3B,EADiB,CAAnB;AAGA,UAAM,WAAW,GAAG,WAAW,GAAG,MAAM,CAAC,GAAP,CAAW,WAAX,EAAwB,OAAxB,EAAH,GAAuC,EAAtE;AACA,UAAM,cAAc,GAAI,UAAD,IAAwB;AAC7C,UAAI,UAAJ,EAAgB;AACd,eAAO,CAAC,CAAC,WAAD,EAAc,UAAd,CAAR;AACD;AACD,UAAI,WAAJ,EAAiB;AACf,eAAO,CAAC,CAAC,YAAD,EAAe,WAAf,CAAR;AACD;AACD,aAAO,EAAP;AACD,KARD;AASA,UAAM,kBAAkB,GAAG,CAAC,GAAG,SAAQ,qBAAA,QAAQ,MAAR,CAAA,QAAQ,EAAK,cAAL,CAAR,IAAgC,EAAxC,CAAJ,CAA3B;AACA;AACA,UAAM,cAAc,GAAG,qBAAA,kBAAkB,MAAlB,CAAA,kBAAkB,EAAK,CAAC,IAAD,EAAO,KAAP,KAC5C,uBAAK,GAAG,EAAE,WAAW,KAAK,EAA1B;AACG,IAAA,kBAAkB,CAAC,MAAnB,GAA4B,CAA5B;AACG,OAAG,CAAC,CAAC,OAAD,CAAS,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,EADtC;AAEG,IAAA,IAHN,CADuC,CAAzC;;AAOA,UAAM,WAAW,GAAG,UAAU,GAAG,CAAC,CAAC,gBAAD,CAAJ,GAAyB,CAAC,CAAC,gBAAD,CAAxD;AACA,UAAM,IAAI,GACR,cAAC,IAAD,IACE,OAAO,EAAE,KAAK,eADhB,EAEE,UAAU,EAAE,KAFd,EAGE,aAAW,SAAS,KAAK,CAAC,QAAQ,OAHpC;AAKE,kBAAC,IAAD,CAAM,IAAN,IACE,GAAG,EAAE,SAAS,CAAC,aADjB,EAEE,QAAQ,EAAE,KAAK,KAAL,CAAW,WAAX,KAA2B,SAFvC,EAGE,KAAK,EAAE,EAAE,MAAM,EAAE,MAAV,EAAkB,UAAU,EAAE,SAA9B,EAHT,EAIE,aAAU,yBAJZ;AAMG,IAAA,CAAC,CAAC,eAAD,CANJ;AAOE,kBAAC,cAAD,IAAgB,aAAU,iCAA1B;AACG,IAAA,cADH,CAPF,CALF;;;;AAiBE,kBAAC,IAAD,CAAM,OAAN,OAjBF;;AAmBG,IAAA,KAAK,CAAC,WAAN,IACC,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,wBAA1B;AACG,IAAA,CAAC,CAAC,0BAAD,CADJ,CApBJ;;;AAyBG,SAAK,KAAL,CAAW,kBAAX,IACC,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,aAA1B;AACG,IAAA,CAAC,CAAC,uBAAD,CADJ,CA1BJ;;;AA+BG,SAAK,KAAL,CAAW,kBAAX,IACC,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,UAA1B;AACE,kBAAC,YAAD,IACE,WAAW,EACT,wBAAM,aAAU,sBAAhB,IAAwC,CAAC,CAAC,YAAD,CAAzC,CAFJ,EAIE,UAAU,EAAE,CAAC,CAAC,YAAD,CAJf,EAKE,SAAS,EACP,cAAC,cAAD,IAAgB,mBAAmB,EAAE,KAAK,KAAL,CAAW,QAAhD,GANJ,EAQE,UAAU,MARZ,GADF,CAhCJ;;;AA8CG,IAAA,gBAAgB,IACf,cAAC,cAAD,IACE,GAAG,EAAE,eAAe,CAClB,MAAM,CAAC,QAAP,CAAgB,QADE,EAElB,gBAAgB,EAFE,EAGlB,WAHkB,CADtB,EAME,iBAAiB,EAAE,CAAC,CAAC,gBAAD,CANtB,EAOE,kBAAkB,EAAE,CAAC,CAAC,sBAAD,CAPvB,EAQE,YAAY,EAAE,CAAC,CAAC,gBAAD,CARjB,EASE,SAAS,EAAE,CAAC,CAAC,wBAAD,CATd,EAUE,eAAe,EAAE,eAVnB,EAWE,cAAc,EAAE,cAXlB,GA/CJ;;AA8DE,kBAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,YAA1B,IAAyC,WAAzC,CA9DF;;AAgEE,kBAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,iBAA1B;AACG,IAAA,CAAC,CAAC,mBAAD,CADJ,CAhEF;;;AAoEG,SAAK,KAAL,CAAW,cAAX,IACC,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,UAA1B,IAAuC,CAAC,CAAC,YAAD,CAAxC,CArEJ;AAuEG,IAAA,gBAAgB,CAAC,WAAW,CAAC,qBAAb,CAAhB;AACC,SAAK,KAAL,CAAW,cADZ;AAEC,IAAA,OAFD,IAGG,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,eAA1B;AACG,IAAA,CAAC,CAAC,iBAAD,CADJ,CA1EN;;AA8EG,IAAA,gBAAgB,CAAC,WAAW,CAAC,uBAAb,CAAhB;AACC,IAAA,aADD,IAEG,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,SAAS,CAAC,oBAA1B;AACG,IAAA,CAAC,CAAC,sBAAD,CADJ,CAhFN,CADF;;;AAwFA,WACE;AACE,kBAAC,uBAAD,IACE,OAAO,EAAE,KAAK,CAAC,QADjB,EAEE,MAAM,EAAE,KAAK,KAAL,CAAW,2BAFrB,EAGE,OAAO,EAAE,MAAM,KAAK,QAAL,CAAc,EAAE,2BAA2B,EAAE,KAA/B,EAAd,CAHjB,GADF;AAMG,IAAA,UAAU,IACT,cAAC,KAAD,CAAO,sBAAP,IACE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAZ,EADT,EAEE,OAAO,EAAE,MAAK;AACZ,aAAK,KAAL,CAAW,oBAAX;AACD,OAJH,GAPJ;AAcE,kBAAC,mBAAD,IACE,OAAO,EAAE,IADX,EAEE,OAAO,EAAE,CAAC,OAAD,CAFX,EAGE,SAAS,EAAC,aAHZ,EAIE,iBAAiB,EAAE,WAAW,IAC5B,WAAW,CAAC,OAAZ,CAAoB,wBAApB,CALJ;AAQE,4BACE,EAAE,EAAE,SAAS,KAAK,CAAC,QAAQ,WAD7B,EAEE,IAAI,EAAC,QAFP,EAGE,cAAW,cAHb;AAKE,kBAAC,mBAAD,OALF,CARF,CAdF,CADF;;;;AAiCD,GA1PgE;AAAA;AAAA,6B,iBA6PpD,mB,CAAf,wB,iLA7UM,S,wHAYA,qB,oIAaA,c,6HAWA,wB,uIAEA,mB,kIA0CA,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport moment from 'moment';\nimport {\n  Behavior,\n  getChartMetadataRegistry,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { Menu, NoAnimationDropdown } from 'src/common/components';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport getDashboardUrl from 'src/dashboard/util/getDashboardUrl';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport CrossFilterScopingModal from 'src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingModal';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\n\nconst MENU_KEYS = {\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  EXPORT_FULL_CSV: 'export_full_csv',\n  FORCE_REFRESH: 'force_refresh',\n  RESIZE_LABEL: 'resize_label',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  VIEW_QUERY: 'view_query',\n};\n\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: ${({ theme }) => theme.typography.sizes.m * 1.5}px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SCREENSHOT_NODE_SELECTOR = '.dashboard-component-chart-holder';\n\nconst VerticalDotsTrigger = () => (\n  <VerticalDotsContainer>\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n  </VerticalDotsContainer>\n);\ninterface Props {\n  slice: {\n    description: string;\n    viz_type: string;\n    slice_name: string;\n    slice_id: number;\n    slice_description: string;\n  };\n  componentId: string;\n  chartStatus: string;\n  dashboardId: number;\n  addDangerToast: () => void;\n  isCached: boolean[];\n  cachedDttm: string[] | null;\n  isExpanded?: boolean;\n  updatedDttm: number | null;\n  supersetCanExplore: boolean;\n  supersetCanShare: boolean;\n  supersetCanCSV: boolean;\n  sliceCanEdit: boolean;\n  isFullSize?: boolean;\n  formData: object;\n  toggleExpandSlice?: (sliceId: number) => void;\n  forceRefresh: (sliceId: number, dashboardId: number) => void;\n  exploreChart?: (sliceId: number) => void;\n  exportCSV?: (sliceId: number) => void;\n  exportFullCSV?: (sliceId: number) => void;\n  addSuccessToast: (message: string) => void;\n  handleToggleFullSize: () => void;\n}\ninterface State {\n  showControls: boolean;\n  showCrossFilterScopingModal: boolean;\n}\n\nclass SliceHeaderControls extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.toggleControls = this.toggleControls.bind(this);\n    this.refreshChart = this.refreshChart.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n\n    this.state = {\n      showControls: false,\n      showCrossFilterScopingModal: false,\n    };\n  }\n\n  refreshChart() {\n    if (this.props.updatedDttm) {\n      this.props.forceRefresh(\n        this.props.slice.slice_id,\n        this.props.dashboardId,\n      );\n    }\n  }\n\n  toggleControls() {\n    this.setState(prevState => ({\n      showControls: !prevState.showControls,\n    }));\n  }\n\n  handleMenuClick({\n    key,\n    domEvent,\n  }: {\n    key: React.Key;\n    domEvent: React.MouseEvent<HTMLElement>;\n  }) {\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        this.refreshChart();\n        break;\n      case MENU_KEYS.CROSS_FILTER_SCOPING:\n        this.setState({ showCrossFilterScopingModal: true });\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.toggleExpandSlice &&\n          this.props.toggleExpandSlice(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exploreChart &&\n          this.props.exploreChart(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exportCSV && this.props.exportCSV(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.RESIZE_LABEL:\n        this.props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.EXPORT_FULL_CSV:\n        // eslint-disable-next-line no-unused-expressions\n        this.props.exportFullCSV &&\n          this.props.exportFullCSV(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE: {\n        // menu closes with a delay, we need to hide it manually,\n        // so that we don't capture it on the screenshot\n        const menu = document.querySelector(\n          '.ant-dropdown:not(.ant-dropdown-hidden)',\n        ) as HTMLElement;\n        menu.style.visibility = 'hidden';\n        downloadAsImage(\n          SCREENSHOT_NODE_SELECTOR,\n          this.props.slice.slice_name,\n          // @ts-ignore\n        )(domEvent).then(() => {\n          menu.style.visibility = 'visible';\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      slice,\n      isFullSize,\n      componentId,\n      cachedDttm = [],\n      updatedDttm = null,\n      addSuccessToast = () => {},\n      addDangerToast = () => {},\n      supersetCanShare = false,\n      isCached = [],\n    } = this.props;\n    const crossFilterItems = getChartMetadataRegistry().items;\n    const isTable = slice.viz_type === 'table';\n    const isCrossFilter = Object.entries(crossFilterItems)\n      // @ts-ignore\n      .filter(([, { value }]) =>\n        value.behaviors?.includes(Behavior.INTERACTIVE_CHART),\n      )\n      .find(([key]) => key === slice.viz_type);\n\n    const cachedWhen = (cachedDttm || []).map(itemCachedDttm =>\n      moment.utc(itemCachedDttm).fromNow(),\n    );\n    const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n    const getCachedTitle = (itemCached: boolean) => {\n      if (itemCached) {\n        return t('Cached %s', cachedWhen);\n      }\n      if (updatedWhen) {\n        return t('Fetched %s', updatedWhen);\n      }\n      return '';\n    };\n    const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n    // If all queries have same cache time we can unit them to one\n    const refreshTooltip = refreshTooltipData.map((item, index) => (\n      <div key={`tooltip-${index}`}>\n        {refreshTooltipData.length > 1\n          ? `${t('Query')} ${index + 1}: ${item}`\n          : item}\n      </div>\n    ));\n    const resizeLabel = isFullSize ? t('Minimize chart') : t('Maximize chart');\n    const menu = (\n      <Menu\n        onClick={this.handleMenuClick}\n        selectable={false}\n        data-test={`slice_${slice.slice_id}-menu`}\n      >\n        <Menu.Item\n          key={MENU_KEYS.FORCE_REFRESH}\n          disabled={this.props.chartStatus === 'loading'}\n          style={{ height: 'auto', lineHeight: 'initial' }}\n          data-test=\"refresh-chart-menu-item\"\n        >\n          {t('Force refresh')}\n          <RefreshTooltip data-test=\"dashboard-slice-refresh-tooltip\">\n            {refreshTooltip}\n          </RefreshTooltip>\n        </Menu.Item>\n\n        <Menu.Divider />\n\n        {slice.description && (\n          <Menu.Item key={MENU_KEYS.TOGGLE_CHART_DESCRIPTION}>\n            {t('Toggle chart description')}\n          </Menu.Item>\n        )}\n\n        {this.props.supersetCanExplore && (\n          <Menu.Item key={MENU_KEYS.EXPLORE_CHART}>\n            {t('View chart in Explore')}\n          </Menu.Item>\n        )}\n\n        {this.props.supersetCanExplore && (\n          <Menu.Item key={MENU_KEYS.VIEW_QUERY}>\n            <ModalTrigger\n              triggerNode={\n                <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n              }\n              modalTitle={t('View query')}\n              modalBody={\n                <ViewQueryModal latestQueryFormData={this.props.formData} />\n              }\n              responsive\n            />\n          </Menu.Item>\n        )}\n\n        {supersetCanShare && (\n          <ShareMenuItems\n            url={getDashboardUrl(\n              window.location.pathname,\n              getActiveFilters(),\n              componentId,\n            )}\n            copyMenuItemTitle={t('Copy chart URL')}\n            emailMenuItemTitle={t('Share chart by email')}\n            emailSubject={t('Superset chart')}\n            emailBody={t('Check out this chart: ')}\n            addSuccessToast={addSuccessToast}\n            addDangerToast={addDangerToast}\n          />\n        )}\n\n        <Menu.Item key={MENU_KEYS.RESIZE_LABEL}>{resizeLabel}</Menu.Item>\n\n        <Menu.Item key={MENU_KEYS.DOWNLOAD_AS_IMAGE}>\n          {t('Download as image')}\n        </Menu.Item>\n\n        {this.props.supersetCanCSV && (\n          <Menu.Item key={MENU_KEYS.EXPORT_CSV}>{t('Export CSV')}</Menu.Item>\n        )}\n        {isFeatureEnabled(FeatureFlag.ALLOW_FULL_CSV_EXPORT) &&\n          this.props.supersetCanCSV &&\n          isTable && (\n            <Menu.Item key={MENU_KEYS.EXPORT_FULL_CSV}>\n              {t('Export full CSV')}\n            </Menu.Item>\n          )}\n        {isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n          isCrossFilter && (\n            <Menu.Item key={MENU_KEYS.CROSS_FILTER_SCOPING}>\n              {t('Cross-filter scoping')}\n            </Menu.Item>\n          )}\n      </Menu>\n    );\n\n    return (\n      <>\n        <CrossFilterScopingModal\n          chartId={slice.slice_id}\n          isOpen={this.state.showCrossFilterScopingModal}\n          onClose={() => this.setState({ showCrossFilterScopingModal: false })}\n        />\n        {isFullSize && (\n          <Icons.FullscreenExitOutlined\n            style={{ fontSize: 22 }}\n            onClick={() => {\n              this.props.handleToggleFullSize();\n            }}\n          />\n        )}\n        <NoAnimationDropdown\n          overlay={menu}\n          trigger={['click']}\n          placement=\"bottomRight\"\n          getPopupContainer={triggerNode =>\n            triggerNode.closest(SCREENSHOT_NODE_SELECTOR) as HTMLElement\n          }\n        >\n          <span\n            id={`slice_${slice.slice_id}-controls`}\n            role=\"button\"\n            aria-label=\"More Options\"\n          >\n            <VerticalDotsTrigger />\n          </span>\n        </NoAnimationDropdown>\n      </>\n    );\n  }\n}\n\nexport default SliceHeaderControls;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}