{"ast":null,"code":"import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useFilterSets } from '../state';\n// eslint-disable-next-line import/prefer-default-export\nexport const useFilterSetNameDuplicated = (filterSetName, ignoreName) => {\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = _Object$values(filterSets);\n  const isFilterSetNameDuplicated = useMemo(() => !!_findInstanceProperty(filterSetFilterValues).call(filterSetFilterValues, ({ name }) => name === filterSetName), [filterSetFilterValues, filterSetName]);\n  if (ignoreName === filterSetName) {\n    return false;\n  }\n  return isFilterSetNameDuplicated;\n};__signature__(useFilterSetNameDuplicated, \"useFilterSets{filterSets}\\nuseMemo{isFilterSetNameDuplicated}\", () => [useFilterSets]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterSetNameDuplicated, \"useFilterSetNameDuplicated\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/state.ts"],"names":[],"mappings":"idAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,OAAT,QAAwB,OAAxB;AACA,SAAS,aAAT,QAA8B,UAA9B;AAEA;AACA,OAAO,MAAM,0BAA0B,GAAG,CACxC,aADwC,EAExC,UAFwC,KAGtC;AACF,QAAM,UAAU,GAAG,aAAa,EAAhC;AACA,QAAM,qBAAqB,GAAG,eAAc,UAAd,CAA9B;AACA,QAAM,yBAAyB,GAAG,OAAO,CACvC,MAAM,CAAC,CAAC,sBAAA,qBAAqB,MAArB,CAAA,qBAAqB,EAAM,CAAC,EAAE,IAAF,EAAD,KAAc,IAAI,KAAK,aAA7B,CADU,EAEvC,CAAC,qBAAD,EAAwB,aAAxB,CAFuC,CAAzC;AAIA,MAAI,UAAU,KAAK,aAAnB,EAAkC;AAChC,WAAO,KAAP;AACD;AACD,SAAO,yBAAP;AACD,CAdM,C,cAAM,0B,0EAIQ,a,oLAJR,0B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useFilterSets } from '../state';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useFilterSetNameDuplicated = (\n  filterSetName: string,\n  ignoreName?: string,\n) => {\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const isFilterSetNameDuplicated = useMemo(\n    () => !!filterSetFilterValues.find(({ name }) => name === filterSetName),\n    [filterSetFilterValues, filterSetName],\n  );\n  if (ignoreName === filterSetName) {\n    return false;\n  }\n  return isFilterSetNameDuplicated;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}