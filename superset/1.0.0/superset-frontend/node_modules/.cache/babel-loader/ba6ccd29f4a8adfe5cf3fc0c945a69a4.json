{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'src/components/Select';\nimport { t } from '@superset-ui/core';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { CssEditor as AceCssEditor } from 'src/components/AsyncAceEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  initialCss: PropTypes.string,\n  triggerNode: PropTypes.node.isRequired,\n  onChange: PropTypes.func,\n  templates: PropTypes.array };\n\n\nconst defaultProps = {\n  initialCss: '',\n  onChange: () => {} };\n\n\nclass CssEditor extends React.PureComponent {\n  constructor(props) {var _context, _context2;\n    super(props);\n    this.state = {\n      css: props.initialCss };\n\n    this.changeCss = _bindInstanceProperty(_context = this.changeCss).call(_context, this);\n    this.changeCssTemplate = _bindInstanceProperty(_context2 = this.changeCssTemplate).call(_context2, this);\n  }\n\n  componentDidMount() {\n    AceCssEditor.preload();\n  }\n\n  changeCss(css) {\n    this.setState({ css }, () => {\n      this.props.onChange(css);\n    });\n  }\n\n  changeCssTemplate(opt) {\n    this.changeCss(opt.css);\n  }\n\n  renderTemplateSelector() {\n    if (this.props.templates) {\n      return (\n        ___EmotionJSX(\"div\", { style: { zIndex: 10 } },\n        ___EmotionJSX(\"h5\", null, t('Load a template')),\n        ___EmotionJSX(Select, {\n          options: this.props.templates,\n          placeholder: t('Load a CSS template'),\n          onChange: this.changeCssTemplate })));\n\n\n\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(ModalTrigger, {\n        triggerNode: this.props.triggerNode,\n        modalTitle: t('CSS'),\n        modalBody:\n        ___EmotionJSX(\"div\", null,\n        this.renderTemplateSelector(),\n        ___EmotionJSX(\"div\", { style: { zIndex: 1 } },\n        ___EmotionJSX(\"h5\", null, t('Live CSS editor')),\n        ___EmotionJSX(\"div\", { style: { border: 'solid 1px grey' } },\n        ___EmotionJSX(AceCssEditor, {\n          minLines: 12,\n          maxLines: 30,\n          onChange: this.changeCss,\n          height: \"200px\",\n          width: \"100%\",\n          editorProps: { $blockScrolling: true },\n          enableLiveAutocompletion: true,\n          value: this.state.css || '' })))) }));\n\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nCssEditor.propTypes = propTypes;\nCssEditor.defaultProps = defaultProps;const _default =\n\nCssEditor;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/CssEditor/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/CssEditor/index.jsx\");reactHotLoader.register(CssEditor, \"CssEditor\", \"/app/superset-frontend/src/dashboard/components/CssEditor/index.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/CssEditor/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/CssEditor/index.jsx"],"names":["React","PropTypes","Select","t","ModalTrigger","CssEditor","AceCssEditor","propTypes","initialCss","string","triggerNode","node","isRequired","onChange","func","templates","array","defaultProps","PureComponent","constructor","props","state","css","changeCss","changeCssTemplate","componentDidMount","preload","setState","opt","renderTemplateSelector","zIndex","render","border","$blockScrolling"],"mappings":"gYAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,CAAT,QAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,SAAS,IAAIC,YAAtB,QAA0C,+BAA1C,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEP,SAAS,CAACQ,MADN;AAEhBC,EAAAA,WAAW,EAAET,SAAS,CAACU,IAAV,CAAeC,UAFZ;AAGhBC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,IAHJ;AAIhBC,EAAAA,SAAS,EAAEd,SAAS,CAACe,KAJL,EAAlB;;;AAOA,MAAMC,YAAY,GAAG;AACnBT,EAAAA,UAAU,EAAE,EADO;AAEnBK,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFC,EAArB;;;AAKA,MAAMR,SAAN,SAAwBL,KAAK,CAACkB,aAA9B,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEF,KAAK,CAACZ,UADA,EAAb;;AAGA,SAAKe,SAAL,GAAiB,sCAAKA,SAAL,iBAAoB,IAApB,CAAjB;AACA,SAAKC,iBAAL,GAAyB,uCAAKA,iBAAL,kBAA4B,IAA5B,CAAzB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBnB,IAAAA,YAAY,CAACoB,OAAb;AACD;;AAEDH,EAAAA,SAAS,CAACD,GAAD,EAAM;AACb,SAAKK,QAAL,CAAc,EAAEL,GAAF,EAAd,EAAuB,MAAM;AAC3B,WAAKF,KAAL,CAAWP,QAAX,CAAoBS,GAApB;AACD,KAFD;AAGD;;AAEDE,EAAAA,iBAAiB,CAACI,GAAD,EAAM;AACrB,SAAKL,SAAL,CAAeK,GAAG,CAACN,GAAnB;AACD;;AAEDO,EAAAA,sBAAsB,GAAG;AACvB,QAAI,KAAKT,KAAL,CAAWL,SAAf,EAA0B;AACxB;AACE,+BAAK,KAAK,EAAE,EAAEe,MAAM,EAAE,EAAV,EAAZ;AACE,kCAAK3B,CAAC,CAAC,iBAAD,CAAN,CADF;AAEE,sBAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWL,SADtB;AAEE,UAAA,WAAW,EAAEZ,CAAC,CAAC,qBAAD,CAFhB;AAGE,UAAA,QAAQ,EAAE,KAAKqB,iBAHjB,GAFF,CADF;;;;AAUD;AACD,WAAO,IAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP;AACE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWV,WAD1B;AAEE,QAAA,UAAU,EAAEP,CAAC,CAAC,KAAD,CAFf;AAGE,QAAA,SAAS;AACP;AACG,aAAK0B,sBAAL,EADH;AAEE,+BAAK,KAAK,EAAE,EAAEC,MAAM,EAAE,CAAV,EAAZ;AACE,kCAAK3B,CAAC,CAAC,iBAAD,CAAN,CADF;AAEE,+BAAK,KAAK,EAAE,EAAE6B,MAAM,EAAE,gBAAV,EAAZ;AACE,sBAAC,YAAD;AACE,UAAA,QAAQ,EAAE,EADZ;AAEE,UAAA,QAAQ,EAAE,EAFZ;AAGE,UAAA,QAAQ,EAAE,KAAKT,SAHjB;AAIE,UAAA,MAAM,EAAC,OAJT;AAKE,UAAA,KAAK,EAAC,MALR;AAME,UAAA,WAAW,EAAE,EAAEU,eAAe,EAAE,IAAnB,EANf;AAOE,UAAA,wBAAwB,MAP1B;AAQE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,GAAX,IAAkB,EAR3B,GADF,CAFF,CAFF,CAJJ,GADF;;;;;;;;AA0BD,GAnEyC;AAAA;AAAA;AAsE5CjB,SAAS,CAACE,SAAV,GAAsBA,SAAtB;AACAF,SAAS,CAACY,YAAV,GAAyBA,YAAzB,C;;AAEeZ,S,CAAf,wB,iLArFME,S,8GAOAU,Y,iHAKAZ,S","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'src/components/Select';\nimport { t } from '@superset-ui/core';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { CssEditor as AceCssEditor } from 'src/components/AsyncAceEditor';\n\nconst propTypes = {\n  initialCss: PropTypes.string,\n  triggerNode: PropTypes.node.isRequired,\n  onChange: PropTypes.func,\n  templates: PropTypes.array,\n};\n\nconst defaultProps = {\n  initialCss: '',\n  onChange: () => {},\n};\n\nclass CssEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      css: props.initialCss,\n    };\n    this.changeCss = this.changeCss.bind(this);\n    this.changeCssTemplate = this.changeCssTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    AceCssEditor.preload();\n  }\n\n  changeCss(css) {\n    this.setState({ css }, () => {\n      this.props.onChange(css);\n    });\n  }\n\n  changeCssTemplate(opt) {\n    this.changeCss(opt.css);\n  }\n\n  renderTemplateSelector() {\n    if (this.props.templates) {\n      return (\n        <div style={{ zIndex: 10 }}>\n          <h5>{t('Load a template')}</h5>\n          <Select\n            options={this.props.templates}\n            placeholder={t('Load a CSS template')}\n            onChange={this.changeCssTemplate}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <ModalTrigger\n        triggerNode={this.props.triggerNode}\n        modalTitle={t('CSS')}\n        modalBody={\n          <div>\n            {this.renderTemplateSelector()}\n            <div style={{ zIndex: 1 }}>\n              <h5>{t('Live CSS editor')}</h5>\n              <div style={{ border: 'solid 1px grey' }}>\n                <AceCssEditor\n                  minLines={12}\n                  maxLines={30}\n                  onChange={this.changeCss}\n                  height=\"200px\"\n                  width=\"100%\"\n                  editorProps={{ $blockScrolling: true }}\n                  enableLiveAutocompletion\n                  value={this.state.css || ''}\n                />\n              </div>\n            </div>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nCssEditor.propTypes = propTypes;\nCssEditor.defaultProps = defaultProps;\n\nexport default CssEditor;\n"]},"metadata":{},"sourceType":"module"}