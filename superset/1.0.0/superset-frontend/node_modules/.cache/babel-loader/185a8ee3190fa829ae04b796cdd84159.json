{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { components as defaultComponents } from 'react-select';\nimport WindowedMenuList from './WindowedMenuList';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { MenuList: DefaultMenuList } = defaultComponents;\nexport const DEFAULT_WINDOW_THRESHOLD = 100;\nexport function MenuList({ children, ...props }) {\n  const { windowThreshold = DEFAULT_WINDOW_THRESHOLD } = props.selectProps;\n  if (_Array$isArray(children) && children.length > windowThreshold) {\n    return ___EmotionJSX(WindowedMenuList, props,\n    children);\n\n  }\n  return ___EmotionJSX(DefaultMenuList, props, children);\n}\n/**\n * Add \"windowThreshold\" option to a react-select component, turn the options\n * list into a virtualized list when appropriate.\n *\n * @param SelectComponent the React component to render Select\n */\nexport default function windowed(SelectComponent) {\n  function WindowedSelect(props, ref) {\n    const { components: components_ = {}, ...restProps } = props;\n    const components = { ...components_, MenuList };\n    return ___EmotionJSX(SelectComponent, _extends({ components: components, ref: ref }, restProps));\n  }\n  return /*#__PURE__*/React.forwardRef(WindowedSelect);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultMenuList, \"DefaultMenuList\", \"/app/superset-frontend/src/components/Select/WindowedSelect/windowed.tsx\");reactHotLoader.register(DEFAULT_WINDOW_THRESHOLD, \"DEFAULT_WINDOW_THRESHOLD\", \"/app/superset-frontend/src/components/Select/WindowedSelect/windowed.tsx\");reactHotLoader.register(MenuList, \"MenuList\", \"/app/superset-frontend/src/components/Select/WindowedSelect/windowed.tsx\");reactHotLoader.register(windowed, \"windowed\", \"/app/superset-frontend/src/components/Select/WindowedSelect/windowed.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Select/WindowedSelect/windowed.tsx"],"names":[],"mappings":"wbAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAsE,OAAtE;AACA,SAIE,UAAU,IAAI,iBAJhB,QAKO,cALP;AAMA,OAAO,gBAAP,MAAwD,oBAAxD,C;AAEA,MAAM,EAAE,QAAQ,EAAE,eAAZ,KAAgC,iBAAtC;AAEA,OAAO,MAAM,wBAAwB,GAAG,GAAjC;AAYP,OAAM,SAAU,QAAV,CAAsD,EAC1D,QAD0D,EAE1D,GAAG,KAFuD,EAAtD,EAKL;AACC,QAAM,EAAE,eAAe,GAAG,wBAApB,KAAiD,KAAK,CAAC,WAA7D;AACA,MAAI,eAAc,QAAd,KAA2B,QAAQ,CAAC,MAAT,GAAkB,eAAjD,EAAkE;AAChE,WACE,cAAC,gBAAD,EAAsB,KAAtB;AACG,IAAA,QADH,CADF;;AAKD;AACD,SAAO,cAAC,eAAD,EAAqB,KAArB,EAA6B,QAA7B,CAAP;AACD;AAED;;;;;AAKG;AACH,eAAc,SAAU,QAAV,CACZ,eADY,EAC2C;AAEvD,WAAS,cAAT,CACE,KADF,EAEE,GAFF,EAE0C;AAExC,UAAM,EAAE,UAAU,EAAE,WAAW,GAAG,EAA5B,EAAgC,GAAG,SAAnC,KAAiD,KAAvD;AACA,UAAM,UAAU,GAAG,EAAE,GAAG,WAAL,EAAkB,QAAlB,EAAnB;AACA,WAAO,cAAC,eAAD,aAAiB,UAAU,EAAE,UAA7B,EAAyC,GAAG,EAAE,GAA9C,IAAuD,SAAvD,EAAP;AACD;AACD,sBAAO,KAAK,CAAC,UAAN,CAAiB,cAAjB,CAAP;AACD,C,iLAjDiB,e,yHAEL,wB,kIAYG,Q,kHAuBQ,Q","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ComponentType, FunctionComponent, ReactElement } from 'react';\nimport Select, {\n  Props as SelectProps,\n  OptionTypeBase,\n  MenuListComponentProps,\n  components as defaultComponents,\n} from 'react-select';\nimport WindowedMenuList, { WindowedMenuListProps } from './WindowedMenuList';\n\nconst { MenuList: DefaultMenuList } = defaultComponents;\n\nexport const DEFAULT_WINDOW_THRESHOLD = 100;\n\nexport type WindowedSelectProps<\n  OptionType extends OptionTypeBase\n> = SelectProps<OptionType> & {\n  windowThreshold?: number;\n} & WindowedMenuListProps['selectProps'];\n\nexport type WindowedSelectComponentType<\n  OptionType extends OptionTypeBase\n> = FunctionComponent<WindowedSelectProps<OptionType>>;\n\nexport function MenuList<OptionType extends OptionTypeBase>({\n  children,\n  ...props\n}: MenuListComponentProps<OptionType> & {\n  selectProps: WindowedSelectProps<OptionType>;\n}) {\n  const { windowThreshold = DEFAULT_WINDOW_THRESHOLD } = props.selectProps;\n  if (Array.isArray(children) && children.length > windowThreshold) {\n    return (\n      <WindowedMenuList {...props}>\n        {children as ReactElement[]}\n      </WindowedMenuList>\n    );\n  }\n  return <DefaultMenuList {...props}>{children}</DefaultMenuList>;\n}\n\n/**\n * Add \"windowThreshold\" option to a react-select component, turn the options\n * list into a virtualized list when appropriate.\n *\n * @param SelectComponent the React component to render Select\n */\nexport default function windowed<OptionType extends OptionTypeBase>(\n  SelectComponent: ComponentType<SelectProps<OptionType>>,\n): WindowedSelectComponentType<OptionType> {\n  function WindowedSelect(\n    props: WindowedSelectProps<OptionType>,\n    ref: React.RefObject<Select<OptionType>>,\n  ) {\n    const { components: components_ = {}, ...restProps } = props;\n    const components = { ...components_, MenuList };\n    return <SelectComponent components={components} ref={ref} {...restProps} />;\n  }\n  return React.forwardRef(WindowedSelect);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}