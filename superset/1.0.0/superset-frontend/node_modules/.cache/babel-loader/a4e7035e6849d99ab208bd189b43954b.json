{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { t } from '@superset-ui/core';\nimport ModalTrigger from '../../components/ModalTrigger';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst shrinkSql = (sql, maxLines, maxWidth) => {\n  const ssql = sql || '';\n  let lines = ssql.split('\\n');\n  if (lines.length >= maxLines) {\n    lines = _sliceInstanceProperty(lines).call(lines, 0, maxLines);\n    lines.push('{...}');\n  }\n  return _mapInstanceProperty(lines).call(lines,\n  line => {\n    if (line.length > maxWidth) {\n      return `${_sliceInstanceProperty(line).call(line, 0, maxWidth)}{...}`;\n    }\n    return line;\n  }).\n  join('\\n');\n};\nfunction TriggerNode({ shrink, sql, maxLines, maxWidth }) {\n  return ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n  shrink ? shrinkSql(sql, maxLines, maxWidth) : sql);\n\n}\nfunction HighlightSqlModal({ rawSql, sql }) {\n  return ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(\"h4\", null, t('Source SQL')),\n  ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n  sql),\n\n  rawSql && rawSql !== sql && ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(\"h4\", null, t('Raw SQL')),\n  ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n  rawSql)));\n\n\n\n}\nfunction HighlightedSql({ sql, rawSql, maxWidth = 50, maxLines = 5, shrink = false }) {\n  return ___EmotionJSX(ModalTrigger, { modalTitle: t('SQL'), modalBody: ___EmotionJSX(HighlightSqlModal, { rawSql: rawSql, sql: sql }), triggerNode: ___EmotionJSX(TriggerNode, { shrink: shrink, sql: sql, maxLines: maxLines, maxWidth: maxWidth }) });\n}const _default =\nHighlightedSql;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(shrinkSql, \"shrinkSql\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx\");reactHotLoader.register(TriggerNode, \"TriggerNode\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx\");reactHotLoader.register(HighlightSqlModal, \"HighlightSqlModal\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx\");reactHotLoader.register(HighlightedSql, \"HighlightedSql\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/HighlightedSql.tsx"],"names":[],"mappings":"wdAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP,MAA8B,yCAA9B;AACA,OAAO,GAAP,MAAgB,sDAAhB;AACA,OAAO,MAAP,MAAmB,sDAAnB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AAEA,OAAO,YAAP,MAAyB,+BAAzB,C;AAEA,iBAAiB,CAAC,gBAAlB,CAAmC,KAAnC,EAA0C,GAA1C;AAsBA,MAAM,SAAS,GAAG,CAAC,GAAD,EAAc,QAAd,EAAgC,QAAhC,KAAoD;AACpE,QAAM,IAAI,GAAG,GAAG,IAAI,EAApB;AACA,MAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAZ;AACA,MAAI,KAAK,CAAC,MAAN,IAAgB,QAApB,EAA8B;AAC5B,IAAA,KAAK,GAAG,uBAAA,KAAK,MAAL,CAAA,KAAK,EAAO,CAAP,EAAU,QAAV,CAAb;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,OAAX;AACD;AACD,SAAO,qBAAA,KAAK,MAAL,CAAA,KAAK;AACL,EAAA,IAAI,IAAG;AACV,QAAI,IAAI,CAAC,MAAL,GAAc,QAAlB,EAA4B;AAC1B,aAAO,GAAG,uBAAA,IAAI,MAAJ,CAAA,IAAI,EAAO,CAAP,EAAU,QAAV,CAAmB,OAAjC;AACD;AACD,WAAO,IAAP;AACD,GANS,CAAL;AAOJ,EAAA,IAPI,CAOC,IAPD,CAAP;AAQD,CAfD;AAiBA,SAAS,WAAT,CAAqB,EAAE,MAAF,EAAU,GAAV,EAAe,QAAf,EAAyB,QAAzB,EAArB,EAA0E;AACxE,SACE,cAAC,iBAAD,IAAmB,QAAQ,EAAC,KAA5B,EAAkC,KAAK,EAAE,MAAzC;AACG,EAAA,MAAM,GAAG,SAAS,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,CAAZ,GAAwC,GADjD,CADF;;AAKD;AAED,SAAS,iBAAT,CAA2B,EAAE,MAAF,EAAU,GAAV,EAA3B,EAAoE;AAClE,SACE;AACE,4BAAK,CAAC,CAAC,YAAD,CAAN,CADF;AAEE,gBAAC,iBAAD,IAAmB,QAAQ,EAAC,KAA5B,EAAkC,KAAK,EAAE,MAAzC;AACG,EAAA,GADH,CAFF;;AAKG,EAAA,MAAM,IAAI,MAAM,KAAK,GAArB,IACC;AACE,4BAAK,CAAC,CAAC,SAAD,CAAN,CADF;AAEE,gBAAC,iBAAD,IAAmB,QAAQ,EAAC,KAA5B,EAAkC,KAAK,EAAE,MAAzC;AACG,EAAA,MADH,CAFF,CANJ,CADF;;;;AAgBD;AAED,SAAS,cAAT,CAAwB,EACtB,GADsB,EAEtB,MAFsB,EAGtB,QAAQ,GAAG,EAHW,EAItB,QAAQ,GAAG,CAJW,EAKtB,MAAM,GAAG,KALa,EAAxB,EAMsB;AACpB,SACE,cAAC,YAAD,IACE,UAAU,EAAE,CAAC,CAAC,KAAD,CADf,EAEE,SAAS,EAAE,cAAC,iBAAD,IAAmB,MAAM,EAAE,MAA3B,EAAmC,GAAG,EAAE,GAAxC,GAFb,EAGE,WAAW,EACT,cAAC,WAAD,IACE,MAAM,EAAE,MADV,EAEE,GAAG,EAAE,GAFP,EAGE,QAAQ,EAAE,QAHZ,EAIE,QAAQ,EAAE,QAJZ,GAJJ,GADF;AAcD,C;AAEc,c,CAAf,wB,iLAnEM,S,0GAiBG,W,4GAQA,iB,kHAmBA,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { t } from '@superset-ui/core';\n\nimport ModalTrigger from '../../components/ModalTrigger';\n\nSyntaxHighlighter.registerLanguage('sql', sql);\n\ninterface HighlightedSqlProps {\n  sql: string;\n  rawSql?: string;\n  maxWidth?: number;\n  maxLines?: number;\n  shrink?: any;\n}\n\ninterface HighlightedSqlModalTypes {\n  rawSql?: string;\n  sql: string;\n}\n\ninterface TriggerNodeProps {\n  shrink: boolean;\n  sql: string;\n  maxLines: number;\n  maxWidth: number;\n}\n\nconst shrinkSql = (sql: string, maxLines: number, maxWidth: number) => {\n  const ssql = sql || '';\n  let lines = ssql.split('\\n');\n  if (lines.length >= maxLines) {\n    lines = lines.slice(0, maxLines);\n    lines.push('{...}');\n  }\n  return lines\n    .map(line => {\n      if (line.length > maxWidth) {\n        return `${line.slice(0, maxWidth)}{...}`;\n      }\n      return line;\n    })\n    .join('\\n');\n};\n\nfunction TriggerNode({ shrink, sql, maxLines, maxWidth }: TriggerNodeProps) {\n  return (\n    <SyntaxHighlighter language=\"sql\" style={github}>\n      {shrink ? shrinkSql(sql, maxLines, maxWidth) : sql}\n    </SyntaxHighlighter>\n  );\n}\n\nfunction HighlightSqlModal({ rawSql, sql }: HighlightedSqlModalTypes) {\n  return (\n    <div>\n      <h4>{t('Source SQL')}</h4>\n      <SyntaxHighlighter language=\"sql\" style={github}>\n        {sql}\n      </SyntaxHighlighter>\n      {rawSql && rawSql !== sql && (\n        <div>\n          <h4>{t('Raw SQL')}</h4>\n          <SyntaxHighlighter language=\"sql\" style={github}>\n            {rawSql}\n          </SyntaxHighlighter>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction HighlightedSql({\n  sql,\n  rawSql,\n  maxWidth = 50,\n  maxLines = 5,\n  shrink = false,\n}: HighlightedSqlProps) {\n  return (\n    <ModalTrigger\n      modalTitle={t('SQL')}\n      modalBody={<HighlightSqlModal rawSql={rawSql} sql={sql} />}\n      triggerNode={\n        <TriggerNode\n          shrink={shrink}\n          sql={sql}\n          maxLines={maxLines}\n          maxWidth={maxWidth}\n        />\n      }\n    />\n  );\n}\n\nexport default HighlightedSql;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}