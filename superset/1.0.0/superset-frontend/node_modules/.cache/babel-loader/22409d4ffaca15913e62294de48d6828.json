{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport Select from 'src/components/Select';\nimport { styled, t } from '@superset-ui/core';\nimport VizTypeControl from '../explore/components/controls/VizTypeControl';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst styleSelectContainer = { width: 600, marginBottom: '10px' };\nconst StyledContainer = styled.div`\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  padding: ${({ theme }) => theme.gridUnit * 6}px;\n  h3 {\n    padding-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\nexport default class AddSliceContainer extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.state = {\n      visType: 'table' };\n\n    this.changeDatasource = _bindInstanceProperty(_context = this.changeDatasource).call(_context, this);\n    this.changeVisType = _bindInstanceProperty(_context2 = this.changeVisType).call(_context2, this);\n    this.gotoSlice = _bindInstanceProperty(_context3 = this.gotoSlice).call(_context3, this);\n  }\n  exploreUrl() {\n    const formData = encodeURIComponent(_JSON$stringify({\n      viz_type: this.state.visType,\n      datasource: this.state.datasourceValue }));\n\n    return `/superset/explore/?form_data=${formData}`;\n  }\n  gotoSlice() {\n    window.location.href = this.exploreUrl();\n  }\n  changeDatasource(option) {\n    this.setState({\n      datasourceValue: option.value,\n      datasourceId: option.value.split('__')[0] });\n\n  }\n  changeVisType(visType) {\n    this.setState({ visType });\n  }\n  isBtnDisabled() {\n    return !(this.state.datasourceId && this.state.visType);\n  }\n  render() {\n    return ___EmotionJSX(StyledContainer, { className: \"container\" },\n    ___EmotionJSX(\"h3\", null, t('Create a new chart')),\n    ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"p\", null, t('Choose a dataset')),\n    ___EmotionJSX(\"div\", { style: styleSelectContainer },\n    ___EmotionJSX(Select, { clearable: false, ignoreAccents: false, name: \"select-datasource\", onChange: this.changeDatasource, options: this.props.datasources, placeholder: t('Choose a dataset'), value: this.state.datasourceValue ?\n      {\n        value: this.state.datasourceValue } :\n\n      undefined, width: 600 })),\n\n    ___EmotionJSX(\"span\", { className: \"text-muted\" },\n    t('If the dataset you are looking for is not available in the list, follow the instructions on how to add it in the Superset tutorial.'), ' ',\n    ___EmotionJSX(\"a\", { href: \"https://superset.apache.org/docs/creating-charts-dashboards/first-dashboard#adding-a-new-table\", rel: \"noopener noreferrer\", target: \"_blank\" },\n    ___EmotionJSX(\"i\", { className: \"fa fa-external-link\" })))),\n\n\n\n    ___EmotionJSX(\"br\", null),\n    ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"p\", null, t('Choose a visualization type')),\n    ___EmotionJSX(VizTypeControl, { name: \"select-vis-type\", onChange: this.changeVisType, value: this.state.visType, labelType: \"primary\" })),\n\n    ___EmotionJSX(\"br\", null),\n    ___EmotionJSX(\"hr\", null),\n    ___EmotionJSX(Button, { buttonStyle: \"primary\", disabled: this.isBtnDisabled(), onClick: this.gotoSlice },\n    t('Create new chart')),\n\n    ___EmotionJSX(\"br\", null),\n    ___EmotionJSX(\"br\", null));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(styleSelectContainer, \"styleSelectContainer\", \"/app/superset-frontend/src/addSlice/AddSliceContainer.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/app/superset-frontend/src/addSlice/AddSliceContainer.tsx\");reactHotLoader.register(AddSliceContainer, \"AddSliceContainer\", \"/app/superset-frontend/src/addSlice/AddSliceContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/addSlice/AddSliceContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport Select from 'src/components/Select';\nimport { styled, t } from '@superset-ui/core';\n\nimport VizTypeControl from '../explore/components/controls/VizTypeControl';\n\ninterface Datasource {\n  label: string;\n  value: string;\n}\n\nexport type AddSliceContainerProps = {\n  datasources: Datasource[];\n};\n\nexport type AddSliceContainerState = {\n  datasourceId?: string;\n  datasourceType?: string;\n  datasourceValue?: string;\n  visType: string;\n};\n\nconst styleSelectContainer = { width: 600, marginBottom: '10px' };\nconst StyledContainer = styled.div`\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  padding: ${({ theme }) => theme.gridUnit * 6}px;\n  h3 {\n    padding-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport default class AddSliceContainer extends React.PureComponent<\n  AddSliceContainerProps,\n  AddSliceContainerState\n> {\n  constructor(props: AddSliceContainerProps) {\n    super(props);\n    this.state = {\n      visType: 'table',\n    };\n\n    this.changeDatasource = this.changeDatasource.bind(this);\n    this.changeVisType = this.changeVisType.bind(this);\n    this.gotoSlice = this.gotoSlice.bind(this);\n  }\n\n  exploreUrl() {\n    const formData = encodeURIComponent(\n      JSON.stringify({\n        viz_type: this.state.visType,\n        datasource: this.state.datasourceValue,\n      }),\n    );\n    return `/superset/explore/?form_data=${formData}`;\n  }\n\n  gotoSlice() {\n    window.location.href = this.exploreUrl();\n  }\n\n  changeDatasource(option: { value: string }) {\n    this.setState({\n      datasourceValue: option.value,\n      datasourceId: option.value.split('__')[0],\n    });\n  }\n\n  changeVisType(visType: string) {\n    this.setState({ visType });\n  }\n\n  isBtnDisabled() {\n    return !(this.state.datasourceId && this.state.visType);\n  }\n\n  render() {\n    return (\n      <StyledContainer className=\"container\">\n        <h3>{t('Create a new chart')}</h3>\n        <div>\n          <p>{t('Choose a dataset')}</p>\n          <div style={styleSelectContainer}>\n            <Select\n              clearable={false}\n              ignoreAccents={false}\n              name=\"select-datasource\"\n              onChange={this.changeDatasource}\n              options={this.props.datasources}\n              placeholder={t('Choose a dataset')}\n              value={\n                this.state.datasourceValue\n                  ? {\n                      value: this.state.datasourceValue,\n                    }\n                  : undefined\n              }\n              width={600}\n            />\n          </div>\n          <span className=\"text-muted\">\n            {t(\n              'If the dataset you are looking for is not available in the list, follow the instructions on how to add it in the Superset tutorial.',\n            )}{' '}\n            <a\n              href=\"https://superset.apache.org/docs/creating-charts-dashboards/first-dashboard#adding-a-new-table\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fa fa-external-link\" />\n            </a>\n          </span>\n        </div>\n        <br />\n        <div>\n          <p>{t('Choose a visualization type')}</p>\n          <VizTypeControl\n            name=\"select-vis-type\"\n            onChange={this.changeVisType}\n            value={this.state.visType}\n            labelType=\"primary\"\n          />\n        </div>\n        <br />\n        <hr />\n        <Button\n          buttonStyle=\"primary\"\n          disabled={this.isBtnDisabled()}\n          onClick={this.gotoSlice}\n        >\n          {t('Create new chart')}\n        </Button>\n        <br />\n        <br />\n      </StyledContainer>\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}