{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Global, css } from '@emotion/react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { MinusCircleFilled, CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport Popover from 'src/components/Popover';\nimport Collapse from 'src/components/Collapse';\nimport Icon from 'src/components/Icon';\nimport { Indent, Panel, Reset, Title } from 'src/dashboard/components/FiltersBadge/Styles';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DetailsPanelPopover = ({ appliedCrossFilterIndicators = [], appliedIndicators = [], incompatibleIndicators = [], unsetIndicators = [], onHighlightFilterSource, children }) => {\n  const theme = useTheme();\n  const getDefaultActivePanel = () => {\n    const result = [];\n    if (appliedCrossFilterIndicators.length) {\n      result.push('appliedCrossFilters');\n    }\n    if (appliedIndicators.length) {\n      result.push('applied');\n    }\n    if (incompatibleIndicators.length) {\n      result.push('incompatible');\n    }\n    if (result.length) {\n      return result;\n    }\n    return ['unset'];\n  };\n  const [activePanels, setActivePanels] = useState(() => [\n  ...getDefaultActivePanel()]);\n\n  function handlePopoverStatus(isOpen) {\n    // every time the popover opens, make sure the most relevant panel is active\n    if (isOpen) {\n      setActivePanels(getDefaultActivePanel());\n    }\n  }\n  function handleActivePanelChange(panels) {\n    // need to convert to an array so that handlePopoverStatus will work\n    if (typeof panels === 'string') {\n      setActivePanels([panels]);\n    } else\n    {\n      setActivePanels(panels);\n    }\n  }\n  const indicatorKey = indicator => `${indicator.column} - ${indicator.name}`;\n  const content = ___EmotionJSX(Panel, null,\n  ___EmotionJSX(Global, { styles: /*#__PURE__*/css(\".filterStatusPopover{.ant-popover-inner{background-color:\",\n\n\n    theme.colors.grayscale.dark2, \"cc;.ant-popover-inner-content{padding-top:0;padding-bottom:0;}}&.ant-popover-placement-bottom,&.ant-popover-placement-bottomLeft,&.ant-popover-placement-bottomRight{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-top,&.ant-popover-placement-topLeft,&.ant-popover-placement-topRight{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-left,&.ant-popover-placement-leftTop,&.ant-popover-placement-leftBottom{&>.ant-popover-content>.ant-popover-arrow{border-top-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-right-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover-placement-right,&.ant-popover-placement-rightTop,&.ant-popover-placement-rightBottom{&>.ant-popover-content>.ant-popover-arrow{border-bottom-color:\",\n\n\n\n\n\n\n    theme.colors.grayscale.dark2, \"cc;border-left-color:\",\n    theme.colors.grayscale.dark2, \"cc;}}&.ant-popover{color:\",\n\n\n\n    theme.colors.grayscale.light4, \";z-index:99;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }),\n\n\n\n\n  ___EmotionJSX(Reset, null,\n  ___EmotionJSX(Collapse, { ghost: true, light: true, activeKey: activePanels, onChange: handleActivePanelChange },\n  appliedCrossFilterIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"appliedCrossFilters\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.primary.light1 },\n    ___EmotionJSX(Icon, { name: \"cross-filter-badge\", css: /*#__PURE__*/_css({ fill: theme.colors.primary.light1 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }),\n    t('Applied Cross Filters (%d)', appliedCrossFilterIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  _mapInstanceProperty(appliedCrossFilterIndicators).call(appliedCrossFilterIndicators, indicator => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  appliedIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"applied\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.success.base },\n    ___EmotionJSX(CheckCircleFilled, null), ' ',\n    t('Applied Filters (%d)', appliedIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  _mapInstanceProperty(appliedIndicators).call(appliedIndicators, indicator => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  incompatibleIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"incompatible\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.alert.base },\n    ___EmotionJSX(ExclamationCircleFilled, null), ' ',\n    t('Incompatible Filters (%d)', incompatibleIndicators.length)) },\n\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  _mapInstanceProperty(incompatibleIndicators).call(incompatibleIndicators, indicator => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null,\n  unsetIndicators.length ? ___EmotionJSX(Collapse.Panel, { key: \"unset\", header: ___EmotionJSX(Title, { bold: true, color: theme.colors.grayscale.light1 },\n    ___EmotionJSX(MinusCircleFilled, null), ' ',\n    t('Unset Filters (%d)', unsetIndicators.length)),\n    disabled: !unsetIndicators.length },\n  ___EmotionJSX(Indent, { css: /*#__PURE__*/_css({ paddingBottom: theme.gridUnit * 3 }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:content;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  _mapInstanceProperty(unsetIndicators).call(unsetIndicators, indicator => ___EmotionJSX(FilterIndicator, { key: indicatorKey(indicator), indicator: indicator, onClick: onHighlightFilterSource })))) :\n\n  null)));\n\n\n\n  return ___EmotionJSX(Popover, { overlayClassName: \"filterStatusPopover\", content: content, onVisibleChange: handlePopoverStatus, placement: \"bottom\", trigger: \"click\" },\n  children);\n\n};__signature__(DetailsPanelPopover, \"useTheme{theme}\\nuseState{[activePanels, setActivePanels](() => [\\n        ...getDefaultActivePanel(),\\n    ])}\", () => [useTheme]);const _default =\nDetailsPanelPopover;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DetailsPanelPopover, \"DetailsPanelPopover\", \"/app/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Global, css } from '@emotion/react';\nimport { t, useTheme } from '@superset-ui/core';\nimport {\n  MinusCircleFilled,\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n} from '@ant-design/icons';\nimport Popover from 'src/components/Popover';\nimport Collapse from 'src/components/Collapse';\nimport Icon from 'src/components/Icon';\nimport {\n  Indent,\n  Panel,\n  Reset,\n  Title,\n} from 'src/dashboard/components/FiltersBadge/Styles';\nimport { Indicator } from 'src/dashboard/components/FiltersBadge/selectors';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';\n\nexport interface DetailsPanelProps {\n  appliedCrossFilterIndicators: Indicator[];\n  appliedIndicators: Indicator[];\n  incompatibleIndicators: Indicator[];\n  unsetIndicators: Indicator[];\n  onHighlightFilterSource: (path: string[]) => void;\n  children: JSX.Element;\n}\n\nconst DetailsPanelPopover = ({\n  appliedCrossFilterIndicators = [],\n  appliedIndicators = [],\n  incompatibleIndicators = [],\n  unsetIndicators = [],\n  onHighlightFilterSource,\n  children,\n}: DetailsPanelProps) => {\n  const theme = useTheme();\n\n  const getDefaultActivePanel = () => {\n    const result = [];\n    if (appliedCrossFilterIndicators.length) {\n      result.push('appliedCrossFilters');\n    }\n    if (appliedIndicators.length) {\n      result.push('applied');\n    }\n    if (incompatibleIndicators.length) {\n      result.push('incompatible');\n    }\n    if (result.length) {\n      return result;\n    }\n    return ['unset'];\n  };\n\n  const [activePanels, setActivePanels] = useState<string[]>(() => [\n    ...getDefaultActivePanel(),\n  ]);\n\n  function handlePopoverStatus(isOpen: boolean) {\n    // every time the popover opens, make sure the most relevant panel is active\n    if (isOpen) {\n      setActivePanels(getDefaultActivePanel());\n    }\n  }\n\n  function handleActivePanelChange(panels: string | string[]) {\n    // need to convert to an array so that handlePopoverStatus will work\n    if (typeof panels === 'string') {\n      setActivePanels([panels]);\n    } else {\n      setActivePanels(panels);\n    }\n  }\n\n  const indicatorKey = (indicator: Indicator): string =>\n    `${indicator.column} - ${indicator.name}`;\n\n  const content = (\n    <Panel>\n      <Global\n        styles={css`\n          .filterStatusPopover {\n            .ant-popover-inner {\n              background-color: ${theme.colors.grayscale.dark2}cc;\n              .ant-popover-inner-content {\n                padding-top: 0;\n                padding-bottom: 0;\n              }\n            }\n            &.ant-popover-placement-bottom,\n            &.ant-popover-placement-bottomLeft,\n            &.ant-popover-placement-bottomRight {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-top-color: ${theme.colors.grayscale.dark2}cc;\n                border-left-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-top,\n            &.ant-popover-placement-topLeft,\n            &.ant-popover-placement-topRight {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-bottom-color: ${theme.colors.grayscale.dark2}cc;\n                border-right-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-left,\n            &.ant-popover-placement-leftTop,\n            &.ant-popover-placement-leftBottom {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-top-color: ${theme.colors.grayscale.dark2}cc;\n                border-right-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover-placement-right,\n            &.ant-popover-placement-rightTop,\n            &.ant-popover-placement-rightBottom {\n              & > .ant-popover-content > .ant-popover-arrow {\n                border-bottom-color: ${theme.colors.grayscale.dark2}cc;\n                border-left-color: ${theme.colors.grayscale.dark2}cc;\n              }\n            }\n            &.ant-popover {\n              color: ${theme.colors.grayscale.light4};\n              z-index: 99;\n            }\n          }\n        `}\n      />\n      <Reset>\n        <Collapse\n          ghost\n          light\n          activeKey={activePanels}\n          onChange={handleActivePanelChange}\n        >\n          {appliedCrossFilterIndicators.length ? (\n            <Collapse.Panel\n              key=\"appliedCrossFilters\"\n              header={\n                <Title bold color={theme.colors.primary.light1}>\n                  <Icon\n                    name=\"cross-filter-badge\"\n                    css={{ fill: theme.colors.primary.light1 }}\n                  />\n                  {t(\n                    'Applied Cross Filters (%d)',\n                    appliedCrossFilterIndicators.length,\n                  )}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {appliedCrossFilterIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {appliedIndicators.length ? (\n            <Collapse.Panel\n              key=\"applied\"\n              header={\n                <Title bold color={theme.colors.success.base}>\n                  <CheckCircleFilled />{' '}\n                  {t('Applied Filters (%d)', appliedIndicators.length)}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {appliedIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {incompatibleIndicators.length ? (\n            <Collapse.Panel\n              key=\"incompatible\"\n              header={\n                <Title bold color={theme.colors.alert.base}>\n                  <ExclamationCircleFilled />{' '}\n                  {t(\n                    'Incompatible Filters (%d)',\n                    incompatibleIndicators.length,\n                  )}\n                </Title>\n              }\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {incompatibleIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n          {unsetIndicators.length ? (\n            <Collapse.Panel\n              key=\"unset\"\n              header={\n                <Title bold color={theme.colors.grayscale.light1}>\n                  <MinusCircleFilled />{' '}\n                  {t('Unset Filters (%d)', unsetIndicators.length)}\n                </Title>\n              }\n              disabled={!unsetIndicators.length}\n            >\n              <Indent css={{ paddingBottom: theme.gridUnit * 3 }}>\n                {unsetIndicators.map(indicator => (\n                  <FilterIndicator\n                    key={indicatorKey(indicator)}\n                    indicator={indicator}\n                    onClick={onHighlightFilterSource}\n                  />\n                ))}\n              </Indent>\n            </Collapse.Panel>\n          ) : null}\n        </Collapse>\n      </Reset>\n    </Panel>\n  );\n\n  return (\n    <Popover\n      overlayClassName=\"filterStatusPopover\"\n      content={content}\n      onVisibleChange={handlePopoverStatus}\n      placement=\"bottom\"\n      trigger=\"click\"\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default DetailsPanelPopover;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}