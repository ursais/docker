{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Typography, Tooltip } from 'src/common/components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'src/components/Button';\nimport { setFilterSetsConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { WarningOutlined } from '@ant-design/icons';\nimport { ActionButtons } from './Footer';\nimport { useNativeFiltersDataMask, useFilters, useFilterSets } from '../state';\nimport { APPLY_FILTERS_HINT, findExistingFilterSet } from './utils';\nimport { useFilterSetNameDuplicated } from './state';\nimport { getFilterBarTestId } from '../index';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  justify-content: flex-start;\n  grid-gap: ${({ theme }) => theme.gridUnit}px;\n  background: ${({ theme }) => theme.colors.primary.light4};\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst Title = styled(Typography.Text)`\n  color: ${({ theme }) => theme.colors.primary.dark2};\n`;\nconst Warning = styled(Typography.Text)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  & .anticon {\n    padding: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst ActionButton = styled.div`\n  display: flex;\n  & button {\n    ${({ disabled }) => `pointer-events: ${disabled ? 'none' : 'all'}`};\n    flex: 1;\n  }\n`;\nconst EditSection = ({ filterSetId, onCancel, dataMaskSelected, disabled }) => {\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const dispatch = useDispatch();\n  const filterSets = useFilterSets();\n  const filters = useFilters();\n  const filterSetFilterValues = _Object$values(filterSets);\n  const [filterSetName, setFilterSetName] = useState(filterSets[filterSetId].name);\n  const isFilterSetNameDuplicated = useFilterSetNameDuplicated(filterSetName, filterSets[filterSetId].name);\n  const handleSave = () => {\n    dispatch(setFilterSetsConfiguration(_mapInstanceProperty(filterSetFilterValues).call(filterSetFilterValues, filterSet => {\n      const newFilterSet = {\n        ...filterSet,\n        name: filterSetName,\n        nativeFilters: filters,\n        dataMask: { ...dataMaskApplied } };\n\n      return filterSetId === filterSet.id ? newFilterSet : filterSet;\n    })));\n    onCancel();\n  };\n  const foundFilterSet = useMemo(() => findExistingFilterSet({\n    dataMaskSelected,\n    filterSetFilterValues }),\n  [dataMaskSelected, filterSetFilterValues]);\n  const isDuplicateFilterSet = foundFilterSet && foundFilterSet.id !== filterSetId;\n  const resultDisabled = disabled || isDuplicateFilterSet || isFilterSetNameDuplicated;\n  return ___EmotionJSX(Wrapper, null,\n  ___EmotionJSX(Title, { strong: true }, t('Editing filter set:')),\n  ___EmotionJSX(Title, { editable: {\n      editing: true,\n      icon: ___EmotionJSX(\"span\", null),\n      onChange: setFilterSetName } },\n\n  filterSetName),\n\n  ___EmotionJSX(ActionButtons, null,\n  ___EmotionJSX(Button, { ghost: true, buttonStyle: \"tertiary\", buttonSize: \"small\", onClick: onCancel, \"data-test\": \"filter-set-edit-cancel\" },\n  t('Cancel')),\n\n  ___EmotionJSX(Tooltip, { placement: \"right\", title: isFilterSetNameDuplicated &&\n    t('Filter set with this name already exists') ||\n    isDuplicateFilterSet && t('Filter set already exists') ||\n    disabled && APPLY_FILTERS_HINT },\n  ___EmotionJSX(ActionButton, { disabled: resultDisabled },\n  ___EmotionJSX(Button, _extends({ disabled: resultDisabled, buttonStyle: \"primary\", htmlType: \"submit\", buttonSize: \"small\", onClick: handleSave }, getFilterBarTestId('filter-set-edit-save')),\n  t('Save'))))),\n\n\n\n\n  isDuplicateFilterSet && ___EmotionJSX(Warning, { mark: true },\n  ___EmotionJSX(WarningOutlined, null),\n  t('This filter set is identical to: \"%s\"', foundFilterSet == null ? void 0 : foundFilterSet.name)));\n\n\n};__signature__(EditSection, \"useNativeFiltersDataMask{dataMaskApplied}\\nuseDispatch{dispatch}\\nuseFilterSets{filterSets}\\nuseFilters{filters}\\nuseState{[filterSetName, setFilterSetName](filterSets[filterSetId].name)}\\nuseFilterSetNameDuplicated{isFilterSetNameDuplicated}\\nuseMemo{foundFilterSet}\", () => [useNativeFiltersDataMask, useDispatch, useFilterSets, useFilters, useFilterSetNameDuplicated]);const _default =\nEditSection;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");reactHotLoader.register(Title, \"Title\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");reactHotLoader.register(Warning, \"Warning\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");reactHotLoader.register(ActionButton, \"ActionButton\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");reactHotLoader.register(EditSection, \"EditSection\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/EditSection.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useMemo, useState } from 'react';\nimport { HandlerFunction, styled, t } from '@superset-ui/core';\nimport { Typography, Tooltip } from 'src/common/components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'src/components/Button';\nimport { setFilterSetsConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { DataMaskState } from 'src/dataMask/types';\nimport { WarningOutlined } from '@ant-design/icons';\nimport { ActionButtons } from './Footer';\nimport { useNativeFiltersDataMask, useFilters, useFilterSets } from '../state';\nimport { APPLY_FILTERS_HINT, findExistingFilterSet } from './utils';\nimport { useFilterSetNameDuplicated } from './state';\nimport { getFilterBarTestId } from '../index';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  justify-content: flex-start;\n  grid-gap: ${({ theme }) => theme.gridUnit}px;\n  background: ${({ theme }) => theme.colors.primary.light4};\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst Title = styled(Typography.Text)`\n  color: ${({ theme }) => theme.colors.primary.dark2};\n`;\n\nconst Warning = styled(Typography.Text)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  & .anticon {\n    padding: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst ActionButton = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  & button {\n    ${({ disabled }) => `pointer-events: ${disabled ? 'none' : 'all'}`};\n    flex: 1;\n  }\n`;\n\nexport type EditSectionProps = {\n  filterSetId: string;\n  dataMaskSelected: DataMaskState;\n  onCancel: HandlerFunction;\n  disabled: boolean;\n};\n\nconst EditSection: FC<EditSectionProps> = ({\n  filterSetId,\n  onCancel,\n  dataMaskSelected,\n  disabled,\n}) => {\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const dispatch = useDispatch();\n  const filterSets = useFilterSets();\n  const filters = useFilters();\n  const filterSetFilterValues = Object.values(filterSets);\n\n  const [filterSetName, setFilterSetName] = useState(\n    filterSets[filterSetId].name,\n  );\n\n  const isFilterSetNameDuplicated = useFilterSetNameDuplicated(\n    filterSetName,\n    filterSets[filterSetId].name,\n  );\n\n  const handleSave = () => {\n    dispatch(\n      setFilterSetsConfiguration(\n        filterSetFilterValues.map(filterSet => {\n          const newFilterSet = {\n            ...filterSet,\n            name: filterSetName,\n            nativeFilters: filters,\n            dataMask: { ...dataMaskApplied },\n          };\n          return filterSetId === filterSet.id ? newFilterSet : filterSet;\n        }),\n      ),\n    );\n    onCancel();\n  };\n\n  const foundFilterSet = useMemo(\n    () =>\n      findExistingFilterSet({\n        dataMaskSelected,\n        filterSetFilterValues,\n      }),\n    [dataMaskSelected, filterSetFilterValues],\n  );\n\n  const isDuplicateFilterSet =\n    foundFilterSet && foundFilterSet.id !== filterSetId;\n\n  const resultDisabled =\n    disabled || isDuplicateFilterSet || isFilterSetNameDuplicated;\n\n  return (\n    <Wrapper>\n      <Title strong>{t('Editing filter set:')}</Title>\n      <Title\n        editable={{\n          editing: true,\n          icon: <span />,\n          onChange: setFilterSetName,\n        }}\n      >\n        {filterSetName}\n      </Title>\n      <ActionButtons>\n        <Button\n          ghost\n          buttonStyle=\"tertiary\"\n          buttonSize=\"small\"\n          onClick={onCancel}\n          data-test=\"filter-set-edit-cancel\"\n        >\n          {t('Cancel')}\n        </Button>\n        <Tooltip\n          placement=\"right\"\n          title={\n            (isFilterSetNameDuplicated &&\n              t('Filter set with this name already exists')) ||\n            (isDuplicateFilterSet && t('Filter set already exists')) ||\n            (disabled && APPLY_FILTERS_HINT)\n          }\n        >\n          <ActionButton disabled={resultDisabled}>\n            <Button\n              disabled={resultDisabled}\n              buttonStyle=\"primary\"\n              htmlType=\"submit\"\n              buttonSize=\"small\"\n              onClick={handleSave}\n              {...getFilterBarTestId('filter-set-edit-save')}\n            >\n              {t('Save')}\n            </Button>\n          </ActionButton>\n        </Tooltip>\n      </ActionButtons>\n      {isDuplicateFilterSet && (\n        <Warning mark>\n          <WarningOutlined />\n          {t('This filter set is identical to: \"%s\"', foundFilterSet?.name)}\n        </Warning>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default EditSection;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}