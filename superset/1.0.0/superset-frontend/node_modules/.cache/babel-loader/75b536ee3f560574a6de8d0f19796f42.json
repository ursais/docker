{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst copyTextToClipboard = async text => new _Promise((resolve, reject) => {\n  const selection = document.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n    const range = document.createRange();\n    const span = document.createElement('span');\n    span.textContent = text;\n    span.style.position = 'fixed';\n    span.style.top = '0';\n    span.style.clip = 'rect(0, 0, 0, 0)';\n    span.style.whiteSpace = 'pre';\n    document.body.appendChild(span);\n    range.selectNode(span);\n    selection.addRange(range);\n    try {\n      if (!document.execCommand('copy')) {\n        reject();\n      }\n    }\n    catch (err) {\n      reject();\n    }\n    document.body.removeChild(span);\n    if (selection.removeRange) {\n      selection.removeRange(range);\n    } else\n    {\n      selection.removeAllRanges();\n    }\n  }\n  resolve();\n});const _default =\ncopyTextToClipboard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(copyTextToClipboard, \"copyTextToClipboard\", \"/app/superset-frontend/src/utils/copy.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/utils/copy.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/copy.ts"],"names":[],"mappings":"6WAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,MAAM,mBAAmB,GAAG,MAAO,IAAP,IAC1B,aAAkB,CAAC,OAAD,EAAU,MAAV,KAAoB;AACpC,QAAM,SAAS,GAAqB,QAAQ,CAAC,YAAT,EAApC;AACA,MAAI,SAAJ,EAAe;AACb,IAAA,SAAS,CAAC,eAAV;AACA,UAAM,KAAK,GAAG,QAAQ,CAAC,WAAT,EAAd;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAA,IAAI,CAAC,WAAL,GAAmB,IAAnB;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,OAAtB;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,GAAX,GAAiB,GAAjB;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,kBAAlB;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,UAAX,GAAwB,KAAxB;AAEA,IAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,IAA1B;AACA,IAAA,KAAK,CAAC,UAAN,CAAiB,IAAjB;AACA,IAAA,SAAS,CAAC,QAAV,CAAmB,KAAnB;AAEA,QAAI;AACF,UAAI,CAAC,QAAQ,CAAC,WAAT,CAAqB,MAArB,CAAL,EAAmC;AACjC,QAAA,MAAM;AACP;AACF;AAAC,WAAO,GAAP,EAAY;AACZ,MAAA,MAAM;AACP;AAED,IAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,IAA1B;AACA,QAAI,SAAS,CAAC,WAAd,EAA2B;AACzB,MAAA,SAAS,CAAC,WAAV,CAAsB,KAAtB;AACD,KAFD;AAEO;AACL,MAAA,SAAS,CAAC,eAAV;AACD;AACF;AAED,EAAA,OAAO;AACR,CAjCD,CADF,C;AAoCe,mB,CAAf,wB,iLApCM,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst copyTextToClipboard = async (text: string) =>\n  new Promise<void>((resolve, reject) => {\n    const selection: Selection | null = document.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      const range = document.createRange();\n      const span = document.createElement('span');\n      span.textContent = text;\n      span.style.position = 'fixed';\n      span.style.top = '0';\n      span.style.clip = 'rect(0, 0, 0, 0)';\n      span.style.whiteSpace = 'pre';\n\n      document.body.appendChild(span);\n      range.selectNode(span);\n      selection.addRange(range);\n\n      try {\n        if (!document.execCommand('copy')) {\n          reject();\n        }\n      } catch (err) {\n        reject();\n      }\n\n      document.body.removeChild(span);\n      if (selection.removeRange) {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    resolve();\n  });\n\nexport default copyTextToClipboard;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}