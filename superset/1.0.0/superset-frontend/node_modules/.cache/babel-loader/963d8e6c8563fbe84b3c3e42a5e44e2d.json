{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; // Using bem standard\nexport const testWithId = (prefix, idOnly = false) => id => {\n  if (!id && prefix) {\n    return idOnly ? prefix : { 'data-test': prefix };\n  }\n  if (id && !prefix) {\n    return idOnly ? id : { 'data-test': id };\n  }\n  if (!id && !prefix) {\n    console.warn('testWithId function has missed \"prefix\" and \"id\" params');\n    return idOnly ? '' : { 'data-test': '' };\n  }\n  const newId = `${prefix}__${id}`;\n  return idOnly ? newId : { 'data-test': newId };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(testWithId, \"testWithId\", \"/app/superset-frontend/src/utils/testUtils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/testUtils.ts"],"names":[],"mappings":"wSAsBA;AACA,OAAO,MAAM,UAAU,GAAG,CACxB,MADwB,EAExB,MAAM,GAAG,KAFe,KAGpB,EAAD,IAAmC;AACtC,MAAI,CAAC,EAAD,IAAO,MAAX,EAAmB;AACjB,WAAQ,MAAM,GAAG,MAAH,GAAY,EAAE,aAAa,MAAf,EAA1B;AACD;AACD,MAAI,EAAE,IAAI,CAAC,MAAX,EAAmB;AACjB,WAAQ,MAAM,GAAG,EAAH,GAAQ,EAAE,aAAa,EAAf,EAAtB;AACD;AACD,MAAI,CAAC,EAAD,IAAO,CAAC,MAAZ,EAAoB;AAClB,IAAA,OAAO,CAAC,IAAR,CAAa,yDAAb;AACA,WAAQ,MAAM,GAAG,EAAH,GAAQ,EAAE,aAAa,EAAf,EAAtB;AACD;AACD,QAAM,KAAK,GAAG,GAAG,MAAM,KAAK,EAAE,EAA9B;AACA,SAAQ,MAAM,GAAG,KAAH,GAAW,EAAE,aAAa,KAAf,EAAzB;AACD,CAhBM,C,iLAAM,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\n\ntype TestWithIdType<T> = T extends string ? string : { 'data-test': string };\n\n// Using bem standard\nexport const testWithId = <T extends string | JsonObject = JsonObject>(\n  prefix?: string,\n  idOnly = false,\n) => (id?: string): TestWithIdType<T> => {\n  if (!id && prefix) {\n    return (idOnly ? prefix : { 'data-test': prefix }) as TestWithIdType<T>;\n  }\n  if (id && !prefix) {\n    return (idOnly ? id : { 'data-test': id }) as TestWithIdType<T>;\n  }\n  if (!id && !prefix) {\n    console.warn('testWithId function has missed \"prefix\" and \"id\" params');\n    return (idOnly ? '' : { 'data-test': '' }) as TestWithIdType<T>;\n  }\n  const newId = `${prefix}__${id}`;\n  return (idOnly ? newId : { 'data-test': newId }) as TestWithIdType<T>;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}