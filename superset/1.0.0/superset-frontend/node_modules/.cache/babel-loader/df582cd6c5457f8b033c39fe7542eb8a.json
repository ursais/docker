{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {var _context;\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return _mapInstanceProperty(_context = React.Children).call(_context, children, child => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/React.cloneElement(newChild, {\n        children: recurseReactClone(\n        newChild.props.children,\n        type,\n        propExtender) });\n\n\n    }\n    return newChild;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"/app/superset-frontend/src/CRUD/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/CRUD/utils.js"],"names":["React","recurseReactClone","children","type","propExtender","Children","child","newChild","name","cloneElement","props"],"mappings":"8XAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,YAA3C,EAAyD;AAC9D;AACF;AACA;AACA;AACE,SAAO,gCAAAJ,KAAK,CAACK,QAAN,iBAAmBH,QAAnB,EAA6BI,KAAK,IAAI;AAC3C,QAAIC,QAAQ,GAAGD,KAAf;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACH,IAAN,CAAWK,IAAX,KAAoBL,IAAI,CAACK,IAAtC,EAA4C;AAC1CD,MAAAA,QAAQ,gBAAGP,KAAK,CAACS,YAAN,CAAmBH,KAAnB,EAA0BF,YAAY,CAACE,KAAD,CAAtC,CAAX;AACD;AACD,QAAIC,QAAQ,IAAIA,QAAQ,CAACG,KAAT,CAAeR,QAA/B,EAAyC;AACvCK,MAAAA,QAAQ,gBAAGP,KAAK,CAACS,YAAN,CAAmBF,QAAnB,EAA6B;AACtCL,QAAAA,QAAQ,EAAED,iBAAiB;AACzBM,QAAAA,QAAQ,CAACG,KAAT,CAAeR,QADU;AAEzBC,QAAAA,IAFyB;AAGzBC,QAAAA,YAHyB,CADW,EAA7B,CAAX;;;AAOD;AACD,WAAOG,QAAP;AACD,GAfM,CAAP;AAgBD,C,iLArBeN,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, child => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = React.cloneElement(newChild, {\n        children: recurseReactClone(\n          newChild.props.children,\n          type,\n          propExtender,\n        ),\n      });\n    }\n    return newChild;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}