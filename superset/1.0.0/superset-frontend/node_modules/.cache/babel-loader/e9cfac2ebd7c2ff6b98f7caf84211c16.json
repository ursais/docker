{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetClient } from '@superset-ui/core';\nexport const getDashboards = async query => {var _response, _context;\n  // todo: Build a dedicated endpoint for dashboard searching\n  // i.e. superset/v1/api/dashboards?q=${query}\n  let response;\n  try {\n    response = await SupersetClient.get({\n      endpoint: `/dashboardasync/api/read?_oc_DashboardModelViewAsync=changed_on&_od_DashboardModelViewAsync=desc&_flt_2_dashboard_title=${query}` });\n\n  }\n  catch (error) {\n    return [{ title: t('An error occurred while fetching dashboards') }];\n  }\n  return (_response = response) == null ? void 0 : _mapInstanceProperty(_context = _response.json.result).call(_context, item => ({\n    title: item.dashboard_title,\n    ...item }));\n\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDashboards, \"getDashboards\", \"/app/superset-frontend/src/components/OmniContainer/getDashboards.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/OmniContainer/getDashboards.ts"],"names":[],"mappings":"8XAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAS,CAAT,EAAY,cAAZ,QAAkC,mBAAlC;AAiBA,OAAO,MAAM,aAAa,GAAG,MAC3B,KAD2B,IAEoB;AAC/C;AACA;AACA,MAAI,QAAJ;AACA,MAAI;AACF,IAAA,QAAQ,GAAG,MAAM,cAAc,CAAC,GAAf,CAAmB;AAClC,MAAA,QAAQ,EAAE,2HAA2H,KAAK,EADxG,EAAnB,CAAjB;;AAGD;AAAC,SAAO,KAAP,EAAc;AACd,WAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,6CAAD,CAAV,EAAD,CAAP;AACD;AACD,sBAAO,QAAP,qBAAO,0CAAU,IAAV,CAAe,MAAf,iBAA2B,IAAD,KAA0B;AACzD,IAAA,KAAK,EAAE,IAAI,CAAC,eAD6C;AAEzD,OAAG,IAFsD,EAA1B,CAA1B,CAAP;;AAID,CAjBM,C,iLAAM,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t, SupersetClient } from '@superset-ui/core';\n\ninterface DashboardItem {\n  changed_by_name: string;\n  changed_on: string;\n  creator: string;\n  dashboard_link: string;\n  dashboard_title: string;\n  id: number;\n  modified: string;\n  url: string;\n}\n\ninterface Dashboards extends DashboardItem {\n  title: string;\n}\n\nexport const getDashboards = async (\n  query: string,\n): Promise<(Dashboards | { title: string })[]> => {\n  // todo: Build a dedicated endpoint for dashboard searching\n  // i.e. superset/v1/api/dashboards?q=${query}\n  let response;\n  try {\n    response = await SupersetClient.get({\n      endpoint: `/dashboardasync/api/read?_oc_DashboardModelViewAsync=changed_on&_od_DashboardModelViewAsync=desc&_flt_2_dashboard_title=${query}`,\n    });\n  } catch (error) {\n    return [{ title: t('An error occurred while fetching dashboards') }];\n  }\n  return response?.json.result.map((item: DashboardItem) => ({\n    title: item.dashboard_title,\n    ...item,\n  }));\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}