{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Loading from 'src/components/Loading';\nimport { useDashboard, useDashboardCharts, useDashboardDatasets } from 'src/common/hooks/apiResources';\nimport { ResourceStatus } from 'src/common/hooks/apiResources/apiResources';\nimport { hydrateDashboard } from 'src/dashboard/actions/hydrate';\nimport injectCustomCss from 'src/dashboard/util/injectCustomCss';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DashboardContainer = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"DashboardContainer\" */\n/* webpackPreload: true */\n'src/dashboard/containers/Dashboard'));\nconst DashboardPage = () => {var _find, _context;\n  const dispatch = useDispatch();\n  const { idOrSlug } = useParams();\n  const [isHydrated, setHydrated] = useState(false);\n  const dashboardResource = useDashboard(idOrSlug);\n  const chartsResource = useDashboardCharts(idOrSlug);\n  const datasetsResource = useDashboardDatasets(idOrSlug);\n  const error = (_find = _findInstanceProperty(_context = [dashboardResource, chartsResource, datasetsResource]).call(_context, resource => resource.status === ResourceStatus.ERROR)) == null ? void 0 : _find.error;\n  useEffect(() => {\n    if (dashboardResource.result) {\n      document.title = dashboardResource.result.dashboard_title;\n      if (dashboardResource.result.css) {\n        // returning will clean up custom css\n        // when dashboard unmounts or changes\n        return injectCustomCss(dashboardResource.result.css);\n      }\n    }\n    return () => {};\n  }, [dashboardResource.result]);\n  const shouldBeHydrated = dashboardResource.status === ResourceStatus.COMPLETE &&\n  chartsResource.status === ResourceStatus.COMPLETE &&\n  datasetsResource.status === ResourceStatus.COMPLETE;\n  useEffect(() => {\n    if (shouldBeHydrated) {\n      dispatch(hydrateDashboard(dashboardResource.result, chartsResource.result, datasetsResource.result));\n      setHydrated(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shouldBeHydrated]);\n  if (error)\n  throw error; // caught in error boundary\n  if (!isHydrated)\n  return ___EmotionJSX(Loading, null);\n  return ___EmotionJSX(DashboardContainer, null);\n};__signature__(DashboardPage, \"useDispatch{dispatch}\\nuseParams{{ idOrSlug }}\\nuseState{[isHydrated, setHydrated](false)}\\nuseDashboard{dashboardResource}\\nuseDashboardCharts{chartsResource}\\nuseDashboardDatasets{datasetsResource}\\nuseEffect{}\\nuseEffect{}\", () => [useDispatch, useParams, useDashboard, useDashboardCharts, useDashboardDatasets]);const _default =\nDashboardPage;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardContainer, \"DashboardContainer\", \"/app/superset-frontend/src/dashboard/containers/DashboardPage.tsx\");reactHotLoader.register(DashboardPage, \"DashboardPage\", \"/app/superset-frontend/src/dashboard/containers/DashboardPage.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/containers/DashboardPage.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/containers/DashboardPage.tsx"],"names":[],"mappings":"ybAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,SAAhB,EAA2B,QAA3B,QAA+C,OAA/C;AACA,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,SAAT,QAA0B,kBAA1B;AACA,OAAO,OAAP,MAAoB,wBAApB;AACA,SACE,YADF,EAEE,kBAFF,EAGE,oBAHF,QAIO,+BAJP;AAKA,SAAS,cAAT,QAA+B,4CAA/B;AACA,SAAS,gBAAT,QAAiC,+BAAjC;AACA,OAAO,eAAP,MAA4B,oCAA5B,C;AAEA,MAAM,kBAAkB,gBAAG,KAAK,CAAC,IAAN,CACzB,MACE;AACE;AACA;AACA,oCAHF,CAFuB,CAA3B;AASA,MAAM,aAAa,GAAO,MAAK;AAC7B,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,QAAM,EAAE,QAAF,KAAe,SAAS,EAA9B;AACA,QAAM,CAAC,UAAD,EAAa,WAAb,IAA4B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,iBAAiB,GAAG,YAAY,CAAC,QAAD,CAAtC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,QAAD,CAAzC;AACA,QAAM,gBAAgB,GAAG,oBAAoB,CAAC,QAAD,CAA7C;AACA,QAAM,KAAK,YAAG,kCAAC,iBAAD,EAAoB,cAApB,EAAoC,gBAApC,kBACZ,QAAQ,IAAI,QAAQ,CAAC,MAAT,KAAoB,cAAc,CAAC,KADnC,CAAH,qBAAG,MAEX,KAFH;AAIA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,iBAAiB,CAAC,MAAtB,EAA8B;AAC5B,MAAA,QAAQ,CAAC,KAAT,GAAiB,iBAAiB,CAAC,MAAlB,CAAyB,eAA1C;AACA,UAAI,iBAAiB,CAAC,MAAlB,CAAyB,GAA7B,EAAkC;AAChC;AACA;AACA,eAAO,eAAe,CAAC,iBAAiB,CAAC,MAAlB,CAAyB,GAA1B,CAAtB;AACD;AACF;AACD,WAAO,MAAK,CAAG,CAAf;AACD,GAVQ,EAUN,CAAC,iBAAiB,CAAC,MAAnB,CAVM,CAAT;AAYA,QAAM,gBAAgB,GACpB,iBAAiB,CAAC,MAAlB,KAA6B,cAAc,CAAC,QAA5C;AACA,EAAA,cAAc,CAAC,MAAf,KAA0B,cAAc,CAAC,QADzC;AAEA,EAAA,gBAAgB,CAAC,MAAjB,KAA4B,cAAc,CAAC,QAH7C;AAKA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,gBAAJ,EAAsB;AACpB,MAAA,QAAQ,CACN,gBAAgB,CACd,iBAAiB,CAAC,MADJ,EAEd,cAAc,CAAC,MAFD,EAGd,gBAAgB,CAAC,MAHH,CADV,CAAR;AAOA,MAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACD;AACD,GAZQ,EAYN,CAAC,gBAAD,CAZM,CAAT;AAcA,MAAI,KAAJ;AAAW,QAAM,KAAN,CA1CkB,CA0CL;AACxB,MAAI,CAAC,UAAL;AAAiB,SAAO,cAAC,OAAD,OAAP;AACjB,SAAO,cAAC,kBAAD,OAAP;AACD,CA7CD,C,cAAM,a,8OACa,W,EACI,S,EAEK,Y,EACH,kB,EACE,oB;AAyCZ,a,CAAf,wB,iLAxDM,kB,qHASA,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Loading from 'src/components/Loading';\nimport {\n  useDashboard,\n  useDashboardCharts,\n  useDashboardDatasets,\n} from 'src/common/hooks/apiResources';\nimport { ResourceStatus } from 'src/common/hooks/apiResources/apiResources';\nimport { hydrateDashboard } from 'src/dashboard/actions/hydrate';\nimport injectCustomCss from 'src/dashboard/util/injectCustomCss';\n\nconst DashboardContainer = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"DashboardContainer\" */\n      /* webpackPreload: true */\n      'src/dashboard/containers/Dashboard'\n    ),\n);\n\nconst DashboardPage: FC = () => {\n  const dispatch = useDispatch();\n  const { idOrSlug } = useParams<{ idOrSlug: string }>();\n  const [isHydrated, setHydrated] = useState(false);\n  const dashboardResource = useDashboard(idOrSlug);\n  const chartsResource = useDashboardCharts(idOrSlug);\n  const datasetsResource = useDashboardDatasets(idOrSlug);\n  const error = [dashboardResource, chartsResource, datasetsResource].find(\n    resource => resource.status === ResourceStatus.ERROR,\n  )?.error;\n\n  useEffect(() => {\n    if (dashboardResource.result) {\n      document.title = dashboardResource.result.dashboard_title;\n      if (dashboardResource.result.css) {\n        // returning will clean up custom css\n        // when dashboard unmounts or changes\n        return injectCustomCss(dashboardResource.result.css);\n      }\n    }\n    return () => {};\n  }, [dashboardResource.result]);\n\n  const shouldBeHydrated =\n    dashboardResource.status === ResourceStatus.COMPLETE &&\n    chartsResource.status === ResourceStatus.COMPLETE &&\n    datasetsResource.status === ResourceStatus.COMPLETE;\n\n  useEffect(() => {\n    if (shouldBeHydrated) {\n      dispatch(\n        hydrateDashboard(\n          dashboardResource.result,\n          chartsResource.result,\n          datasetsResource.result,\n        ),\n      );\n      setHydrated(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shouldBeHydrated]);\n\n  if (error) throw error; // caught in error boundary\n  if (!isHydrated) return <Loading />;\n  return <DashboardContainer />;\n};\n\nexport default DashboardPage;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}