{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\nimport QueryTable from './QueryTable';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst QueryHistory = ({ queries, actions, displayLimit }) => queries.length > 0 ? ___EmotionJSX(QueryTable, { columns: [\n  'state',\n  'started',\n  'duration',\n  'progress',\n  'rows',\n  'sql',\n  'output',\n  'actions'],\n  queries: queries, actions: actions, displayLimit: displayLimit }) : ___EmotionJSX(Alert, { type: \"info\", message: t('No query history yet...') });const _default =\nQueryHistory;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(QueryHistory, \"QueryHistory\", \"/app/superset-frontend/src/SqlLab/components/QueryHistory.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QueryHistory.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/QueryHistory.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AAEA,OAAO,UAAP,MAAuB,cAAvB,C;AASA,MAAM,YAAY,GAAG,CAAC,EAAE,OAAF,EAAW,OAAX,EAAoB,YAApB,EAAD,KACnB,OAAO,CAAC,MAAR,GAAiB,CAAjB,GACE,cAAC,UAAD,IACE,OAAO,EAAE;AACP,SADO;AAEP,WAFO;AAGP,YAHO;AAIP,YAJO;AAKP,QALO;AAMP,OANO;AAOP,UAPO;AAQP,WARO,CADX;AAWE,EAAA,OAAO,EAAE,OAXX,EAYE,OAAO,EAAE,OAZX,EAaE,YAAY,EAAE,YAbhB,GADF,GAiBE,cAAC,KAAD,IAAO,IAAI,EAAC,MAAZ,EAAmB,OAAO,EAAE,CAAC,CAAC,yBAAD,CAA7B,GAlBJ,C;AAqBe,Y,CAAf,wB,iLArBM,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\n\nimport QueryTable from './QueryTable';\nimport { Query } from '../types';\n\ninterface QueryHistoryProps {\n  queries: Query[];\n  actions: Record<string, unknown>;\n  displayLimit: number;\n}\n\nconst QueryHistory = ({ queries, actions, displayLimit }: QueryHistoryProps) =>\n  queries.length > 0 ? (\n    <QueryTable\n      columns={[\n        'state',\n        'started',\n        'duration',\n        'progress',\n        'rows',\n        'sql',\n        'output',\n        'actions',\n      ]}\n      queries={queries}\n      actions={actions}\n      displayLimit={displayLimit}\n    />\n  ) : (\n    <Alert type=\"info\" message={t('No query history yet...')} />\n  );\n\nexport default QueryHistory;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}