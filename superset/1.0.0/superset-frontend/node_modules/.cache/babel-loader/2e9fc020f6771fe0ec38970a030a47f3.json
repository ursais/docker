{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Alert from 'src/components/Alert';\nimport { styled, logging, t } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Button from 'src/components/Button';\nimport Loading from '../components/Loading';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ChartRenderer from './ChartRenderer';\nimport { ChartErrorMessage } from './ChartErrorMessage';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from '../logger/LogUtils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object.isRequired,\n  // current chart is included by dashboard\n  dashboardId: PropTypes.number,\n  // original selected values for FilterBox viz\n  // so that FilterBox can pre-populate selected values\n  // only affect UI control\n  initialValues: PropTypes.object,\n  // formData contains chart's own filter parameter\n  // and merged with extra filter that current dashboard applying\n  formData: PropTypes.object.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  setControlValue: PropTypes.func,\n  timeout: PropTypes.number,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  isFiltersInitialized: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartStackTrace: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  refreshOverlayVisible: PropTypes.bool,\n  errorMessage: PropTypes.node,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  onQuery: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object };\n\n\nconst BLANK = {};\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n  dashboardId: null,\n  chartStackTrace: null };\n\n\nconst Styles = styled.div`\n  min-height: ${p => p.height}px;\n  position: relative;\n\n  .chart-tooltip {\n    opacity: 0.75;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n`;\n\nconst RefreshOverlayWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nclass Chart extends React.PureComponent {\n  constructor(props) {var _context;\n    super(props);\n    this.handleRenderContainerFailure = _bindInstanceProperty(_context = this.handleRenderContainerFailure).call(_context,\n    this);\n\n  }\n\n  componentDidMount() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  runQuery() {\n    if (this.props.chartId > 0 && isFeatureEnabled(FeatureFlag.CLIENT_CACHE)) {\n      // Load saved chart with a GET request\n      this.props.actions.getSavedChart(\n      this.props.formData,\n      false,\n      this.props.timeout,\n      this.props.chartId,\n      this.props.dashboardId,\n      this.props.ownState);\n\n    } else {\n      // Create chart with POST request\n      this.props.actions.postChartFormData(\n      this.props.formData,\n      false,\n      this.props.timeout,\n      this.props.chartId,\n      this.props.dashboardId,\n      this.props.ownState);\n\n    }\n  }\n\n  handleRenderContainerFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n    error.toString(),\n    chartId,\n    info ? info.componentStack : null);\n\n\n    actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      slice_id: chartId,\n      has_err: true,\n      error_details: error.toString(),\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime });\n\n  }\n\n  renderErrorMessage(queryResponse) {var _queryResponse$errors;\n    const { chartId, chartAlert, chartStackTrace, dashboardId } = this.props;\n\n    const error = queryResponse == null ? void 0 : (_queryResponse$errors = queryResponse.errors) == null ? void 0 : _queryResponse$errors[0];\n    const message = chartAlert || (queryResponse == null ? void 0 : queryResponse.message);\n    return (\n      ___EmotionJSX(ChartErrorMessage, {\n        chartId: chartId,\n        error: error,\n        subtitle: message,\n        copyText: message,\n        link: queryResponse ? queryResponse.link : null,\n        source: dashboardId ? 'dashboard' : 'explore',\n        stackTrace: chartStackTrace }));\n\n\n  }\n\n  render() {\n    const {\n      height,\n      chartAlert,\n      chartStatus,\n      errorMessage,\n      onQuery,\n      refreshOverlayVisible,\n      queriesResponse = [] } =\n    this.props;\n\n    const isLoading = chartStatus === 'loading';\n    const isFaded = refreshOverlayVisible && !errorMessage;\n    this.renderContainerStartTime = Logger.getTimestamp();\n    if (chartStatus === 'failed') {\n      return _mapInstanceProperty(queriesResponse).call(queriesResponse, item => this.renderErrorMessage(item));\n    }\n    if (errorMessage) {\n      return (\n        ___EmotionJSX(Alert, {\n          \"data-test\": \"alert-warning\",\n          message: errorMessage,\n          type: \"warning\" }));\n\n\n    }\n\n    return (\n      ___EmotionJSX(ErrorBoundary, {\n        onError: this.handleRenderContainerFailure,\n        showMessage: false },\n\n      ___EmotionJSX(Styles, {\n        \"data-ui-anchor\": \"chart\",\n        className: \"chart-container\",\n        \"data-test\": \"chart-container\",\n        height: height },\n\n      ___EmotionJSX(\"div\", {\n        className: `slice_container ${isFaded ? ' faded' : ''}`,\n        \"data-test\": \"slice-container\" },\n\n      ___EmotionJSX(ChartRenderer, _extends({}, this.props, { \"data-test\": this.props.vizType }))),\n\n\n      !isLoading && !chartAlert && isFaded &&\n      ___EmotionJSX(RefreshOverlayWrapper, null,\n      ___EmotionJSX(Button, { onClick: onQuery, buttonStyle: \"primary\" },\n      t('Run query'))),\n\n\n\n\n      isLoading && ___EmotionJSX(Loading, null))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;const _default =\n\nChart;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(BLANK, \"BLANK\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(RefreshOverlayWrapper, \"RefreshOverlayWrapper\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(Chart, \"Chart\", \"/app/superset-frontend/src/chart/Chart.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/chart/Chart.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/chart/Chart.jsx"],"names":["PropTypes","React","Alert","styled","logging","t","isFeatureEnabled","FeatureFlag","Button","Loading","ErrorBoundary","ChartRenderer","ChartErrorMessage","Logger","LOG_ACTIONS_RENDER_CHART","propTypes","annotationData","object","actions","chartId","number","isRequired","datasource","dashboardId","initialValues","formData","width","height","setControlValue","func","timeout","vizType","string","triggerRender","bool","isFiltersInitialized","chartAlert","chartStatus","chartStackTrace","queriesResponse","arrayOf","triggerQuery","refreshOverlayVisible","errorMessage","node","addFilter","onQuery","onFilterMenuOpen","onFilterMenuClose","ownState","BLANK","defaultProps","Styles","div","p","theme","typography","sizes","s","RefreshOverlayWrapper","Chart","PureComponent","constructor","props","handleRenderContainerFailure","componentDidMount","runQuery","componentDidUpdate","CLIENT_CACHE","getSavedChart","postChartFormData","error","info","warn","chartRenderingFailed","toString","componentStack","logEvent","slice_id","has_err","error_details","start_offset","renderStartTime","ts","Date","getTime","duration","getTimestamp","renderErrorMessage","queryResponse","errors","message","link","render","isLoading","isFaded","renderContainerStartTime","item"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Alert from 'src/components/Alert';\nimport { styled, logging, t } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Button from 'src/components/Button';\nimport Loading from '../components/Loading';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ChartRenderer from './ChartRenderer';\nimport { ChartErrorMessage } from './ChartErrorMessage';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from '../logger/LogUtils';\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object.isRequired,\n  // current chart is included by dashboard\n  dashboardId: PropTypes.number,\n  // original selected values for FilterBox viz\n  // so that FilterBox can pre-populate selected values\n  // only affect UI control\n  initialValues: PropTypes.object,\n  // formData contains chart's own filter parameter\n  // and merged with extra filter that current dashboard applying\n  formData: PropTypes.object.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  setControlValue: PropTypes.func,\n  timeout: PropTypes.number,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  isFiltersInitialized: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartStackTrace: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  refreshOverlayVisible: PropTypes.bool,\n  errorMessage: PropTypes.node,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  onQuery: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object,\n};\n\nconst BLANK = {};\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n  dashboardId: null,\n  chartStackTrace: null,\n};\n\nconst Styles = styled.div`\n  min-height: ${p => p.height}px;\n  position: relative;\n\n  .chart-tooltip {\n    opacity: 0.75;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n`;\n\nconst RefreshOverlayWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleRenderContainerFailure = this.handleRenderContainerFailure.bind(\n      this,\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  runQuery() {\n    if (this.props.chartId > 0 && isFeatureEnabled(FeatureFlag.CLIENT_CACHE)) {\n      // Load saved chart with a GET request\n      this.props.actions.getSavedChart(\n        this.props.formData,\n        false,\n        this.props.timeout,\n        this.props.chartId,\n        this.props.dashboardId,\n        this.props.ownState,\n      );\n    } else {\n      // Create chart with POST request\n      this.props.actions.postChartFormData(\n        this.props.formData,\n        false,\n        this.props.timeout,\n        this.props.chartId,\n        this.props.dashboardId,\n        this.props.ownState,\n      );\n    }\n  }\n\n  handleRenderContainerFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n      error.toString(),\n      chartId,\n      info ? info.componentStack : null,\n    );\n\n    actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      slice_id: chartId,\n      has_err: true,\n      error_details: error.toString(),\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime,\n    });\n  }\n\n  renderErrorMessage(queryResponse) {\n    const { chartId, chartAlert, chartStackTrace, dashboardId } = this.props;\n\n    const error = queryResponse?.errors?.[0];\n    const message = chartAlert || queryResponse?.message;\n    return (\n      <ChartErrorMessage\n        chartId={chartId}\n        error={error}\n        subtitle={message}\n        copyText={message}\n        link={queryResponse ? queryResponse.link : null}\n        source={dashboardId ? 'dashboard' : 'explore'}\n        stackTrace={chartStackTrace}\n      />\n    );\n  }\n\n  render() {\n    const {\n      height,\n      chartAlert,\n      chartStatus,\n      errorMessage,\n      onQuery,\n      refreshOverlayVisible,\n      queriesResponse = [],\n    } = this.props;\n\n    const isLoading = chartStatus === 'loading';\n    const isFaded = refreshOverlayVisible && !errorMessage;\n    this.renderContainerStartTime = Logger.getTimestamp();\n    if (chartStatus === 'failed') {\n      return queriesResponse.map(item => this.renderErrorMessage(item));\n    }\n    if (errorMessage) {\n      return (\n        <Alert\n          data-test=\"alert-warning\"\n          message={errorMessage}\n          type=\"warning\"\n        />\n      );\n    }\n\n    return (\n      <ErrorBoundary\n        onError={this.handleRenderContainerFailure}\n        showMessage={false}\n      >\n        <Styles\n          data-ui-anchor=\"chart\"\n          className=\"chart-container\"\n          data-test=\"chart-container\"\n          height={height}\n        >\n          <div\n            className={`slice_container ${isFaded ? ' faded' : ''}`}\n            data-test=\"slice-container\"\n          >\n            <ChartRenderer {...this.props} data-test={this.props.vizType} />\n          </div>\n\n          {!isLoading && !chartAlert && isFaded && (\n            <RefreshOverlayWrapper>\n              <Button onClick={onQuery} buttonStyle=\"primary\">\n                {t('Run query')}\n              </Button>\n            </RefreshOverlayWrapper>\n          )}\n\n          {isLoading && <Loading />}\n        </Styles>\n      </ErrorBoundary>\n    );\n  }\n}\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}