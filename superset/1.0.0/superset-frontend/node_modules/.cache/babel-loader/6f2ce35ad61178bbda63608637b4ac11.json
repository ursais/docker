{"ast":null,"code":"import _everyInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/every\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport isValidChild from './isValidChild';\nimport { TAB_TYPE, TABS_TYPE } from './componentTypes';\n\nexport const DROP_TOP = 'DROP_TOP';\nexport const DROP_RIGHT = 'DROP_RIGHT';\nexport const DROP_BOTTOM = 'DROP_BOTTOM';\nexport const DROP_LEFT = 'DROP_LEFT';\n\n// this defines how close the mouse must be to the edge of a component to display\n// a sibling type drop indicator\nconst SIBLING_DROP_THRESHOLD = 20;\nconst NON_SHALLOW_DROP_THRESHOLD = 20;\n\n// We cache the last recorded clientOffset per component in order to\n// have access to it beyond the handleHover phase and into the handleDrop phase\n// of drag-and-drop. we do not have access to it during drop because react-dnd's\n// monitor.getClientOffset() returns null at this point\nlet CACHED_CLIENT_OFFSET = {};\nexport function clearDropCache() {\n  CACHED_CLIENT_OFFSET = {};\n}\n\nexport default function getDropPosition(monitor, Component) {var _context;\n  const {\n    depth: componentDepth,\n    parentComponent,\n    component,\n    orientation,\n    isDraggingOverShallow } =\n  Component.props;\n\n  const draggingItem = monitor.getItem();\n\n  // if dropped self on self, do nothing\n  if (!draggingItem || draggingItem.id === component.id) {\n    return null;\n  }\n\n  // TODO need a better solution to prevent nested tabs\n  if (\n  draggingItem.type === TABS_TYPE &&\n  component.type === TAB_TYPE &&\n  componentDepth === 2)\n  {\n    return null;\n  }\n\n  const validChild = isValidChild({\n    parentType: component.type,\n    parentDepth: componentDepth,\n    childType: draggingItem.type });\n\n\n  const parentType = parentComponent && parentComponent.type;\n  const parentDepth = // see isValidChild.js for why tabs don't increment child depth\n  componentDepth + (\n  parentType === TAB_TYPE || parentType === TABS_TYPE ? 0 : -1);\n\n  const validSibling = isValidChild({\n    parentType,\n    parentDepth,\n    childType: draggingItem.type });\n\n\n  if (!validChild && !validSibling) {\n    return null;\n  }\n\n  const hasChildren = (component.children || []).length > 0;\n  const childDropOrientation =\n  orientation === 'row' ? 'vertical' : 'horizontal';\n  const siblingDropOrientation =\n  orientation === 'row' ? 'horizontal' : 'vertical';\n\n  if (isDraggingOverShallow && validChild && !validSibling) {\n    // easiest case, insert as child\n    if (childDropOrientation === 'vertical') {\n      return hasChildren ? DROP_RIGHT : DROP_LEFT;\n    }\n    return hasChildren ? DROP_BOTTOM : DROP_TOP;\n  }\n\n  const refBoundingRect = Component.ref.getBoundingClientRect();\n  const clientOffset =\n  monitor.getClientOffset() || CACHED_CLIENT_OFFSET[component.id];\n\n  if (!clientOffset || !refBoundingRect) {\n    return null;\n  }\n\n  CACHED_CLIENT_OFFSET[component.id] = clientOffset;\n  const deltaTop = Math.abs(clientOffset.y - refBoundingRect.top);\n  const deltaBottom = Math.abs(clientOffset.y - refBoundingRect.bottom);\n  const deltaLeft = Math.abs(clientOffset.x - refBoundingRect.left);\n  const deltaRight = Math.abs(clientOffset.x - refBoundingRect.right);\n\n  // Most of the time we only want a drop indicator for shallow (top-level, non-nested) drop targets\n  // However there are some cases where considering only shallow targets would result in NO drop\n  // indicators which is a bad UX.\n  // e.g.,\n  //    when dragging row-a over a chart that's in another row-b, the chart is the shallow droptarget\n  //    but row-a is not a valid child or sibling. in this case we want to show a sibling drop\n  //    indicator for row-b, which is NOT a shallow drop target.\n  // BUT if we ALWAYS consider non-shallow drop targets we may get multiple indicators shown at the\n  // same time, which is also a bad UX. to prevent this we can enforce a threshold proximity of the\n  // mouse to the edge of a non-shallow target\n  if (\n  !isDraggingOverShallow &&\n  _everyInstanceProperty(_context = [deltaTop, deltaBottom, deltaLeft, deltaRight]).call(_context,\n  delta => delta > NON_SHALLOW_DROP_THRESHOLD))\n\n  {\n    return null;\n  }\n\n  // Drop based on mouse position relative to component center\n  if (validSibling && !validChild) {\n    if (siblingDropOrientation === 'vertical') {\n      const refMiddleX =\n      refBoundingRect.left +\n      (refBoundingRect.right - refBoundingRect.left) / 2;\n      return clientOffset.x < refMiddleX ? DROP_LEFT : DROP_RIGHT;\n    }\n    const refMiddleY =\n    refBoundingRect.top + (refBoundingRect.bottom - refBoundingRect.top) / 2;\n    return clientOffset.y < refMiddleY ? DROP_TOP : DROP_BOTTOM;\n  }\n\n  // either is valid, so choose location based on boundary deltas\n  if (validSibling && validChild) {\n    // if near enough to a sibling boundary, drop there\n    if (siblingDropOrientation === 'vertical') {\n      if (deltaLeft < SIBLING_DROP_THRESHOLD) return DROP_LEFT;\n      if (deltaRight < SIBLING_DROP_THRESHOLD) return DROP_RIGHT;\n    } else {\n      if (deltaTop < SIBLING_DROP_THRESHOLD) return DROP_TOP;\n      if (deltaBottom < SIBLING_DROP_THRESHOLD) return DROP_BOTTOM;\n    }\n\n    // drop as child\n    if (childDropOrientation === 'vertical') {\n      return hasChildren ? DROP_RIGHT : DROP_LEFT;\n    }\n    return hasChildren ? DROP_BOTTOM : DROP_TOP;\n  }\n\n  return null;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DROP_TOP, \"DROP_TOP\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(DROP_RIGHT, \"DROP_RIGHT\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(DROP_BOTTOM, \"DROP_BOTTOM\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(DROP_LEFT, \"DROP_LEFT\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(SIBLING_DROP_THRESHOLD, \"SIBLING_DROP_THRESHOLD\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(NON_SHALLOW_DROP_THRESHOLD, \"NON_SHALLOW_DROP_THRESHOLD\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(CACHED_CLIENT_OFFSET, \"CACHED_CLIENT_OFFSET\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(clearDropCache, \"clearDropCache\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");reactHotLoader.register(getDropPosition, \"getDropPosition\", \"/app/superset-frontend/src/dashboard/util/getDropPosition.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getDropPosition.js"],"names":["isValidChild","TAB_TYPE","TABS_TYPE","DROP_TOP","DROP_RIGHT","DROP_BOTTOM","DROP_LEFT","SIBLING_DROP_THRESHOLD","NON_SHALLOW_DROP_THRESHOLD","CACHED_CLIENT_OFFSET","clearDropCache","getDropPosition","monitor","Component","depth","componentDepth","parentComponent","component","orientation","isDraggingOverShallow","props","draggingItem","getItem","id","type","validChild","parentType","parentDepth","childType","validSibling","hasChildren","children","length","childDropOrientation","siblingDropOrientation","refBoundingRect","ref","getBoundingClientRect","clientOffset","getClientOffset","deltaTop","Math","abs","y","top","deltaBottom","bottom","deltaLeft","x","left","deltaRight","right","delta","refMiddleX","refMiddleY"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport isValidChild from './isValidChild';\nimport { TAB_TYPE, TABS_TYPE } from './componentTypes';\n\nexport const DROP_TOP = 'DROP_TOP';\nexport const DROP_RIGHT = 'DROP_RIGHT';\nexport const DROP_BOTTOM = 'DROP_BOTTOM';\nexport const DROP_LEFT = 'DROP_LEFT';\n\n// this defines how close the mouse must be to the edge of a component to display\n// a sibling type drop indicator\nconst SIBLING_DROP_THRESHOLD = 20;\nconst NON_SHALLOW_DROP_THRESHOLD = 20;\n\n// We cache the last recorded clientOffset per component in order to\n// have access to it beyond the handleHover phase and into the handleDrop phase\n// of drag-and-drop. we do not have access to it during drop because react-dnd's\n// monitor.getClientOffset() returns null at this point\nlet CACHED_CLIENT_OFFSET = {};\nexport function clearDropCache() {\n  CACHED_CLIENT_OFFSET = {};\n}\n\nexport default function getDropPosition(monitor, Component) {\n  const {\n    depth: componentDepth,\n    parentComponent,\n    component,\n    orientation,\n    isDraggingOverShallow,\n  } = Component.props;\n\n  const draggingItem = monitor.getItem();\n\n  // if dropped self on self, do nothing\n  if (!draggingItem || draggingItem.id === component.id) {\n    return null;\n  }\n\n  // TODO need a better solution to prevent nested tabs\n  if (\n    draggingItem.type === TABS_TYPE &&\n    component.type === TAB_TYPE &&\n    componentDepth === 2\n  ) {\n    return null;\n  }\n\n  const validChild = isValidChild({\n    parentType: component.type,\n    parentDepth: componentDepth,\n    childType: draggingItem.type,\n  });\n\n  const parentType = parentComponent && parentComponent.type;\n  const parentDepth = // see isValidChild.js for why tabs don't increment child depth\n    componentDepth +\n    (parentType === TAB_TYPE || parentType === TABS_TYPE ? 0 : -1);\n\n  const validSibling = isValidChild({\n    parentType,\n    parentDepth,\n    childType: draggingItem.type,\n  });\n\n  if (!validChild && !validSibling) {\n    return null;\n  }\n\n  const hasChildren = (component.children || []).length > 0;\n  const childDropOrientation =\n    orientation === 'row' ? 'vertical' : 'horizontal';\n  const siblingDropOrientation =\n    orientation === 'row' ? 'horizontal' : 'vertical';\n\n  if (isDraggingOverShallow && validChild && !validSibling) {\n    // easiest case, insert as child\n    if (childDropOrientation === 'vertical') {\n      return hasChildren ? DROP_RIGHT : DROP_LEFT;\n    }\n    return hasChildren ? DROP_BOTTOM : DROP_TOP;\n  }\n\n  const refBoundingRect = Component.ref.getBoundingClientRect();\n  const clientOffset =\n    monitor.getClientOffset() || CACHED_CLIENT_OFFSET[component.id];\n\n  if (!clientOffset || !refBoundingRect) {\n    return null;\n  }\n\n  CACHED_CLIENT_OFFSET[component.id] = clientOffset;\n  const deltaTop = Math.abs(clientOffset.y - refBoundingRect.top);\n  const deltaBottom = Math.abs(clientOffset.y - refBoundingRect.bottom);\n  const deltaLeft = Math.abs(clientOffset.x - refBoundingRect.left);\n  const deltaRight = Math.abs(clientOffset.x - refBoundingRect.right);\n\n  // Most of the time we only want a drop indicator for shallow (top-level, non-nested) drop targets\n  // However there are some cases where considering only shallow targets would result in NO drop\n  // indicators which is a bad UX.\n  // e.g.,\n  //    when dragging row-a over a chart that's in another row-b, the chart is the shallow droptarget\n  //    but row-a is not a valid child or sibling. in this case we want to show a sibling drop\n  //    indicator for row-b, which is NOT a shallow drop target.\n  // BUT if we ALWAYS consider non-shallow drop targets we may get multiple indicators shown at the\n  // same time, which is also a bad UX. to prevent this we can enforce a threshold proximity of the\n  // mouse to the edge of a non-shallow target\n  if (\n    !isDraggingOverShallow &&\n    [deltaTop, deltaBottom, deltaLeft, deltaRight].every(\n      delta => delta > NON_SHALLOW_DROP_THRESHOLD,\n    )\n  ) {\n    return null;\n  }\n\n  // Drop based on mouse position relative to component center\n  if (validSibling && !validChild) {\n    if (siblingDropOrientation === 'vertical') {\n      const refMiddleX =\n        refBoundingRect.left +\n        (refBoundingRect.right - refBoundingRect.left) / 2;\n      return clientOffset.x < refMiddleX ? DROP_LEFT : DROP_RIGHT;\n    }\n    const refMiddleY =\n      refBoundingRect.top + (refBoundingRect.bottom - refBoundingRect.top) / 2;\n    return clientOffset.y < refMiddleY ? DROP_TOP : DROP_BOTTOM;\n  }\n\n  // either is valid, so choose location based on boundary deltas\n  if (validSibling && validChild) {\n    // if near enough to a sibling boundary, drop there\n    if (siblingDropOrientation === 'vertical') {\n      if (deltaLeft < SIBLING_DROP_THRESHOLD) return DROP_LEFT;\n      if (deltaRight < SIBLING_DROP_THRESHOLD) return DROP_RIGHT;\n    } else {\n      if (deltaTop < SIBLING_DROP_THRESHOLD) return DROP_TOP;\n      if (deltaBottom < SIBLING_DROP_THRESHOLD) return DROP_BOTTOM;\n    }\n\n    // drop as child\n    if (childDropOrientation === 'vertical') {\n      return hasChildren ? DROP_RIGHT : DROP_LEFT;\n    }\n    return hasChildren ? DROP_BOTTOM : DROP_TOP;\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}