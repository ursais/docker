{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport { getExploreUrl } from '../exploreUtils';\n\nexport const FETCH_DASHBOARDS_SUCCEEDED = 'FETCH_DASHBOARDS_SUCCEEDED';\nexport function fetchDashboardsSucceeded(choices) {\n  return { type: FETCH_DASHBOARDS_SUCCEEDED, choices };\n}\n\nexport const FETCH_DASHBOARDS_FAILED = 'FETCH_DASHBOARDS_FAILED';\nexport function fetchDashboardsFailed(userId) {\n  return { type: FETCH_DASHBOARDS_FAILED, userId };\n}\n\nexport function fetchDashboards(userId) {\n  return function fetchDashboardsThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/dashboardasync/api/read?_flt_0_owners=${userId}` }).\n\n    then(({ json }) => {var _context;\n      const choices = _mapInstanceProperty(_context = json.pks).call(_context, (id, index) => ({\n        value: id,\n        label: (json.result[index] || {}).dashboard_title }));\n\n\n      return dispatch(fetchDashboardsSucceeded(choices));\n    }).\n    catch(() => dispatch(fetchDashboardsFailed(userId)));\n  };\n}\n\nexport const SAVE_SLICE_FAILED = 'SAVE_SLICE_FAILED';\nexport function saveSliceFailed() {\n  return { type: SAVE_SLICE_FAILED };\n}\nexport const SAVE_SLICE_SUCCESS = 'SAVE_SLICE_SUCCESS';\nexport function saveSliceSuccess(data) {\n  return { type: SAVE_SLICE_SUCCESS, data };\n}\n\nexport const REMOVE_SAVE_MODAL_ALERT = 'REMOVE_SAVE_MODAL_ALERT';\nexport function removeSaveModalAlert() {\n  return { type: REMOVE_SAVE_MODAL_ALERT };\n}\n\nexport function saveSlice(formData, requestParams) {\n  return dispatch => {\n    const url = getExploreUrl({\n      formData,\n      endpointType: 'base',\n      force: false,\n      curUrl: null,\n      requestParams });\n\n\n    return SupersetClient.post({ url, postPayload: { form_data: formData } }).\n    then(response => {\n      dispatch(saveSliceSuccess(response.json));\n      return response.json;\n    }).\n    catch(() => dispatch(saveSliceFailed()));\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FETCH_DASHBOARDS_SUCCEEDED, \"FETCH_DASHBOARDS_SUCCEEDED\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(fetchDashboardsSucceeded, \"fetchDashboardsSucceeded\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(FETCH_DASHBOARDS_FAILED, \"FETCH_DASHBOARDS_FAILED\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(fetchDashboardsFailed, \"fetchDashboardsFailed\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(fetchDashboards, \"fetchDashboards\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(SAVE_SLICE_FAILED, \"SAVE_SLICE_FAILED\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(saveSliceFailed, \"saveSliceFailed\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(SAVE_SLICE_SUCCESS, \"SAVE_SLICE_SUCCESS\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(saveSliceSuccess, \"saveSliceSuccess\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(REMOVE_SAVE_MODAL_ALERT, \"REMOVE_SAVE_MODAL_ALERT\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(removeSaveModalAlert, \"removeSaveModalAlert\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");reactHotLoader.register(saveSlice, \"saveSlice\", \"/app/superset-frontend/src/explore/actions/saveModalActions.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/actions/saveModalActions.js"],"names":["SupersetClient","getExploreUrl","FETCH_DASHBOARDS_SUCCEEDED","fetchDashboardsSucceeded","choices","type","FETCH_DASHBOARDS_FAILED","fetchDashboardsFailed","userId","fetchDashboards","fetchDashboardsThunk","dispatch","get","endpoint","then","json","pks","id","index","value","label","result","dashboard_title","catch","SAVE_SLICE_FAILED","saveSliceFailed","SAVE_SLICE_SUCCESS","saveSliceSuccess","data","REMOVE_SAVE_MODAL_ALERT","removeSaveModalAlert","saveSlice","formData","requestParams","url","endpointType","force","curUrl","post","postPayload","form_data","response"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport { getExploreUrl } from '../exploreUtils';\n\nexport const FETCH_DASHBOARDS_SUCCEEDED = 'FETCH_DASHBOARDS_SUCCEEDED';\nexport function fetchDashboardsSucceeded(choices) {\n  return { type: FETCH_DASHBOARDS_SUCCEEDED, choices };\n}\n\nexport const FETCH_DASHBOARDS_FAILED = 'FETCH_DASHBOARDS_FAILED';\nexport function fetchDashboardsFailed(userId) {\n  return { type: FETCH_DASHBOARDS_FAILED, userId };\n}\n\nexport function fetchDashboards(userId) {\n  return function fetchDashboardsThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `/dashboardasync/api/read?_flt_0_owners=${userId}`,\n    })\n      .then(({ json }) => {\n        const choices = json.pks.map((id, index) => ({\n          value: id,\n          label: (json.result[index] || {}).dashboard_title,\n        }));\n\n        return dispatch(fetchDashboardsSucceeded(choices));\n      })\n      .catch(() => dispatch(fetchDashboardsFailed(userId)));\n  };\n}\n\nexport const SAVE_SLICE_FAILED = 'SAVE_SLICE_FAILED';\nexport function saveSliceFailed() {\n  return { type: SAVE_SLICE_FAILED };\n}\nexport const SAVE_SLICE_SUCCESS = 'SAVE_SLICE_SUCCESS';\nexport function saveSliceSuccess(data) {\n  return { type: SAVE_SLICE_SUCCESS, data };\n}\n\nexport const REMOVE_SAVE_MODAL_ALERT = 'REMOVE_SAVE_MODAL_ALERT';\nexport function removeSaveModalAlert() {\n  return { type: REMOVE_SAVE_MODAL_ALERT };\n}\n\nexport function saveSlice(formData, requestParams) {\n  return dispatch => {\n    const url = getExploreUrl({\n      formData,\n      endpointType: 'base',\n      force: false,\n      curUrl: null,\n      requestParams,\n    });\n\n    return SupersetClient.post({ url, postPayload: { form_data: formData } })\n      .then(response => {\n        dispatch(saveSliceSuccess(response.json));\n        return response.json;\n      })\n      .catch(() => dispatch(saveSliceFailed()));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}