{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { getShortUrl as getShortUrlUtil } from 'src/utils/urlUtils';\nexport function useUrlShortener(url) {\n  const [update, setUpdate] = useState(false);\n  const [shortUrl, setShortUrl] = useState('');\n  async function getShortUrl() {\n    if (update) {\n      const newShortUrl = await getShortUrlUtil(url);\n      setShortUrl(newShortUrl);\n      setUpdate(false);\n      return newShortUrl;\n    }\n    return shortUrl;\n  }\n  useEffect(() => setUpdate(true), [url]);\n  return getShortUrl;\n}__signature__(useUrlShortener, \"useState{[update, setUpdate](false)}\\nuseState{[shortUrl, setShortUrl]('')}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useUrlShortener, \"useUrlShortener\", \"/app/superset-frontend/src/common/hooks/useUrlShortener.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/common/hooks/useUrlShortener.ts"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,QAAT,EAAmB,SAAnB,QAAoC,OAApC;AACA,SAAS,WAAW,IAAI,eAAxB,QAA+C,oBAA/C;AAEA,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAqC;AACzC,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC,QAAD,EAAW,WAAX,IAA0B,QAAQ,CAAC,EAAD,CAAxC;AAEA,iBAAe,WAAf,GAA0B;AACxB,QAAI,MAAJ,EAAY;AACV,YAAM,WAAW,GAAG,MAAM,eAAe,CAAC,GAAD,CAAzC;AACA,MAAA,WAAW,CAAC,WAAD,CAAX;AACA,MAAA,SAAS,CAAC,KAAD,CAAT;AACA,aAAO,WAAP;AACD;AACD,WAAO,QAAP;AACD;AAED,EAAA,SAAS,CAAC,MAAM,SAAS,CAAC,IAAD,CAAhB,EAAwB,CAAC,GAAD,CAAxB,CAAT;AAEA,SAAO,WAAP;AACD,C,cAjBe,e,+QAAA,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { getShortUrl as getShortUrlUtil } from 'src/utils/urlUtils';\n\nexport function useUrlShortener(url: string): Function {\n  const [update, setUpdate] = useState(false);\n  const [shortUrl, setShortUrl] = useState('');\n\n  async function getShortUrl() {\n    if (update) {\n      const newShortUrl = await getShortUrlUtil(url);\n      setShortUrl(newShortUrl);\n      setUpdate(false);\n      return newShortUrl;\n    }\n    return shortUrl;\n  }\n\n  useEffect(() => setUpdate(true), [url]);\n\n  return getShortUrl;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}