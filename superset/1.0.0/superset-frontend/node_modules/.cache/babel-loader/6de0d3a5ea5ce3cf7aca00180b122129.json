{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { styled, t, SupersetClient } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\nfunction buildMetricExtraJsonObject(metric) {\n  const certification = metric != null && metric.certified_by || metric != null && metric.certification_details ?\n  {\n    certified_by: metric == null ? void 0 : metric.certified_by,\n    details: metric == null ? void 0 : metric.certification_details } :\n\n  undefined;\n  return _JSON$stringify({\n    certification,\n    warning_markdown: metric == null ? void 0 : metric.warning_markdown });\n\n}\nconst DatasourceModal = ({ addSuccessToast, datasource, onDatasourceSave, onHide, show }) => {\n  const [currentDatasource, setCurrentDatasource] = useState(datasource);\n  const [errors, setErrors] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const dialog = useRef(null);\n  const [modal, contextHolder] = Modal.useModal();\n  const onConfirmSave = () => {var _currentDatasource$ta, _currentDatasource$da, _currentDatasource$me;\n    // Pull out extra fields into the extra object\n    const schema = ((_currentDatasource$ta = currentDatasource.tableSelector) == null ? void 0 : _currentDatasource$ta.schema) || ((_currentDatasource$da =\n    currentDatasource.databaseSelector) == null ? void 0 : _currentDatasource$da.schema) ||\n    currentDatasource.schema;\n    setIsSaving(true);\n    SupersetClient.post({\n      endpoint: '/datasource/save/',\n      postPayload: {\n        data: {\n          ...currentDatasource,\n          schema,\n          metrics: currentDatasource == null ? void 0 : (_currentDatasource$me = currentDatasource.metrics) == null ? void 0 : _mapInstanceProperty(_currentDatasource$me).call(_currentDatasource$me, metric => ({\n            ...metric,\n            extra: buildMetricExtraJsonObject(metric) })),\n\n          type: currentDatasource.type || currentDatasource.datasource_type } } }).\n\n\n\n    then(({ json }) => {\n      addSuccessToast(t('The dataset has been saved'));\n      onDatasourceSave(json);\n      onHide();\n    }).\n    catch(response => {\n      setIsSaving(false);\n      getClientErrorObject(response).then(({ error }) => {\n        modal.error({\n          title: 'Error',\n          content: error || t('An error has occurred'),\n          okButtonProps: { danger: true, className: 'btn-danger' } });\n\n      });\n    });\n  };\n  const onDatasourceChange = (data, err) => {var _context;\n    setCurrentDatasource({\n      ...data,\n      metrics: data == null ? void 0 : _mapInstanceProperty(_context = data.metrics).call(_context, metric => ({\n        ...metric,\n        is_certified: (metric == null ? void 0 : metric.certified_by) || (metric == null ? void 0 : metric.certification_details) })) });\n\n\n    setErrors(err);\n  };\n  const renderSaveDialog = () => ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(Alert, { css: theme => ({\n      marginTop: theme.gridUnit * 4,\n      marginBottom: theme.gridUnit * 4 }),\n    type: \"warning\", showIcon: true, message: t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`) }),\n  t('Are you sure you want to save and apply changes?'));\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null });\n\n  };\n  return ___EmotionJSX(StyledDatasourceModal, { show: show, onHide: onHide, title: ___EmotionJSX(\"span\", null,\n    t('Edit Dataset '),\n    ___EmotionJSX(\"strong\", null, currentDatasource.table_name)),\n    footer: ___EmotionJSX(React.Fragment, null,\n    isFeatureEnabled(FeatureFlag.ENABLE_REACT_CRUD_VIEWS) && ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"default\", \"data-test\": \"datasource-modal-legacy-edit\", className: \"m-r-5\", onClick: () => {\n        window.location.href =\n        currentDatasource.edit_url || currentDatasource.url;\n      } },\n    t('Use legacy datasource editor')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"datasource-modal-cancel\", buttonSize: \"small\", className: \"m-r-5\", onClick: onHide },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", \"data-test\": \"datasource-modal-save\", onClick: onClickSave, disabled: isSaving || errors.length > 0 },\n    t('Save'))),\n\n    responsive: true },\n  ___EmotionJSX(DatasourceEditor, { showLoadingForImport: true, height: 500, datasource: currentDatasource, onChange: onDatasourceChange }),\n  contextHolder);\n\n};__signature__(DatasourceModal, \"useState{[currentDatasource, setCurrentDatasource](datasource)}\\nuseState{[errors, setErrors]([])}\\nuseState{[isSaving, setIsSaving](false)}\\nuseRef{dialog}\\nuseModal{[modal, contextHolder]}\");const _default =\nwithToasts(DatasourceModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/app/superset-frontend/src/datasource/DatasourceModal.tsx\");reactHotLoader.register(StyledDatasourceModal, \"StyledDatasourceModal\", \"/app/superset-frontend/src/datasource/DatasourceModal.tsx\");reactHotLoader.register(buildMetricExtraJsonObject, \"buildMetricExtraJsonObject\", \"/app/superset-frontend/src/datasource/DatasourceModal.tsx\");reactHotLoader.register(DatasourceModal, \"DatasourceModal\", \"/app/superset-frontend/src/datasource/DatasourceModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/datasource/DatasourceModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/datasource/DatasourceModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { styled, t, SupersetClient } from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\n\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\n\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\n\ninterface DatasourceModalProps {\n  addSuccessToast: (msg: string) => void;\n  datasource: any;\n  onChange: () => {};\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => {};\n  show: boolean;\n}\n\nfunction buildMetricExtraJsonObject(metric: Record<string, unknown>) {\n  const certification =\n    metric?.certified_by || metric?.certification_details\n      ? {\n          certified_by: metric?.certified_by,\n          details: metric?.certification_details,\n        }\n      : undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: metric?.warning_markdown,\n  });\n}\n\nconst DatasourceModal: FunctionComponent<DatasourceModalProps> = ({\n  addSuccessToast,\n  datasource,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [currentDatasource, setCurrentDatasource] = useState(datasource);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const dialog = useRef<any>(null);\n  const [modal, contextHolder] = Modal.useModal();\n\n  const onConfirmSave = () => {\n    // Pull out extra fields into the extra object\n    const schema =\n      currentDatasource.tableSelector?.schema ||\n      currentDatasource.databaseSelector?.schema ||\n      currentDatasource.schema;\n\n    setIsSaving(true);\n\n    SupersetClient.post({\n      endpoint: '/datasource/save/',\n      postPayload: {\n        data: {\n          ...currentDatasource,\n          schema,\n          metrics: currentDatasource?.metrics?.map(\n            (metric: Record<string, unknown>) => ({\n              ...metric,\n              extra: buildMetricExtraJsonObject(metric),\n            }),\n          ),\n          type: currentDatasource.type || currentDatasource.datasource_type,\n        },\n      },\n    })\n      .then(({ json }) => {\n        addSuccessToast(t('The dataset has been saved'));\n        onDatasourceSave(json);\n        onHide();\n      })\n      .catch(response => {\n        setIsSaving(false);\n        getClientErrorObject(response).then(({ error }) => {\n          modal.error({\n            title: 'Error',\n            content: error || t('An error has occurred'),\n            okButtonProps: { danger: true, className: 'btn-danger' },\n          });\n        });\n      });\n  };\n\n  const onDatasourceChange = (data: Record<string, any>, err: Array<any>) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data?.metrics.map((metric: Record<string, unknown>) => ({\n        ...metric,\n        is_certified: metric?.certified_by || metric?.certification_details,\n      })),\n    });\n    setErrors(err);\n  };\n\n  const renderSaveDialog = () => (\n    <div>\n      <Alert\n        css={theme => ({\n          marginTop: theme.gridUnit * 4,\n          marginBottom: theme.gridUnit * 4,\n        })}\n        type=\"warning\"\n        showIcon\n        message={t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`)}\n      />\n      {t('Are you sure you want to save and apply changes?')}\n    </div>\n  );\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n    });\n  };\n\n  return (\n    <StyledDatasourceModal\n      show={show}\n      onHide={onHide}\n      title={\n        <span>\n          {t('Edit Dataset ')}\n          <strong>{currentDatasource.table_name}</strong>\n        </span>\n      }\n      footer={\n        <>\n          {isFeatureEnabled(FeatureFlag.ENABLE_REACT_CRUD_VIEWS) && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"default\"\n              data-test=\"datasource-modal-legacy-edit\"\n              className=\"m-r-5\"\n              onClick={() => {\n                window.location.href =\n                  currentDatasource.edit_url || currentDatasource.url;\n              }}\n            >\n              {t('Use legacy datasource editor')}\n            </Button>\n          )}\n          <Button\n            data-test=\"datasource-modal-cancel\"\n            buttonSize=\"small\"\n            className=\"m-r-5\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            data-test=\"datasource-modal-save\"\n            onClick={onClickSave}\n            disabled={isSaving || errors.length > 0}\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <DatasourceEditor\n        showLoadingForImport\n        height={500}\n        datasource={currentDatasource}\n        onChange={onDatasourceChange}\n      />\n      {contextHolder}\n    </StyledDatasourceModal>\n  );\n};\n\nexport default withToasts(DatasourceModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}