{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { styled, t } from '@superset-ui/core';\nimport { setInLocalStorage } from 'src/utils/localStorageHelpers';\nimport Loading from 'src/components/Loading';\nimport ListViewCard from 'src/components/ListViewCard';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport { mq, CardStyles, getEditedObjects } from 'src/views/CRUD/utils';\nimport { HOMEPAGE_ACTIVITY_FILTER } from 'src/views/CRUD/storageKeys';\nimport EmptyState from './EmptyState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar SetTabType;\n(function (SetTabType) {\n  SetTabType[\"EDITED\"] = \"Edited\";\n  SetTabType[\"CREATED\"] = \"Created\";\n  SetTabType[\"VIEWED\"] = \"Viewed\";\n  SetTabType[\"EXAMPLE\"] = \"Examples\";\n})(SetTabType || (SetTabType = {}));\nconst ActivityContainer = styled.div`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  margin-top: ${({ theme }) => theme.gridUnit * -4}px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(31%, max-content));\n\n  grid-gap: ${({ theme }) => theme.gridUnit * 8}px;\n  justify-content: left;\n  padding: ${({ theme }) => theme.gridUnit * 6}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  .ant-card-meta-avatar {\n    margin-top: ${({ theme }) => theme.gridUnit * 3}px;\n    margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .ant-card-meta-title {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n  ${mq[3]} {\n    grid-template-columns: repeat(auto-fit, minmax(31%, max-content));\n  }\n  ${mq[2]} {\n    grid-template-columns: repeat(auto-fit, minmax(42%, max-content));\n  }\n  ${mq[1]} {\n    grid-template-columns: repeat(auto-fit, minmax(80%, max-content));\n  }\n`;\nconst UNTITLED = t('[Untitled]');\nconst UNKNOWN_TIME = t('Unknown');\nconst getEntityTitle = entity => {\n  if ('dashboard_title' in entity)\n  return entity.dashboard_title || UNTITLED;\n  if ('slice_name' in entity)\n  return entity.slice_name || UNTITLED;\n  if ('label' in entity)\n  return entity.label || UNTITLED;\n  return entity.item_title || UNTITLED;\n};\nconst getEntityIconName = entity => {\n  if ('sql' in entity)\n  return 'sql';\n  const url = 'item_url' in entity ? entity.item_url : entity.url;\n  if (url != null && _includesInstanceProperty(url).call(url, 'dashboard')) {\n    return 'nav-dashboard';\n  }\n  if (url != null && _includesInstanceProperty(url).call(url, 'explore')) {\n    return 'nav-charts';\n  }\n  return '';\n};\nconst getEntityUrl = entity => {\n  if ('sql' in entity)\n  return `/superset/sqllab?savedQueryId=${entity.id}`;\n  if ('url' in entity)\n  return entity.url;\n  return entity.item_url;\n};\nconst getEntityLastActionOn = entity => {\n  // translation keys for last action on\n  const LAST_VIEWED = `Last viewed %s`;\n  const LAST_MODIFIED = `Last modified %s`;\n  // for Recent viewed items\n  if ('time_delta_humanized' in entity) {\n    return t(LAST_VIEWED, entity.time_delta_humanized);\n  }\n  if ('changed_on_delta_humanized' in entity) {\n    return t(LAST_MODIFIED, entity.changed_on_delta_humanized);\n  }\n  let time;\n  let translationKey = LAST_MODIFIED;\n  if ('time' in entity) {\n    // eslint-disable-next-line prefer-destructuring\n    time = entity.time;\n    translationKey = LAST_VIEWED;\n  }\n  if ('changed_on' in entity)\n  time = entity.changed_on;\n  if ('changed_on_utc' in entity)\n  time = entity.changed_on_utc;\n  return t(translationKey, time == null ? UNKNOWN_TIME : moment(time).fromNow());\n};\nexport default function ActivityTable({ activeChild, setActiveChild, activityData, user, loadedCount }) {var _activityData$activeC;\n  const [editedObjs, setEditedObjs] = useState();\n  const [loadingState, setLoadingState] = useState(false);\n  const getEditedCards = () => {\n    setLoadingState(true);\n    getEditedObjects(user.userId).then(r => {\n      setEditedObjs([...r.editedChart, ...r.editedDash]);\n      setLoadingState(false);\n    });\n  };\n  useEffect(() => {\n    if (activeChild === 'Edited') {\n      setLoadingState(true);\n      getEditedCards();\n    }\n  }, [activeChild]);\n  const tabs = [\n  {\n    name: 'Edited',\n    label: t('Edited'),\n    onClick: () => {\n      setActiveChild('Edited');\n      setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.EDITED);\n    } },\n\n  {\n    name: 'Created',\n    label: t('Created'),\n    onClick: () => {\n      setActiveChild('Created');\n      setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.CREATED);\n    } }];\n\n\n  if (activityData != null && activityData.Viewed) {\n    tabs.unshift({\n      name: 'Viewed',\n      label: t('Viewed'),\n      onClick: () => {\n        setActiveChild('Viewed');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.VIEWED);\n      } });\n\n  } else\n  {\n    tabs.unshift({\n      name: 'Examples',\n      label: t('Examples'),\n      onClick: () => {\n        setActiveChild('Examples');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.EXAMPLE);\n      } });\n\n  }\n  const renderActivity = () => {var _context;return _mapInstanceProperty(_context = activeChild !== 'Edited' ? activityData[activeChild] : editedObjs).call(_context, entity => {\n      const url = getEntityUrl(entity);\n      const lastActionOn = getEntityLastActionOn(entity);\n      return ___EmotionJSX(CardStyles, { onClick: () => {\n          window.location.href = url;\n        }, key: url },\n      ___EmotionJSX(ListViewCard, { cover: ___EmotionJSX(React.Fragment, null), url: url, title: getEntityTitle(entity), description: lastActionOn, avatar: getEntityIconName(entity), actions: null }));\n\n    });};\n  const doneFetching = loadedCount < 3;\n  if (loadingState && !editedObjs || doneFetching) {\n    return ___EmotionJSX(Loading, { position: \"inline\" });\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: activeChild, tabs: tabs }),\n  ((_activityData$activeC = activityData[activeChild]) == null ? void 0 : _activityData$activeC.length) > 0 ||\n  activeChild === 'Edited' && editedObjs && editedObjs.length > 0 ? ___EmotionJSX(ActivityContainer, null, renderActivity()) : ___EmotionJSX(EmptyState, { tableName: \"RECENTS\", tab: activeChild }));\n\n}__signature__(ActivityTable, \"useState{[editedObjs, setEditedObjs]}\\nuseState{[loadingState, setLoadingState](false)}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SetTabType, \"SetTabType\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(ActivityContainer, \"ActivityContainer\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(UNTITLED, \"UNTITLED\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(UNKNOWN_TIME, \"UNKNOWN_TIME\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(getEntityTitle, \"getEntityTitle\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(getEntityIconName, \"getEntityIconName\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(getEntityUrl, \"getEntityUrl\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(getEntityLastActionOn, \"getEntityLastActionOn\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");reactHotLoader.register(ActivityTable, \"ActivityTable\", \"/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/welcome/ActivityTable.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { styled, t } from '@superset-ui/core';\nimport { setInLocalStorage } from 'src/utils/localStorageHelpers';\n\nimport Loading from 'src/components/Loading';\nimport ListViewCard from 'src/components/ListViewCard';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport { mq, CardStyles, getEditedObjects } from 'src/views/CRUD/utils';\nimport { HOMEPAGE_ACTIVITY_FILTER } from 'src/views/CRUD/storageKeys';\nimport { Chart } from 'src/types/Chart';\nimport { Dashboard, SavedQueryObject } from 'src/views/CRUD/types';\n\nimport { ActivityData } from './Welcome';\nimport EmptyState from './EmptyState';\n\n/**\n * Return result from /superset/recent_activity/{user_id}\n */\ninterface RecentActivity {\n  action: string;\n  item_type: 'slice' | 'dashboard';\n  item_url: string;\n  item_title: string;\n  time: number;\n  time_delta_humanized?: string;\n}\n\ninterface RecentSlice extends RecentActivity {\n  item_type: 'slice';\n}\n\ninterface RecentDashboard extends RecentActivity {\n  item_type: 'dashboard';\n}\n\nenum SetTabType {\n  EDITED = 'Edited',\n  CREATED = 'Created',\n  VIEWED = 'Viewed',\n  EXAMPLE = 'Examples',\n}\n/**\n * Recent activity objects fetched by `getRecentAcitivtyObjs`.\n */\ntype ActivityObject =\n  | RecentSlice\n  | RecentDashboard\n  | Chart\n  | Dashboard\n  | SavedQueryObject;\n\ninterface ActivityProps {\n  user: {\n    userId: string | number;\n  };\n  activeChild: string;\n  setActiveChild: (arg0: string) => void;\n  activityData: ActivityData;\n  loadedCount: number;\n}\n\nconst ActivityContainer = styled.div`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  margin-top: ${({ theme }) => theme.gridUnit * -4}px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(31%, max-content));\n\n  grid-gap: ${({ theme }) => theme.gridUnit * 8}px;\n  justify-content: left;\n  padding: ${({ theme }) => theme.gridUnit * 6}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  .ant-card-meta-avatar {\n    margin-top: ${({ theme }) => theme.gridUnit * 3}px;\n    margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .ant-card-meta-title {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n  ${mq[3]} {\n    grid-template-columns: repeat(auto-fit, minmax(31%, max-content));\n  }\n  ${mq[2]} {\n    grid-template-columns: repeat(auto-fit, minmax(42%, max-content));\n  }\n  ${mq[1]} {\n    grid-template-columns: repeat(auto-fit, minmax(80%, max-content));\n  }\n`;\n\nconst UNTITLED = t('[Untitled]');\nconst UNKNOWN_TIME = t('Unknown');\n\nconst getEntityTitle = (entity: ActivityObject) => {\n  if ('dashboard_title' in entity) return entity.dashboard_title || UNTITLED;\n  if ('slice_name' in entity) return entity.slice_name || UNTITLED;\n  if ('label' in entity) return entity.label || UNTITLED;\n  return entity.item_title || UNTITLED;\n};\n\nconst getEntityIconName = (entity: ActivityObject) => {\n  if ('sql' in entity) return 'sql';\n  const url = 'item_url' in entity ? entity.item_url : entity.url;\n  if (url?.includes('dashboard')) {\n    return 'nav-dashboard';\n  }\n  if (url?.includes('explore')) {\n    return 'nav-charts';\n  }\n  return '';\n};\n\nconst getEntityUrl = (entity: ActivityObject) => {\n  if ('sql' in entity) return `/superset/sqllab?savedQueryId=${entity.id}`;\n  if ('url' in entity) return entity.url;\n  return entity.item_url;\n};\n\nconst getEntityLastActionOn = (entity: ActivityObject) => {\n  // translation keys for last action on\n  const LAST_VIEWED = `Last viewed %s`;\n  const LAST_MODIFIED = `Last modified %s`;\n\n  // for Recent viewed items\n  if ('time_delta_humanized' in entity) {\n    return t(LAST_VIEWED, entity.time_delta_humanized);\n  }\n\n  if ('changed_on_delta_humanized' in entity) {\n    return t(LAST_MODIFIED, entity.changed_on_delta_humanized);\n  }\n\n  let time: number | string | undefined | null;\n  let translationKey = LAST_MODIFIED;\n  if ('time' in entity) {\n    // eslint-disable-next-line prefer-destructuring\n    time = entity.time;\n    translationKey = LAST_VIEWED;\n  }\n  if ('changed_on' in entity) time = entity.changed_on;\n  if ('changed_on_utc' in entity) time = entity.changed_on_utc;\n\n  return t(\n    translationKey,\n    time == null ? UNKNOWN_TIME : moment(time).fromNow(),\n  );\n};\n\nexport default function ActivityTable({\n  activeChild,\n  setActiveChild,\n  activityData,\n  user,\n  loadedCount,\n}: ActivityProps) {\n  const [editedObjs, setEditedObjs] = useState<Array<ActivityData>>();\n  const [loadingState, setLoadingState] = useState(false);\n\n  const getEditedCards = () => {\n    setLoadingState(true);\n    getEditedObjects(user.userId).then(r => {\n      setEditedObjs([...r.editedChart, ...r.editedDash]);\n      setLoadingState(false);\n    });\n  };\n\n  useEffect(() => {\n    if (activeChild === 'Edited') {\n      setLoadingState(true);\n      getEditedCards();\n    }\n  }, [activeChild]);\n\n  const tabs = [\n    {\n      name: 'Edited',\n      label: t('Edited'),\n      onClick: () => {\n        setActiveChild('Edited');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.EDITED);\n      },\n    },\n    {\n      name: 'Created',\n      label: t('Created'),\n      onClick: () => {\n        setActiveChild('Created');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.CREATED);\n      },\n    },\n  ];\n\n  if (activityData?.Viewed) {\n    tabs.unshift({\n      name: 'Viewed',\n      label: t('Viewed'),\n      onClick: () => {\n        setActiveChild('Viewed');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.VIEWED);\n      },\n    });\n  } else {\n    tabs.unshift({\n      name: 'Examples',\n      label: t('Examples'),\n      onClick: () => {\n        setActiveChild('Examples');\n        setInLocalStorage(HOMEPAGE_ACTIVITY_FILTER, SetTabType.EXAMPLE);\n      },\n    });\n  }\n\n  const renderActivity = () =>\n    (activeChild !== 'Edited' ? activityData[activeChild] : editedObjs).map(\n      (entity: ActivityObject) => {\n        const url = getEntityUrl(entity);\n        const lastActionOn = getEntityLastActionOn(entity);\n        return (\n          <CardStyles\n            onClick={() => {\n              window.location.href = url;\n            }}\n            key={url}\n          >\n            <ListViewCard\n              cover={<></>}\n              url={url}\n              title={getEntityTitle(entity)}\n              description={lastActionOn}\n              avatar={getEntityIconName(entity)}\n              actions={null}\n            />\n          </CardStyles>\n        );\n      },\n    );\n\n  const doneFetching = loadedCount < 3;\n\n  if ((loadingState && !editedObjs) || doneFetching) {\n    return <Loading position=\"inline\" />;\n  }\n  return (\n    <>\n      <SubMenu activeChild={activeChild} tabs={tabs} />\n      {activityData[activeChild]?.length > 0 ||\n      (activeChild === 'Edited' && editedObjs && editedObjs.length > 0) ? (\n        <ActivityContainer>{renderActivity()}</ActivityContainer>\n      ) : (\n        <EmptyState tableName=\"RECENTS\" tab={activeChild} />\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}