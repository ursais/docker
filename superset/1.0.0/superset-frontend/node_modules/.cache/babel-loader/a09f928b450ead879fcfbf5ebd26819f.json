{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport getToastsFromPyFlashMessages from 'src/messageToasts/utils/getToastsFromPyFlashMessages';\nimport { getChartKey } from 'src/explore/exploreUtils';\nimport { getControlsState } from 'src/explore/store';\nimport { getFormDataFromControls, applyMapStateToPropsToControl } from 'src/explore/controlUtils';\nexport default function getInitialState(bootstrapData) {var _context;\n  const { form_data: initialFormData } = bootstrapData;\n  const { slice } = bootstrapData;\n  const sliceName = slice ? slice.slice_name : null;\n  const exploreState = {\n    // note this will add `form_data` to state,\n    // which will be manipulatable by future reducers.\n    ...bootstrapData,\n    sliceName,\n    common: {\n      flash_messages: bootstrapData.common.flash_messages,\n      conf: bootstrapData.common.conf },\n\n    isDatasourceMetaLoading: false,\n    isStarred: false,\n    // Initial control state will skip `control.mapStateToProps`\n    // because `bootstrapData.controls` is undefined.\n    controls: getControlsState(bootstrapData, initialFormData) };\n\n  // apply initial mapStateToProps for all controls, must execute AFTER\n  // bootstrapState has initialized `controls`. Order of execution is not\n  // guaranteed, so controls shouldn't rely on the each other's mapped state.\n  _forEachInstanceProperty(_context = _Object$entries(exploreState.controls)).call(_context, ([key, controlState]) => {\n    exploreState.controls[key] = applyMapStateToPropsToControl(controlState, exploreState);\n  });\n  const sliceFormData = slice ?\n  getFormDataFromControls(getControlsState(bootstrapData, slice.form_data)) :\n  null;\n  const chartKey = getChartKey(bootstrapData);\n  const chart = {\n    id: chartKey,\n    chartAlert: null,\n    chartStatus: null,\n    chartStackTrace: null,\n    chartUpdateEndTime: null,\n    chartUpdateStartTime: 0,\n    latestQueryFormData: getFormDataFromControls(exploreState.controls),\n    sliceFormData,\n    queryController: null,\n    queriesResponse: null,\n    triggerQuery: false,\n    lastRendered: 0 };\n\n  return {\n    charts: {\n      [chartKey]: chart },\n\n    saveModal: {\n      dashboards: [],\n      saveModalAlert: null },\n\n    explore: exploreState,\n    impressionId: shortid.generate(),\n    messageToasts: getToastsFromPyFlashMessages((bootstrapData.common || {}).flash_messages || []) };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getInitialState, \"getInitialState\", \"/app/superset-frontend/src/explore/reducers/getInitialState.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/reducers/getInitialState.ts"],"names":[],"mappings":"mhBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,OAAP,MAAoB,SAApB;AAOA,OAAO,4BAAP,MAAyC,sDAAzC;AAGA,SAAS,WAAT,QAA4B,0BAA5B;AACA,SAAS,gBAAT,QAAiC,mBAAjC;AACA,SACE,uBADF,EAEE,6BAFF,QAGO,0BAHP;AAoBA,eAAc,SAAU,eAAV,CACZ,aADY,EAC0B;AAEtC,QAAM,EAAE,SAAS,EAAE,eAAb,KAAiC,aAAvC;AACA,QAAM,EAAE,KAAF,KAAY,aAAlB;AACA,QAAM,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,UAAT,GAAsB,IAA7C;AAEA,QAAM,YAAY,GAAG;AACnB;AACA;AACA,OAAG,aAHgB;AAInB,IAAA,SAJmB;AAKnB,IAAA,MAAM,EAAE;AACN,MAAA,cAAc,EAAE,aAAa,CAAC,MAAd,CAAqB,cAD/B;AAEN,MAAA,IAAI,EAAE,aAAa,CAAC,MAAd,CAAqB,IAFrB,EALW;;AASnB,IAAA,uBAAuB,EAAE,KATN;AAUnB,IAAA,SAAS,EAAE,KAVQ;AAWnB;AACA;AACA,IAAA,QAAQ,EAAE,gBAAgB,CACxB,aADwB,EAExB,eAFwB,CAbP,EAArB;;AAmBA;AACA;AACA;AACA,sDAAe,YAAY,CAAC,QAA5B,kBAA8C,CAAC,CAAC,GAAD,EAAM,YAAN,CAAD,KAAwB;AACpE,IAAA,YAAY,CAAC,QAAb,CAAsB,GAAtB,IAA6B,6BAA6B,CACxD,YADwD,EAExD,YAFwD,CAA1D;AAID,GALD;AAOA,QAAM,aAAa,GAAG,KAAK;AACvB,EAAA,uBAAuB,CAAC,gBAAgB,CAAC,aAAD,EAAgB,KAAK,CAAC,SAAtB,CAAjB,CADA;AAEvB,MAFJ;AAIA,QAAM,QAAQ,GAAW,WAAW,CAAC,aAAD,CAApC;AACA,QAAM,KAAK,GAAe;AACxB,IAAA,EAAE,EAAE,QADoB;AAExB,IAAA,UAAU,EAAE,IAFY;AAGxB,IAAA,WAAW,EAAE,IAHW;AAIxB,IAAA,eAAe,EAAE,IAJO;AAKxB,IAAA,kBAAkB,EAAE,IALI;AAMxB,IAAA,oBAAoB,EAAE,CANE;AAOxB,IAAA,mBAAmB,EAAE,uBAAuB,CAAC,YAAY,CAAC,QAAd,CAPpB;AAQxB,IAAA,aARwB;AASxB,IAAA,eAAe,EAAE,IATO;AAUxB,IAAA,eAAe,EAAE,IAVO;AAWxB,IAAA,YAAY,EAAE,KAXU;AAYxB,IAAA,YAAY,EAAE,CAZU,EAA1B;;AAeA,SAAO;AACL,IAAA,MAAM,EAAE;AACN,OAAC,QAAD,GAAY,KADN,EADH;;AAIL,IAAA,SAAS,EAAE;AACT,MAAA,UAAU,EAAE,EADH;AAET,MAAA,cAAc,EAAE,IAFP,EAJN;;AAQL,IAAA,OAAO,EAAE,YARJ;AASL,IAAA,YAAY,EAAE,OAAO,CAAC,QAAR,EATT;AAUL,IAAA,aAAa,EAAE,4BAA4B,CACzC,CAAC,aAAa,CAAC,MAAd,IAAwB,EAAzB,EAA6B,cAA7B,IAA+C,EADN,CAVtC,EAAP;;AAcD,C,iLAtEuB,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\nimport { DatasourceType, JsonObject, QueryFormData } from '@superset-ui/core';\nimport {\n  ControlStateMapping,\n  DatasourceMeta,\n} from '@superset-ui/chart-controls';\nimport { CommonBootstrapData } from 'src/types/bootstrapTypes';\nimport getToastsFromPyFlashMessages from 'src/messageToasts/utils/getToastsFromPyFlashMessages';\n\nimport { ChartState, Slice } from 'src/explore/types';\nimport { getChartKey } from 'src/explore/exploreUtils';\nimport { getControlsState } from 'src/explore/store';\nimport {\n  getFormDataFromControls,\n  applyMapStateToPropsToControl,\n} from 'src/explore/controlUtils';\n\nexport interface ExlorePageBootstrapData extends JsonObject {\n  can_add: boolean;\n  can_download: boolean;\n  can_overwrite: boolean;\n  datasource: DatasourceMeta;\n  form_data: QueryFormData;\n  datasource_id: number;\n  datasource_type: DatasourceType;\n  slice: Slice | null;\n  standalone: boolean;\n  user_id: number;\n  forced_height: string | null;\n  common: CommonBootstrapData;\n}\n\nexport default function getInitialState(\n  bootstrapData: ExlorePageBootstrapData,\n) {\n  const { form_data: initialFormData } = bootstrapData;\n  const { slice } = bootstrapData;\n  const sliceName = slice ? slice.slice_name : null;\n\n  const exploreState = {\n    // note this will add `form_data` to state,\n    // which will be manipulatable by future reducers.\n    ...bootstrapData,\n    sliceName,\n    common: {\n      flash_messages: bootstrapData.common.flash_messages,\n      conf: bootstrapData.common.conf,\n    },\n    isDatasourceMetaLoading: false,\n    isStarred: false,\n    // Initial control state will skip `control.mapStateToProps`\n    // because `bootstrapData.controls` is undefined.\n    controls: getControlsState(\n      bootstrapData,\n      initialFormData,\n    ) as ControlStateMapping,\n  };\n\n  // apply initial mapStateToProps for all controls, must execute AFTER\n  // bootstrapState has initialized `controls`. Order of execution is not\n  // guaranteed, so controls shouldn't rely on the each other's mapped state.\n  Object.entries(exploreState.controls).forEach(([key, controlState]) => {\n    exploreState.controls[key] = applyMapStateToPropsToControl(\n      controlState,\n      exploreState,\n    );\n  });\n\n  const sliceFormData = slice\n    ? getFormDataFromControls(getControlsState(bootstrapData, slice.form_data))\n    : null;\n\n  const chartKey: number = getChartKey(bootstrapData);\n  const chart: ChartState = {\n    id: chartKey,\n    chartAlert: null,\n    chartStatus: null,\n    chartStackTrace: null,\n    chartUpdateEndTime: null,\n    chartUpdateStartTime: 0,\n    latestQueryFormData: getFormDataFromControls(exploreState.controls),\n    sliceFormData,\n    queryController: null,\n    queriesResponse: null,\n    triggerQuery: false,\n    lastRendered: 0,\n  };\n\n  return {\n    charts: {\n      [chartKey]: chart,\n    },\n    saveModal: {\n      dashboards: [],\n      saveModalAlert: null,\n    },\n    explore: exploreState,\n    impressionId: shortid.generate(),\n    messageToasts: getToastsFromPyFlashMessages(\n      (bootstrapData.common || {}).flash_messages || [],\n    ),\n  };\n}\n\nexport type ExplorePageState = ReturnType<typeof getInitialState>;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}