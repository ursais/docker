{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport HoverMenu from '../menu/HoverMenu';\nimport IconButton from '../IconButton';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport BackgroundStyleDropdown from '../menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from '../menu/WithPopoverMenu';\n\nimport backgroundStyleOptions from '../../util/backgroundStyleOptions';\nimport { componentShape } from '../../util/propShapes';\n\nimport { BACKGROUND_TRANSPARENT } from '../../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nconst defaultProps = {};\n\nclass Column extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.state = {\n      isFocused: false };\n\n    this.handleChangeBackground = _bindInstanceProperty(_context = this.handleUpdateMeta).call(_context,\n    this,\n    'background');\n\n    this.handleChangeFocus = _bindInstanceProperty(_context2 = this.handleChangeFocus).call(_context2, this);\n    this.handleDeleteComponent = _bindInstanceProperty(_context3 = this.handleDeleteComponent).call(_context3, this);\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue } } });\n\n\n\n    }\n  }\n\n  render() {\n    const {\n      component: columnComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      minColumnWidth,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible } =\n    this.props;\n\n    const columnItems = columnComponent.children || [];\n    const backgroundStyle = _findInstanceProperty(backgroundStyleOptions).call(backgroundStyleOptions,\n    (opt) =>\n    opt.value === (\n    columnComponent.meta.background || BACKGROUND_TRANSPARENT));\n\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: columnComponent,\n        parentComponent: parentComponent,\n        orientation: \"column\",\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        editMode: editMode },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(ResizableContainer, {\n        id: columnComponent.id,\n        adjustableWidth: true,\n        adjustableHeight: false,\n        widthStep: columnWidth,\n        widthMultiple: columnComponent.meta.width,\n        minWidthMultiple: minColumnWidth,\n        maxWidthMultiple:\n        availableColumnCount + (columnComponent.meta.width || 0),\n\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        editMode: editMode },\n\n      ___EmotionJSX(WithPopoverMenu, {\n        isFocused: this.state.isFocused,\n        onChangeFocus: this.handleChangeFocus,\n        disableClick: true,\n        menuItems: [\n        ___EmotionJSX(BackgroundStyleDropdown, {\n          id: `${columnComponent.id}-background`,\n          value: columnComponent.meta.background,\n          onChange: this.handleChangeBackground })],\n\n\n        editMode: editMode },\n\n      editMode &&\n      ___EmotionJSX(HoverMenu, { innerRef: dragSourceRef, position: \"top\" },\n      ___EmotionJSX(DragHandle, { position: \"top\" }),\n      ___EmotionJSX(DeleteComponentButton, {\n        onDelete: this.handleDeleteComponent }),\n\n      ___EmotionJSX(IconButton, {\n        onClick: this.handleChangeFocus,\n        className: \"fa fa-cog\" })),\n\n\n\n      ___EmotionJSX(\"div\", {\n        className: cx(\n        'grid-column',\n        columnItems.length === 0 && 'grid-column--empty',\n        backgroundStyle.className) },\n\n\n      _mapInstanceProperty(columnItems).call(columnItems, (componentId, itemIndex) =>\n      ___EmotionJSX(DashboardComponent, {\n        key: componentId,\n        id: componentId,\n        parentId: columnComponent.id,\n        depth: depth + 1,\n        index: itemIndex,\n        availableColumnCount: columnComponent.meta.width,\n        columnWidth: columnWidth,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        isComponentVisible: isComponentVisible })),\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;const _default =\n\nColumn;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(Column, \"Column\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx"],"names":["React","PropTypes","cx","DashboardComponent","DeleteComponentButton","DragDroppable","DragHandle","HoverMenu","IconButton","ResizableContainer","BackgroundStyleDropdown","WithPopoverMenu","backgroundStyleOptions","componentShape","BACKGROUND_TRANSPARENT","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","minColumnWidth","onResizeStart","func","onResize","onResizeStop","deleteComponent","handleComponentDrop","updateComponents","defaultProps","Column","PureComponent","constructor","props","state","isFocused","handleChangeBackground","handleUpdateMeta","handleChangeFocus","handleDeleteComponent","nextFocus","setState","Boolean","metaKey","nextValue","meta","render","columnComponent","isComponentVisible","columnItems","children","backgroundStyle","opt","value","background","dropIndicatorProps","dragSourceRef","width","length","className","componentId","itemIndex"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport HoverMenu from '../menu/HoverMenu';\nimport IconButton from '../IconButton';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport BackgroundStyleDropdown from '../menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from '../menu/WithPopoverMenu';\n\nimport backgroundStyleOptions from '../../util/backgroundStyleOptions';\nimport { componentShape } from '../../util/propShapes';\n\nimport { BACKGROUND_TRANSPARENT } from '../../util/constants';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {};\n\nclass Column extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n    };\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n      this,\n      'background',\n    );\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue,\n          },\n        },\n      });\n    }\n  }\n\n  render() {\n    const {\n      component: columnComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      minColumnWidth,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n    } = this.props;\n\n    const columnItems = columnComponent.children || [];\n    const backgroundStyle = backgroundStyleOptions.find(\n      opt =>\n        opt.value ===\n        (columnComponent.meta.background || BACKGROUND_TRANSPARENT),\n    );\n\n    return (\n      <DragDroppable\n        component={columnComponent}\n        parentComponent={parentComponent}\n        orientation=\"column\"\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <ResizableContainer\n            id={columnComponent.id}\n            adjustableWidth\n            adjustableHeight={false}\n            widthStep={columnWidth}\n            widthMultiple={columnComponent.meta.width}\n            minWidthMultiple={minColumnWidth}\n            maxWidthMultiple={\n              availableColumnCount + (columnComponent.meta.width || 0)\n            }\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            editMode={editMode}\n          >\n            <WithPopoverMenu\n              isFocused={this.state.isFocused}\n              onChangeFocus={this.handleChangeFocus}\n              disableClick\n              menuItems={[\n                <BackgroundStyleDropdown\n                  id={`${columnComponent.id}-background`}\n                  value={columnComponent.meta.background}\n                  onChange={this.handleChangeBackground}\n                />,\n              ]}\n              editMode={editMode}\n            >\n              {editMode && (\n                <HoverMenu innerRef={dragSourceRef} position=\"top\">\n                  <DragHandle position=\"top\" />\n                  <DeleteComponentButton\n                    onDelete={this.handleDeleteComponent}\n                  />\n                  <IconButton\n                    onClick={this.handleChangeFocus}\n                    className=\"fa fa-cog\"\n                  />\n                </HoverMenu>\n              )}\n              <div\n                className={cx(\n                  'grid-column',\n                  columnItems.length === 0 && 'grid-column--empty',\n                  backgroundStyle.className,\n                )}\n              >\n                {columnItems.map((componentId, itemIndex) => (\n                  <DashboardComponent\n                    key={componentId}\n                    id={componentId}\n                    parentId={columnComponent.id}\n                    depth={depth + 1}\n                    index={itemIndex}\n                    availableColumnCount={columnComponent.meta.width}\n                    columnWidth={columnWidth}\n                    onResizeStart={onResizeStart}\n                    onResize={onResize}\n                    onResizeStop={onResizeStop}\n                    isComponentVisible={isComponentVisible}\n                  />\n                ))}\n\n                {dropIndicatorProps && <div {...dropIndicatorProps} />}\n              </div>\n            </WithPopoverMenu>\n          </ResizableContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}