{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { formatSelectOptions } from 'src/modules/utils';const _default =\n\n{\n  controlPanelSections: [\n  {\n    label: t('Code'),\n    controlSetRows: [\n    [\n    {\n      name: 'markup_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Markup type'),\n        clearable: false,\n        choices: formatSelectOptions(['markdown', 'html']),\n        default: 'markdown',\n        validators: [validateNonEmpty],\n        description: t('Pick your favorite markup language') } }],\n\n\n\n    [\n    {\n      name: 'code',\n      config: {\n        type: 'TextAreaControl',\n        label: t('Code'),\n        description: t('Put your code here'),\n        mapStateToProps: state => ({\n          language:\n          state.controls && state.controls.markup_type ?\n          state.controls.markup_type.value :\n          'markdown' }),\n\n        default: '' } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    code: {\n      default:\n      '####Section Title\\n' +\n      'A paragraph describing the section ' +\n      'of the dashboard, right before the separator line ' +\n      '\\n\\n' +\n      '---------------' } },\n\n\n  sectionOverrides: {\n    druidTimeSeries: {\n      controlSetRows: [] },\n\n    sqlaTimeSeries: {\n      controlSetRows: [] } } };export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/controlPanels/Separator.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/controlPanels/Separator.js"],"names":["t","validateNonEmpty","formatSelectOptions","controlPanelSections","label","controlSetRows","name","config","type","clearable","choices","default","validators","description","mapStateToProps","state","language","controls","markup_type","value","controlOverrides","code","sectionOverrides","druidTimeSeries","sqlaTimeSeries"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAT,EAAYC,gBAAZ,QAAoC,mBAApC;AACA,SAASC,mBAAT,QAAoC,mBAApC,C;;AAEe;AACbC,EAAAA,oBAAoB,EAAE;AACpB;AACEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,MAAD,CADV;AAEEK,IAAAA,cAAc,EAAE;AACd;AACE;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,eADA;AAENJ,QAAAA,KAAK,EAAEJ,CAAC,CAAC,aAAD,CAFF;AAGNS,QAAAA,SAAS,EAAE,KAHL;AAINC,QAAAA,OAAO,EAAER,mBAAmB,CAAC,CAAC,UAAD,EAAa,MAAb,CAAD,CAJtB;AAKNS,QAAAA,OAAO,EAAE,UALH;AAMNC,QAAAA,UAAU,EAAE,CAACX,gBAAD,CANN;AAONY,QAAAA,WAAW,EAAEb,CAAC,CAAC,oCAAD,CAPR,EAFV,EADF,CADc;;;;AAed;AACE;AACEM,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,iBADA;AAENJ,QAAAA,KAAK,EAAEJ,CAAC,CAAC,MAAD,CAFF;AAGNa,QAAAA,WAAW,EAAEb,CAAC,CAAC,oBAAD,CAHR;AAINc,QAAAA,eAAe,EAAEC,KAAK,KAAK;AACzBC,UAAAA,QAAQ;AACND,UAAAA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,WAAjC;AACIH,UAAAA,KAAK,CAACE,QAAN,CAAeC,WAAf,CAA2BC,KAD/B;AAEI,oBAJmB,EAAL,CAJhB;;AAUNR,QAAAA,OAAO,EAAE,EAVH,EAFV,EADF,CAfc,CAFlB,EADoB,CADT;;;;;;;AAuCbS,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,IAAI,EAAE;AACJV,MAAAA,OAAO;AACL;AACA,2CADA;AAEA,0DAFA;AAGA,YAHA;AAIA,uBANE,EADU,EAvCL;;;AAiDbW,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,eAAe,EAAE;AACflB,MAAAA,cAAc,EAAE,EADD,EADD;;AAIhBmB,IAAAA,cAAc,EAAE;AACdnB,MAAAA,cAAc,EAAE,EADF,EAJA,EAjDL,E,CAAf,wB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { formatSelectOptions } from 'src/modules/utils';\n\nexport default {\n  controlPanelSections: [\n    {\n      label: t('Code'),\n      controlSetRows: [\n        [\n          {\n            name: 'markup_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Markup type'),\n              clearable: false,\n              choices: formatSelectOptions(['markdown', 'html']),\n              default: 'markdown',\n              validators: [validateNonEmpty],\n              description: t('Pick your favorite markup language'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'code',\n            config: {\n              type: 'TextAreaControl',\n              label: t('Code'),\n              description: t('Put your code here'),\n              mapStateToProps: state => ({\n                language:\n                  state.controls && state.controls.markup_type\n                    ? state.controls.markup_type.value\n                    : 'markdown',\n              }),\n              default: '',\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    code: {\n      default:\n        '####Section Title\\n' +\n        'A paragraph describing the section ' +\n        'of the dashboard, right before the separator line ' +\n        '\\n\\n' +\n        '---------------',\n    },\n  },\n  sectionOverrides: {\n    druidTimeSeries: {\n      controlSetRows: [],\n    },\n    sqlaTimeSeries: {\n      controlSetRows: [],\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}