{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const cacheWrapper = (fn, cache, keyFn = (...args) => _JSON$stringify([...args])) => (...args) => {\n  const key = keyFn(...args);\n  if (cache.has(key)) {\n    return cache.get(key);\n  }\n  const result = fn(...args);\n  cache.set(key, result);\n  return result;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(cacheWrapper, \"cacheWrapper\", \"/app/superset-frontend/src/utils/cacheWrapper.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/cacheWrapper.ts"],"names":[],"mappings":"obAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,MAAM,YAAY,GAAG,CAC1B,EAD0B,EAE1B,KAF0B,EAG1B,KAAA,GAAgC,CAAC,GAAG,IAAJ,KAAgB,gBAAe,CAAC,GAAG,IAAJ,CAAf,CAHtB,KAIvB,CAAC,GAAG,IAAJ,KAAkB;AACrB,QAAM,GAAG,GAAG,KAAK,CAAC,GAAG,IAAJ,CAAjB;AACA,MAAI,KAAK,CAAC,GAAN,CAAU,GAAV,CAAJ,EAAoB;AAClB,WAAO,KAAK,CAAC,GAAN,CAAU,GAAV,CAAP;AACD;AACD,QAAM,MAAM,GAAG,EAAE,CAAC,GAAG,IAAJ,CAAjB;AACA,EAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,MAAf;AACA,SAAO,MAAP;AACD,CAZM,C,iLAAM,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const cacheWrapper = <T extends Array<any>, U>(\n  fn: (...args: T) => U,\n  cache: Map<string, any>,\n  keyFn: (...args: T) => string = (...args: T) => JSON.stringify([...args]),\n) => (...args: T): U => {\n  const key = keyFn(...args);\n  if (cache.has(key)) {\n    return cache.get(key);\n  }\n  const result = fn(...args);\n  cache.set(key, result);\n  return result;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}