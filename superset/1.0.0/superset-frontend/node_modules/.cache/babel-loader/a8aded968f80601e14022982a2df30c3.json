{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DASHBOARD_GRID_ID, DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport findTabIndexByComponentId from 'src/dashboard/util/findTabIndexByComponentId';\nexport const getRootLevelTabsComponent = dashboardLayout => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot.children[0];\n  return rootChildId === DASHBOARD_GRID_ID ?\n  dashboardLayout[DASHBOARD_ROOT_ID] :\n  dashboardLayout[rootChildId];\n};\nexport const shouldFocusTabs = (event, container) =>\n// don't focus the tabs when we click on a tab\nevent.target.className === 'ant-tabs-nav-wrap' ||\n/icon-button/.test(event.target.className) &&\ncontainer.contains(event.target);\nexport const getRootLevelTabIndex = (dashboardLayout, directPathToChild) => Math.max(0, findTabIndexByComponentId({\n  currentComponent: getRootLevelTabsComponent(dashboardLayout),\n  directPathToChild }));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getRootLevelTabsComponent, \"getRootLevelTabsComponent\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts\");reactHotLoader.register(shouldFocusTabs, \"shouldFocusTabs\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts\");reactHotLoader.register(getRootLevelTabIndex, \"getRootLevelTabIndex\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SACE,iBADF,EAEE,iBAFF,QAGO,8BAHP;AAKA,OAAO,yBAAP,MAAsC,8CAAtC;AAEA,OAAO,MAAM,yBAAyB,GAAI,eAAD,IAAqC;AAC5E,QAAM,aAAa,GAAG,eAAe,CAAC,iBAAD,CAArC;AACA,QAAM,WAAW,GAAG,aAAa,CAAC,QAAd,CAAuB,CAAvB,CAApB;AACA,SAAO,WAAW,KAAK,iBAAhB;AACH,EAAA,eAAe,CAAC,iBAAD,CADZ;AAEH,EAAA,eAAe,CAAC,WAAD,CAFnB;AAGD,CANM;AAQP,OAAO,MAAM,eAAe,GAAG,CAC7B,KAD6B,EAE7B,SAF6B;AAI7B;AACA,KAAK,CAAC,MAAN,CAAa,SAAb,KAA2B,mBAA3B;AACC,cAAc,IAAd,CAAmB,KAAK,CAAC,MAAN,CAAa,SAAhC;AACC,SAAS,CAAC,QAAV,CAAmB,KAAK,CAAC,MAAzB,CAPG;AASP,OAAO,MAAM,oBAAoB,GAAG,CAClC,eADkC,EAElC,iBAFkC,KAIlC,IAAI,CAAC,GAAL,CACE,CADF,EAEE,yBAAyB,CAAC;AACxB,EAAA,gBAAgB,EAAE,yBAAyB,CAAC,eAAD,CADnB;AAExB,EAAA,iBAFwB,EAAD,CAF3B,CAJK,C,iLAjBM,yB,oIAQA,e,0HASA,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_GRID_ID,\n  DASHBOARD_ROOT_ID,\n} from 'src/dashboard/util/constants';\nimport { DashboardLayout } from 'src/dashboard/types';\nimport findTabIndexByComponentId from 'src/dashboard/util/findTabIndexByComponentId';\n\nexport const getRootLevelTabsComponent = (dashboardLayout: DashboardLayout) => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot.children[0];\n  return rootChildId === DASHBOARD_GRID_ID\n    ? dashboardLayout[DASHBOARD_ROOT_ID]\n    : dashboardLayout[rootChildId];\n};\n\nexport const shouldFocusTabs = (\n  event: { target: { className: string } },\n  container: { contains: (arg0: any) => any },\n) =>\n  // don't focus the tabs when we click on a tab\n  event.target.className === 'ant-tabs-nav-wrap' ||\n  (/icon-button/.test(event.target.className) &&\n    container.contains(event.target));\n\nexport const getRootLevelTabIndex = (\n  dashboardLayout: DashboardLayout,\n  directPathToChild: string[],\n): number =>\n  Math.max(\n    0,\n    findTabIndexByComponentId({\n      currentComponent: getRootLevelTabsComponent(dashboardLayout),\n      directPathToChild,\n    }),\n  );\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}