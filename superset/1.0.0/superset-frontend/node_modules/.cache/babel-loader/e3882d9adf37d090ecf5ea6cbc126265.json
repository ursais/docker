{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { MetricOption, ColumnOption } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst OptionContainer = styled.div`\n  > span {\n    display: flex;\n    align-items: center;\n  }\n\n  .option-label {\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    & ~ i {\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\nexport const StyledMetricOption = props => ___EmotionJSX(OptionContainer, null,\n___EmotionJSX(MetricOption, props));\n\nexport const StyledColumnOption = props => ___EmotionJSX(OptionContainer, null,\n___EmotionJSX(ColumnOption, props));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OptionContainer, \"OptionContainer\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");reactHotLoader.register(StyledMetricOption, \"StyledMetricOption\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");reactHotLoader.register(StyledColumnOption, \"StyledColumnOption\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/optionRenderers.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SACE,YADF,EAEE,YAFF,QAKO,6BALP,C;AAOA,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG;;;;;;;;;;;;qBAYb,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;;;;oBAI9B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;aACxC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;mBAG3B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAAyB,IAAI;;AAE9D,CAtBD;AAwBA,OAAO,MAAM,kBAAkB,GAAI,KAAD,IAChC,cAAC,eAAD;AACE,cAAC,YAAD,EAAkB,KAAlB,CADF,CADK;;AAMP,OAAO,MAAM,kBAAkB,GAAI,KAAD,IAChC,cAAC,eAAD;AACE,cAAC,YAAD,EAAkB,KAAlB,CADF,CADK,C,iLA9BD,e,kHAwBO,kB,qHAMA,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport {\n  MetricOption,\n  ColumnOption,\n  MetricOptionProps,\n  ColumnOptionProps,\n} from '@superset-ui/chart-controls';\n\nconst OptionContainer = styled.div`\n  > span {\n    display: flex;\n    align-items: center;\n  }\n\n  .option-label {\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    & ~ i {\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nexport const StyledMetricOption = (props: MetricOptionProps) => (\n  <OptionContainer>\n    <MetricOption {...props} />\n  </OptionContainer>\n);\n\nexport const StyledColumnOption = (props: ColumnOptionProps) => (\n  <OptionContainer>\n    <ColumnOption {...props} />\n  </OptionContainer>\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}