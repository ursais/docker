{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { componentLookup } from '../components/gridComponents';\nimport getDetailedComponentWidth from '../util/getDetailedComponentWidth';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { componentShape } from '../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../util/componentTypes';\n\nimport {\ncreateComponent,\ndeleteComponent,\nupdateComponents,\nhandleComponentDrop } from\n'../actions/dashboardLayout';\nimport { setDirectPathToChild, setActiveTabs } from '../actions/dashboardState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string,\n  parentId: PropTypes.string,\n  depth: PropTypes.number,\n  index: PropTypes.number,\n  renderHoverMenu: PropTypes.bool,\n  renderTabContent: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  createComponent: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  dashboardId: PropTypes.number.isRequired,\n  isComponentVisible: PropTypes.bool };\n\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n  isComponentVisible: true };\n\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column] };\n\n}\n\nfunction mapStateToProps(\n{\n  dashboardLayout: undoableLayout,\n  dashboardState,\n  dashboardInfo,\n  dashboardFilters,\n  nativeFilters },\n\nownProps)\n{\n  const dashboardLayout = undoableLayout.present;\n  const { id, parentId } = ownProps;\n  const component = dashboardLayout[id];\n  const props = {\n    component,\n    dashboardLayout,\n    parentComponent: dashboardLayout[parentId],\n    editMode: dashboardState.editMode,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    filters: getActiveFilters(),\n    directPathToChild: dashboardState.directPathToChild,\n    activeTabs: dashboardState.activeTabs,\n    directPathLastUpdated: dashboardState.directPathLastUpdated,\n    dashboardId: dashboardInfo.id,\n    nativeFilters,\n    focusedFilterScope: selectFocusedFilterScope(\n    dashboardState,\n    dashboardFilters) };\n\n\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  if (component) {\n    const componentType = component.type;\n    if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n      const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n        id,\n        components: dashboardLayout });\n\n\n      if (componentType === ROW_TYPE) props.occupiedColumnCount = occupiedWidth;\n      if (componentType === COLUMN_TYPE) props.minColumnWidth = minimumWidth;\n    }\n  }\n\n  return props;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    addDangerToast,\n    createComponent,\n    deleteComponent,\n    updateComponents,\n    handleComponentDrop,\n    setDirectPathToChild,\n    setActiveTabs,\n    logEvent },\n\n  dispatch);\n\n}\n\nclass DashboardComponent extends React.PureComponent {\n  render() {\n    const { component } = this.props;\n    const Component = component ? componentLookup[component.type] : null;\n    return Component ? ___EmotionJSX(Component, this.props) : null;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardComponent.propTypes = propTypes;\nDashboardComponent.defaultProps = defaultProps;const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(DashboardComponent);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(selectFocusedFilterScope, \"selectFocusedFilterScope\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(DashboardComponent, \"DashboardComponent\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx"],"names":["React","PropTypes","bindActionCreators","connect","logEvent","addDangerToast","componentLookup","getDetailedComponentWidth","getActiveFilters","componentShape","COLUMN_TYPE","ROW_TYPE","createComponent","deleteComponent","updateComponents","handleComponentDrop","setDirectPathToChild","setActiveTabs","propTypes","id","string","parentId","depth","number","index","renderHoverMenu","bool","renderTabContent","onChangeTab","func","component","isRequired","parentComponent","directPathToChild","arrayOf","directPathLastUpdated","dashboardId","isComponentVisible","defaultProps","selectFocusedFilterScope","dashboardState","dashboardFilters","focusedFilterField","chartId","column","scope","scopes","mapStateToProps","dashboardLayout","undoableLayout","dashboardInfo","nativeFilters","ownProps","present","props","editMode","undoLength","past","length","redoLength","future","filters","activeTabs","focusedFilterScope","componentType","type","occupiedWidth","minimumWidth","components","occupiedColumnCount","minColumnWidth","mapDispatchToProps","dispatch","DashboardComponent","PureComponent","render","Component"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { componentLookup } from '../components/gridComponents';\nimport getDetailedComponentWidth from '../util/getDetailedComponentWidth';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { componentShape } from '../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../util/componentTypes';\n\nimport {\n  createComponent,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop,\n} from '../actions/dashboardLayout';\nimport { setDirectPathToChild, setActiveTabs } from '../actions/dashboardState';\n\nconst propTypes = {\n  id: PropTypes.string,\n  parentId: PropTypes.string,\n  depth: PropTypes.number,\n  index: PropTypes.number,\n  renderHoverMenu: PropTypes.bool,\n  renderTabContent: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  createComponent: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  dashboardId: PropTypes.number.isRequired,\n  isComponentVisible: PropTypes.bool,\n};\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n  isComponentVisible: true,\n};\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column],\n  };\n}\n\nfunction mapStateToProps(\n  {\n    dashboardLayout: undoableLayout,\n    dashboardState,\n    dashboardInfo,\n    dashboardFilters,\n    nativeFilters,\n  },\n  ownProps,\n) {\n  const dashboardLayout = undoableLayout.present;\n  const { id, parentId } = ownProps;\n  const component = dashboardLayout[id];\n  const props = {\n    component,\n    dashboardLayout,\n    parentComponent: dashboardLayout[parentId],\n    editMode: dashboardState.editMode,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    filters: getActiveFilters(),\n    directPathToChild: dashboardState.directPathToChild,\n    activeTabs: dashboardState.activeTabs,\n    directPathLastUpdated: dashboardState.directPathLastUpdated,\n    dashboardId: dashboardInfo.id,\n    nativeFilters,\n    focusedFilterScope: selectFocusedFilterScope(\n      dashboardState,\n      dashboardFilters,\n    ),\n  };\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  if (component) {\n    const componentType = component.type;\n    if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n      const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n        id,\n        components: dashboardLayout,\n      });\n\n      if (componentType === ROW_TYPE) props.occupiedColumnCount = occupiedWidth;\n      if (componentType === COLUMN_TYPE) props.minColumnWidth = minimumWidth;\n    }\n  }\n\n  return props;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addDangerToast,\n      createComponent,\n      deleteComponent,\n      updateComponents,\n      handleComponentDrop,\n      setDirectPathToChild,\n      setActiveTabs,\n      logEvent,\n    },\n    dispatch,\n  );\n}\n\nclass DashboardComponent extends React.PureComponent {\n  render() {\n    const { component } = this.props;\n    const Component = component ? componentLookup[component.type] : null;\n    return Component ? <Component {...this.props} /> : null;\n  }\n}\n\nDashboardComponent.propTypes = propTypes;\nDashboardComponent.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardComponent);\n"]},"metadata":{},"sourceType":"module"}