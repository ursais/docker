{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport PopoverDropdown from 'src/components/PopoverDropdown';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction renderButton(option) {\n  return ___EmotionJSX(\"div\", { className: cx('background-style-option', option.className) },\n  `${option.label} background`);\n\n}\nfunction renderOption(option) {\n  return ___EmotionJSX(\"div\", { className: cx('background-style-option', option.className) },\n  option.label);\n\n}\nexport default class BackgroundStyleDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return ___EmotionJSX(PopoverDropdown, { id: id, options: backgroundStyleOptions, value: value, onChange: onChange, renderButton: renderButton, renderOption: renderOption });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(renderButton, \"renderButton\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.tsx\");reactHotLoader.register(renderOption, \"renderOption\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.tsx\");reactHotLoader.register(BackgroundStyleDropdown, \"BackgroundStyleDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,EAAP,MAAe,YAAf;AAEA,OAAO,sBAAP,MAAmC,2CAAnC;AACA,OAAO,eAAP,MAGO,gCAHP,C;AAWA,SAAS,YAAT,CAAsB,MAAtB,EAAyC;AACvC,SACE,uBAAK,SAAS,EAAE,EAAE,CAAC,yBAAD,EAA4B,MAAM,CAAC,SAAnC,CAAlB;AACG,KAAG,MAAM,CAAC,KAAK,aADlB,CADF;;AAKD;AAED,SAAS,YAAT,CAAsB,MAAtB,EAAyC;AACvC,SACE,uBAAK,SAAS,EAAE,EAAE,CAAC,yBAAD,EAA4B,MAAM,CAAC,SAAnC,CAAlB;AACG,EAAA,MAAM,CAAC,KADV,CADF;;AAKD;AAED,eAAc,MAAO,uBAAP,SAAuC,KAAK,CAAC,aAA7C,CAAwF;AACpG,EAAA,MAAM,GAAA;AACJ,UAAM,EAAE,EAAF,EAAM,KAAN,EAAa,QAAb,KAA0B,KAAK,KAArC;AACA,WACE,cAAC,eAAD,IACE,EAAE,EAAE,EADN,EAEE,OAAO,EAAE,sBAFX,EAGE,KAAK,EAAE,KAHT,EAIE,QAAQ,EAAE,QAJZ,EAKE,YAAY,EAAE,YALhB,EAME,YAAY,EAAE,YANhB,GADF;AAUD,GAbmG;AAAA;AAAA,6B,iLAhB7F,Y,8HAQA,Y,8HAQY,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\n\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport PopoverDropdown, {\n  OptionProps,\n  OnChangeHandler,\n} from 'src/components/PopoverDropdown';\n\ninterface BackgroundStyleDropdownProps {\n  id: string;\n  value: string;\n  onChange: OnChangeHandler;\n}\n\nfunction renderButton(option: OptionProps) {\n  return (\n    <div className={cx('background-style-option', option.className)}>\n      {`${option.label} background`}\n    </div>\n  );\n}\n\nfunction renderOption(option: OptionProps) {\n  return (\n    <div className={cx('background-style-option', option.className)}>\n      {option.label}\n    </div>\n  );\n}\n\nexport default class BackgroundStyleDropdown extends React.PureComponent<BackgroundStyleDropdownProps> {\n  render() {\n    const { id, value, onChange } = this.props;\n    return (\n      <PopoverDropdown\n        id={id}\n        options={backgroundStyleOptions}\n        value={value}\n        onChange={onChange}\n        renderButton={renderButton}\n        renderOption={renderOption}\n      />\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}