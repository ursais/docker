{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { Styles } from '../common';\nimport { NO_TIME_RANGE } from '../../../explore/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TimeFilterStyles = styled(Styles)`\n  overflow-x: auto;\n`;\nconst ControlContainer = styled.div`\n  display: inline-block;\n`;\nexport default function TimeFilterPlugin(props) {\n  const { setDataMask, setFocusedFilter, unsetFocusedFilter, width, filterState } = props;\n  const handleTimeRangeChange = timeRange => {\n    const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n    setDataMask({\n      extraFormData: isSet ?\n      {\n        time_range: timeRange } :\n\n      {},\n      filterState: {\n        value: isSet ? timeRange : undefined } });\n\n\n  };\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n  return (\n    // @ts-ignore\n    ___EmotionJSX(TimeFilterStyles, { width: width },\n    ___EmotionJSX(ControlContainer, { onMouseEnter: setFocusedFilter, onMouseLeave: unsetFocusedFilter },\n    ___EmotionJSX(DateFilterControl, { value: filterState.value, name: \"time_range\", onChange: handleTimeRangeChange }))));\n\n\n}__signature__(TimeFilterPlugin, \"useEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TimeFilterStyles, \"TimeFilterStyles\", \"/app/superset-frontend/src/filters/components/Time/TimeFilterPlugin.tsx\");reactHotLoader.register(ControlContainer, \"ControlContainer\", \"/app/superset-frontend/src/filters/components/Time/TimeFilterPlugin.tsx\");reactHotLoader.register(TimeFilterPlugin, \"TimeFilterPlugin\", \"/app/superset-frontend/src/filters/components/Time/TimeFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Time/TimeFilterPlugin.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP,MAA8B,mDAA9B;AAEA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,aAAT,QAA8B,4BAA9B,C;AAEA,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAD,CAAQ;;AAEtC,CAFD;AAIA,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAAG;;AAElC,CAFD;AAIA,eAAc,SAAU,gBAAV,CAA2B,KAA3B,EAAuD;AACnE,QAAM,EACJ,WADI,EAEJ,gBAFI,EAGJ,kBAHI,EAIJ,KAJI,EAKJ,WALI,KAMF,KANJ;AAQA,QAAM,qBAAqB,GAAI,SAAD,IAA6B;AACzD,UAAM,KAAK,GAAG,SAAS,IAAI,SAAS,KAAK,aAAzC;AACA,IAAA,WAAW,CAAC;AACV,MAAA,aAAa,EAAE,KAAK;AAChB;AACE,QAAA,UAAU,EAAE,SADd,EADgB;;AAIhB,QALM;AAMV,MAAA,WAAW,EAAE;AACX,QAAA,KAAK,EAAE,KAAK,GAAG,SAAH,GAAe,SADhB,EANH,EAAD,CAAX;;;AAUD,GAZD;AAcA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,qBAAqB,CAAC,WAAW,CAAC,KAAb,CAArB;AACD,GAFQ,EAEN,CAAC,WAAW,CAAC,KAAb,CAFM,CAAT;AAIA;AACE;AACA,kBAAC,gBAAD,IAAkB,KAAK,EAAE,KAAzB;AACE,kBAAC,gBAAD,IACE,YAAY,EAAE,gBADhB,EAEE,YAAY,EAAE,kBAFhB;AAIE,kBAAC,iBAAD,IACE,KAAK,EAAE,WAAW,CAAC,KADrB,EAEE,IAAI,EAAC,YAFP,EAGE,QAAQ,EAAE,qBAHZ,GAJF,CADF,CAFF;;;AAeD,C,cA1CuB,gB,kMARlB,gB,yHAIA,gB,yHAIkB,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useEffect } from 'react';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { PluginFilterTimeProps } from './types';\nimport { Styles } from '../common';\nimport { NO_TIME_RANGE } from '../../../explore/constants';\n\nconst TimeFilterStyles = styled(Styles)`\n  overflow-x: auto;\n`;\n\nconst ControlContainer = styled.div`\n  display: inline-block;\n`;\n\nexport default function TimeFilterPlugin(props: PluginFilterTimeProps) {\n  const {\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    width,\n    filterState,\n  } = props;\n\n  const handleTimeRangeChange = (timeRange?: string): void => {\n    const isSet = timeRange && timeRange !== NO_TIME_RANGE;\n    setDataMask({\n      extraFormData: isSet\n        ? {\n            time_range: timeRange,\n          }\n        : {},\n      filterState: {\n        value: isSet ? timeRange : undefined,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleTimeRangeChange(filterState.value);\n  }, [filterState.value]);\n\n  return (\n    // @ts-ignore\n    <TimeFilterStyles width={width}>\n      <ControlContainer\n        onMouseEnter={setFocusedFilter}\n        onMouseLeave={unsetFocusedFilter}\n      >\n        <DateFilterControl\n          value={filterState.value}\n          name=\"time_range\"\n          onChange={handleTimeRangeChange}\n        />\n      </ControlContainer>\n    </TimeFilterStyles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}