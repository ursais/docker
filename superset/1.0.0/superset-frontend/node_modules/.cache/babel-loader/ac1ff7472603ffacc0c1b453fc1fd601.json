{"ast":null,"code":"import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport airbnb from '@superset-ui/core/lib/color/colorSchemes/categorical/airbnb';\nimport categoricalD3 from '@superset-ui/core/lib/color/colorSchemes/categorical/d3';\nimport echarts from '@superset-ui/core/lib/color/colorSchemes/categorical/echarts';\nimport google from '@superset-ui/core/lib/color/colorSchemes/categorical/google';\nimport lyft from '@superset-ui/core/lib/color/colorSchemes/categorical/lyft';\nimport preset from '@superset-ui/core/lib/color/colorSchemes/categorical/preset';\nimport sequentialCommon from '@superset-ui/core/lib/color/colorSchemes/sequential/common';\nimport sequentialD3 from '@superset-ui/core/lib/color/colorSchemes/sequential/d3';\nimport { getCategoricalSchemeRegistry, getSequentialSchemeRegistry } from '@superset-ui/core';\nimport superset from '@superset-ui/core/lib/color/colorSchemes/categorical/superset';\nexport default function setupColors(extraCategoricalColorSchemas = [], extraSequentialColorSchemes = []) {var _context, _context2;\n  // Register color schemes\n  const categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n  if ((extraCategoricalColorSchemas == null ? void 0 : extraCategoricalColorSchemas.length) > 0) {\n    _forEachInstanceProperty(extraCategoricalColorSchemas).call(extraCategoricalColorSchemas, scheme => {\n      categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  }\n  _forEachInstanceProperty(_context = [superset, airbnb, categoricalD3, echarts, google, lyft, preset]).call(_context, group => {\n    _forEachInstanceProperty(group).call(group, scheme => {\n      categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  });\n  categoricalSchemeRegistry.setDefaultKey('supersetColors');\n  const sequentialSchemeRegistry = getSequentialSchemeRegistry();\n  if ((extraSequentialColorSchemes == null ? void 0 : extraSequentialColorSchemes.length) > 0) {\n    _forEachInstanceProperty(extraSequentialColorSchemes).call(extraSequentialColorSchemes, scheme => {\n      categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  }\n  _forEachInstanceProperty(_context2 = [sequentialCommon, sequentialD3]).call(_context2, group => {\n    _forEachInstanceProperty(group).call(group, scheme => {\n      sequentialSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  });\n  sequentialSchemeRegistry.setDefaultKey('superset_seq_1');\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(setupColors, \"setupColors\", \"/app/superset-frontend/src/setup/setupColors.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/setup/setupColors.ts"],"names":[],"mappings":"uYAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,MAAP,MAAmB,6DAAnB;AACA,OAAO,aAAP,MAA0B,yDAA1B;AACA,OAAO,OAAP,MAAoB,8DAApB;AACA,OAAO,MAAP,MAAmB,6DAAnB;AACA,OAAO,IAAP,MAAiB,2DAAjB;AACA,OAAO,MAAP,MAAmB,6DAAnB;AACA,OAAO,gBAAP,MAA6B,4DAA7B;AACA,OAAO,YAAP,MAAyB,wDAAzB;AACA,SAEE,4BAFF,EAGE,2BAHF,QAKO,mBALP;AAMA,OAAO,QAAP,MAAqB,+DAArB;AAEA,eAAc,SAAU,WAAV,CACZ,4BAAA,GAAoD,EADxC,EAEZ,2BAAA,GAAkD,EAFtC,EAEwC;AAEpD;AACA,QAAM,yBAAyB,GAAG,4BAA4B,EAA9D;AAEA,MAAI,CAAA,4BAA4B,QAA5B,YAAA,4BAA4B,CAAE,MAA9B,IAAuC,CAA3C,EAA8C;AAC5C,6BAAA,4BAA4B,MAA5B,CAAA,4BAA4B,EAAS,MAAM,IAAG;AAC5C,MAAA,yBAAyB,CAAC,aAA1B,CAAwC,MAAM,CAAC,EAA/C,EAAmD,MAAnD;AACD,KAF2B,CAA5B;AAGD;AAED,uCAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,IAAnD,EAAyD,MAAzD,kBACE,KAAK,IAAG;AACN,6BAAA,KAAK,MAAL,CAAA,KAAK,EAAS,MAAM,IAAG;AACrB,MAAA,yBAAyB,CAAC,aAA1B,CAAwC,MAAM,CAAC,EAA/C,EAAmD,MAAnD;AACD,KAFI,CAAL;AAGD,GALH;AAOA,EAAA,yBAAyB,CAAC,aAA1B,CAAwC,gBAAxC;AAEA,QAAM,wBAAwB,GAAG,2BAA2B,EAA5D;AAEA,MAAI,CAAA,2BAA2B,QAA3B,YAAA,2BAA2B,CAAE,MAA7B,IAAsC,CAA1C,EAA6C;AAC3C,6BAAA,2BAA2B,MAA3B,CAAA,2BAA2B,EAAS,MAAM,IAAG;AAC3C,MAAA,yBAAyB,CAAC,aAA1B,CAAwC,MAAM,CAAC,EAA/C,EAAmD,MAAnD;AACD,KAF0B,CAA3B;AAGD;AAED,wCAAC,gBAAD,EAAmB,YAAnB,mBAAyC,KAAK,IAAG;AAC/C,6BAAA,KAAK,MAAL,CAAA,KAAK,EAAS,MAAM,IAAG;AACrB,MAAA,wBAAwB,CAAC,aAAzB,CAAuC,MAAM,CAAC,EAA9C,EAAkD,MAAlD;AACD,KAFI,CAAL;AAGD,GAJD;AAKA,EAAA,wBAAwB,CAAC,aAAzB,CAAuC,gBAAvC;AACD,C,iLApCuB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport airbnb from '@superset-ui/core/lib/color/colorSchemes/categorical/airbnb';\nimport categoricalD3 from '@superset-ui/core/lib/color/colorSchemes/categorical/d3';\nimport echarts from '@superset-ui/core/lib/color/colorSchemes/categorical/echarts';\nimport google from '@superset-ui/core/lib/color/colorSchemes/categorical/google';\nimport lyft from '@superset-ui/core/lib/color/colorSchemes/categorical/lyft';\nimport preset from '@superset-ui/core/lib/color/colorSchemes/categorical/preset';\nimport sequentialCommon from '@superset-ui/core/lib/color/colorSchemes/sequential/common';\nimport sequentialD3 from '@superset-ui/core/lib/color/colorSchemes/sequential/d3';\nimport {\n  CategoricalScheme,\n  getCategoricalSchemeRegistry,\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n} from '@superset-ui/core';\nimport superset from '@superset-ui/core/lib/color/colorSchemes/categorical/superset';\n\nexport default function setupColors(\n  extraCategoricalColorSchemas: CategoricalScheme[] = [],\n  extraSequentialColorSchemes: SequentialScheme[] = [],\n) {\n  // Register color schemes\n  const categoricalSchemeRegistry = getCategoricalSchemeRegistry();\n\n  if (extraCategoricalColorSchemas?.length > 0) {\n    extraCategoricalColorSchemas.forEach(scheme => {\n      categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  }\n\n  [superset, airbnb, categoricalD3, echarts, google, lyft, preset].forEach(\n    group => {\n      group.forEach(scheme => {\n        categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n      });\n    },\n  );\n  categoricalSchemeRegistry.setDefaultKey('supersetColors');\n\n  const sequentialSchemeRegistry = getSequentialSchemeRegistry();\n\n  if (extraSequentialColorSchemes?.length > 0) {\n    extraSequentialColorSchemes.forEach(scheme => {\n      categoricalSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  }\n\n  [sequentialCommon, sequentialD3].forEach(group => {\n    group.forEach(scheme => {\n      sequentialSchemeRegistry.registerValue(scheme.id, scheme);\n    });\n  });\n  sequentialSchemeRegistry.setDefaultKey('superset_seq_1');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}