{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { Menu } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport { areArraysShallowEqual } from 'src/reduxUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from '../actions/sqlLab';\nimport SqlEditor from './SqlEditor';\nimport TabStatusIcon from './TabStatusIcon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null };\n\n\nlet queryCount = 1;\n\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [] };\n\n    this.removeQueryEditor = _bindInstanceProperty(_context = this.removeQueryEditor).call(_context, this);\n    this.renameTab = _bindInstanceProperty(_context2 = this.renameTab).call(_context2, this);\n    this.toggleLeftBar = _bindInstanceProperty(_context3 = this.toggleLeftBar).call(_context3, this);\n    this.removeAllOtherQueryEditors = _bindInstanceProperty(_context4 = this.removeAllOtherQueryEditors).call(_context4,\n    this);\n\n    this.duplicateQueryEditor = _bindInstanceProperty(_context5 = this.duplicateQueryEditor).call(_context5, this);\n    this.handleSelect = _bindInstanceProperty(_context6 = this.handleSelect).call(_context6, this);\n    this.handleEdit = _bindInstanceProperty(_context7 = this.handleEdit).call(_context7, this);\n  }\n\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {var _context8, _context9, _context10, _context11;\n      const localStorageTables = _filterInstanceProperty(_context8 = this.props.tables).call(_context8,\n      table => table.inLocalStorage);\n\n      const localStorageQueries = _filterInstanceProperty(_context9 = _Object$values(this.props.queries)).call(_context9,\n      query => query.inLocalStorage);\n\n      _forEachInstanceProperty(_context10 = _filterInstanceProperty(_context11 = this.props.queryEditors).call(_context11,\n      qe => qe.inLocalStorage)).call(_context10,\n      qe => {\n        // get all queries associated with the query editor\n        const queries = _filterInstanceProperty(localStorageQueries).call(localStorageQueries,\n        query => query.sqlEditorId === qe.id);\n\n        const tables = _filterInstanceProperty(localStorageTables).call(localStorageTables,\n        table => table.queryEditorId === qe.id);\n\n        this.props.actions.migrateQueryEditorFromLocalStorage(\n        qe,\n        tables,\n        queries);\n\n      });\n    }\n\n    // merge post form data with GET search params\n    // Hack: this data should be comming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const appContainer = document.getElementById('app');\n    const bootstrapData = JSON.parse(\n    (appContainer == null ? void 0 : appContainer.getAttribute('data-bootstrap')) || '{}');\n\n    const query = {\n      ...bootstrapData.requested_query,\n      ...URI(window.location).search(true) };\n\n\n    // Popping a new tab based on the querystring\n    if (\n    query.id ||\n    query.sql ||\n    query.savedQueryId ||\n    query.datasourceKey ||\n    query.queryId)\n    {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.queryId) {\n        this.props.actions.popQuery(query.queryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = _parseInt(dbId, 10);\n        } else {\n          const { databases } = this.props;\n          const dbName = query.dbname;\n          if (dbName) {var _context12;\n            _forEachInstanceProperty(_context12 = _Object$keys(databases)).call(_context12, db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql };\n\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (query.new || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (query.new) {\n        window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n      isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery &&\n      latestQuery.resultsKey)\n      {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n        latestQuery,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {var _context13, _context14;\n    const nextActiveQeId =\n    nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = _filterInstanceProperty(_context13 = _Object$values(nextProps.queries)).call(_context13,\n    query => query.sqlEditorId === nextActiveQeId);\n\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    _forEachInstanceProperty(_context14 = nextProps.tables).call(_context14, table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n      queryId &&\n      nextProps.queries[queryId] &&\n      table.queryEditorId === nextActiveQeId)\n      {\n        dataPreviewQueries.push({\n          ...nextProps.queries[queryId],\n          tableName: table.name });\n\n      }\n    });\n    if (\n    !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries))\n    {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n\n  popNewTab() {\n    queryCount += 1;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n\n  activeQueryEditor() {var _context15;\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return _findInstanceProperty(_context15 = this.props.queryEditors).call(_context15, qe => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {var _context16;\n    queryCount += 1;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n    ..._mapInstanceProperty(_context16 = _Object$values(this.props.databases)).call(_context16, database => database.id));\n\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) ?\n    '' :\n    `${t(\n    '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.')\n    }\\n\\n`;\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n      activeQueryEditor && activeQueryEditor.dbId ?\n      activeQueryEditor.dbId :\n      this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: `${warning}SELECT ...`,\n      queryLimit: this.props.defaultQueryLimit };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  handleSelect(key) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {var _context17;\n      const queryEditor = _findInstanceProperty(_context17 = this.props.queryEditors).call(_context17, qe => qe.id === key);\n      this.props.actions.switchQueryEditor(\n      queryEditor,\n      this.props.displayLimit);\n\n    }\n  }\n\n  handleEdit(key, action) {\n    if (action === 'remove') {var _context18;\n      const qe = _findInstanceProperty(_context18 = this.props.queryEditors).call(_context18, qe => qe.id === key);\n      this.removeQueryEditor(qe);\n    }\n    if (action === 'add') {\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  removeAllOtherQueryEditors(cqe) {var _context19;\n    _forEachInstanceProperty(_context19 = this.props.queryEditors).call(_context19,\n    qe => qe !== cqe && this.removeQueryEditor(qe));\n\n  }\n\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n\n  toggleLeftBar(qe) {\n    this.props.actions.toggleLeftBar(qe);\n  }\n\n  render() {var _context20;\n    const editors = _mapInstanceProperty(_context20 = this.props.queryEditors).call(_context20, qe => {var _context21;\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const menu =\n      ___EmotionJSX(Menu, { style: { width: 176 } },\n      ___EmotionJSX(Menu.Item, {\n        className: \"close-btn\",\n        key: \"1\",\n        onClick: () => this.removeQueryEditor(qe),\n        \"data-test\": \"close-tab-menu-option\" },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-close\" })),\n\n      t('Close tab')),\n\n      ___EmotionJSX(Menu.Item, { key: \"2\", onClick: () => this.renameTab(qe) },\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-i-cursor\" })),\n\n      t('Rename tab')),\n\n      ___EmotionJSX(Menu.Item, { key: \"3\", onClick: () => this.toggleLeftBar(qe) },\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-cogs\" })),\n\n      qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')),\n\n      ___EmotionJSX(Menu.Item, {\n        key: \"4\",\n        onClick: () => this.removeAllOtherQueryEditors(qe) },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-times-circle-o\" })),\n\n      t('Close all other tabs')),\n\n      ___EmotionJSX(Menu.Item, { key: \"5\", onClick: () => this.duplicateQueryEditor(qe) },\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-files-o\" })),\n\n      t('Duplicate tab')));\n\n\n\n      const tabHeader =\n      ___EmotionJSX(TabTitleWrapper, null,\n      ___EmotionJSX(\"div\", { \"data-test\": \"dropdown-toggle-button\" },\n      ___EmotionJSX(Dropdown, { overlay: menu, trigger: ['click'] })),\n\n      ___EmotionJSX(TabTitle, null, qe.title), \" \", ___EmotionJSX(TabStatusIcon, { tabState: state }), ' ');\n\n\n      return (\n        ___EmotionJSX(EditableTabs.TabPane, {\n          key: qe.id,\n          tab: tabHeader\n          // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n          , \"data-key\": qe.id },\n\n        ___EmotionJSX(SqlEditor, {\n          tables: _filterInstanceProperty(_context21 = this.props.tables).call(_context21, xt => xt.queryEditorId === qe.id),\n          queryEditorId: qe.id,\n          editorQueries: this.state.queriesArray,\n          dataPreviewQueries: this.state.dataPreviewQueries,\n          latestQuery: latestQuery,\n          database: database,\n          actions: this.props.actions,\n          hideLeftBar: qe.hideLeftBar,\n          defaultQueryLimit: this.props.defaultQueryLimit,\n          maxRow: this.props.maxRow,\n          displayLimit: this.props.displayLimit,\n          saveQueryWarning: this.props.saveQueryWarning,\n          scheduleQueryWarning: this.props.scheduleQueryWarning })));\n\n\n\n    });\n\n    return (\n      ___EmotionJSX(EditableTabs, {\n        activeKey: this.props.tabHistory[this.props.tabHistory.length - 1],\n        id: \"a11y-query-editor-tabs\",\n        className: \"SqlEditorTabs\",\n        \"data-test\": \"sql-editor-tabs\",\n        onChange: this.handleSelect,\n        fullWidth: false,\n        hideAdd: this.props.offline,\n        onEdit: this.handleEdit,\n        addIcon:\n        ___EmotionJSX(Tooltip, {\n          id: \"add-tab\",\n          placement: \"bottom\",\n          title:\n          userOS === 'Windows' ?\n          t('New tab (Ctrl + q)') :\n          t('New tab (Ctrl + t)') },\n\n\n        ___EmotionJSX(\"i\", { \"data-test\": \"add-tab-icon\", className: \"fa fa-plus-circle\" })) },\n\n\n\n      editors));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery };\n\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch) };\n\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(queryCount, \"queryCount\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(TabTitleWrapper, \"TabTitleWrapper\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(TabTitle, \"TabTitle\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(userOS, \"userOS\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx"],"names":["React","PropTypes","Dropdown","EditableTabs","Menu","connect","bindActionCreators","URI","styled","t","isFeatureEnabled","FeatureFlag","areArraysShallowEqual","Tooltip","detectOS","Actions","SqlEditor","TabStatusIcon","propTypes","actions","object","isRequired","defaultDbId","number","displayLimit","defaultQueryLimit","maxRow","databases","queries","queryEditors","array","requestedQuery","tabHistory","tables","offline","bool","saveQueryWarning","string","scheduleQueryWarning","defaultProps","queryCount","TabTitleWrapper","div","TabTitle","span","theme","gridUnit","userOS","TabbedSqlEditors","PureComponent","constructor","props","sqlLabUrl","state","queriesArray","dataPreviewQueries","removeQueryEditor","renameTab","toggleLeftBar","removeAllOtherQueryEditors","duplicateQueryEditor","handleSelect","handleEdit","componentDidMount","SQLLAB_BACKEND_PERSISTENCE","localStorageTables","table","inLocalStorage","localStorageQueries","query","qe","sqlEditorId","id","queryEditorId","migrateQueryEditorFromLocalStorage","appContainer","document","getElementById","bootstrapData","JSON","parse","getAttribute","requested_query","window","location","search","sql","savedQueryId","datasourceKey","queryId","popStoredQuery","popSavedQuery","popQuery","popDatasourceQuery","dbId","dbid","dbName","dbname","db","database_name","newQueryEditor","title","schema","autorun","addQueryEditor","popNewTab","new","length","history","replaceState","activeQueryEditor","latestQuery","latestQueryId","resultsKey","fetchQueryResults","UNSAFE_componentWillReceiveProps","nextProps","nextActiveQeId","setState","dataPreviewQueryId","push","tableName","name","newTitle","prompt","queryEditorSetTitle","qeid","firstDbId","Math","min","database","warning","queryLimit","key","queryEditor","switchQueryEditor","action","cqe","cloneQueryToNewTab","render","editors","menu","width","hideLeftBar","tabHeader","xt","mapStateToProps","sqlLab","common","conf","DISPLAY_MAX_ROW","DEFAULT_SQLLAB_LIMIT","SQL_MAX_ROW","SQLLAB_SAVE_WARNING_MESSAGE","SQLLAB_SCHEDULE_WARNING_MESSAGE","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { Menu } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport { areArraysShallowEqual } from 'src/reduxUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from '../actions/sqlLab';\nimport SqlEditor from './SqlEditor';\nimport TabStatusIcon from './TabStatusIcon';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null,\n};\n\nlet queryCount = 1;\n\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [],\n    };\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.renameTab = this.renameTab.bind(this);\n    this.toggleLeftBar = this.toggleLeftBar.bind(this);\n    this.removeAllOtherQueryEditors = this.removeAllOtherQueryEditors.bind(\n      this,\n    );\n    this.duplicateQueryEditor = this.duplicateQueryEditor.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {\n      const localStorageTables = this.props.tables.filter(\n        table => table.inLocalStorage,\n      );\n      const localStorageQueries = Object.values(this.props.queries).filter(\n        query => query.inLocalStorage,\n      );\n      this.props.queryEditors\n        .filter(qe => qe.inLocalStorage)\n        .forEach(qe => {\n          // get all queries associated with the query editor\n          const queries = localStorageQueries.filter(\n            query => query.sqlEditorId === qe.id,\n          );\n          const tables = localStorageTables.filter(\n            table => table.queryEditorId === qe.id,\n          );\n          this.props.actions.migrateQueryEditorFromLocalStorage(\n            qe,\n            tables,\n            queries,\n          );\n        });\n    }\n\n    // merge post form data with GET search params\n    // Hack: this data should be comming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const appContainer = document.getElementById('app');\n    const bootstrapData = JSON.parse(\n      appContainer?.getAttribute('data-bootstrap') || '{}',\n    );\n    const query = {\n      ...bootstrapData.requested_query,\n      ...URI(window.location).search(true),\n    };\n\n    // Popping a new tab based on the querystring\n    if (\n      query.id ||\n      query.sql ||\n      query.savedQueryId ||\n      query.datasourceKey ||\n      query.queryId\n    ) {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.queryId) {\n        this.props.actions.popQuery(query.queryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = parseInt(dbId, 10);\n        } else {\n          const { databases } = this.props;\n          const dbName = query.dbname;\n          if (dbName) {\n            Object.keys(databases).forEach(db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql,\n        };\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (query.new || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (query.new) {\n        window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n        isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n        latestQuery &&\n        latestQuery.resultsKey\n      ) {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n          latestQuery,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextActiveQeId =\n      nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = Object.values(nextProps.queries).filter(\n      query => query.sqlEditorId === nextActiveQeId,\n    );\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    nextProps.tables.forEach(table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n        queryId &&\n        nextProps.queries[queryId] &&\n        table.queryEditorId === nextActiveQeId\n      ) {\n        dataPreviewQueries.push({\n          ...nextProps.queries[queryId],\n          tableName: table.name,\n        });\n      }\n    });\n    if (\n      !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries)\n    ) {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n\n  popNewTab() {\n    queryCount += 1;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find(qe => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {\n    queryCount += 1;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n      ...Object.values(this.props.databases).map(database => database.id),\n    );\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)\n      ? ''\n      : `${t(\n          '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.',\n        )}\\n\\n`;\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n        activeQueryEditor && activeQueryEditor.dbId\n          ? activeQueryEditor.dbId\n          : this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: `${warning}SELECT ...`,\n      queryLimit: this.props.defaultQueryLimit,\n    };\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  handleSelect(key) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {\n      const queryEditor = this.props.queryEditors.find(qe => qe.id === key);\n      this.props.actions.switchQueryEditor(\n        queryEditor,\n        this.props.displayLimit,\n      );\n    }\n  }\n\n  handleEdit(key, action) {\n    if (action === 'remove') {\n      const qe = this.props.queryEditors.find(qe => qe.id === key);\n      this.removeQueryEditor(qe);\n    }\n    if (action === 'add') {\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  removeAllOtherQueryEditors(cqe) {\n    this.props.queryEditors.forEach(\n      qe => qe !== cqe && this.removeQueryEditor(qe),\n    );\n  }\n\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n\n  toggleLeftBar(qe) {\n    this.props.actions.toggleLeftBar(qe);\n  }\n\n  render() {\n    const editors = this.props.queryEditors.map(qe => {\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const menu = (\n        <Menu style={{ width: 176 }}>\n          <Menu.Item\n            className=\"close-btn\"\n            key=\"1\"\n            onClick={() => this.removeQueryEditor(qe)}\n            data-test=\"close-tab-menu-option\"\n          >\n            <div className=\"icon-container\">\n              <i className=\"fa fa-close\" />\n            </div>\n            {t('Close tab')}\n          </Menu.Item>\n          <Menu.Item key=\"2\" onClick={() => this.renameTab(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-i-cursor\" />\n            </div>\n            {t('Rename tab')}\n          </Menu.Item>\n          <Menu.Item key=\"3\" onClick={() => this.toggleLeftBar(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-cogs\" />\n            </div>\n            {qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')}\n          </Menu.Item>\n          <Menu.Item\n            key=\"4\"\n            onClick={() => this.removeAllOtherQueryEditors(qe)}\n          >\n            <div className=\"icon-container\">\n              <i className=\"fa fa-times-circle-o\" />\n            </div>\n            {t('Close all other tabs')}\n          </Menu.Item>\n          <Menu.Item key=\"5\" onClick={() => this.duplicateQueryEditor(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-files-o\" />\n            </div>\n            {t('Duplicate tab')}\n          </Menu.Item>\n        </Menu>\n      );\n      const tabHeader = (\n        <TabTitleWrapper>\n          <div data-test=\"dropdown-toggle-button\">\n            <Dropdown overlay={menu} trigger={['click']} />\n          </div>\n          <TabTitle>{qe.title}</TabTitle> <TabStatusIcon tabState={state} />{' '}\n        </TabTitleWrapper>\n      );\n      return (\n        <EditableTabs.TabPane\n          key={qe.id}\n          tab={tabHeader}\n          // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n          data-key={qe.id}\n        >\n          <SqlEditor\n            tables={this.props.tables.filter(xt => xt.queryEditorId === qe.id)}\n            queryEditorId={qe.id}\n            editorQueries={this.state.queriesArray}\n            dataPreviewQueries={this.state.dataPreviewQueries}\n            latestQuery={latestQuery}\n            database={database}\n            actions={this.props.actions}\n            hideLeftBar={qe.hideLeftBar}\n            defaultQueryLimit={this.props.defaultQueryLimit}\n            maxRow={this.props.maxRow}\n            displayLimit={this.props.displayLimit}\n            saveQueryWarning={this.props.saveQueryWarning}\n            scheduleQueryWarning={this.props.scheduleQueryWarning}\n          />\n        </EditableTabs.TabPane>\n      );\n    });\n\n    return (\n      <EditableTabs\n        activeKey={this.props.tabHistory[this.props.tabHistory.length - 1]}\n        id=\"a11y-query-editor-tabs\"\n        className=\"SqlEditorTabs\"\n        data-test=\"sql-editor-tabs\"\n        onChange={this.handleSelect}\n        fullWidth={false}\n        hideAdd={this.props.offline}\n        onEdit={this.handleEdit}\n        addIcon={\n          <Tooltip\n            id=\"add-tab\"\n            placement=\"bottom\"\n            title={\n              userOS === 'Windows'\n                ? t('New tab (Ctrl + q)')\n                : t('New tab (Ctrl + t)')\n            }\n          >\n            <i data-test=\"add-tab-icon\" className=\"fa fa-plus-circle\" />\n          </Tooltip>\n        }\n      >\n        {editors}\n      </EditableTabs>\n    );\n  }\n}\nTabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);\n"]},"metadata":{},"sourceType":"module"}