{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { t } from '@superset-ui/core';\nimport { CancelConfirmationAlert } from './CancelConfirmationAlert';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Footer = ({ onCancel, handleSave, onDismiss, onConfirmCancel, getFilterTitle, unsavedFiltersIds, saveAlertVisible }) => {\n  const getUnsavedFilterNames = () => {\n    const unsavedFiltersNames = _mapInstanceProperty(unsavedFiltersIds).call(unsavedFiltersIds, id => `\"${getFilterTitle(id)}\"`);\n    if (unsavedFiltersNames.length === 0) {\n      return '';\n    }\n    if (unsavedFiltersNames.length === 1) {\n      return unsavedFiltersNames[0];\n    }\n    const lastFilter = unsavedFiltersNames.pop();\n    return `${unsavedFiltersNames.join(', ')} ${t('and')} ${lastFilter}`;\n  };\n  if (saveAlertVisible) {\n    return ___EmotionJSX(CancelConfirmationAlert, { key: \"cancel-confirm\", title: `${unsavedFiltersIds.length} ${t('unsaved filters')}`, onConfirm: onConfirmCancel, onDismiss: onDismiss },\n    t(`Are you sure you want to cancel?`), \" \", getUnsavedFilterNames(), ' ',\n    t(`will not be saved.`));\n\n  }\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Button, { key: \"cancel\", buttonStyle: \"secondary\", \"data-test\": \"native-filter-modal-cancel-button\", onClick: onCancel },\n  t('Cancel')),\n\n  ___EmotionJSX(Button, { key: \"submit\", buttonStyle: \"primary\", onClick: handleSave, \"data-test\": \"native-filter-modal-save-button\" },\n  t('Save')));\n\n\n};const _default =\nFooter;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Footer, \"Footer\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/Footer/Footer.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/Footer/Footer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/Footer/Footer.tsx"],"names":[],"mappings":"8XAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAA0B,OAA1B;AACA,OAAO,MAAP,MAAuC,uBAAvC;AACA,SAAS,CAAT,QAAkB,mBAAlB;AACA,SAAS,uBAAT,QAAwC,2BAAxC,C;AAYA,MAAM,MAAM,GAAoB,CAAC,EAC/B,QAD+B,EAE/B,UAF+B,EAG/B,SAH+B,EAI/B,eAJ+B,EAK/B,cAL+B,EAM/B,iBAN+B,EAO/B,gBAP+B,EAAD,KAQ3B;AACH,QAAM,qBAAqB,GAAG,MAAa;AACzC,UAAM,mBAAmB,GAAG,qBAAA,iBAAiB,MAAjB,CAAA,iBAAiB,EAC3C,EAAE,IAAI,IAAI,cAAc,CAAC,EAAD,CAAI,GADe,CAA7C;AAIA,QAAI,mBAAmB,CAAC,MAApB,KAA+B,CAAnC,EAAsC;AACpC,aAAO,EAAP;AACD;AAED,QAAI,mBAAmB,CAAC,MAApB,KAA+B,CAAnC,EAAsC;AACpC,aAAO,mBAAmB,CAAC,CAAD,CAA1B;AACD;AAED,UAAM,UAAU,GAAG,mBAAmB,CAAC,GAApB,EAAnB;AAEA,WAAO,GAAG,mBAAmB,CAAC,IAApB,CAAyB,IAAzB,CAA8B,IAAI,CAAC,CAAC,KAAD,CAAO,IAAI,UAAU,EAAlE;AACD,GAhBD;AAkBA,MAAI,gBAAJ,EAAsB;AACpB,WACE,cAAC,uBAAD,IACE,GAAG,EAAC,gBADN,EAEE,KAAK,EAAE,GAAG,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC,iBAAD,CAAmB,EAF5D,EAGE,SAAS,EAAE,eAHb,EAIE,SAAS,EAAE,SAJb;AAMG,IAAA,CAAC,CAAC,kCAAD,CANJ,OAM2C,qBAAqB,EANhE,EAMoE,GANpE;AAOG,IAAA,CAAC,CAAC,oBAAD,CAPJ,CADF;;AAWD;AAED,SACE;AACE,gBAAC,MAAD,IACE,GAAG,EAAC,QADN,EAEE,WAAW,EAAC,WAFd,EAGE,aAAU,mCAHZ,EAIE,OAAO,EAAE,QAJX;AAMG,EAAA,CAAC,CAAC,QAAD,CANJ,CADF;;AASE,gBAAC,MAAD,IACE,GAAG,EAAC,QADN,EAEE,WAAW,EAAC,SAFd,EAGE,OAAO,EAAE,UAHX,EAIE,aAAU,iCAJZ;AAMG,EAAA,CAAC,CAAC,MAAD,CANJ,CATF,CADF;;;AAoBD,CA7DD,C;AA+De,M,CAAf,wB,iLA/DM,M","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport Button, { OnClickHandler } from 'src/components/Button';\nimport { t } from '@superset-ui/core';\nimport { CancelConfirmationAlert } from './CancelConfirmationAlert';\n\ntype FooterProps = {\n  onCancel: OnClickHandler;\n  handleSave: OnClickHandler;\n  onConfirmCancel: OnClickHandler;\n  onDismiss: OnClickHandler;\n  saveAlertVisible: boolean;\n  getFilterTitle: (id: string) => string;\n  unsavedFiltersIds: string[];\n};\n\nconst Footer: FC<FooterProps> = ({\n  onCancel,\n  handleSave,\n  onDismiss,\n  onConfirmCancel,\n  getFilterTitle,\n  unsavedFiltersIds,\n  saveAlertVisible,\n}) => {\n  const getUnsavedFilterNames = (): string => {\n    const unsavedFiltersNames = unsavedFiltersIds.map(\n      id => `\"${getFilterTitle(id)}\"`,\n    );\n\n    if (unsavedFiltersNames.length === 0) {\n      return '';\n    }\n\n    if (unsavedFiltersNames.length === 1) {\n      return unsavedFiltersNames[0];\n    }\n\n    const lastFilter = unsavedFiltersNames.pop();\n\n    return `${unsavedFiltersNames.join(', ')} ${t('and')} ${lastFilter}`;\n  };\n\n  if (saveAlertVisible) {\n    return (\n      <CancelConfirmationAlert\n        key=\"cancel-confirm\"\n        title={`${unsavedFiltersIds.length} ${t('unsaved filters')}`}\n        onConfirm={onConfirmCancel}\n        onDismiss={onDismiss}\n      >\n        {t(`Are you sure you want to cancel?`)} {getUnsavedFilterNames()}{' '}\n        {t(`will not be saved.`)}\n      </CancelConfirmationAlert>\n    );\n  }\n\n  return (\n    <>\n      <Button\n        key=\"cancel\"\n        buttonStyle=\"secondary\"\n        data-test=\"native-filter-modal-cancel-button\"\n        onClick={onCancel}\n      >\n        {t('Cancel')}\n      </Button>\n      <Button\n        key=\"submit\"\n        buttonStyle=\"primary\"\n        onClick={handleSave}\n        data-test=\"native-filter-modal-save-button\"\n      >\n        {t('Save')}\n      </Button>\n    </>\n  );\n};\n\nexport default Footer;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}