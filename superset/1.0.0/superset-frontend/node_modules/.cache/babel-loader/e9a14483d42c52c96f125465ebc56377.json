{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Collapse, Typography, Tooltip } from 'src/common/components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { getFilterValueForDisplay } from './utils';\nimport { useFilters } from '../state';\nimport { getFilterBarTestId } from '../index';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\nconst StyledCollapse = styled(Collapse)`\n  &.ant-collapse-ghost > .ant-collapse-item {\n    & > .ant-collapse-content > .ant-collapse-content-box {\n      padding: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    }\n    & > .ant-collapse-header {\n      padding: 0;\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      max-width: max-content;\n      & .ant-collapse-arrow {\n        position: static;\n        padding-left: ${({ theme }) => theme.gridUnit}px;\n      }\n  }\n`;\nconst FiltersHeader = ({ dataMask, filterSet }) => {\n  const filters = useFilters();\n  const filterValues = _Object$values(filters);\n  let resultFilters = filterValues != null ? filterValues : [];\n  if (filterSet != null && filterSet.nativeFilters) {\n    resultFilters = _Object$values(filterSet == null ? void 0 : filterSet.nativeFilters);\n  }\n  const getFiltersHeader = () => ___EmotionJSX(FilterHeader, null,\n  ___EmotionJSX(Typography.Text, { type: \"secondary\" },\n  t('Filters (%d)', resultFilters.length)));\n\n\n  const getFilterRow = ({ id, name }) => {var _filterSet$nativeFilt, _context, _dataMask$id, _dataMask$id$filterSt;\n    const changedFilter = filterSet &&\n    !areObjectsEqual(filters[id], filterSet == null ? void 0 : (_filterSet$nativeFilt = filterSet.nativeFilters) == null ? void 0 : _filterSet$nativeFilt[id], {\n      ignoreUndefined: true });\n\n    const removedFilter = !_includesInstanceProperty(_context = _Object$keys(filters)).call(_context, id);\n    return ___EmotionJSX(Tooltip, { title: removedFilter &&\n      t(\"This filter doesn't exist in dashboard. It will not be applied.\") ||\n      changedFilter &&\n      t('Filter metadata changed in dashboard. It will not be applied.'), placement: \"bottomLeft\", key: id },\n    ___EmotionJSX(\"div\", { \"data-test\": \"filter-info\" },\n    ___EmotionJSX(Typography.Text, { strong: true, delete: removedFilter, mark: changedFilter },\n    name, \":\\xA0\"),\n\n    ___EmotionJSX(Typography.Text, { delete: removedFilter, mark: changedFilter },\n    getFilterValueForDisplay(dataMask == null ? void 0 : (_dataMask$id = dataMask[id]) == null ? void 0 : (_dataMask$id$filterSt = _dataMask$id.filterState) == null ? void 0 : _dataMask$id$filterSt.value) || ___EmotionJSX(Typography.Text, { type: \"secondary\" }, t('None')))));\n\n\n\n  };\n  return ___EmotionJSX(StyledCollapse, { ghost: true, expandIconPosition: \"right\", defaultActiveKey: !filterSet ? ['filters'] : undefined, expandIcon: ({ isActive }) => ___EmotionJSX(CaretDownOutlined, { rotate: isActive ? 0 : 180 }) },\n  ___EmotionJSX(Collapse.Panel, _extends({}, getFilterBarTestId('collapse-filter-set-description'), { header: getFiltersHeader(), key: \"filters\" }),\n  _mapInstanceProperty(resultFilters).call(resultFilters, getFilterRow)));\n\n\n};__signature__(FiltersHeader, \"useFilters{filters}\", () => [useFilters]);const _default =\nFiltersHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterHeader, \"FilterHeader\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx\");reactHotLoader.register(StyledCollapse, \"StyledCollapse\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx\");reactHotLoader.register(FiltersHeader, \"FiltersHeader\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/FiltersHeader.tsx"],"names":[],"mappings":"0rBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAA0B,OAA1B;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,SAAS,QAAT,EAAmB,UAAnB,EAA+B,OAA/B,QAA8C,uBAA9C;AAEA,SAAS,iBAAT,QAAkC,mBAAlC;AACA,SAAS,eAAT,QAAgC,gBAAhC;AAEA,SAAS,wBAAT,QAAyC,SAAzC;AACA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,kBAAT,QAAmC,UAAnC,C;AAEA,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG;;;eAGhB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;AACrD,CAJD;AAMA,MAAM,cAAc,GAAG,MAAM,CAAC,QAAD,CAAU;;;;;;mBAMpB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;;;;;;;;;;;wBAWlC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;;;AAGpD,CApBD;AA2BA,MAAM,aAAa,GAA2B,CAAC,EAAE,QAAF,EAAY,SAAZ,EAAD,KAA4B;AACxE,QAAM,OAAO,GAAG,UAAU,EAA1B;AACA,QAAM,YAAY,GAAG,eAAc,OAAd,CAArB;AAEA,MAAI,aAAa,GAAG,YAAH,WAAG,YAAH,GAAmB,EAApC;AACA,MAAI,SAAJ,YAAI,SAAS,CAAE,aAAf,EAA8B;AAC5B,IAAA,aAAa,GAAG,eAAc,SAAd,oBAAc,SAAS,CAAE,aAAzB,CAAhB;AACD;AAED,QAAM,gBAAgB,GAAG,MACvB,cAAC,YAAD;AACE,gBAAC,UAAD,CAAY,IAAZ,IAAiB,IAAI,EAAC,WAAtB;AACG,EAAA,CAAC,CAAC,cAAD,EAAiB,aAAa,CAAC,MAA/B,CADJ,CADF,CADF;;;AAQA,QAAM,YAAY,GAAG,CAAC,EAAE,EAAF,EAAM,IAAN,EAAD,KAA+C;AAClE,UAAM,aAAa,GACjB,SAAS;AACT,KAAC,eAAe,CAAC,OAAO,CAAC,EAAD,CAAR,EAAc,SAAd,6CAAc,SAAS,CAAE,aAAzB,qBAAc,sBAA2B,EAA3B,CAAd,EAA8C;AAC5D,MAAA,eAAe,EAAE,IAD2C,EAA9C,CAFlB;;AAKA,UAAM,aAAa,GAAG,CAAC,kDAAY,OAAZ,kBAA8B,EAA9B,CAAvB;AAEA,WACE,cAAC,OAAD,IACE,KAAK,EACF,aAAa;AACZ,MAAA,CAAC,CACC,iEADD,CADH;AAIC,MAAA,aAAa;AACZ,MAAA,CAAC,CAAC,+DAAD,CAPP,EASE,SAAS,EAAC,YATZ,EAUE,GAAG,EAAE,EAVP;AAYE,2BAAK,aAAU,aAAf;AACE,kBAAC,UAAD,CAAY,IAAZ,IAAiB,MAAM,MAAvB,EAAwB,MAAM,EAAE,aAAhC,EAA+C,IAAI,EAAE,aAArD;AACG,IAAA,IADH,UADF;;AAIE,kBAAC,UAAD,CAAY,IAAZ,IAAiB,MAAM,EAAE,aAAzB,EAAwC,IAAI,EAAE,aAA9C;AACG,IAAA,wBAAwB,CAAC,QAAD,oCAAC,QAAQ,CAAG,EAAH,CAAT,8CAAC,aAAgB,WAAjB,qBAAC,sBAA6B,KAA9B,CAAxB,IACC,cAAC,UAAD,CAAY,IAAZ,IAAiB,IAAI,EAAC,WAAtB,IAAmC,CAAC,CAAC,MAAD,CAApC,CAFJ,CAJF,CAZF,CADF;;;;AAyBD,GAjCD;AAmCA,SACE,cAAC,cAAD,IACE,KAAK,MADP,EAEE,kBAAkB,EAAC,OAFrB,EAGE,gBAAgB,EAAE,CAAC,SAAD,GAAa,CAAC,SAAD,CAAb,GAA2B,SAH/C,EAIE,UAAU,EAAE,CAAC,EAAE,QAAF,EAAD,KACV,cAAC,iBAAD,IAAmB,MAAM,EAAE,QAAQ,GAAG,CAAH,GAAO,GAA1C,GALJ;AAQE,gBAAC,QAAD,CAAU,KAAV,eACM,kBAAkB,CAAC,iCAAD,CADxB,IAEE,MAAM,EAAE,gBAAgB,EAF1B,EAGE,GAAG,EAAC,SAHN;AAKG,uBAAA,aAAa,MAAb,CAAA,aAAa,EAAK,YAAL,CALhB,CARF,CADF;;;AAkBD,CAtED,C,cAAM,a,gCACY,U;AAuEH,a,CAAf,wB,iLAzGM,Y,kJAMA,c,oJA2BA,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Collapse, Typography, Tooltip } from 'src/common/components';\nimport { DataMaskState } from 'src/dataMask/types';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { FilterSet } from 'src/dashboard/reducers/types';\nimport { getFilterValueForDisplay } from './utils';\nimport { useFilters } from '../state';\nimport { getFilterBarTestId } from '../index';\n\nconst FilterHeader = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  &.ant-collapse-ghost > .ant-collapse-item {\n    & > .ant-collapse-content > .ant-collapse-content-box {\n      padding: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    }\n    & > .ant-collapse-header {\n      padding: 0;\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: flex-end;\n      max-width: max-content;\n      & .ant-collapse-arrow {\n        position: static;\n        padding-left: ${({ theme }) => theme.gridUnit}px;\n      }\n  }\n`;\n\nexport type FiltersHeaderProps = {\n  dataMask?: DataMaskState;\n  filterSet?: FilterSet;\n};\n\nconst FiltersHeader: FC<FiltersHeaderProps> = ({ dataMask, filterSet }) => {\n  const filters = useFilters();\n  const filterValues = Object.values(filters);\n\n  let resultFilters = filterValues ?? [];\n  if (filterSet?.nativeFilters) {\n    resultFilters = Object.values(filterSet?.nativeFilters);\n  }\n\n  const getFiltersHeader = () => (\n    <FilterHeader>\n      <Typography.Text type=\"secondary\">\n        {t('Filters (%d)', resultFilters.length)}\n      </Typography.Text>\n    </FilterHeader>\n  );\n\n  const getFilterRow = ({ id, name }: { id: string; name: string }) => {\n    const changedFilter =\n      filterSet &&\n      !areObjectsEqual(filters[id], filterSet?.nativeFilters?.[id], {\n        ignoreUndefined: true,\n      });\n    const removedFilter = !Object.keys(filters).includes(id);\n\n    return (\n      <Tooltip\n        title={\n          (removedFilter &&\n            t(\n              \"This filter doesn't exist in dashboard. It will not be applied.\",\n            )) ||\n          (changedFilter &&\n            t('Filter metadata changed in dashboard. It will not be applied.'))\n        }\n        placement=\"bottomLeft\"\n        key={id}\n      >\n        <div data-test=\"filter-info\">\n          <Typography.Text strong delete={removedFilter} mark={changedFilter}>\n            {name}:&nbsp;\n          </Typography.Text>\n          <Typography.Text delete={removedFilter} mark={changedFilter}>\n            {getFilterValueForDisplay(dataMask?.[id]?.filterState?.value) || (\n              <Typography.Text type=\"secondary\">{t('None')}</Typography.Text>\n            )}\n          </Typography.Text>\n        </div>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <StyledCollapse\n      ghost\n      expandIconPosition=\"right\"\n      defaultActiveKey={!filterSet ? ['filters'] : undefined}\n      expandIcon={({ isActive }: { isActive: boolean }) => (\n        <CaretDownOutlined rotate={isActive ? 0 : 180} />\n      )}\n    >\n      <Collapse.Panel\n        {...getFilterBarTestId('collapse-filter-set-description')}\n        header={getFiltersHeader()}\n        key=\"filters\"\n      >\n        {resultFilters.map(getFilterRow)}\n      </Collapse.Panel>\n    </StyledCollapse>\n  );\n};\n\nexport default FiltersHeader;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}