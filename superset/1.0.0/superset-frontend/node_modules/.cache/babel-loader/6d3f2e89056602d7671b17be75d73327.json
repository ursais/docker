{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { Input } from 'src/common/components';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\nimport { StyledInputContainer } from 'src/views/CRUD/alert/AlertReportModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const AlertReportCronScheduler = ({ value, onChange }) => {\n  const theme = useTheme();\n  const inputRef = useRef(null);\n  const [scheduleFormat, setScheduleFormat] = useState('picker');\n  const customSetValue = useCallback(newValue => {var _inputRef$current;\n    onChange(newValue);\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.setValue(newValue);\n  }, [inputRef, onChange]);\n  const [error, onError] = useState();\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Radio.Group, { onChange: e => setScheduleFormat(e.target.value), value: scheduleFormat },\n  ___EmotionJSX(\"div\", { className: \"inline-container add-margin\" },\n  ___EmotionJSX(Radio, { value: \"picker\" }),\n  ___EmotionJSX(CronPicker, { clearButton: false, value: value, setValue: customSetValue, disabled: scheduleFormat !== 'picker', displayError: scheduleFormat === 'picker', onError: onError })),\n\n  ___EmotionJSX(\"div\", { className: \"inline-container add-margin\" },\n  ___EmotionJSX(Radio, { value: \"input\" }),\n  ___EmotionJSX(\"span\", { className: \"input-label\" }, \"CRON Schedule\"),\n  ___EmotionJSX(StyledInputContainer, { className: \"styled-input\" },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(Input, { type: \"text\", name: \"crontab\", ref: inputRef, style: error ? { borderColor: theme.colors.error.base } : {}, placeholder: t('CRON expression'), disabled: scheduleFormat !== 'input', onBlur: event => {\n      onChange(event.target.value);\n    }, onPressEnter: () => {var _inputRef$current2;\n      onChange(((_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.input.value) || '');\n    } }))))));\n\n\n\n\n\n};__signature__(AlertReportCronScheduler, \"useTheme{theme}\\nuseRef{inputRef}\\nuseState{[scheduleFormat, setScheduleFormat]('picker')}\\nuseCallback{customSetValue}\\nuseState{[error, onError]}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AlertReportCronScheduler, \"AlertReportCronScheduler\", \"/app/superset-frontend/src/views/CRUD/alert/components/AlertReportCronScheduler.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/alert/components/AlertReportCronScheduler.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,EAA0B,WAA1B,EAAuC,MAAvC,QAAwE,OAAxE;AACA,SAAS,CAAT,EAAY,QAAZ,QAA4B,mBAA5B;AAEA,SAAS,KAAT,QAAiC,uBAAjC;AACA,SAAS,KAAT,QAAsB,sBAAtB;AACA,SAAS,UAAT,QAAsC,2BAAtC;AACA,SAAS,oBAAT,QAAqC,uCAArC,C;AAOA,OAAO,MAAM,wBAAwB,GAAqD,CAAC,EACzF,KADyF,EAEzF,QAFyF,EAAD,KAGrF;AACH,QAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,QAAM,QAAQ,GAAG,MAAM,CAAY,IAAZ,CAAvB;AACA,QAAM,CAAC,cAAD,EAAiB,iBAAjB,IAAsC,QAAQ,CAClD,QADkD,CAApD;AAGA,QAAM,cAAc,GAAG,WAAW,CAC/B,QAAD,IAAqB;AACnB,IAAA,QAAQ,CAAC,QAAD,CAAR;AACA,yBAAA,QAAQ,CAAC,OAAT,uCAAkB,QAAlB,CAA2B,QAA3B;AACD,GAJ+B,EAKhC,CAAC,QAAD,EAAW,QAAX,CALgC,CAAlC;AAOA,QAAM,CAAC,KAAD,EAAQ,OAAR,IAAmB,QAAQ,EAAjC;AAEA,SACE;AACE,gBAAC,KAAD,CAAO,KAAP,IACE,QAAQ,EAAE,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,MAAF,CAAS,KAAV,CADlC,EAEE,KAAK,EAAE,cAFT;AAIE,yBAAK,SAAS,EAAC,6BAAf;AACE,gBAAC,KAAD,IAAO,KAAK,EAAC,QAAb,GADF;AAEE,gBAAC,UAAD,IACE,WAAW,EAAE,KADf,EAEE,KAAK,EAAE,KAFT,EAGE,QAAQ,EAAE,cAHZ,EAIE,QAAQ,EAAE,cAAc,KAAK,QAJ/B,EAKE,YAAY,EAAE,cAAc,KAAK,QALnC,EAME,OAAO,EAAE,OANX,GAFF,CAJF;;AAeE,yBAAK,SAAS,EAAC,6BAAf;AACE,gBAAC,KAAD,IAAO,KAAK,EAAC,OAAb,GADF;AAEE,0BAAM,SAAS,EAAC,aAAhB,oBAFF;AAGE,gBAAC,oBAAD,IAAsB,SAAS,EAAC,cAAhC;AACE,yBAAK,SAAS,EAAC,iBAAf;AACE,gBAAC,KAAD,IACE,IAAI,EAAC,MADP,EAEE,IAAI,EAAC,SAFP,EAGE,GAAG,EAAE,QAHP,EAIE,KAAK,EAAE,KAAK,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,IAAlC,EAAH,GAA8C,EAJ5D,EAKE,WAAW,EAAE,CAAC,CAAC,iBAAD,CALhB,EAME,QAAQ,EAAE,cAAc,KAAK,OAN/B,EAOE,MAAM,EAAE,KAAK,IAAG;AACd,MAAA,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,CAAR;AACD,KATH,EAUE,YAAY,EAAE,MAAK;AACjB,MAAA,QAAQ,CAAC,uBAAA,QAAQ,CAAC,OAAT,wCAAkB,KAAlB,CAAwB,KAAxB,KAAiC,EAAlC,CAAR;AACD,KAZH,GADF,CADF,CAHF,CAfF,CADF,CADF;;;;;;AA0CD,CA5DM,C,cAAM,wB,gKAIG,Q,oLAJH,wB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FunctionComponent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { Input, AntdInput } from 'src/common/components';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from 'src/views/CRUD/alert/AlertReportModal';\n\ninterface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nexport const AlertReportCronScheduler: FunctionComponent<AlertReportCronSchedulerProps> = ({\n  value,\n  onChange,\n}) => {\n  const theme = useTheme();\n  const inputRef = useRef<AntdInput>(null);\n  const [scheduleFormat, setScheduleFormat] = useState<'picker' | 'input'>(\n    'picker',\n  );\n  const customSetValue = useCallback(\n    (newValue: string) => {\n      onChange(newValue);\n      inputRef.current?.setValue(newValue);\n    },\n    [inputRef, onChange],\n  );\n  const [error, onError] = useState<CronError>();\n\n  return (\n    <>\n      <Radio.Group\n        onChange={e => setScheduleFormat(e.target.value)}\n        value={scheduleFormat}\n      >\n        <div className=\"inline-container add-margin\">\n          <Radio value=\"picker\" />\n          <CronPicker\n            clearButton={false}\n            value={value}\n            setValue={customSetValue}\n            disabled={scheduleFormat !== 'picker'}\n            displayError={scheduleFormat === 'picker'}\n            onError={onError}\n          />\n        </div>\n        <div className=\"inline-container add-margin\">\n          <Radio value=\"input\" />\n          <span className=\"input-label\">CRON Schedule</span>\n          <StyledInputContainer className=\"styled-input\">\n            <div className=\"input-container\">\n              <Input\n                type=\"text\"\n                name=\"crontab\"\n                ref={inputRef}\n                style={error ? { borderColor: theme.colors.error.base } : {}}\n                placeholder={t('CRON expression')}\n                disabled={scheduleFormat !== 'input'}\n                onBlur={event => {\n                  onChange(event.target.value);\n                }}\n                onPressEnter={() => {\n                  onChange(inputRef.current?.input.value || '');\n                }}\n              />\n            </div>\n          </StyledInputContainer>\n        </div>\n      </Radio.Group>\n    </>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}