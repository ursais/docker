{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\nexport default function getRevertedFilterScope({ checked = [], filterFields = [], filterScopeMap = {} }) {\n  const checkedChartIdsByFilterField = _reduceInstanceProperty(checked).call(checked, (map, value) => {var _context;\n    const [chartId, filterField] = value.split(':');\n    return {\n      ...map,\n      [filterField]: _concatInstanceProperty(_context = map[filterField] || []).call(_context, _parseInt(chartId, 10)) };\n\n  }, {});\n  return _reduceInstanceProperty(filterFields).call(filterFields, (map, filterField) => {var _context2;\n    const { chartId } = getChartIdAndColumnFromFilterKey(filterField);\n    // force display filter_box chart as unchecked, but show checkbox as disabled\n    const updatedCheckedIds = _filterInstanceProperty(_context2 = checkedChartIdsByFilterField[filterField] || []).call(_context2, id => id !== chartId);\n    return {\n      ...map,\n      [filterField]: {\n        ...filterScopeMap[filterField],\n        checked: updatedCheckedIds } };\n\n\n  }, {});\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getRevertedFilterScope, \"getRevertedFilterScope\", \"/app/superset-frontend/src/dashboard/util/getRevertedFilterScope.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getRevertedFilterScope.ts"],"names":[],"mappings":"6rBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,gCAAT,QAAiD,yBAAjD;AAYA,eAAc,SAAU,sBAAV,CAAiC,EAC7C,OAAO,GAAG,EADmC,EAE7C,YAAY,GAAG,EAF8B,EAG7C,cAAc,GAAG,EAH4B,EAAjC,EAIc;AAC1B,QAAM,4BAA4B,GAAG,wBAAA,OAAO,MAAP,CAAA,OAAO,EAC1C,CAAC,GAAD,EAAM,KAAN,KAAe;AACb,UAAM,CAAC,OAAD,EAAU,WAAV,IAAyB,KAAK,CAAC,KAAN,CAAY,GAAZ,CAA/B;AACA,WAAO;AACL,SAAG,GADE;AAEL,OAAC,WAAD,GAAe,mCAAC,GAAG,CAAC,WAAD,CAAH,IAAoB,EAArB,iBAAgC,UAAS,OAAT,EAAkB,EAAlB,CAAhC,CAFV,EAAP;;AAID,GAPyC,EAQ1C,EAR0C,CAA5C;AAWA,SAAO,wBAAA,YAAY,MAAZ,CAAA,YAAY,EAAwB,CAAC,GAAD,EAAM,WAAN,KAAqB;AAC9D,UAAM,EAAE,OAAF,KAAc,gCAAgC,CAAC,WAAD,CAApD;AACA;AACA,UAAM,iBAAiB,GAAG,oCACxB,4BAA4B,CAAC,WAAD,CAA5B,IAA6C,EADrB,kBAEjB,EAAE,IAAI,EAAE,KAAK,OAFI,CAA1B;AAIA,WAAO;AACL,SAAG,GADE;AAEL,OAAC,WAAD,GAAe;AACb,WAAG,cAAc,CAAC,WAAD,CADJ;AAEb,QAAA,OAAO,EAAE,iBAFI,EAFV,EAAP;;;AAOD,GAdkB,EAchB,EAdgB,CAAnB;AAeD,C,iLA/BuB,sB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartIdAndColumnFromFilterKey } from './getDashboardFilterKey';\n\ninterface FilterScopeMap {\n  [key: string]: number[];\n}\n\ninterface GetRevertFilterScopeProps {\n  checked: string[];\n  filterFields: string[];\n  filterScopeMap: FilterScopeMap;\n}\n\nexport default function getRevertedFilterScope({\n  checked = [],\n  filterFields = [],\n  filterScopeMap = {},\n}: GetRevertFilterScopeProps) {\n  const checkedChartIdsByFilterField = checked.reduce<FilterScopeMap>(\n    (map, value) => {\n      const [chartId, filterField] = value.split(':');\n      return {\n        ...map,\n        [filterField]: (map[filterField] || []).concat(parseInt(chartId, 10)),\n      };\n    },\n    {},\n  );\n\n  return filterFields.reduce<FilterScopeMap>((map, filterField) => {\n    const { chartId } = getChartIdAndColumnFromFilterKey(filterField);\n    // force display filter_box chart as unchecked, but show checkbox as disabled\n    const updatedCheckedIds = (\n      checkedChartIdsByFilterField[filterField] || []\n    ).filter(id => id !== chartId);\n\n    return {\n      ...map,\n      [filterField]: {\n        ...filterScopeMap[filterField],\n        checked: updatedCheckedIds,\n      },\n    };\n  }, {});\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}