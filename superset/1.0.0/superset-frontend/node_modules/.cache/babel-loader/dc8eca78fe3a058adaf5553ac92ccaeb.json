{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport moment from 'moment';\nimport { createFetchRelated, createFetchDistinct, createErrorHandler, shortenSQL } from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport Icon from 'src/components/Icon';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\nimport QueryPreviewModal from './QueryPreviewModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\nconst TopAlignedListView = styled(ListView)`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status' })\n`\n  color: ${({ status, theme }) => {\n  if (status === 'success')\n  return theme.colors.success.base;\n  if (status === 'failed')\n  return theme.colors.error.base;\n  if (status === 'running')\n  return theme.colors.primary.base;\n  if (status === 'offline')\n  return theme.colors.grayscale.light1;\n  return theme.colors.grayscale.base;\n}};\n`;\nfunction QueryList({ addDangerToast, addSuccessToast }) {\n  const { state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData } = useListViewResource('query', t('Query history'), addDangerToast, false);\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] = useState();\n  const handleQueryPreview = useCallback(id => {\n    SupersetClient.get({\n      endpoint: `/api/v1/query/${id}` }).\n    then(({ json = {} }) => {\n      setQueryCurrentlyPreviewing({ ...json.result });\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue previewing the selected query. %s', errMsg))));\n  }, [addDangerToast]);\n  const menuData = {\n    activeChild: 'Query history',\n    ...commonMenuData };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(() => [\n  {\n    Cell: ({ row: { original: { status } } }) => {\n      const statusConfig = {\n        name: '',\n        label: '',\n        status: '' };\n\n      if (status === 'success') {\n        statusConfig.name = 'check';\n        statusConfig.label = t('Success');\n        statusConfig.status = 'success';\n      }\n      if (status === 'failed' || status === 'stopped') {\n        statusConfig.name = 'x-small';\n        statusConfig.label = t('Failed');\n        statusConfig.status = 'failed';\n      }\n      if (status === 'running') {\n        statusConfig.name = 'running';\n        statusConfig.label = t('Running');\n        statusConfig.status = 'running';\n      }\n      if (status === 'timed_out') {\n        statusConfig.name = 'offline';\n        statusConfig.label = t('Offline');\n        statusConfig.status = 'offline';\n      }\n      if (status === 'scheduled' || status === 'pending') {\n        statusConfig.name = 'queued';\n        statusConfig.label = t('Scheduled');\n        statusConfig.status = 'queued';\n      }\n      return ___EmotionJSX(Tooltip, { title: statusConfig.label, placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(StatusIcon, { name: statusConfig.name, status: statusConfig.status })));\n\n\n    },\n    accessor: QueryObjectColumns.status,\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    accessor: QueryObjectColumns.start_time,\n    Header: t('Time'),\n    size: 'xl',\n    Cell: ({ row: { original: { start_time, end_time } } }) => {\n      const startMoment = moment.utc(start_time).local();\n      const formattedStartTimeData = startMoment.\n      format(DATETIME_WITH_TIME_ZONE).\n      split(' ');\n      const formattedStartTime = ___EmotionJSX(React.Fragment, null,\n      formattedStartTimeData[0], \" \", ___EmotionJSX(\"br\", null),\n      formattedStartTimeData[1]);\n\n      return end_time ? ___EmotionJSX(Tooltip, { title: t('Duration: %s', moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS)), placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null, formattedStartTime)) :\n      formattedStartTime;\n    } },\n\n  {\n    accessor: QueryObjectColumns.tab_name,\n    Header: t('Tab name'),\n    size: 'xl' },\n\n  {\n    accessor: QueryObjectColumns.database_name,\n    Header: t('Database'),\n    size: 'xl' },\n\n  {\n    accessor: QueryObjectColumns.database,\n    hidden: true },\n\n  {\n    accessor: QueryObjectColumns.schema,\n    Header: t('Schema'),\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original: { sql_tables: tables = [] } } }) => {\n      const names = _mapInstanceProperty(tables).call(tables, table => table.table);\n      const main = names.length > 0 ? names.shift() : '';\n      if (names.length) {\n        return ___EmotionJSX(StyledTableLabel, null,\n        ___EmotionJSX(\"span\", null, main),\n        ___EmotionJSX(Popover, { placement: \"right\", title: t('TABLES'), trigger: \"click\", content: ___EmotionJSX(React.Fragment, null,\n          _mapInstanceProperty(names).call(names, name => ___EmotionJSX(StyledPopoverItem, { key: name }, name))) },\n\n        ___EmotionJSX(\"span\", { className: \"count\" }, \"(+\", names.length, \")\")));\n\n\n      }\n      return main;\n    },\n    accessor: QueryObjectColumns.sql_tables,\n    Header: t('Tables'),\n    size: 'xl',\n    disableSortBy: true },\n\n  {\n    accessor: QueryObjectColumns.user_first_name,\n    Header: t('User'),\n    size: 'xl',\n    Cell: ({ row: { original: { user } } }) => user ? `${user.first_name} ${user.last_name}` : '' },\n\n  {\n    accessor: QueryObjectColumns.user,\n    hidden: true },\n\n  {\n    accessor: QueryObjectColumns.rows,\n    Header: t('Rows'),\n    size: 'md' },\n\n  {\n    accessor: QueryObjectColumns.sql,\n    Header: t('SQL'),\n    Cell: ({ row: { original, id } }) => ___EmotionJSX(\"div\", { tabIndex: 0, role: \"button\", \"data-test\": `open-sql-preview-${id}`, onClick: () => setQueryCurrentlyPreviewing(original) },\n    ___EmotionJSX(StyledSyntaxHighlighter, { language: \"sql\", style: github },\n    shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES))) },\n\n\n\n  {\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    Cell: ({ row: { original: { id } } }) => ___EmotionJSX(Tooltip, { title: t('Open query in SQL Lab'), placement: \"bottom\" },\n    ___EmotionJSX(\"a\", { href: `/superset/sqllab?queryId=${id}` },\n    ___EmotionJSX(Icon, { name: \"full\" }))) }],\n\n\n\n  []);\n  const filters = useMemo(() => [\n  {\n    Header: t('Database'),\n    id: 'database',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('query', 'database', createErrorHandler(errMsg => addDangerToast(t('An error occurred while fetching database values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('State'),\n    id: 'status',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchDistinct('query', 'status', createErrorHandler(errMsg => addDangerToast(t('An error occurred while fetching schema values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('User'),\n    id: 'user',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('query', 'user', createErrorHandler(errMsg => addDangerToast(t('An error occurred while fetching database values: %s', errMsg)))),\n    paginate: true },\n\n  {\n    Header: t('Time range'),\n    id: 'start_time',\n    input: 'datetime_range',\n    operator: FilterOperator.between },\n\n  {\n    Header: t('Search by query text'),\n    id: 'sql',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  [addDangerToast]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  queryCurrentlyPreviewing && ___EmotionJSX(QueryPreviewModal, { onHide: () => setQueryCurrentlyPreviewing(undefined), query: queryCurrentlyPreviewing, queries: queries, fetchData: handleQueryPreview, openInSqlLab: id => window.location.assign(`/superset/sqllab?queryId=${id}`), show: true }),\n  ___EmotionJSX(TopAlignedListView, { className: \"query-history-list-view\", columns: columns, count: queryCount, data: queries, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, highlightRowId: queryCurrentlyPreviewing == null ? void 0 : queryCurrentlyPreviewing.id }));\n\n}__signature__(QueryList, \"useListViewResource{{ state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData, }}\\nuseState{[queryCurrentlyPreviewing, setQueryCurrentlyPreviewing,]}\\nuseCallback{handleQueryPreview}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource]);const _default =\nwithToasts(QueryList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(SQL_PREVIEW_MAX_LINES, \"SQL_PREVIEW_MAX_LINES\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(TopAlignedListView, \"TopAlignedListView\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(StyledSyntaxHighlighter, \"StyledSyntaxHighlighter\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(StyledTableLabel, \"StyledTableLabel\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(StyledPopoverItem, \"StyledPopoverItem\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(StatusIcon, \"StatusIcon\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(QueryList, \"QueryList\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/query/QueryList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu, { SubMenuProps } from 'src/components/Menu/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport Icon, { IconName } from 'src/components/Icon';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport QueryPreviewModal from './QueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status',\n})<{ status: string }>`\n  color: ${({ status, theme }) => {\n    if (status === 'success') return theme.colors.success.base;\n    if (status === 'failed') return theme.colors.error.base;\n    if (status === 'running') return theme.colors.primary.base;\n    if (status === 'offline') return theme.colors.grayscale.light1;\n\n    return theme.colors.grayscale.base;\n  }};\n`;\n\nfunction QueryList({ addDangerToast, addSuccessToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [\n    queryCurrentlyPreviewing,\n    setQueryCurrentlyPreviewing,\n  ] = useState<QueryObject>();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: any) => {\n          const statusConfig = {\n            name: '',\n            label: '',\n            status: '',\n          };\n          if (status === 'success') {\n            statusConfig.name = 'check';\n            statusConfig.label = t('Success');\n            statusConfig.status = 'success';\n          }\n          if (status === 'failed' || status === 'stopped') {\n            statusConfig.name = 'x-small';\n            statusConfig.label = t('Failed');\n            statusConfig.status = 'failed';\n          }\n          if (status === 'running') {\n            statusConfig.name = 'running';\n            statusConfig.label = t('Running');\n            statusConfig.status = 'running';\n          }\n          if (status === 'timed_out') {\n            statusConfig.name = 'offline';\n            statusConfig.label = t('Offline');\n            statusConfig.status = 'offline';\n          }\n          if (status === 'scheduled' || status === 'pending') {\n            statusConfig.name = 'queued';\n            statusConfig.label = t('Scheduled');\n            statusConfig.status = 'queued';\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>\n                <StatusIcon\n                  name={statusConfig.name as IconName}\n                  status={statusConfig.status}\n                />\n              </span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.start_time,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time, end_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n\n          return end_time ? (\n            <Tooltip\n              title={t(\n                'Duration: %s',\n                moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS),\n              )}\n              placement=\"bottom\"\n            >\n              <span>{formattedStartTime}</span>\n            </Tooltip>\n          ) : (\n            formattedStartTime\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.tab_name,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database_name,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.sql_tables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.user_first_name,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => (user ? `${user.first_name} ${user.last_name}` : ''),\n      },\n      {\n        accessor: QueryObjectColumns.user,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <a href={`/superset/sqllab?queryId=${id}`}>\n              <Icon name=\"full\" />\n            </a>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.between,\n      },\n      {\n        Header: t('Search by query text'),\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) =>\n            window.location.assign(`/superset/sqllab?queryId=${id}`)\n          }\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}