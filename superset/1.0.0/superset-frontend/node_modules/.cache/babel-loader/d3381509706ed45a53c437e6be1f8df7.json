{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _reverseInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reverse\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, styled } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/modules/dates';\nimport Icons from 'src/components/Icons';\nimport Icon from 'src/components/Icon';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ResultSet from '../ResultSet';\nimport ModalTrigger from '../../../components/ModalTrigger';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  columns: PropTypes.array,\n  actions: PropTypes.object,\n  queries: PropTypes.array,\n  onUserClicked: PropTypes.func,\n  onDbClicked: PropTypes.func,\n  displayLimit: PropTypes.number.isRequired };\n\nconst defaultProps = {\n  columns: ['started', 'duration', 'rows'],\n  queries: [],\n  onUserClicked: () => {},\n  onDbClicked: () => {} };\n\n\nconst openQuery = id => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst statusAttributes = {\n  success: {\n    color: ({ theme }) => theme.colors.success.base,\n    config: {\n      name: 'check',\n      label: t('Success'),\n      status: 'success' } },\n\n\n  failed: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'x-small',\n      label: t('Failed'),\n      status: 'failed' } },\n\n\n  stopped: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'x-small',\n      label: t('Failed'),\n      status: 'failed' } },\n\n\n  running: {\n    color: ({ theme }) => theme.colors.primary.base,\n    config: {\n      name: 'running',\n      label: t('Running'),\n      status: 'running' } },\n\n\n  fetching: {\n    color: ({ theme }) => theme.colors.primary.base,\n    config: {\n      name: 'queued',\n      label: t('fetching'),\n      status: 'fetching' } },\n\n\n  timed_out: {\n    color: ({ theme }) => theme.colors.grayscale.light1,\n    config: {\n      name: 'offline',\n      label: t('Offline'),\n      status: 'offline' } },\n\n\n  scheduled: {\n    color: ({ theme }) => theme.colors.greyscale.base,\n    config: {\n      name: 'queued',\n      label: t('Scheduled'),\n      status: 'queued' } },\n\n\n  pending: {\n    color: ({ theme }) => theme.colors.greyscale.base,\n    config: {\n      name: 'queued',\n      label: t('Scheduled'),\n      status: 'queued' } },\n\n\n  error: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'error',\n      label: t('Unknown Status'),\n      status: 'unknown status!' } } };\n\n\n\n\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status' })\n`\n  color: ${({ status, theme }) => {var _statusAttributes$sta;return (\n    ((_statusAttributes$sta = statusAttributes[status]) == null ? void 0 : _statusAttributes$sta.color) || theme.colors.grayscale.base);}};\n`;\n\nconst QueryTable = props => {\n  const setHeaders = column => {var _context;\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return _concatInstanceProperty(_context = column.charAt(0).toUpperCase()).call(_context, _sliceInstanceProperty(column).call(column, 1));\n  };\n  const columns = useMemo(\n  () => {var _context2;return (\n      _mapInstanceProperty(_context2 = props.columns).call(_context2, column => ({\n        accessor: column,\n        Header: () => setHeaders(column),\n        disableSortBy: true })));},\n\n  [props.columns]);\n\n\n  const user = useSelector(({ sqlLab: { user } }) => user);\n\n  const data = useMemo(() => {var _context3, _context4;\n    const restoreSql = query => {\n      props.actions.queryEditorSetSql({ id: query.sqlEditorId }, query.sql);\n    };\n\n    const openQueryInNewTab = query => {\n      props.actions.cloneQueryToNewTab(query, true);\n    };\n\n    const openAsyncResults = (query, displayLimit) => {\n      props.actions.fetchQueryResults(query, displayLimit);\n    };\n\n    const clearQueryResults = query => {\n      props.actions.clearQueryResults(query);\n    };\n\n    const removeQuery = query => {\n      props.actions.removeQuery(query);\n    };\n\n    return _reverseInstanceProperty(_context3 = _mapInstanceProperty(_context4 = props.queries).call(_context4,\n    query => {\n      const q = { ...query };\n      const status = statusAttributes[q.state] || statusAttributes.error;\n\n      if (q.endDttm) {\n        q.duration = fDuration(q.startDttm, q.endDttm);\n      }\n      const time = moment(q.startDttm).format().split('T');\n      q.time =\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"span\", null,\n      time[0], \" \", ___EmotionJSX(\"br\", null), \" \", time[1]));\n\n\n\n      q.user =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => props.onUserClicked(q.userId) },\n\n      q.user);\n\n\n      q.db =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => props.onDbClicked(q.dbId) },\n\n      q.db);\n\n\n      q.started = moment(q.startDttm).format('HH:mm:ss');\n      q.querylink =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => openQuery(q.queryId) },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-external-link m-r-3\" }),\n      t('Edit'));\n\n\n      q.sql =\n      ___EmotionJSX(Card, { css: [StaticPosition, process.env.NODE_ENV === \"production\" ? \"\" : \";label:q-sql;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"] },\n      ___EmotionJSX(HighlightedSql, {\n        sql: q.sql,\n        rawSql: q.executedSql,\n        shrink: true,\n        maxWidth: 60 }));\n\n\n\n      if (q.resultsKey) {\n        q.output =\n        ___EmotionJSX(ModalTrigger, {\n          className: \"ResultsModal\",\n          triggerNode:\n          ___EmotionJSX(Label, { type: \"info\", className: \"pointer\" },\n          t('View results')),\n\n\n          modalTitle: t('Data preview'),\n          beforeOpen: () => openAsyncResults(query, props.displayLimit),\n          onExit: () => clearQueryResults(query),\n          modalBody:\n          ___EmotionJSX(ResultSet, {\n            showSql: true,\n            user: user,\n            query: query,\n            actions: props.actions,\n            height: 400,\n            displayLimit: props.displayLimit }),\n\n\n          responsive: true });\n\n\n      } else {var _context5, _context6;\n        // if query was run using ctas and force_ctas_schema was set\n        // tempTable will have the schema\n        const schemaUsed =\n        q.ctas && q.tempTable && _includesInstanceProperty(_context5 = q.tempTable).call(_context5, '.') ? '' : q.schema;\n        q.output = _filterInstanceProperty(_context6 = [schemaUsed, q.tempTable]).call(_context6, v => v).join('.');\n      }\n      q.progress =\n      q.state === 'success' ?\n      ___EmotionJSX(ProgressBar, {\n        percent: _parseInt(q.progress.toFixed(0), 10),\n        striped: true,\n        showInfo: false }) :\n\n\n      ___EmotionJSX(ProgressBar, {\n        percent: _parseInt(q.progress.toFixed(0), 10),\n        striped: true });\n\n\n      q.state =\n      ___EmotionJSX(Tooltip, { title: status.config.label, placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(StatusIcon, {\n        name: status.config.name,\n        status: status.config.status })));\n\n\n\n\n      q.actions =\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(StyledTooltip, {\n        onClick: () => restoreSql(query),\n        tooltip: t(\n        'Overwrite text in the editor with a query on this table'),\n\n        placement: \"top\" },\n\n      ___EmotionJSX(Icons.Edit, { iconSize: \"small\" })),\n\n      ___EmotionJSX(StyledTooltip, {\n        onClick: () => openQueryInNewTab(query),\n        tooltip: t('Run query in a new tab'),\n        placement: \"top\" },\n\n      ___EmotionJSX(Icons.PlusCircleOutlined, {\n        iconSize: \"x-small\",\n        css: verticalAlign })),\n\n\n      ___EmotionJSX(StyledTooltip, {\n        tooltip: t('Remove query from log'),\n        onClick: () => removeQuery(query) },\n\n      ___EmotionJSX(Icons.Trash, { iconSize: \"x-small\" })));\n\n\n\n      return q;\n    })).call(_context3);\n\n  }, [props]);\n\n  return (\n    ___EmotionJSX(\"div\", { className: \"QueryTable\" },\n    ___EmotionJSX(TableView, {\n      columns: columns,\n      data: data,\n      className: \"table-condensed\",\n      pageSize: 50 })));\n\n\n\n};__signature__(QueryTable, \"useMemo{columns}\\nuseSelector{user}\\nuseMemo{data}\", () => [useSelector]);\n\nQueryTable.propTypes = propTypes;\nQueryTable.defaultProps = defaultProps;const _default =\n\nQueryTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(openQuery, \"openQuery\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(statusAttributes, \"statusAttributes\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(StatusIcon, \"StatusIcon\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(QueryTable, \"QueryTable\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/QueryTable/index.jsx"],"names":["React","useMemo","PropTypes","moment","Card","ProgressBar","Label","t","styled","useSelector","TableView","Button","fDuration","Icons","Icon","Tooltip","ResultSet","ModalTrigger","HighlightedSql","StaticPosition","verticalAlign","StyledTooltip","propTypes","columns","array","actions","object","queries","onUserClicked","func","onDbClicked","displayLimit","number","isRequired","defaultProps","openQuery","id","url","window","open","statusAttributes","success","color","theme","colors","base","config","name","label","status","failed","error","stopped","running","primary","fetching","timed_out","grayscale","light1","scheduled","greyscale","pending","StatusIcon","shouldForwardProp","prop","QueryTable","props","setHeaders","column","toUpperCase","charAt","accessor","Header","disableSortBy","user","sqlLab","data","restoreSql","query","queryEditorSetSql","sqlEditorId","sql","openQueryInNewTab","cloneQueryToNewTab","openAsyncResults","fetchQueryResults","clearQueryResults","removeQuery","q","state","endDttm","duration","startDttm","time","format","split","userId","db","dbId","started","querylink","queryId","executedSql","resultsKey","output","schemaUsed","ctas","tempTable","schema","v","join","progress","toFixed"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, styled } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/modules/dates';\nimport Icons from 'src/components/Icons';\nimport Icon from 'src/components/Icon';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ResultSet from '../ResultSet';\nimport ModalTrigger from '../../../components/ModalTrigger';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';\n\nconst propTypes = {\n  columns: PropTypes.array,\n  actions: PropTypes.object,\n  queries: PropTypes.array,\n  onUserClicked: PropTypes.func,\n  onDbClicked: PropTypes.func,\n  displayLimit: PropTypes.number.isRequired,\n};\nconst defaultProps = {\n  columns: ['started', 'duration', 'rows'],\n  queries: [],\n  onUserClicked: () => {},\n  onDbClicked: () => {},\n};\n\nconst openQuery = id => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst statusAttributes = {\n  success: {\n    color: ({ theme }) => theme.colors.success.base,\n    config: {\n      name: 'check',\n      label: t('Success'),\n      status: 'success',\n    },\n  },\n  failed: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'x-small',\n      label: t('Failed'),\n      status: 'failed',\n    },\n  },\n  stopped: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'x-small',\n      label: t('Failed'),\n      status: 'failed',\n    },\n  },\n  running: {\n    color: ({ theme }) => theme.colors.primary.base,\n    config: {\n      name: 'running',\n      label: t('Running'),\n      status: 'running',\n    },\n  },\n  fetching: {\n    color: ({ theme }) => theme.colors.primary.base,\n    config: {\n      name: 'queued',\n      label: t('fetching'),\n      status: 'fetching',\n    },\n  },\n  timed_out: {\n    color: ({ theme }) => theme.colors.grayscale.light1,\n    config: {\n      name: 'offline',\n      label: t('Offline'),\n      status: 'offline',\n    },\n  },\n  scheduled: {\n    color: ({ theme }) => theme.colors.greyscale.base,\n    config: {\n      name: 'queued',\n      label: t('Scheduled'),\n      status: 'queued',\n    },\n  },\n  pending: {\n    color: ({ theme }) => theme.colors.greyscale.base,\n    config: {\n      name: 'queued',\n      label: t('Scheduled'),\n      status: 'queued',\n    },\n  },\n  error: {\n    color: ({ theme }) => theme.colors.error.base,\n    config: {\n      name: 'error',\n      label: t('Unknown Status'),\n      status: 'unknown status!',\n    },\n  },\n};\n\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  color: ${({ status, theme }) =>\n    statusAttributes[status]?.color || theme.colors.grayscale.base};\n`;\n\nconst QueryTable = props => {\n  const setHeaders = column => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columns = useMemo(\n    () =>\n      props.columns.map(column => ({\n        accessor: column,\n        Header: () => setHeaders(column),\n        disableSortBy: true,\n      })),\n    [props.columns],\n  );\n\n  const user = useSelector(({ sqlLab: { user } }) => user);\n\n  const data = useMemo(() => {\n    const restoreSql = query => {\n      props.actions.queryEditorSetSql({ id: query.sqlEditorId }, query.sql);\n    };\n\n    const openQueryInNewTab = query => {\n      props.actions.cloneQueryToNewTab(query, true);\n    };\n\n    const openAsyncResults = (query, displayLimit) => {\n      props.actions.fetchQueryResults(query, displayLimit);\n    };\n\n    const clearQueryResults = query => {\n      props.actions.clearQueryResults(query);\n    };\n\n    const removeQuery = query => {\n      props.actions.removeQuery(query);\n    };\n\n    return props.queries\n      .map(query => {\n        const q = { ...query };\n        const status = statusAttributes[q.state] || statusAttributes.error;\n\n        if (q.endDttm) {\n          q.duration = fDuration(q.startDttm, q.endDttm);\n        }\n        const time = moment(q.startDttm).format().split('T');\n        q.time = (\n          <div>\n            <span>\n              {time[0]} <br /> {time[1]}\n            </span>\n          </div>\n        );\n        q.user = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => props.onUserClicked(q.userId)}\n          >\n            {q.user}\n          </Button>\n        );\n        q.db = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => props.onDbClicked(q.dbId)}\n          >\n            {q.db}\n          </Button>\n        );\n        q.started = moment(q.startDttm).format('HH:mm:ss');\n        q.querylink = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => openQuery(q.queryId)}\n          >\n            <i className=\"fa fa-external-link m-r-3\" />\n            {t('Edit')}\n          </Button>\n        );\n        q.sql = (\n          <Card css={[StaticPosition]}>\n            <HighlightedSql\n              sql={q.sql}\n              rawSql={q.executedSql}\n              shrink\n              maxWidth={60}\n            />\n          </Card>\n        );\n        if (q.resultsKey) {\n          q.output = (\n            <ModalTrigger\n              className=\"ResultsModal\"\n              triggerNode={\n                <Label type=\"info\" className=\"pointer\">\n                  {t('View results')}\n                </Label>\n              }\n              modalTitle={t('Data preview')}\n              beforeOpen={() => openAsyncResults(query, props.displayLimit)}\n              onExit={() => clearQueryResults(query)}\n              modalBody={\n                <ResultSet\n                  showSql\n                  user={user}\n                  query={query}\n                  actions={props.actions}\n                  height={400}\n                  displayLimit={props.displayLimit}\n                />\n              }\n              responsive\n            />\n          );\n        } else {\n          // if query was run using ctas and force_ctas_schema was set\n          // tempTable will have the schema\n          const schemaUsed =\n            q.ctas && q.tempTable && q.tempTable.includes('.') ? '' : q.schema;\n          q.output = [schemaUsed, q.tempTable].filter(v => v).join('.');\n        }\n        q.progress =\n          q.state === 'success' ? (\n            <ProgressBar\n              percent={parseInt(q.progress.toFixed(0), 10)}\n              striped\n              showInfo={false}\n            />\n          ) : (\n            <ProgressBar\n              percent={parseInt(q.progress.toFixed(0), 10)}\n              striped\n            />\n          );\n        q.state = (\n          <Tooltip title={status.config.label} placement=\"bottom\">\n            <span>\n              <StatusIcon\n                name={status.config.name}\n                status={status.config.status}\n              />\n            </span>\n          </Tooltip>\n        );\n        q.actions = (\n          <div>\n            <StyledTooltip\n              onClick={() => restoreSql(query)}\n              tooltip={t(\n                'Overwrite text in the editor with a query on this table',\n              )}\n              placement=\"top\"\n            >\n              <Icons.Edit iconSize=\"small\" />\n            </StyledTooltip>\n            <StyledTooltip\n              onClick={() => openQueryInNewTab(query)}\n              tooltip={t('Run query in a new tab')}\n              placement=\"top\"\n            >\n              <Icons.PlusCircleOutlined\n                iconSize=\"x-small\"\n                css={verticalAlign}\n              />\n            </StyledTooltip>\n            <StyledTooltip\n              tooltip={t('Remove query from log')}\n              onClick={() => removeQuery(query)}\n            >\n              <Icons.Trash iconSize=\"x-small\" />\n            </StyledTooltip>\n          </div>\n        );\n        return q;\n      })\n      .reverse();\n  }, [props]);\n\n  return (\n    <div className=\"QueryTable\">\n      <TableView\n        columns={columns}\n        data={data}\n        className=\"table-condensed\"\n        pageSize={50}\n      />\n    </div>\n  );\n};\n\nQueryTable.propTypes = propTypes;\nQueryTable.defaultProps = defaultProps;\n\nexport default QueryTable;\n"]},"metadata":{},"sourceType":"module"}