{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, logging } from '@superset-ui/core';\nimport parseCookie from 'src/utils/parseCookie';\nexport default function setupClient() {var _context, _window, _window$location, _window2, _window2$location;\n  const csrfNode = document.querySelector('#csrf_token');\n  const csrfToken = csrfNode == null ? void 0 : csrfNode.value;\n  // when using flask-jwt-extended csrf is set in cookies\n  const cookieCSRFToken = parseCookie().csrf_access_token || '';\n  SupersetClient.configure({\n    protocol: _includesInstanceProperty(_context = ['http:', 'https:']).call(_context, (_window = window) == null ? void 0 : (_window$location = _window.location) == null ? void 0 : _window$location.protocol) ? (_window2 =\n    window) == null ? void 0 : (_window2$location = _window2.location) == null ? void 0 : _window2$location.protocol :\n    undefined,\n    host: window.location && window.location.host || '',\n    csrfToken: csrfToken || cookieCSRFToken }).\n\n  init().\n  catch(error => {\n    logging.warn('Error initializing SupersetClient', error);\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(setupClient, \"setupClient\", \"/app/superset-frontend/src/setup/setupClient.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/setup/setupClient.ts"],"names":[],"mappings":"wYAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,cAAT,EAAyB,OAAzB,QAAwC,mBAAxC;AACA,OAAO,WAAP,MAAwB,uBAAxB;AAEA,eAAc,SAAU,WAAV,GAAqB;AACjC,QAAM,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAyC,aAAzC,CAAjB;AACA,QAAM,SAAS,GAAG,QAAH,oBAAG,QAAQ,CAAE,KAA5B;AAEA;AACA,QAAM,eAAe,GAAG,WAAW,GAAG,iBAAd,IAAmC,EAA3D;AAEA,EAAA,cAAc,CAAC,SAAf,CAAyB;AACvB,IAAA,QAAQ,EAAE,sCAAC,OAAD,EAAU,QAAV,6BAA6B,MAA7B,yCAA6B,QAAQ,QAArC,qBAA6B,iBAAkB,QAA/C;AACL,IAAA,MADK,0CACL,SAAQ,QADH,qBACL,kBAAkB,QADb;AAEN,IAAA,SAHmB;AAIvB,IAAA,IAAI,EAAG,MAAM,CAAC,QAAP,IAAmB,MAAM,CAAC,QAAP,CAAgB,IAApC,IAA6C,EAJ5B;AAKvB,IAAA,SAAS,EAAE,SAAS,IAAI,eALD,EAAzB;;AAOG,EAAA,IAPH;AAQG,EAAA,KARH,CAQS,KAAK,IAAG;AACb,IAAA,OAAO,CAAC,IAAR,CAAa,mCAAb,EAAkD,KAAlD;AACD,GAVH;AAWD,C,iLAlBuB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, logging } from '@superset-ui/core';\nimport parseCookie from 'src/utils/parseCookie';\n\nexport default function setupClient() {\n  const csrfNode = document.querySelector<HTMLInputElement>('#csrf_token');\n  const csrfToken = csrfNode?.value;\n\n  // when using flask-jwt-extended csrf is set in cookies\n  const cookieCSRFToken = parseCookie().csrf_access_token || '';\n\n  SupersetClient.configure({\n    protocol: ['http:', 'https:'].includes(window?.location?.protocol)\n      ? (window?.location?.protocol as 'http:' | 'https:')\n      : undefined,\n    host: (window.location && window.location.host) || '',\n    csrfToken: csrfToken || cookieCSRFToken,\n  })\n    .init()\n    .catch(error => {\n      logging.warn('Error initializing SupersetClient', error);\n    });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}