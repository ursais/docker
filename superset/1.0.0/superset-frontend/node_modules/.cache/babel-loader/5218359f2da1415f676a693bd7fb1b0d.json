{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _URLSearchParams from \"@babel/runtime-corejs3/core-js-stable/url-search-params\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { URL_PARAMS } from 'src/constants';\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\nexport default function getDashboardUrl(pathname, filters = {}, hash = '', standalone) {\n  const newSearchParams = new _URLSearchParams();\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  newSearchParams.set(URL_PARAMS.preselectFilters.name, _JSON$stringify(serializeActiveFilterValues(filters)));\n  if (standalone) {\n    newSearchParams.set(URL_PARAMS.standalone.name, standalone.toString());\n  }\n  const hashSection = hash ? `#${hash}` : '';\n  return `${pathname}?${newSearchParams.toString()}${hashSection}`;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDashboardUrl, \"getDashboardUrl\", \"/app/superset-frontend/src/dashboard/util/getDashboardUrl.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getDashboardUrl.ts"],"names":[],"mappings":"kdAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,UAAT,QAA2B,eAA3B;AACA,OAAO,2BAAP,MAAwC,+BAAxC;AAEA,eAAc,SAAU,eAAV,CACZ,QADY,EAEZ,OAAO,GAAG,EAFE,EAGZ,IAAI,GAAG,EAHK,EAIZ,UAJY,EAIc;AAE1B,QAAM,eAAe,GAAG,sBAAxB;AAEA;AACA;AACA,EAAA,eAAe,CAAC,GAAhB,CACE,UAAU,CAAC,gBAAX,CAA4B,IAD9B,EAEE,gBAAe,2BAA2B,CAAC,OAAD,CAA1C,CAFF;AAKA,MAAI,UAAJ,EAAgB;AACd,IAAA,eAAe,CAAC,GAAhB,CAAoB,UAAU,CAAC,UAAX,CAAsB,IAA1C,EAAgD,UAAU,CAAC,QAAX,EAAhD;AACD;AAED,QAAM,WAAW,GAAG,IAAI,GAAG,IAAI,IAAI,EAAX,GAAgB,EAAxC;AAEA,SAAO,GAAG,QAAQ,IAAI,eAAe,CAAC,QAAhB,EAA0B,GAAG,WAAW,EAA9D;AACD,C,iLAtBuB,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { URL_PARAMS } from 'src/constants';\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\n\nexport default function getDashboardUrl(\n  pathname: string,\n  filters = {},\n  hash = '',\n  standalone?: number | null,\n) {\n  const newSearchParams = new URLSearchParams();\n\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  newSearchParams.set(\n    URL_PARAMS.preselectFilters.name,\n    JSON.stringify(serializeActiveFilterValues(filters)),\n  );\n\n  if (standalone) {\n    newSearchParams.set(URL_PARAMS.standalone.name, standalone.toString());\n  }\n\n  const hashSection = hash ? `#${hash}` : '';\n\n  return `${pathname}?${newSearchParams.toString()}${hashSection}`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}