{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Select from 'antd/lib/select';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport { OptionType as NativeSelectOptionType, SelectProps as NativeSelectProps } from 'antd/lib/select';\nconst StyledNativeSelect = styled(props => ___EmotionJSX(Select, _extends({ getPopupContainer: trigger => trigger.parentNode }, props)))`\n  display: block;\n`;\nconst StyledNativeGraySelect = styled(Select)`\n  &.ant-select-single {\n    .ant-select-selector {\n      height: 36px;\n      padding: 0 11px;\n      background-color: ${({ theme }) => theme.colors.grayscale.light3};\n      border: none;\n\n      .ant-select-selection-search-input {\n        height: 100%;\n      }\n\n      .ant-select-selection-item,\n      .ant-select-selection-placeholder {\n        line-height: 35px;\n        color: ${({ theme }) => theme.colors.grayscale.dark1};\n      }\n    }\n  }\n`;\nexport const NativeSelect = _Object$assign(StyledNativeSelect, {\n  Option: Select.Option });\n\nexport const NativeGraySelect = _Object$assign(StyledNativeGraySelect, {\n  Option: Select.Option });;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledNativeSelect, \"StyledNativeSelect\", \"/app/superset-frontend/src/components/Select/NativeSelect.tsx\");reactHotLoader.register(StyledNativeGraySelect, \"StyledNativeGraySelect\", \"/app/superset-frontend/src/components/Select/NativeSelect.tsx\");reactHotLoader.register(NativeSelect, \"NativeSelect\", \"/app/superset-frontend/src/components/Select/NativeSelect.tsx\");reactHotLoader.register(NativeGraySelect, \"NativeGraySelect\", \"/app/superset-frontend/src/components/Select/NativeSelect.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Select/NativeSelect.tsx"],"names":[],"mappings":"ubAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,MAAP,MAAoC,iBAApC,C;AAEA,SACE,UAAU,IAAI,sBADhB,EAEE,WAAW,IAAI,iBAFjB,QAGO,iBAHP;AAKA,MAAM,kBAAkB,GAAG,MAAM,CAAE,KAAD,IAChC,cAAC,MAAD,aAAQ,iBAAiB,EAAG,OAAD,IAAkB,OAAO,CAAC,UAArD,IAAqE,KAArE,EAD+B,CAE/B;;AAED,CAJD;AAMA,MAAM,sBAAsB,GAAG,MAAM,CAAC,MAAD,CAAQ;;;;;0BAKnB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;;;;;;;;;iBAUrD,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,KAAK;;;;AAI3D,CAnBD;AAqBA,OAAO,MAAM,YAAY,GAAG,eAAc,kBAAd,EAAkC;AAC5D,EAAA,MAAM,EAAE,MAAM,CAAC,MAD6C,EAAlC,CAArB;;AAIP,OAAO,MAAM,gBAAgB,GAAG,eAAc,sBAAd,EAAsC;AACpE,EAAA,MAAM,EAAE,MAAM,CAAC,MADqD,EAAtC,CAAzB,C,iLA/BD,kB,iHAMA,sB,qHAqBO,Y,2GAIA,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Select, { SelectProps } from 'antd/lib/select';\n\nexport {\n  OptionType as NativeSelectOptionType,\n  SelectProps as NativeSelectProps,\n} from 'antd/lib/select';\n\nconst StyledNativeSelect = styled((props: SelectProps<any>) => (\n  <Select getPopupContainer={(trigger: any) => trigger.parentNode} {...props} />\n))`\n  display: block;\n`;\n\nconst StyledNativeGraySelect = styled(Select)`\n  &.ant-select-single {\n    .ant-select-selector {\n      height: 36px;\n      padding: 0 11px;\n      background-color: ${({ theme }) => theme.colors.grayscale.light3};\n      border: none;\n\n      .ant-select-selection-search-input {\n        height: 100%;\n      }\n\n      .ant-select-selection-item,\n      .ant-select-selection-placeholder {\n        line-height: 35px;\n        color: ${({ theme }) => theme.colors.grayscale.dark1};\n      }\n    }\n  }\n`;\n\nexport const NativeSelect = Object.assign(StyledNativeSelect, {\n  Option: Select.Option,\n});\n\nexport const NativeGraySelect = Object.assign(StyledNativeGraySelect, {\n  Option: Select.Option,\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}