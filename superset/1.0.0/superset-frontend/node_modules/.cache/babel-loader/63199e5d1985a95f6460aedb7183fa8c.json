{"ast":null,"code":"import \"core-js/modules/es.string.replace.js\";import \"core-js/modules/web.dom-collections.iterator.js\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Modal from 'src/components/Modal';\nimport { Row, Col, Input, TextArea } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components/Select';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function PropertiesModal({ slice, onHide, onSave, show }) {\n  const [submitting, setSubmitting] = useState(false);\n  // values of form inputs\n  const [name, setName] = useState(slice.slice_name || '');\n  const [description, setDescription] = useState(slice.description || '');\n  const [cacheTimeout, setCacheTimeout] = useState(slice.cache_timeout != null ? slice.cache_timeout : '');\n  const [owners, setOwners] = useState(null);\n  function showError({ error, statusText, message }) {\n    let errorText = error || statusText || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this chart');\n    }\n    Modal.error({\n      title: 'Error',\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' } });\n\n  }\n  const fetchChartData = useCallback(async function fetchChartData() {\n    try {var _context;\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/chart/${slice.slice_id}` });\n\n      const chart = response.json.result;\n      setOwners(_mapInstanceProperty(_context = chart.owners).call(_context, owner => ({\n        value: owner.id,\n        label: `${owner.first_name} ${owner.last_name}` })));\n\n    }\n    catch (response) {\n      const clientError = await getClientErrorObject(response);\n      showError(clientError);\n    }\n  }, [slice.slice_id]);\n  // get the owners of this slice\n  useEffect(() => {\n    fetchChartData();\n  }, [fetchChartData]);\n  // update name after it's changed in another modal\n  useEffect(() => {\n    setName(slice.slice_name || '');\n  }, [slice.slice_name]);\n  const loadOptions = (input = '') => {\n    const query = rison.encode({\n      filter: input });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/chart/related/owners?q=${query}` }).\n    then(response => {\n      const { result } = response.json;\n      return _mapInstanceProperty(result).call(result, item => ({\n        value: item.value,\n        label: item.text }));\n\n    }, badResponse => {\n      getClientErrorObject(badResponse).then(showError);\n      return [];\n    });\n  };\n  const onSubmit = async event => {\n    event.stopPropagation();\n    event.preventDefault();\n    setSubmitting(true);\n    const payload = {\n      slice_name: name || null,\n      description: description || null,\n      cache_timeout: cacheTimeout || null };\n\n    if (owners) {\n      payload.owners = _mapInstanceProperty(owners).call(owners, o => o.value);\n    }\n    try {\n      const res = await SupersetClient.put({\n        endpoint: `/api/v1/chart/${slice.slice_id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: _JSON$stringify(payload) });\n\n      // update the redux state\n      const updatedChart = {\n        ...res.json.result,\n        id: slice.slice_id };\n\n      onSave(updatedChart);\n      onHide();\n    }\n    catch (res) {\n      const clientError = await getClientErrorObject(res);\n      showError(clientError);\n    }\n    setSubmitting(false);\n  };\n  return ___EmotionJSX(Modal, { show: show, onHide: onHide, title: \"Edit Chart Properties\", footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { \"data-test\": \"properties-modal-cancel-button\", htmlType: \"button\", buttonSize: \"small\", onClick: onHide, cta: true },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"properties-modal-save-button\", htmlType: \"button\", buttonSize: \"small\", buttonStyle: \"primary\"\n      // @ts-ignore\n      , onClick: onSubmit, disabled: !owners || submitting || !name, cta: true },\n    t('Save'))),\n\n    responsive: true, wrapProps: { 'data-test': 'properties-edit-modal' } },\n  ___EmotionJSX(Form, { onFinish: onSubmit, layout: \"vertical\" },\n  ___EmotionJSX(Row, { gutter: 16 },\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(\"h3\", null, t('Basic information')),\n  ___EmotionJSX(FormItem, { label: t('Name'), required: true },\n  ___EmotionJSX(Input, { name: \"name\", \"data-test\": \"properties-modal-name-input\", type: \"text\", value: name, onChange: event => {var _event$target$value;return setName((_event$target$value = event.target.value) != null ? _event$target$value : '');} })),\n\n  ___EmotionJSX(FormItem, { label: t('Description') },\n  ___EmotionJSX(TextArea, { rows: 3, name: \"description\", value: description, onChange: event => {var _event$target$value2;return setDescription((_event$target$value2 = event.target.value) != null ? _event$target$value2 : '');}, style: { maxWidth: '100%' } }),\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('The description can be displayed as widget headers in the dashboard view. Supports markdown.')))),\n\n\n\n  ___EmotionJSX(Col, { xs: 24, md: 12 },\n  ___EmotionJSX(\"h3\", null, t('Configuration')),\n  ___EmotionJSX(FormItem, { label: t('Cache timeout') },\n  ___EmotionJSX(Input, { name: \"cacheTimeout\", type: \"text\", value: cacheTimeout, onChange: event => {var _event$target$value3;\n      const targetValue = (_event$target$value3 = event.target.value) != null ? _event$target$value3 : '';\n      setCacheTimeout(targetValue.replace(/[^0-9]/, ''));\n    } }),\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t(\"Duration (in seconds) of the caching timeout for this chart. Note this defaults to the dataset's timeout if undefined.\"))),\n\n\n  ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } }, t('Access')),\n  ___EmotionJSX(FormItem, { label: t('Owners') },\n  ___EmotionJSX(AsyncSelect, { isMulti: true, name: \"owners\", value: owners || [], loadOptions: loadOptions, defaultOptions: true // load options on render\n    , cacheOptions: true, onChange: setOwners, disabled: !owners, filterOption: null // options are filtered at the api\n  }),\n  ___EmotionJSX(\"p\", { className: \"help-block\" },\n  t('A list of users who can alter the chart. Searchable by name or username.')))))));\n\n\n\n\n\n\n}__signature__(PropertiesModal, \"useState{[submitting, setSubmitting](false)}\\nuseState{[name, setName](slice.slice_name || '')}\\nuseState{[description, setDescription](slice.description || '')}\\nuseState{[cacheTimeout, setCacheTimeout](slice.cache_timeout != null ? slice.cache_timeout : '')}\\nuseState{[owners, setOwners](null)}\\nuseCallback{fetchChartData}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PropertiesModal, \"PropertiesModal\", \"/app/superset-frontend/src/explore/components/PropertiesModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/PropertiesModal/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Modal from 'src/components/Modal';\nimport { Row, Col, Input, TextArea } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport { OptionsType } from 'react-select/src/types';\nimport { AsyncSelect } from 'src/components/Select';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport Chart, { Slice } from 'src/types/Chart';\nimport { Form, FormItem } from 'src/components/Form';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\n\ntype PropertiesModalProps = {\n  slice: Slice;\n  show: boolean;\n  onHide: () => void;\n  onSave: (chart: Chart) => void;\n};\n\ntype OwnerOption = {\n  label: string;\n  value: number;\n};\n\nexport default function PropertiesModal({\n  slice,\n  onHide,\n  onSave,\n  show,\n}: PropertiesModalProps) {\n  const [submitting, setSubmitting] = useState(false);\n\n  // values of form inputs\n  const [name, setName] = useState(slice.slice_name || '');\n  const [description, setDescription] = useState(slice.description || '');\n  const [cacheTimeout, setCacheTimeout] = useState(\n    slice.cache_timeout != null ? slice.cache_timeout : '',\n  );\n  const [owners, setOwners] = useState<OptionsType<OwnerOption> | null>(null);\n\n  function showError({ error, statusText, message }: any) {\n    let errorText = error || statusText || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this chart');\n    }\n    Modal.error({\n      title: 'Error',\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' },\n    });\n  }\n\n  const fetchChartData = useCallback(\n    async function fetchChartData() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n        });\n        const chart = response.json.result;\n        setOwners(\n          chart.owners.map((owner: any) => ({\n            value: owner.id,\n            label: `${owner.first_name} ${owner.last_name}`,\n          })),\n        );\n      } catch (response) {\n        const clientError = await getClientErrorObject(response);\n        showError(clientError);\n      }\n    },\n    [slice.slice_id],\n  );\n\n  // get the owners of this slice\n  useEffect(() => {\n    fetchChartData();\n  }, [fetchChartData]);\n\n  // update name after it's changed in another modal\n  useEffect(() => {\n    setName(slice.slice_name || '');\n  }, [slice.slice_name]);\n\n  const loadOptions = (input = '') => {\n    const query = rison.encode({\n      filter: input,\n    });\n    return SupersetClient.get({\n      endpoint: `/api/v1/chart/related/owners?q=${query}`,\n    }).then(\n      response => {\n        const { result } = response.json;\n        return result.map((item: any) => ({\n          value: item.value,\n          label: item.text,\n        }));\n      },\n      badResponse => {\n        getClientErrorObject(badResponse).then(showError);\n        return [];\n      },\n    );\n  };\n\n  const onSubmit = async (event: React.FormEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    setSubmitting(true);\n    const payload: { [key: string]: any } = {\n      slice_name: name || null,\n      description: description || null,\n      cache_timeout: cacheTimeout || null,\n    };\n    if (owners) {\n      payload.owners = owners.map(o => o.value);\n    }\n    try {\n      const res = await SupersetClient.put({\n        endpoint: `/api/v1/chart/${slice.slice_id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      });\n      // update the redux state\n      const updatedChart = {\n        ...res.json.result,\n        id: slice.slice_id,\n      };\n      onSave(updatedChart);\n      onHide();\n    } catch (res) {\n      const clientError = await getClientErrorObject(res);\n      showError(clientError);\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      title=\"Edit Chart Properties\"\n      footer={\n        <>\n          <Button\n            data-test=\"properties-modal-cancel-button\"\n            htmlType=\"button\"\n            buttonSize=\"small\"\n            onClick={onHide}\n            cta\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"properties-modal-save-button\"\n            htmlType=\"button\"\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            // @ts-ignore\n            onClick={onSubmit}\n            disabled={!owners || submitting || !name}\n            cta\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n      wrapProps={{ 'data-test': 'properties-edit-modal' }}\n    >\n      <Form onFinish={onSubmit} layout=\"vertical\">\n        <Row gutter={16}>\n          <Col xs={24} md={12}>\n            <h3>{t('Basic information')}</h3>\n            <FormItem label={t('Name')} required>\n              <Input\n                name=\"name\"\n                data-test=\"properties-modal-name-input\"\n                type=\"text\"\n                value={name}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setName(event.target.value ?? '')\n                }\n              />\n            </FormItem>\n            <FormItem label={t('Description')}>\n              <TextArea\n                rows={3}\n                name=\"description\"\n                value={description}\n                onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) =>\n                  setDescription(event.target.value ?? '')\n                }\n                style={{ maxWidth: '100%' }}\n              />\n              <p className=\"help-block\">\n                {t(\n                  'The description can be displayed as widget headers in the dashboard view. Supports markdown.',\n                )}\n              </p>\n            </FormItem>\n          </Col>\n          <Col xs={24} md={12}>\n            <h3>{t('Configuration')}</h3>\n            <FormItem label={t('Cache timeout')}>\n              <Input\n                name=\"cacheTimeout\"\n                type=\"text\"\n                value={cacheTimeout}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  const targetValue = event.target.value ?? '';\n                  setCacheTimeout(targetValue.replace(/[^0-9]/, ''));\n                }}\n              />\n              <p className=\"help-block\">\n                {t(\n                  \"Duration (in seconds) of the caching timeout for this chart. Note this defaults to the dataset's timeout if undefined.\",\n                )}\n              </p>\n            </FormItem>\n            <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n            <FormItem label={t('Owners')}>\n              <AsyncSelect\n                isMulti\n                name=\"owners\"\n                value={owners || []}\n                loadOptions={loadOptions}\n                defaultOptions // load options on render\n                cacheOptions\n                onChange={setOwners}\n                disabled={!owners}\n                filterOption={null} // options are filtered at the api\n              />\n              <p className=\"help-block\">\n                {t(\n                  'A list of users who can alter the chart. Searchable by name or username.',\n                )}\n              </p>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}