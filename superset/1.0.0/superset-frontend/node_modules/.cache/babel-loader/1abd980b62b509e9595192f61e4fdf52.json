{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s - 1}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m - 1}px;\n  padding: 4px 0 24px 0;\n`;\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\nfunction QueryPreviewModal({ onHide, openInSqlLab, queries, query, fetchData, show, addDangerToast, addSuccessToast }) {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } = useQueryPreviewState({\n    queries,\n    currentQueryId: query.id,\n    fetchData });\n\n  const [currentTab, setCurrentTab] = useState('user');\n  const { id, sql, executed_sql } = query;\n  return ___EmotionJSX(\"div\", { role: \"none\", onKeyUp: handleKeyPress },\n  ___EmotionJSX(StyledModal, { onHide: onHide, show: show, title: t('Query preview'), footer: [\n    ___EmotionJSX(Button, { \"data-test\": \"previous-query\", key: \"previous-query\", disabled: disablePrevious, onClick: () => handleDataChange(true) },\n    t('Previous')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"next-query\", key: \"next-query\", disabled: disableNext, onClick: () => handleDataChange(false) },\n    t('Next')),\n\n    ___EmotionJSX(Button, { \"data-test\": \"open-in-sql-lab\", key: \"open-in-sql-lab\", buttonStyle: \"primary\", onClick: () => openInSqlLab(id) },\n    t('Open in SQL Lab'))] },\n\n\n  ___EmotionJSX(QueryTitle, null, t('Tab name')),\n  ___EmotionJSX(QueryLabel, null, query.tab_name),\n  ___EmotionJSX(QueryViewToggle, null,\n  ___EmotionJSX(TabButton, { role: \"button\", \"data-test\": \"toggle-user-sql\", className: cx({ active: currentTab === 'user' }), onClick: () => setCurrentTab('user') },\n  t('User query')),\n\n  ___EmotionJSX(TabButton, { role: \"button\", \"data-test\": \"toggle-executed-sql\", className: cx({ active: currentTab === 'executed' }), onClick: () => setCurrentTab('executed') },\n  t('Executed query'))),\n\n\n  ___EmotionJSX(SyntaxHighlighterCopy, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, language: \"sql\" },\n  (currentTab === 'user' ? sql : executed_sql) || '')));\n\n\n\n}__signature__(QueryPreviewModal, \"useQueryPreviewState{{ handleKeyPress, handleDataChange, disablePrevious, disableNext, }}\\nuseState{[currentTab, setCurrentTab]('user')}\", () => [useQueryPreviewState]);const _default =\nwithToasts(QueryPreviewModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(QueryTitle, \"QueryTitle\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(QueryLabel, \"QueryLabel\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(QueryViewToggle, \"QueryViewToggle\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(TabButton, \"TabButton\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(StyledModal, \"StyledModal\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(QueryPreviewModal, \"QueryPreviewModal\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/query/QueryPreviewModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts, { ToastProps } from 'src/messageToasts/enhancers/withToasts';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';\nimport { QueryObject } from 'src/views/CRUD/types';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s - 1}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m - 1}px;\n  padding: 4px 0 24px 0;\n`;\n\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\n\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ninterface QueryPreviewModalProps extends ToastProps {\n  onHide: () => void;\n  openInSqlLab: (id: number) => any;\n  queries: QueryObject[];\n  query: QueryObject;\n  fetchData: (id: number) => any;\n  show: boolean;\n}\n\nfunction QueryPreviewModal({\n  onHide,\n  openInSqlLab,\n  queries,\n  query,\n  fetchData,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}: QueryPreviewModalProps) {\n  const {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  } = useQueryPreviewState<QueryObject>({\n    queries,\n    currentQueryId: query.id,\n    fetchData,\n  });\n\n  const [currentTab, setCurrentTab] = useState<'user' | 'executed'>('user');\n\n  const { id, sql, executed_sql } = query;\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={[\n          <Button\n            data-test=\"previous-query\"\n            key=\"previous-query\"\n            disabled={disablePrevious}\n            onClick={() => handleDataChange(true)}\n          >\n            {t('Previous')}\n          </Button>,\n          <Button\n            data-test=\"next-query\"\n            key=\"next-query\"\n            disabled={disableNext}\n            onClick={() => handleDataChange(false)}\n          >\n            {t('Next')}\n          </Button>,\n          <Button\n            data-test=\"open-in-sql-lab\"\n            key=\"open-in-sql-lab\"\n            buttonStyle=\"primary\"\n            onClick={() => openInSqlLab(id)}\n          >\n            {t('Open in SQL Lab')}\n          </Button>,\n        ]}\n      >\n        <QueryTitle>{t('Tab name')}</QueryTitle>\n        <QueryLabel>{query.tab_name}</QueryLabel>\n        <QueryViewToggle>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-user-sql\"\n            className={cx({ active: currentTab === 'user' })}\n            onClick={() => setCurrentTab('user')}\n          >\n            {t('User query')}\n          </TabButton>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-executed-sql\"\n            className={cx({ active: currentTab === 'executed' })}\n            onClick={() => setCurrentTab('executed')}\n          >\n            {t('Executed query')}\n          </TabButton>\n        </QueryViewToggle>\n        <SyntaxHighlighterCopy\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n          language=\"sql\"\n        >\n          {(currentTab === 'user' ? sql : executed_sql) || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n}\n\nexport default withToasts(QueryPreviewModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}