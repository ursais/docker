{"ast":null,"code":"import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _startsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/starts-with\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { max as d3Max } from 'd3-array';\nimport { AsyncCreatableSelect, CreatableSelect } from 'src/components/Select';\nimport Button from 'src/components/Button';\nimport { t, SupersetClient, ensureIsArray } from '@superset-ui/core';\n\nimport {\nBOOL_FALSE_DISPLAY,\nBOOL_TRUE_DISPLAY,\nSLOW_DEBOUNCE } from\n'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\nimport {\nFILTER_CONFIG_ATTRIBUTES,\nFILTER_OPTIONS_LIMIT,\nTIME_FILTER_LABELS,\nTIME_FILTER_MAP } from\n'src/explore/constants';\n\nimport './FilterBox.less';\n\n// a shortcut to a map key, used by many components\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";export const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n  PropTypes.shape({\n    field: PropTypes.string,\n    label: PropTypes.string })),\n\n\n  filtersChoices: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    filter: PropTypes.string,\n    metric: PropTypes.number }))),\n\n\n\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool };\n\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false };\n\n\nclass FilterBox extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);this.state = { selectedValues: props.origSelectedValues, // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false };this.debouncerCache = {};this.maxValueCache = {};this.changeFilter = _bindInstanceProperty(_context = this.changeFilter).call(_context, this);this.onFilterMenuOpen = _bindInstanceProperty(_context2 = this.onFilterMenuOpen).call(_context2, this);this.onOpenDateFilterControl = _bindInstanceProperty(_context3 = this.onOpenDateFilterControl).call(_context3, this);this.onFilterMenuClose = _bindInstanceProperty(_context4 = this.onFilterMenuClose).call(_context4, this);}onFilterMenuOpen(column) {return this.props.onFilterMenuOpen(this.props.chartId, column);}onFilterMenuClose(column) {return this.props.onFilterMenuClose(this.props.chartId, column);}onOpenDateFilterControl() {return this.onFilterMenuOpen(TIME_RANGE);}\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter } };\n\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n    this.maxValueCache[key] || 0,\n    d3Max(choices || this.props.filtersChoices[key] || [], x => x.metric));\n\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {var _context5;\n      if (_Array$isArray(options)) {\n        vals = _mapInstanceProperty(options).call(options, opt => typeof opt === 'string' ? opt : opt.value);\n      } else if (_includesInstanceProperty(_context5 = _Object$values(TIME_FILTER_MAP)).call(_context5, fltr)) {var _options$value;\n        vals = (_options$value = options.value) != null ? _options$value : options;\n      } else {var _options$value2;\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray((_options$value2 = options.value) != null ? _options$value2 : options);\n      }\n    }\n\n    this.setState(\n    prevState => ({\n      selectedValues: {\n        ...prevState.selectedValues,\n        [fltr]: vals },\n\n      hasChanged: true }),\n\n    () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = _debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, x => x.metric) : max;\n    return _mapInstanceProperty(options).call(options, opt => {\n      const perc = Math.round(opt.metric / maxValue * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue = '') {var _context6, _context7, _json$data;\n    const input = inputValue.toLowerCase();\n    const sortAsc = _findInstanceProperty(_context6 = this.props.filtersFields).call(_context6, x => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue ?\n      [\n      {\n        clause: 'WHERE',\n        expressionType: 'SIMPLE',\n        subject: key,\n        operator: 'ILIKE',\n        comparator: `%${input}%` }] :\n\n\n      null };\n\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET' }) });\n\n\n    const options = _filterInstanceProperty(_context7 = (json == null ? void 0 : (_json$data = json.data) == null ? void 0 : _json$data[key]) || []).call(_context7, x => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      _sortInstanceProperty(options).call(options, (a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = _startsWithInstanceProperty(labelB).call(labelB, input) - _startsWithInstanceProperty(labelA).call(labelA, input);\n        return textOrder === 0 ?\n        (a.metric - b.metric) * (sortAsc ? 1 : -1) :\n        textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        ___EmotionJSX(\"div\", { className: \"row space-1\" },\n        ___EmotionJSX(\"div\", {\n          className: \"col-lg-12 col-xs-12\",\n          \"data-test\": \"date-filter-container\" },\n\n        ___EmotionJSX(DateFilterControl, {\n          name: TIME_RANGE,\n          label: label,\n          description: t('Select start and end date'),\n          onChange: newValue => {\n            this.changeFilter(TIME_RANGE, newValue);\n          },\n          onOpenDateFilterControl: this.onOpenDateFilterControl,\n          onCloseDateFilterControl: this.onCloseDateFilterControl,\n          value: this.state.selectedValues[TIME_RANGE] || 'No filter' }))));\n\n\n\n\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin } =\n    this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"sqla-filters\",\n        controls: _mapInstanceProperty(sqlaFilters).call(sqlaFilters, (control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"druid-filters\",\n        controls: _mapInstanceProperty(druidFilters).call(druidFilters, (control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {var _context8, _context9;\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    _forEachInstanceProperty(_context8 = _filterInstanceProperty(_context9 = _Object$keys(selectedValues)).call(_context9,\n    key => key in filtersChoices)).call(_context8,\n    key => {var _context10;\n      // empty values are ignored\n      if (!selectedValues[key]) {\n        return;\n      }\n      const choices = filtersChoices[key] || (filtersChoices[key] = []);\n      const choiceIds = new _Set(_mapInstanceProperty(choices).call(choices, f => f.id));\n      const selectedValuesForKey = _Array$isArray(selectedValues[key]) ?\n      selectedValues[key] :\n      [selectedValues[key]];\n      _forEachInstanceProperty(_context10 = _filterInstanceProperty(selectedValuesForKey).call(selectedValuesForKey,\n      value => value !== null && !choiceIds.has(value))).call(_context10,\n      value => {\n        choices.unshift({\n          filter: key,\n          id: value,\n          text: value,\n          metric: 0 });\n\n      });\n    });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions } =\n    filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      ___EmotionJSX(OnPasteSelect, {\n        cacheOptions: true,\n        loadOptions: this.debounceLoadOptions(key),\n        defaultOptions: this.transformOptions(data),\n        key: key,\n        placeholder: t('Type or Select [%s]', label),\n        isMulti: isMultiple,\n        isClearable: isClearable,\n        value: value,\n        options: this.transformOptions(data),\n        onChange: newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        , onMenuOpen: () => this.onFilterMenuOpen(key),\n        onBlur: () => this.onFilterMenuClose(key),\n        onMenuClose: () => this.onFilterMenuClose(key),\n        selectWrap:\n        searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT ?\n        AsyncCreatableSelect :\n        CreatableSelect,\n\n        noResultsText: t('No results found'),\n        forceOverflow: true }));\n\n\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return _mapInstanceProperty(filtersFields).call(filtersFields, filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        ___EmotionJSX(\"div\", { key: key, className: \"m-b-5 filter-container\" },\n        ___EmotionJSX(FormLabel, { htmlFor: `LABEL-${key}` }, label),\n        this.renderSelect(filterConfig)));\n\n\n    });\n  }\n\n  render() {var _context11;\n    const { instantFiltering, width, height } = this.props;\n    return (\n      ___EmotionJSX(\"div\", { style: { width, height, overflow: 'auto' } },\n      this.renderDateFilter(),\n      this.renderDatasourceFilters(),\n      this.renderFilters(),\n      !instantFiltering &&\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        onClick: _bindInstanceProperty(_context11 = this.clickApply).call(_context11, this),\n        disabled: !this.state.hasChanged },\n\n      t('Apply'))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;const _default =\n\nFilterBox;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_RANGE, \"TIME_RANGE\", \"/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(FilterBox, \"FilterBox\", \"/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx"],"names":["React","PropTypes","max","d3Max","AsyncCreatableSelect","CreatableSelect","Button","t","SupersetClient","ensureIsArray","BOOL_FALSE_DISPLAY","BOOL_TRUE_DISPLAY","SLOW_DEBOUNCE","FormLabel","DateFilterControl","ControlRow","Control","controls","getExploreUrl","OnPasteSelect","FILTER_CONFIG_ATTRIBUTES","FILTER_OPTIONS_LIMIT","TIME_FILTER_LABELS","TIME_FILTER_MAP","TIME_RANGE","time_range","propTypes","chartId","number","isRequired","origSelectedValues","object","datasource","instantFiltering","bool","filtersFields","arrayOf","shape","field","string","label","filtersChoices","objectOf","id","text","filter","metric","onChange","func","onFilterMenuOpen","onFilterMenuClose","showDateFilter","showSqlaTimeGrain","showSqlaTimeColumn","showDruidTimeGrain","showDruidTimeOrigin","defaultProps","FilterBox","PureComponent","constructor","props","onCloseDateFilterControl","state","selectedValues","hasChanged","debouncerCache","maxValueCache","changeFilter","onOpenDateFilterControl","column","getControlData","controlName","control","name","key","value","actions","setControlValue","mapFunc","mapStateToProps","getKnownMax","choices","Math","x","clickApply","setState","options","fltr","vals","opt","prevState","debounceLoadOptions","input","callback","loadOptions","then","transformOptions","maxValue","undefined","perc","round","color","backgroundImage","style","inputValue","toLowerCase","sortAsc","asc","formData","rawFormData","adhoc_filters","clause","expressionType","subject","operator","comparator","json","get","url","endpointType","method","data","length","a","b","labelA","labelB","textOrder","renderDateFilter","newValue","renderDatasourceFilters","datasourceFilters","sqlaFilters","druidFilters","push","renderSelect","filterConfig","choiceIds","f","selectedValuesForKey","has","unshift","MULTIPLE","isMultiple","DEFAULT_VALUE","defaultValue","CLEARABLE","isClearable","SEARCH_ALL_OPTIONS","searchAllOptions","split","renderFilters","render","width","height","overflow"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { max as d3Max } from 'd3-array';\nimport { AsyncCreatableSelect, CreatableSelect } from 'src/components/Select';\nimport Button from 'src/components/Button';\nimport { t, SupersetClient, ensureIsArray } from '@superset-ui/core';\n\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\nimport {\n  FILTER_CONFIG_ATTRIBUTES,\n  FILTER_OPTIONS_LIMIT,\n  TIME_FILTER_LABELS,\n  TIME_FILTER_MAP,\n} from 'src/explore/constants';\n\nimport './FilterBox.less';\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ),\n  filtersChoices: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        text: PropTypes.string,\n        filter: PropTypes.string,\n        metric: PropTypes.number,\n      }),\n    ),\n  ),\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool,\n};\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false,\n};\n\nclass FilterBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false,\n    };\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n    this.changeFilter = this.changeFilter.bind(this);\n    this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);\n    this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);\n    this.onFilterMenuClose = this.onFilterMenuClose.bind(this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onFilterMenuClose(column) {\n    return this.props.onFilterMenuClose(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter },\n    };\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n      this.maxValueCache[key] || 0,\n      d3Max(choices || this.props.filtersChoices[key] || [], x => x.metric),\n    );\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (Array.isArray(options)) {\n        vals = options.map(opt => (typeof opt === 'string' ? opt : opt.value));\n      } else if (Object.values(TIME_FILTER_MAP).includes(fltr)) {\n        vals = options.value ?? options;\n      } else {\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray(options.value ?? options);\n      }\n    }\n\n    this.setState(\n      prevState => ({\n        selectedValues: {\n          ...prevState.selectedValues,\n          [fltr]: vals,\n        },\n        hasChanged: true,\n      }),\n      () => {\n        if (this.props.instantFiltering) {\n          this.props.onChange({ [fltr]: vals }, false);\n        }\n      },\n    );\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, x => x.metric) : max;\n    return options.map(opt => {\n      const perc = Math.round((opt.metric / maxValue) * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue = '') {\n    const input = inputValue.toLowerCase();\n    const sortAsc = this.props.filtersFields.find(x => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue\n        ? [\n            {\n              clause: 'WHERE',\n              expressionType: 'SIMPLE',\n              subject: key,\n              operator: 'ILIKE',\n              comparator: `%${input}%`,\n            },\n          ]\n        : null,\n    };\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET',\n      }),\n    });\n    const options = (json?.data?.[key] || []).filter(x => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      options.sort((a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = labelB.startsWith(input) - labelA.startsWith(input);\n        return textOrder === 0\n          ? (a.metric - b.metric) * (sortAsc ? 1 : -1)\n          : textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        <div className=\"row space-1\">\n          <div\n            className=\"col-lg-12 col-xs-12\"\n            data-test=\"date-filter-container\"\n          >\n            <DateFilterControl\n              name={TIME_RANGE}\n              label={label}\n              description={t('Select start and end date')}\n              onChange={newValue => {\n                this.changeFilter(TIME_RANGE, newValue);\n              }}\n              onOpenDateFilterControl={this.onOpenDateFilterControl}\n              onCloseDateFilterControl={this.onCloseDateFilterControl}\n              value={this.state.selectedValues[TIME_RANGE] || 'No filter'}\n            />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin,\n    } = this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"sqla-filters\"\n          controls={sqlaFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"druid-filters\"\n          controls={druidFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues)\n      .filter(key => key in filtersChoices)\n      .forEach(key => {\n        // empty values are ignored\n        if (!selectedValues[key]) {\n          return;\n        }\n        const choices = filtersChoices[key] || (filtersChoices[key] = []);\n        const choiceIds = new Set(choices.map(f => f.id));\n        const selectedValuesForKey = Array.isArray(selectedValues[key])\n          ? selectedValues[key]\n          : [selectedValues[key]];\n        selectedValuesForKey\n          .filter(value => value !== null && !choiceIds.has(value))\n          .forEach(value => {\n            choices.unshift({\n              filter: key,\n              id: value,\n              text: value,\n              metric: 0,\n            });\n          });\n      });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions,\n    } = filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      <OnPasteSelect\n        cacheOptions\n        loadOptions={this.debounceLoadOptions(key)}\n        defaultOptions={this.transformOptions(data)}\n        key={key}\n        placeholder={t('Type or Select [%s]', label)}\n        isMulti={isMultiple}\n        isClearable={isClearable}\n        value={value}\n        options={this.transformOptions(data)}\n        onChange={newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }}\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        onMenuOpen={() => this.onFilterMenuOpen(key)}\n        onBlur={() => this.onFilterMenuClose(key)}\n        onMenuClose={() => this.onFilterMenuClose(key)}\n        selectWrap={\n          searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT\n            ? AsyncCreatableSelect\n            : CreatableSelect\n        }\n        noResultsText={t('No results found')}\n        forceOverflow\n      />\n    );\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return filtersFields.map(filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        <div key={key} className=\"m-b-5 filter-container\">\n          <FormLabel htmlFor={`LABEL-${key}`}>{label}</FormLabel>\n          {this.renderSelect(filterConfig)}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { instantFiltering, width, height } = this.props;\n    return (\n      <div style={{ width, height, overflow: 'auto' }}>\n        {this.renderDateFilter()}\n        {this.renderDatasourceFilters()}\n        {this.renderFilters()}\n        {!instantFiltering && (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            onClick={this.clickApply.bind(this)}\n            disabled={!this.state.hasChanged}\n          >\n            {t('Apply')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;\n\nexport default FilterBox;\n"]},"metadata":{},"sourceType":"module"}