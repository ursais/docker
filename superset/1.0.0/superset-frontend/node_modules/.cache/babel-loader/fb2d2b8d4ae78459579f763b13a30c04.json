{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Behavior, SuperChart, AppSection } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DefaultValue = ({ filterId, hasDataset, form, setDataMask, formData, enableNoResults }) => {var _formFilter$defaultDa;\n  const [loading, setLoading] = useState(hasDataset);\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  const queriesData = formFilter == null ? void 0 : formFilter.defaultValueQueriesData;\n  useEffect(() => {\n    if (!hasDataset || queriesData !== null) {\n      setLoading(false);\n    } else\n    {\n      setLoading(true);\n    }\n  }, [hasDataset, queriesData]);\n  return loading ? ___EmotionJSX(Loading, { position: \"inline-centered\" }) : ___EmotionJSX(SuperChart, { height: 25, width: (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' ? 350 : 250, appSection: AppSection.FILTER_CONFIG_MODAL, behaviors: [Behavior.NATIVE_FILTER], formData: formData\n    // For charts that don't have datasource we need workaround for empty placeholder\n    , queriesData: hasDataset ? formFilter == null ? void 0 : formFilter.defaultValueQueriesData : [{ data: [{}] }], chartType: formFilter == null ? void 0 : formFilter.filterType, hooks: { setDataMask }, enableNoResults: enableNoResults, filterState: (_formFilter$defaultDa = formFilter.defaultDataMask) == null ? void 0 : _formFilter$defaultDa.filterState });\n};__signature__(DefaultValue, \"useState{[loading, setLoading](hasDataset)}\\nuseEffect{}\");const _default =\nDefaultValue;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultValue, \"DefaultValue\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAoB,SAApB,EAA+B,QAA/B,QAA+C,OAA/C;AACA,SACE,QADF,EAGE,UAHF,EAIE,UAJF,QAKO,mBALP;AAOA,OAAO,OAAP,MAAoB,wBAApB,C;AAaA,MAAM,YAAY,GAA0B,CAAC,EAC3C,QAD2C,EAE3C,UAF2C,EAG3C,IAH2C,EAI3C,WAJ2C,EAK3C,QAL2C,EAM3C,eAN2C,EAAD,KAOvC;AACH,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,UAAD,CAAtC;AACA,QAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAL,CAAmB,SAAnB,KAAiC,EAAlC,EAAsC,QAAtC,CAAnB;AACA,QAAM,WAAW,GAAG,UAAH,oBAAG,UAAU,CAAE,uBAAhC;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,CAAC,UAAD,IAAe,WAAW,KAAK,IAAnC,EAAyC;AACvC,MAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAEO;AACL,MAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GANQ,EAMN,CAAC,UAAD,EAAa,WAAb,CANM,CAAT;AAQA,SAAO,OAAO,GACZ,cAAC,OAAD,IAAS,QAAQ,EAAC,iBAAlB,GADY,GAGZ,cAAC,UAAD,IACE,MAAM,EAAE,EADV,EAEE,KAAK,EAAE,CAAA,UAAU,QAAV,YAAA,UAAU,CAAE,UAAZ,MAA2B,aAA3B,GAA2C,GAA3C,GAAiD,GAF1D,EAGE,UAAU,EAAE,UAAU,CAAC,mBAHzB,EAIE,SAAS,EAAE,CAAC,QAAQ,CAAC,aAAV,CAJb,EAKE,QAAQ,EAAE;AACV;AANF,MAOE,WAAW,EACT,UAAU,GAAG,UAAH,oBAAG,UAAU,CAAE,uBAAf,GAAyC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAD,CAAR,EAAD,CARvD,EAUE,SAAS,EAAE,UAAF,oBAAE,UAAU,CAAE,UAVzB,EAWE,KAAK,EAAE,EAAE,WAAF,EAXT,EAYE,eAAe,EAAE,eAZnB,EAaE,WAAW,2BAAE,UAAU,CAAC,eAAb,qBAAE,sBAA4B,WAb3C,GAHF;AAmBD,CAvCD,C,cAAM,Y;AAyCS,Y,CAAf,wB,iLAzCM,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useEffect, useState } from 'react';\nimport {\n  Behavior,\n  SetDataMaskHook,\n  SuperChart,\n  AppSection,\n} from '@superset-ui/core';\nimport { FormInstance } from 'antd/lib/form';\nimport Loading from 'src/components/Loading';\nimport { NativeFiltersForm } from '../types';\nimport { getFormData } from '../../utils';\n\ntype DefaultValueProps = {\n  filterId: string;\n  setDataMask: SetDataMaskHook;\n  hasDataset: boolean;\n  form: FormInstance<NativeFiltersForm>;\n  formData: ReturnType<typeof getFormData>;\n  enableNoResults: boolean;\n};\n\nconst DefaultValue: FC<DefaultValueProps> = ({\n  filterId,\n  hasDataset,\n  form,\n  setDataMask,\n  formData,\n  enableNoResults,\n}) => {\n  const [loading, setLoading] = useState(hasDataset);\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  const queriesData = formFilter?.defaultValueQueriesData;\n\n  useEffect(() => {\n    if (!hasDataset || queriesData !== null) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n  }, [hasDataset, queriesData]);\n\n  return loading ? (\n    <Loading position=\"inline-centered\" />\n  ) : (\n    <SuperChart\n      height={25}\n      width={formFilter?.filterType === 'filter_time' ? 350 : 250}\n      appSection={AppSection.FILTER_CONFIG_MODAL}\n      behaviors={[Behavior.NATIVE_FILTER]}\n      formData={formData}\n      // For charts that don't have datasource we need workaround for empty placeholder\n      queriesData={\n        hasDataset ? formFilter?.defaultValueQueriesData : [{ data: [{}] }]\n      }\n      chartType={formFilter?.filterType}\n      hooks={{ setDataMask }}\n      enableNoResults={enableNoResults}\n      filterState={formFilter.defaultDataMask?.filterState}\n    />\n  );\n};\n\nexport default DefaultValue;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}