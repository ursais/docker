{"ast":null,"code":"import \"core-js/modules/es.string.replace.js\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport function getNestedValue(obj, id, separator = '.') {\n  /*\n   * Given a nested object and an id, return the nested value.\n   *\n   * > getNestedValue({a:{b:1}}, 'a.b')\n   * < 1\n   */\n  const index = _indexOfInstanceProperty(id).call(id, separator);\n  if (index === -1) {\n    return obj[id];\n  }\n  const name = _sliceInstanceProperty(id).call(id, 0, index);\n  const rest = _sliceInstanceProperty(id).call(id, index + separator.length);\n  return getNestedValue(obj[name], rest, separator);\n}\n\nexport function interpolate(str, obj) {\n  /*\n   * Programmatic template string for interpolation.\n   *\n   * > interpolate('foo ${a.b}', {a:{b:1}})\n   * < \"foo 1\"\n   */\n  return str.replace(/\\$\\{(.+?)\\}/g, (match, id) => getNestedValue(obj, id));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getNestedValue, \"getNestedValue\", \"/app/superset-frontend/src/showSavedQuery/utils.js\");reactHotLoader.register(interpolate, \"interpolate\", \"/app/superset-frontend/src/showSavedQuery/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/showSavedQuery/utils.js"],"names":["getNestedValue","obj","id","separator","index","name","rest","length","interpolate","str","replace","match"],"mappings":"+gBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAS,GAAG,GAA7C,EAAkD;AACvD;AACF;AACA;AACA;AACA;AACA;AACE,QAAMC,KAAK,GAAG,yBAAAF,EAAE,MAAF,CAAAA,EAAE,EAASC,SAAT,CAAhB;AACA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAOH,GAAG,CAACC,EAAD,CAAV;AACD;AACD,QAAMG,IAAI,GAAG,uBAAAH,EAAE,MAAF,CAAAA,EAAE,EAAO,CAAP,EAAUE,KAAV,CAAf;AACA,QAAME,IAAI,GAAG,uBAAAJ,EAAE,MAAF,CAAAA,EAAE,EAAOE,KAAK,GAAGD,SAAS,CAACI,MAAzB,CAAf;AACA,SAAOP,cAAc,CAACC,GAAG,CAACI,IAAD,CAAJ,EAAYC,IAAZ,EAAkBH,SAAlB,CAArB;AACD;;AAED,OAAO,SAASK,WAAT,CAAqBC,GAArB,EAA0BR,GAA1B,EAA+B;AACpC;AACF;AACA;AACA;AACA;AACA;AACE,SAAOQ,GAAG,CAACC,OAAJ,CAAY,cAAZ,EAA4B,CAACC,KAAD,EAAQT,EAAR,KAAeF,cAAc,CAACC,GAAD,EAAMC,EAAN,CAAzD,CAAP;AACD,C,iLAxBeF,c,kGAgBAQ,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport function getNestedValue(obj, id, separator = '.') {\n  /*\n   * Given a nested object and an id, return the nested value.\n   *\n   * > getNestedValue({a:{b:1}}, 'a.b')\n   * < 1\n   */\n  const index = id.indexOf(separator);\n  if (index === -1) {\n    return obj[id];\n  }\n  const name = id.slice(0, index);\n  const rest = id.slice(index + separator.length);\n  return getNestedValue(obj[name], rest, separator);\n}\n\nexport function interpolate(str, obj) {\n  /*\n   * Programmatic template string for interpolation.\n   *\n   * > interpolate('foo ${a.b}', {a:{b:1}})\n   * < \"foo 1\"\n   */\n  return str.replace(/\\$\\{(.+?)\\}/g, (match, id) => getNestedValue(obj, id));\n}\n"]},"metadata":{},"sourceType":"module"}