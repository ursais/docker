{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { styled } from '@superset-ui/core';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\nconst IconTooltip = ({ children = null, className = '', onClick = () => undefined, placement = 'top', style = {}, tooltip = null }) => {\n  const iconTooltip = ___EmotionJSX(StyledSpan, { onClick: onClick, style: style, className: `IconTooltip ${className}` },\n  children);\n\n  if (tooltip) {\n    return ___EmotionJSX(Tooltip, { id: \"tooltip\", title: tooltip, placement: placement, mouseEnterDelay: 0.3, mouseLeaveDelay: 0.15 },\n    iconTooltip);\n\n  }\n  return iconTooltip;\n};\nexport { IconTooltip };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledSpan, \"StyledSpan\", \"/app/superset-frontend/src/components/IconTooltip/index.tsx\");reactHotLoader.register(IconTooltip, \"IconTooltip\", \"/app/superset-frontend/src/components/IconTooltip/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/IconTooltip/index.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAiC,OAAjC;AACA,SAAS,OAAT,QAAwB,wBAAxB;AACA,SAAS,MAAT,QAAuB,mBAAvB,C;AAuBA,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;WACnB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,KAAK;;aAEvC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,KAAK;;AAErD,CALD;AAOA,MAAM,WAAW,GAAG,CAAC,EACnB,QAAQ,GAAG,IADQ,EAEnB,SAAS,GAAG,EAFO,EAGnB,OAAO,GAAG,MAAM,SAHG,EAInB,SAAS,GAAG,KAJO,EAKnB,KAAK,GAAG,EALW,EAMnB,OAAO,GAAG,IANS,EAAD,KAOR;AACV,QAAM,WAAW,GACf,cAAC,UAAD,IACE,OAAO,EAAE,OADX,EAEE,KAAK,EAAE,KAFT,EAGE,SAAS,EAAE,eAAe,SAAS,EAHrC;AAKG,EAAA,QALH,CADF;;AASA,MAAI,OAAJ,EAAa;AACX,WACE,cAAC,OAAD,IACE,EAAE,EAAC,SADL,EAEE,KAAK,EAAE,OAFT,EAGE,SAAS,EAAE,SAHb,EAIE,eAAe,EAAE,GAJnB,EAKE,eAAe,EAAE,IALnB;AAOG,IAAA,WAPH,CADF;;AAWD;AACD,SAAO,WAAP;AACD,CA/BD;AAiCA,SAAS,WAAT,G,iLAxCM,U,uGAOA,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { styled } from '@superset-ui/core';\n\nexport interface Props {\n  children?: ReactNode;\n  className?: string;\n  onClick?: () => void;\n  placement?:\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top'\n    | 'topLeft'\n    | 'topRight'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'leftTop'\n    | 'leftBottom'\n    | 'rightTop'\n    | 'rightBottom';\n  style?: object;\n  tooltip?: string | null;\n}\n\nconst StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\n\nconst IconTooltip = ({\n  children = null,\n  className = '',\n  onClick = () => undefined,\n  placement = 'top',\n  style = {},\n  tooltip = null,\n}: Props) => {\n  const iconTooltip = (\n    <StyledSpan\n      onClick={onClick}\n      style={style}\n      className={`IconTooltip ${className}`}\n    >\n      {children}\n    </StyledSpan>\n  );\n  if (tooltip) {\n    return (\n      <Tooltip\n        id=\"tooltip\"\n        title={tooltip}\n        placement={placement}\n        mouseEnterDelay={0.3}\n        mouseLeaveDelay={0.15}\n      >\n        {iconTooltip}\n      </Tooltip>\n    );\n  }\n  return iconTooltip;\n};\n\nexport { IconTooltip };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}