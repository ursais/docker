{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {var _context;\n  return _includesInstanceProperty(_context = getState().dashboardState.sliceIds).call(_context, chartId);\n}\n\nexport const ADD_FILTER = 'ADD_FILTER';\nexport function addFilter(chartId, component, form_data) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: ADD_FILTER, chartId, component, form_data });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport function removeFilter(chartId) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: REMOVE_FILTER, chartId });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components });\n\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return dispatch => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return dispatch => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isValidFilter, \"isValidFilter\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(ADD_FILTER, \"ADD_FILTER\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(addFilter, \"addFilter\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(REMOVE_FILTER, \"REMOVE_FILTER\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(removeFilter, \"removeFilter\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(CHANGE_FILTER, \"CHANGE_FILTER\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(changeFilter, \"changeFilter\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DIRECT_PATH_TO_FILTER, \"UPDATE_DIRECT_PATH_TO_FILTER\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDirectPathToFilter, \"updateDirectPathToFilter\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_LAYOUT_COMPONENTS, \"UPDATE_LAYOUT_COMPONENTS\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateLayoutComponents, \"updateLayoutComponents\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DASHBOARD_FILTERS_SCOPE, \"UPDATE_DASHBOARD_FILTERS_SCOPE\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDashboardFiltersScope, \"updateDashboardFiltersScope\", \"/app/superset-frontend/src/dashboard/actions/dashboardFilters.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/actions/dashboardFilters.js"],"names":["isValidFilter","getState","chartId","dashboardState","sliceIds","ADD_FILTER","addFilter","component","form_data","dispatch","type","dashboardFilters","REMOVE_FILTER","removeFilter","CHANGE_FILTER","changeFilter","newSelectedValues","merge","components","dashboardLayout","present","UPDATE_DIRECT_PATH_TO_FILTER","updateDirectPathToFilter","path","UPDATE_LAYOUT_COMPONENTS","updateLayoutComponents","UPDATE_DASHBOARD_FILTERS_SCOPE","updateDashboardFiltersScope","scopes"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {\n  return getState().dashboardState.sliceIds.includes(chartId);\n}\n\nexport const ADD_FILTER = 'ADD_FILTER';\nexport function addFilter(chartId, component, form_data) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: ADD_FILTER, chartId, component, form_data });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport function removeFilter(chartId) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: REMOVE_FILTER, chartId });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components,\n      });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return dispatch => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return dispatch => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}