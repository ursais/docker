{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { Input } from 'src/common/components';\nimport { BOOL_FALSE_DISPLAY, BOOL_TRUE_DISPLAY, SLOW_DEBOUNCE } from 'src/constants';\nimport Button from 'src/components/Button';\nimport { applyFormattingToTabularData, prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst CopyNode = ___EmotionJSX(CopyButton, { buttonSize: \"xsmall\" },\n___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }));\n\nexport const CopyToClipboardButton = ({ data }) => ___EmotionJSX(CopyToClipboard, { text: data ? prepareCopyToClipboardTabularData(data) : '', wrapped: false, copyNode: CopyNode });\nexport const FilterInput = ({ onChangeHandler }) => {\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return ___EmotionJSX(Input, { placeholder: t('Search'), onChange: event => {\n      const filterText = event.target.value;\n      debouncedChangeHandler(filterText);\n    } });\n};\nexport const RowCount = ({ data, loading }) => {var _data$length;return ___EmotionJSX(RowCountLabel, { rowcount: (_data$length = data == null ? void 0 : data.length) != null ? _data$length : 0, loading: loading, suffix: t('rows retrieved') });};\nexport const useFilteredTableData = (filterText, data) => useMemo(() => {\n  if (!(data != null && data.length)) {\n    return [];\n  }\n  const formattedData = applyFormattingToTabularData(data);\n  return _filterInstanceProperty(formattedData).call(formattedData, row => {var _context;return _someInstanceProperty(_context = _Object$values(row)).call(_context, value => {var _context2;return value == null ? void 0 : _includesInstanceProperty(_context2 = value.toString().toLowerCase()).call(_context2, filterText.toLowerCase());});});\n}, [data, filterText]);__signature__(useFilteredTableData, \"useMemo{}\");\nexport const useTableColumns = (data, moreConfigs) => useMemo(() => {var _context3;return data != null && data.length ?\n  _mapInstanceProperty(_context3 = _Object$keys(data[0])).call(_context3, key => ({\n    accessor: key,\n    Header: key,\n    Cell: ({ value }) => {\n      if (value === true) {\n        return BOOL_TRUE_DISPLAY;\n      }\n      if (value === false) {\n        return BOOL_FALSE_DISPLAY;\n      }\n      return String(value);\n    },\n    ...(moreConfigs == null ? void 0 : moreConfigs[key]) })) :\n\n  [];}, [data, moreConfigs]);__signature__(useTableColumns, \"useMemo{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CopyButton, \"CopyButton\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyNode, \"CopyNode\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyToClipboardButton, \"CopyToClipboardButton\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FilterInput, \"FilterInput\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(RowCount, \"RowCount\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useFilteredTableData, \"useFilteredTableData\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useTableColumns, \"useTableColumns\", \"/app/superset-frontend/src/explore/components/DataTableControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/DataTableControl/index.tsx"],"names":[],"mappings":"gzBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,OAAhB,QAA+B,OAA/B;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AAEA,OAAO,QAAP,MAAqB,iBAArB;AACA,SAAS,KAAT,QAAsB,uBAAtB;AACA,SACE,kBADF,EAEE,iBAFF,EAGE,aAHF,QAIO,eAJP;AAKA,OAAO,MAAP,MAAmB,uBAAnB;AACA,SACE,4BADF,EAEE,iCAFF,QAGO,kBAHP;AAIA,OAAO,eAAP,MAA4B,gCAA5B;AACA,OAAO,aAAP,MAA0B,sCAA1B,C;AAEA,OAAO,MAAM,UAAU,GAAG,MAAM,CAAC,MAAD,CAAQ;eACzB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;;;;gBAItC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;;iBAIhC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;;AAE7C,CAXM;AAaP,MAAM,QAAQ,GACZ,cAAC,UAAD,IAAY,UAAU,EAAC,QAAvB;AACE,qBAAG,SAAS,EAAC,iBAAb,GADF,CADF;;AAMA,OAAO,MAAM,qBAAqB,GAAG,CAAC,EACpC,IADoC,EAAD,KAKnC,cAAC,eAAD,IACE,IAAI,EAAE,IAAI,GAAG,iCAAiC,CAAC,IAAD,CAApC,GAA6C,EADzD,EAEE,OAAO,EAAE,KAFX,EAGE,QAAQ,EAAE,QAHZ,GALK;AAYP,OAAO,MAAM,WAAW,GAAG,CAAC,EAC1B,eAD0B,EAAD,KAItB;AACH,QAAM,sBAAsB,GAAG,QAAQ,CAAC,eAAD,EAAkB,aAAlB,CAAvC;AACA,SACE,cAAC,KAAD,IACE,WAAW,EAAE,CAAC,CAAC,QAAD,CADhB,EAEE,QAAQ,EAAG,KAAD,IAAe;AACvB,YAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAa,KAAhC;AACA,MAAA,sBAAsB,CAAC,UAAD,CAAtB;AACD,KALH,GADF;AASD,CAfM;AAiBP,OAAO,MAAM,QAAQ,GAAG,CAAC,EACvB,IADuB,EAEvB,OAFuB,EAAD,8BAOtB,cAAC,aAAD,IACE,QAAQ,kBAAE,IAAF,oBAAE,IAAI,CAAE,MAAR,2BAAkB,CAD5B,EAEE,OAAO,EAAE,OAFX,EAGE,MAAM,EAAE,CAAC,CAAC,gBAAD,CAHX,GAPsB,EAAjB;AAcP,OAAO,MAAM,oBAAoB,GAAG,CAClC,UADkC,EAElC,IAFkC,KAIlC,OAAO,CAAC,MAAK;AACX,MAAI,EAAC,IAAD,YAAC,IAAI,CAAE,MAAP,CAAJ,EAAmB;AACjB,WAAO,EAAP;AACD;AACD,QAAM,aAAa,GAAG,4BAA4B,CAAC,IAAD,CAAlD;AACA,SAAO,wBAAA,aAAa,MAAb,CAAA,aAAa,EAAS,GAAD,yBAC1B,gDAAc,GAAd,kBAAwB,KAAK,0BAC3B,KAD2B,oBAC3B,sCAAA,KAAK,CAAE,QAAP,GAAkB,WAAlB,oBAAyC,UAAU,CAAC,WAAX,EAAzC,CAD2B,EAA7B,CAD0B,EAAR,CAApB;AAKD,CAVM,EAUJ,CAAC,IAAD,EAAO,UAAP,CAVI,CAJF,C,cAAM,oB;AAgBb,OAAO,MAAM,eAAe,GAAG,CAC7B,IAD6B,EAE7B,WAF6B,KAI7B,OAAO,CACL,4BACE,IAAI,QAAJ,IAAA,IAAI,CAAE,MAAN;AACI,gDAAY,IAAI,CAAC,CAAD,CAAhB,mBACE,GAAG,KACA;AACC,IAAA,QAAQ,EAAE,GADX;AAEC,IAAA,MAAM,EAAE,GAFT;AAGC,IAAA,IAAI,EAAE,CAAC,EAAE,KAAF,EAAD,KAAc;AAClB,UAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,iBAAP;AACD;AACD,UAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,eAAO,kBAAP;AACD;AACD,aAAO,MAAM,CAAC,KAAD,CAAb;AACD,KAXF;AAYC,QAAG,WAAH,oBAAG,WAAW,CAAG,GAAH,CAAd,CAZD,EADA,CADL,CADJ;;AAkBI,IAnBN,EADK,EAqBL,CAAC,IAAD,EAAO,WAAP,CArBK,CAJF,C,cAAM,e,gMA9EA,U,oHAaP,Q,kHAMO,qB,+HAYA,W,qHAiBA,Q,kHAcA,oB,8HAgBA,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Column } from 'react-table';\nimport debounce from 'lodash/debounce';\nimport { Input } from 'src/common/components';\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport Button from 'src/components/Button';\nimport {\n  applyFormattingToTabularData,\n  prepareCopyToClipboardTabularData,\n} from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\n\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst CopyNode = (\n  <CopyButton buttonSize=\"xsmall\">\n    <i className=\"fa fa-clipboard\" />\n  </CopyButton>\n);\n\nexport const CopyToClipboardButton = ({\n  data,\n}: {\n  data?: Record<string, any>;\n}) => (\n  <CopyToClipboard\n    text={data ? prepareCopyToClipboardTabularData(data) : ''}\n    wrapped={false}\n    copyNode={CopyNode}\n  />\n);\n\nexport const FilterInput = ({\n  onChangeHandler,\n}: {\n  onChangeHandler(filterText: string): void;\n}) => {\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return (\n    <Input\n      placeholder={t('Search')}\n      onChange={(event: any) => {\n        const filterText = event.target.value;\n        debouncedChangeHandler(filterText);\n      }}\n    />\n  );\n};\n\nexport const RowCount = ({\n  data,\n  loading,\n}: {\n  data?: Record<string, any>[];\n  loading: boolean;\n}) => (\n  <RowCountLabel\n    rowcount={data?.length ?? 0}\n    loading={loading}\n    suffix={t('rows retrieved')}\n  />\n);\n\nexport const useFilteredTableData = (\n  filterText: string,\n  data?: Record<string, any>[],\n) =>\n  useMemo(() => {\n    if (!data?.length) {\n      return [];\n    }\n    const formattedData = applyFormattingToTabularData(data);\n    return formattedData.filter((row: Record<string, any>) =>\n      Object.values(row).some(value =>\n        value?.toString().toLowerCase().includes(filterText.toLowerCase()),\n      ),\n    );\n  }, [data, filterText]);\n\nexport const useTableColumns = (\n  data?: Record<string, any>[],\n  moreConfigs?: { [key: string]: Partial<Column> },\n) =>\n  useMemo(\n    () =>\n      data?.length\n        ? Object.keys(data[0]).map(\n            key =>\n              ({\n                accessor: key,\n                Header: key,\n                Cell: ({ value }) => {\n                  if (value === true) {\n                    return BOOL_TRUE_DISPLAY;\n                  }\n                  if (value === false) {\n                    return BOOL_FALSE_DISPLAY;\n                  }\n                  return String(value);\n                },\n                ...moreConfigs?.[key],\n              } as Column),\n          )\n        : [],\n    [data, moreConfigs],\n  );\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}