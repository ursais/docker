{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NativeSelect as Select } from 'src/components/Select';\nimport { t } from '@superset-ui/core';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\n\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilter, {\nEXPRESSION_TYPES,\nCLAUSES } from\n'src/explore/components/controls/FilterControl/AdhocFilter';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  columnType,\n  PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n  adhocMetricType])).\n\n  isRequired,\n  height: PropTypes.number.isRequired,\n  activeKey: PropTypes.string.isRequired };\n\n\nexport default class AdhocFilterEditPopoverSqlTabContent extends React.Component {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.onSqlExpressionChange = _bindInstanceProperty(_context = this.onSqlExpressionChange).call(_context, this);\n    this.onSqlExpressionClauseChange = _bindInstanceProperty(_context2 = this.onSqlExpressionClauseChange).call(_context2,\n    this);\n\n    this.handleAceEditorRef = _bindInstanceProperty(_context3 = this.handleAceEditorRef).call(_context3, this);\n\n    this.selectProps = {\n      name: 'select-column' };\n\n  }\n\n  componentDidUpdate() {\n    if (this.aceEditorRef) {\n      this.aceEditorRef.editor.resize();\n    }\n  }\n\n  onSqlExpressionClauseChange(clause) {\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      clause,\n      expressionType: EXPRESSION_TYPES.SQL }));\n\n\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      sqlExpression,\n      expressionType: EXPRESSION_TYPES.SQL }));\n\n\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  render() {var _context4, _context5;\n    const { adhocFilter, height, options } = this.props;\n\n    const clauseSelectProps = {\n      placeholder: t('choose WHERE or HAVING...'),\n      value: adhocFilter.clause,\n      onChange: this.onSqlExpressionClauseChange };\n\n    const keywords = _concatInstanceProperty(sqlKeywords).call(sqlKeywords,\n    _filterInstanceProperty(_context4 = _mapInstanceProperty(options).call(options,\n    option => {\n      if (option.column_name) {\n        return {\n          name: option.column_name,\n          value: option.column_name,\n          score: 50,\n          meta: 'option' };\n\n      }\n      return null;\n    })).call(_context4,\n    Boolean));\n\n\n    return (\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"div\", { className: \"filter-edit-clause-section\" },\n      ___EmotionJSX(Select, _extends({},\n      this.selectProps,\n      clauseSelectProps, {\n        className: \"filter-edit-clause-dropdown\",\n        getPopupContainer: triggerNode => triggerNode.parentNode }),\n\n      _mapInstanceProperty(_context5 = _Object$keys(CLAUSES)).call(_context5, (clause) =>\n      ___EmotionJSX(Select.Option, { value: clause, key: clause },\n      clause))),\n\n\n\n      ___EmotionJSX(\"span\", { className: \"filter-edit-clause-info\" },\n      ___EmotionJSX(\"strong\", null, \"WHERE\"), \" \", t('Filters by columns'),\n      ___EmotionJSX(\"br\", null),\n      ___EmotionJSX(\"strong\", null, \"HAVING\"), \" \", t('Filters by metrics'))),\n\n\n      ___EmotionJSX(\"div\", { css: theme => ({ marginTop: theme.gridUnit * 4 }) },\n      ___EmotionJSX(SQLEditor, {\n        ref: this.handleAceEditorRef,\n        keywords: keywords,\n        height: `${height - 130}px`,\n        onChange: this.onSqlExpressionChange,\n        width: \"100%\",\n        showGutter: false,\n        value: adhocFilter.sqlExpression || adhocFilter.translateToSql(),\n        editorProps: { $blockScrolling: true },\n        enableLiveAutocompletion: true,\n        className: \"filter-sql-editor\",\n        wrapEnabled: true }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}AdhocFilterEditPopoverSqlTabContent.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSqlTabContent/index.jsx\");reactHotLoader.register(AdhocFilterEditPopoverSqlTabContent, \"AdhocFilterEditPopoverSqlTabContent\", \"/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSqlTabContent/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSqlTabContent/index.jsx"],"names":["React","PropTypes","NativeSelect","Select","t","SQLEditor","sqlKeywords","adhocMetricType","columnType","AdhocFilter","EXPRESSION_TYPES","CLAUSES","propTypes","adhocFilter","instanceOf","isRequired","onChange","func","options","arrayOf","oneOfType","shape","saved_metric_name","string","height","number","activeKey","AdhocFilterEditPopoverSqlTabContent","Component","constructor","props","onSqlExpressionChange","onSqlExpressionClauseChange","handleAceEditorRef","selectProps","name","componentDidUpdate","aceEditorRef","editor","resize","clause","duplicateWith","expressionType","SQL","sqlExpression","ref","render","clauseSelectProps","placeholder","value","keywords","option","column_name","score","meta","Boolean","triggerNode","parentNode","theme","marginTop","gridUnit","translateToSql","$blockScrolling"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NativeSelect as Select } from 'src/components/Select';\nimport { t } from '@superset-ui/core';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\n\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilter, {\n  EXPRESSION_TYPES,\n  CLAUSES,\n} from 'src/explore/components/controls/FilterControl/AdhocFilter';\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      columnType,\n      PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n      adhocMetricType,\n    ]),\n  ).isRequired,\n  height: PropTypes.number.isRequired,\n  activeKey: PropTypes.string.isRequired,\n};\n\nexport default class AdhocFilterEditPopoverSqlTabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onSqlExpressionClauseChange = this.onSqlExpressionClauseChange.bind(\n      this,\n    );\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n\n    this.selectProps = {\n      name: 'select-column',\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.aceEditorRef) {\n      this.aceEditorRef.editor.resize();\n    }\n  }\n\n  onSqlExpressionClauseChange(clause) {\n    this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        clause,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n    );\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n    );\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  render() {\n    const { adhocFilter, height, options } = this.props;\n\n    const clauseSelectProps = {\n      placeholder: t('choose WHERE or HAVING...'),\n      value: adhocFilter.clause,\n      onChange: this.onSqlExpressionClauseChange,\n    };\n    const keywords = sqlKeywords.concat(\n      options\n        .map(option => {\n          if (option.column_name) {\n            return {\n              name: option.column_name,\n              value: option.column_name,\n              score: 50,\n              meta: 'option',\n            };\n          }\n          return null;\n        })\n        .filter(Boolean),\n    );\n\n    return (\n      <span>\n        <div className=\"filter-edit-clause-section\">\n          <Select\n            {...this.selectProps}\n            {...clauseSelectProps}\n            className=\"filter-edit-clause-dropdown\"\n            getPopupContainer={triggerNode => triggerNode.parentNode}\n          >\n            {Object.keys(CLAUSES).map(clause => (\n              <Select.Option value={clause} key={clause}>\n                {clause}\n              </Select.Option>\n            ))}\n          </Select>\n          <span className=\"filter-edit-clause-info\">\n            <strong>WHERE</strong> {t('Filters by columns')}\n            <br />\n            <strong>HAVING</strong> {t('Filters by metrics')}\n          </span>\n        </div>\n        <div css={theme => ({ marginTop: theme.gridUnit * 4 })}>\n          <SQLEditor\n            ref={this.handleAceEditorRef}\n            keywords={keywords}\n            height={`${height - 130}px`}\n            onChange={this.onSqlExpressionChange}\n            width=\"100%\"\n            showGutter={false}\n            value={adhocFilter.sqlExpression || adhocFilter.translateToSql()}\n            editorProps={{ $blockScrolling: true }}\n            enableLiveAutocompletion\n            className=\"filter-sql-editor\"\n            wrapEnabled\n          />\n        </div>\n      </span>\n    );\n  }\n}\nAdhocFilterEditPopoverSqlTabContent.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}