{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { AppSection, ensureIsArray, smartDateDetailedFormatter, t, tn } from '@superset-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport debounce from 'lodash/debounce';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { useImmerReducer } from 'use-immer';\nimport Icons from 'src/components/Icons';\nimport { StyledSelect, Styles } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { Option } = Select;\nfunction reducer(draft, action) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState };\n\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;}\n\n}\nexport default function PluginFilterSelect(props) {var _context;\n  const { coltypeMap, data, filterState, formData, height, isRefreshing, width, setDataMask, setFocusedFilter, unsetFocusedFilter, appSection } = props;\n  const { enableEmptyFilter, multiSelect, showSearch, inverseSelection, inputRef, defaultToFirstItem, searchAllOptions } = formData;\n  const groupby = ensureIsArray(formData.groupby);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [selectedValues, setSelectedValues] = useState(filterState.value);\n  const sortedData = useMemo(() => {\n    const firstData = [];\n    const restData = [];\n    _forEachInstanceProperty(data).call(data, row => {\n      // @ts-ignore\n      if (selectedValues != null && _includesInstanceProperty(selectedValues).call(selectedValues, row[col])) {\n        firstData.push(row);\n      } else\n      {\n        restData.push(row);\n      }\n    });\n    return [...firstData, ...restData];\n  }, [col, selectedValues, data]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [currentSuggestionSearch, setCurrentSuggestionSearch] = useState('');\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState });\n\n  const updateDataMask = useCallback(values => {\n    const emptyFilter = enableEmptyFilter && !inverseSelection && !(values != null && values.length);\n    const suffix = inverseSelection && values != null && values.length ? ` (${t('excluded')})` : '';\n    dispatchDataMask({\n      type: 'filterState',\n      __cache: filterState,\n      extraFormData: getSelectExtraFormData(col, values, emptyFilter, inverseSelection),\n      filterState: {\n        label: values != null && values.length ?\n        `${(values || []).join(', ')}${suffix}` :\n        undefined,\n        value: appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem ?\n        undefined :\n        values } });\n\n\n  }, [\n  appSection,\n  col,\n  defaultToFirstItem,\n  dispatchDataMask,\n  enableEmptyFilter,\n  inverseSelection,\n  _JSON$stringify(filterState)]);\n\n  useEffect(() => {\n    if (!isDropdownVisible) {\n      setSelectedValues(filterState.value);\n    }\n    updateDataMask(filterState.value);\n  }, [_JSON$stringify(filterState.value)]);\n  const isDisabled = appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n  const debouncedOwnStateFunc = useCallback(debounce(val => {\n    dispatchDataMask({\n      type: 'ownState',\n      ownState: {\n        coltypeMap: initialColtypeMap,\n        search: val } });\n\n\n  }, SLOW_DEBOUNCE), []);\n  const searchWrapper = val => {\n    if (searchAllOptions) {\n      debouncedOwnStateFunc(val);\n    }\n    setCurrentSuggestionSearch(val);\n  };\n  const clearSuggestionSearch = () => {\n    setCurrentSuggestionSearch('');\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null } });\n\n\n    }\n  };\n  const handleBlur = () => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n    setSelectedValues(filterState.value);\n  };\n  const datatype = coltypeMap[col];\n  const labelFormatter = getDataRecordFormatter({\n    timeFormatter: smartDateDetailedFormatter });\n\n  const handleChange = value => {\n    const values = ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else\n    {\n      updateDataMask(values);\n    }\n  };\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem = data[0] ?\n      _mapInstanceProperty(groupby).call(groupby, col => data[0][col]) :\n      null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem && firstItem[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else\n    if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else\n    {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n  col,\n  isDisabled,\n  defaultToFirstItem,\n  enableEmptyFilter,\n  inverseSelection,\n  updateDataMask,\n  data,\n  groupby,\n  _JSON$stringify(filterState)]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [_JSON$stringify(dataMask)]);\n  const placeholderText = data.length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const Icon = inverseSelection ? Icons.StopOutlined : Icons.CheckOutlined;\n  return ___EmotionJSX(Styles, { height: height, width: width },\n  ___EmotionJSX(StyledSelect, { allowClear: !enableEmptyFilter\n    // @ts-ignore\n    , value: filterState.value || [], disabled: isDisabled, showSearch: showSearch, mode: multiSelect ? 'multiple' : undefined, placeholder: placeholderText, onSearch: searchWrapper, onSelect: clearSuggestionSearch, onBlur: handleBlur, onDropdownVisibleChange: setIsDropdownVisible, onFocus: setFocusedFilter\n    // @ts-ignore\n    , onChange: handleChange, ref: inputRef, loading: isRefreshing, maxTagCount: 5, menuItemSelectedIcon: ___EmotionJSX(Icon, { iconSize: \"m\" }) },\n  _mapInstanceProperty(sortedData).call(sortedData, row => {\n    const [value] = _mapInstanceProperty(groupby).call(groupby, col => row[col]);\n    return (\n      // @ts-ignore\n      ___EmotionJSX(Option, { key: `${value}`, value: value },\n      labelFormatter(value, datatype)));\n\n  }),\n  currentSuggestionSearch &&\n  !_someInstanceProperty(_context = ensureIsArray(filterState.value)).call(_context, suggestion => suggestion === currentSuggestionSearch) && ___EmotionJSX(Option, { value: currentSuggestionSearch },\n  `${t('Create \"%s\"', currentSuggestionSearch)}`)));\n\n\n\n}__signature__(PluginFilterSelect, \"useState{[initialColtypeMap](coltypeMap)}\\nuseState{[selectedValues, setSelectedValues](filterState.value)}\\nuseMemo{sortedData}\\nuseState{[isDropdownVisible, setIsDropdownVisible](false)}\\nuseState{[currentSuggestionSearch, setCurrentSuggestionSearch]('')}\\nuseImmerReducer{[dataMask, dispatchDataMask]}\\nuseCallback{updateDataMask}\\nuseEffect{}\\nuseCallback{debouncedOwnStateFunc}\\nuseEffect{}\\nuseEffect{}\", () => [useImmerReducer]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Option, \"Option\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(reducer, \"reducer\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(PluginFilterSelect, \"PluginFilterSelect\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport {\n  AppSection,\n  DataMask,\n  DataRecord,\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  JsonObject,\n  smartDateDetailedFormatter,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport debounce from 'lodash/debounce';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { useImmerReducer } from 'use-immer';\nimport Icons from 'src/components/Icons';\nimport { PluginFilterSelectProps, SelectValue } from './types';\nimport { StyledSelect, Styles } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';\n\nconst { Option } = Select;\n\ntype DataMaskAction =\n  | { type: 'ownState'; ownState: JsonObject }\n  | {\n      type: 'filterState';\n      __cache: JsonObject;\n      extraFormData: ExtraFormData;\n      filterState: { value: SelectValue; label?: string };\n    };\n\nfunction reducer(\n  draft: DataMask & { __cache?: JsonObject },\n  action: DataMaskAction,\n) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState,\n      };\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;\n  }\n}\n\nexport default function PluginFilterSelect(props: PluginFilterSelectProps) {\n  const {\n    coltypeMap,\n    data,\n    filterState,\n    formData,\n    height,\n    isRefreshing,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    appSection,\n  } = props;\n  const {\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    inverseSelection,\n    inputRef,\n    defaultToFirstItem,\n    searchAllOptions,\n  } = formData;\n  const groupby = ensureIsArray<string>(formData.groupby);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [selectedValues, setSelectedValues] = useState<SelectValue>(\n    filterState.value,\n  );\n  const sortedData = useMemo(() => {\n    const firstData: DataRecord[] = [];\n    const restData: DataRecord[] = [];\n    data.forEach(row => {\n      // @ts-ignore\n      if (selectedValues?.includes(row[col])) {\n        firstData.push(row);\n      } else {\n        restData.push(row);\n      }\n    });\n    return [...firstData, ...restData];\n  }, [col, selectedValues, data]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [currentSuggestionSearch, setCurrentSuggestionSearch] = useState('');\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState,\n  });\n  const updateDataMask = useCallback(\n    (values: SelectValue) => {\n      const emptyFilter =\n        enableEmptyFilter && !inverseSelection && !values?.length;\n\n      const suffix =\n        inverseSelection && values?.length ? ` (${t('excluded')})` : '';\n\n      dispatchDataMask({\n        type: 'filterState',\n        __cache: filterState,\n        extraFormData: getSelectExtraFormData(\n          col,\n          values,\n          emptyFilter,\n          inverseSelection,\n        ),\n        filterState: {\n          label: values?.length\n            ? `${(values || []).join(', ')}${suffix}`\n            : undefined,\n          value:\n            appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem\n              ? undefined\n              : values,\n        },\n      });\n    },\n    [\n      appSection,\n      col,\n      defaultToFirstItem,\n      dispatchDataMask,\n      enableEmptyFilter,\n      inverseSelection,\n      JSON.stringify(filterState),\n    ],\n  );\n\n  useEffect(() => {\n    if (!isDropdownVisible) {\n      setSelectedValues(filterState.value);\n    }\n    updateDataMask(filterState.value);\n  }, [JSON.stringify(filterState.value)]);\n\n  const isDisabled =\n    appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n\n  const debouncedOwnStateFunc = useCallback(\n    debounce((val: string) => {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: val,\n        },\n      });\n    }, SLOW_DEBOUNCE),\n    [],\n  );\n\n  const searchWrapper = (val: string) => {\n    if (searchAllOptions) {\n      debouncedOwnStateFunc(val);\n    }\n    setCurrentSuggestionSearch(val);\n  };\n\n  const clearSuggestionSearch = () => {\n    setCurrentSuggestionSearch('');\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null,\n        },\n      });\n    }\n  };\n\n  const handleBlur = () => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n    setSelectedValues(filterState.value);\n  };\n\n  const datatype: GenericDataType = coltypeMap[col];\n  const labelFormatter = getDataRecordFormatter({\n    timeFormatter: smartDateDetailedFormatter,\n  });\n\n  const handleChange = (value?: SelectValue | number | string) => {\n    const values = ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else {\n      updateDataMask(values);\n    }\n  };\n\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem: SelectValue = data[0]\n        ? (groupby.map(col => data[0][col]) as string[])\n        : null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem && firstItem[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n    col,\n    isDisabled,\n    defaultToFirstItem,\n    enableEmptyFilter,\n    inverseSelection,\n    updateDataMask,\n    data,\n    groupby,\n    JSON.stringify(filterState),\n  ]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n\n  const placeholderText =\n    data.length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n  const Icon = inverseSelection ? Icons.StopOutlined : Icons.CheckOutlined;\n\n  return (\n    <Styles height={height} width={width}>\n      <StyledSelect\n        allowClear={!enableEmptyFilter}\n        // @ts-ignore\n        value={filterState.value || []}\n        disabled={isDisabled}\n        showSearch={showSearch}\n        mode={multiSelect ? 'multiple' : undefined}\n        placeholder={placeholderText}\n        onSearch={searchWrapper}\n        onSelect={clearSuggestionSearch}\n        onBlur={handleBlur}\n        onDropdownVisibleChange={setIsDropdownVisible}\n        onFocus={setFocusedFilter}\n        // @ts-ignore\n        onChange={handleChange}\n        ref={inputRef}\n        loading={isRefreshing}\n        maxTagCount={5}\n        menuItemSelectedIcon={<Icon iconSize=\"m\" />}\n      >\n        {sortedData.map(row => {\n          const [value] = groupby.map(col => row[col]);\n          return (\n            // @ts-ignore\n            <Option key={`${value}`} value={value}>\n              {labelFormatter(value, datatype)}\n            </Option>\n          );\n        })}\n        {currentSuggestionSearch &&\n          !ensureIsArray(filterState.value).some(\n            suggestion => suggestion === currentSuggestionSearch,\n          ) && (\n            <Option value={currentSuggestionSearch}>\n              {`${t('Create \"%s\"', currentSuggestionSearch)}`}\n            </Option>\n          )}\n      </StyledSelect>\n    </Styles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}