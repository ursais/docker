{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _flatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/flat\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFilters, usePagination, useRowSelect, useRowState, useSortBy, useTable } from 'react-table';\nimport { NumberParam, StringParam, useQueryParams } from 'use-query-params';\nimport rison from 'rison';\n\n// Define custom RisonParam for proper encoding/decoding\nconst RisonParam = {\n  encode: data => data === undefined ? undefined : rison.encode(data),\n  decode: dataStr => dataStr === undefined || _Array$isArray(dataStr) ?\n  undefined :\n  rison.decode(dataStr) };\n\nexport class ListViewError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = 'ListViewError';\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}} // removes element from a list, returns new list\nexport function removeFromList(list, index) {\n  return _filterInstanceProperty(list).call(list, (_, i) => index !== i);\n}\n// apply update to elements of object list, returns new list\nfunction updateInList(list, index, update) {\n  const element = _findInstanceProperty(list).call(list, (_, i) => index === i);\n  return [\n  ..._sliceInstanceProperty(list).call(list, 0, index),\n  { ...element, ...update },\n  ..._sliceInstanceProperty(list).call(list, index + 1)];\n\n}\nfunction mergeCreateFilterValues(list, updateObj) {\n  return _mapInstanceProperty(list).call(list, ({ id, urlDisplay, operator }) => {\n    const currentFilterId = urlDisplay || id;\n    const update = updateObj[currentFilterId];\n    return { id, urlDisplay, operator, value: update };\n  });\n}\n// convert filters from UI objects to data objects\nexport function convertFilters(fts) {var _context, _context2;\n  return _flatInstanceProperty(_context = _mapInstanceProperty(_context2 = _filterInstanceProperty(fts).call(fts,\n  f => !(typeof f.value === 'undefined' ||\n  _Array$isArray(f.value) && !f.value.length))).call(_context2,\n  ({ value, operator, id }) => {\n    // handle between filter using 2 api filters\n    if (operator === 'between' && _Array$isArray(value)) {\n      return [\n      {\n        value: value[0],\n        operator: 'gt',\n        id },\n\n      {\n        value: value[1],\n        operator: 'lt',\n        id }];\n\n\n    }\n    return {\n      value,\n      operator,\n      id };\n\n  })).call(_context);\n\n}\n// convertFilters but to handle new decoded rison format\nexport function convertFiltersRison(filterObj, list) {var _context3;\n  const filters = [];\n  const refs = {};\n  _forEachInstanceProperty(_context3 = _Object$keys(filterObj)).call(_context3, id => {\n    const filter = {\n      id,\n      value: filterObj[id] };\n\n    refs[id] = filter;\n    filters.push(filter);\n  });\n  // Add operators from filter list\n  _forEachInstanceProperty(list).call(list, value => {\n    const currentFilterId = value.urlDisplay || value.id;\n    const filter = refs[currentFilterId];\n    if (filter) {\n      filter.operator = value.operator;\n      filter.id = value.id;\n    }\n  });\n  return filters;\n}\nexport function extractInputValue(inputType, event) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n  return null;\n}\nexport function useListViewState({ fetchData, columns, data, count, initialPageSize, initialFilters = [], initialSort = [], bulkSelectMode = false, bulkSelectColumnConfig, renderCard = false, defaultViewMode = 'card' }) {\n  const [query, setQuery] = useQueryParams({\n    filters: RisonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n    viewMode: StringParam });\n\n  const initialSortBy = useMemo(() => query.sortColumn && query.sortOrder ?\n  [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }] :\n  initialSort, [query.sortColumn, query.sortOrder]);\n  const initialState = {\n    filters: query.filters ?\n    convertFiltersRison(query.filters, initialFilters) :\n    [],\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy };\n\n  const [viewMode, setViewMode] = useState(query.viewMode || (\n  renderCard ? defaultViewMode : 'table'));\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = _mapInstanceProperty(columns).call(columns, f => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode ?\n    [bulkSelectColumnConfig, ...columnsWithFilter] :\n    columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, toggleAllRowsSelected, state: { pageIndex, pageSize, sortBy, filters } } = useTable({\n    columns: columnsWithSelect,\n    count,\n    data,\n    disableFilters: true,\n    disableSortRemove: true,\n    initialState,\n    manualFilters: true,\n    manualPagination: true,\n    manualSortBy: true,\n    autoResetFilters: false,\n    pageCount: Math.ceil(count / initialPageSize) },\n  useFilters, useSortBy, usePagination, useRowState, useRowSelect);\n  const [internalFilters, setInternalFilters] = useState(query.filters && initialFilters.length ?\n  mergeCreateFilterValues(initialFilters, query.filters) :\n  []);\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(mergeCreateFilterValues(initialFilters, query.filters ? query.filters : {}));\n    }\n  }, [initialFilters]);\n  useEffect(() => {\n    // From internalFilters, produce a simplified obj\n    const filterObj = {};\n    _forEachInstanceProperty(internalFilters).call(internalFilters, filter => {\n      if (filter.value !== undefined && (\n      typeof filter.value !== 'string' || filter.value.length > 0)) {\n        const currentFilterId = filter.urlDisplay || filter.id;\n        filterObj[currentFilterId] = filter.value;\n      }\n    });\n    const queryParams = {\n      filters: _Object$keys(filterObj).length ? filterObj : undefined,\n      pageIndex };\n\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n    if (renderCard) {\n      queryParams.viewMode = viewMode;\n    }\n    const method = typeof query.pageIndex !== 'undefined' &&\n    queryParams.pageIndex !== query.pageIndex ?\n    'push' :\n    'replace';\n    setQuery(queryParams, method);\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n  useEffect(() => {\n    if (!_isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n  const applyFilterValue = (index, value) => {\n    setInternalFilters(currentInternalFilters => {\n      // skip redunundant updates\n      if (currentInternalFilters[index].value === value) {\n        return currentInternalFilters;\n      }\n      const update = { ...currentInternalFilters[index], value };\n      const updatedFilters = updateInList(currentInternalFilters, index, update);\n      setAllFilters(convertFilters(updatedFilters));\n      gotoPage(0); // clear pagination on filter\n      return updatedFilters;\n    });\n  };\n  return {\n    canNextPage,\n    canPreviousPage,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters, viewMode },\n    toggleAllRowsSelected,\n    applyFilterValue,\n    setViewMode };\n\n}__signature__(useListViewState, \"useQueryParams{[query, setQuery]}\\nuseMemo{initialSortBy}\\nuseState{[viewMode, setViewMode](query.viewMode ||\\n        (renderCard ? defaultViewMode : 'table'))}\\nuseMemo{columnsWithSelect}\\nuseTable{{ getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, toggleAllRowsSelected, state: { pageIndex, pageSize, sortBy, filters }, }}\\nuseState{[internalFilters, setInternalFilters](query.filters && initialFilters.length\\n        ? mergeCreateFilterValues(initialFilters, query.filters)\\n        : [])}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useQueryParams, useTable]);\nexport const filterSelectStyles = {\n  container: (provider, { getValue }) => ({\n    ...provider,\n    // dynamic width based on label string length\n    minWidth: `${Math.min(12, Math.max(5, 3 + getValue()[0].label.length / 2))}em` }),\n\n  control: provider => ({\n    ...provider,\n    borderWidth: 0,\n    boxShadow: 'none',\n    cursor: 'pointer',\n    backgroundColor: 'transparent' }) };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RisonParam, \"RisonParam\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(ListViewError, \"ListViewError\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(removeFromList, \"removeFromList\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(updateInList, \"updateInList\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(mergeCreateFilterValues, \"mergeCreateFilterValues\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFilters, \"convertFilters\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFiltersRison, \"convertFiltersRison\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(extractInputValue, \"extractInputValue\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(useListViewState, \"useListViewState\", \"/app/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(filterSelectStyles, \"filterSelectStyles\", \"/app/superset-frontend/src/components/ListView/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ListView/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFilters,\n  usePagination,\n  useRowSelect,\n  useRowState,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport {\n  NumberParam,\n  StringParam,\n  useQueryParams,\n  QueryParamConfig,\n} from 'use-query-params';\n\nimport rison from 'rison';\nimport { isEqual } from 'lodash';\nimport { PartialStylesConfig } from 'src/components/Select';\nimport {\n  FetchDataConfig,\n  Filter,\n  FilterValue,\n  InternalFilter,\n  SortColumn,\n  ViewModeType,\n} from './types';\n\n// Define custom RisonParam for proper encoding/decoding\nconst RisonParam: QueryParamConfig<string, any> = {\n  encode: (data?: any | null) =>\n    data === undefined ? undefined : rison.encode(data),\n  decode: (dataStr?: string | string[]) =>\n    dataStr === undefined || Array.isArray(dataStr)\n      ? undefined\n      : rison.decode(dataStr),\n};\n\nexport class ListViewError extends Error {\n  name = 'ListViewError';\n}\n\n// removes element from a list, returns new list\nexport function removeFromList(list: any[], index: number): any[] {\n  return list.filter((_, i) => index !== i);\n}\n\n// apply update to elements of object list, returns new list\nfunction updateInList(list: any[], index: number, update: any): any[] {\n  const element = list.find((_, i) => index === i);\n\n  return [\n    ...list.slice(0, index),\n    { ...element, ...update },\n    ...list.slice(index + 1),\n  ];\n}\n\ntype QueryFilterState = {\n  [id: string]: FilterValue['value'];\n};\n\nfunction mergeCreateFilterValues(list: Filter[], updateObj: QueryFilterState) {\n  return list.map(({ id, urlDisplay, operator }) => {\n    const currentFilterId = urlDisplay || id;\n    const update = updateObj[currentFilterId];\n\n    return { id, urlDisplay, operator, value: update };\n  });\n}\n\n// convert filters from UI objects to data objects\nexport function convertFilters(fts: InternalFilter[]): FilterValue[] {\n  return fts\n    .filter(\n      f =>\n        !(\n          typeof f.value === 'undefined' ||\n          (Array.isArray(f.value) && !f.value.length)\n        ),\n    )\n    .map(({ value, operator, id }) => {\n      // handle between filter using 2 api filters\n      if (operator === 'between' && Array.isArray(value)) {\n        return [\n          {\n            value: value[0],\n            operator: 'gt',\n            id,\n          },\n          {\n            value: value[1],\n            operator: 'lt',\n            id,\n          },\n        ];\n      }\n      return {\n        value,\n        operator,\n        id,\n      };\n    })\n    .flat();\n}\n\n// convertFilters but to handle new decoded rison format\nexport function convertFiltersRison(\n  filterObj: any,\n  list: Filter[],\n): FilterValue[] {\n  const filters: FilterValue[] = [];\n  const refs = {};\n\n  Object.keys(filterObj).forEach(id => {\n    const filter: FilterValue = {\n      id,\n      value: filterObj[id],\n      // operator: filterObj[id][1], // TODO: can probably get rid of this\n    };\n\n    refs[id] = filter;\n    filters.push(filter);\n  });\n\n  // Add operators from filter list\n  list.forEach(value => {\n    const currentFilterId = value.urlDisplay || value.id;\n    const filter = refs[currentFilterId];\n\n    if (filter) {\n      filter.operator = value.operator;\n      filter.id = value.id;\n    }\n  });\n\n  return filters;\n}\n\nexport function extractInputValue(inputType: Filter['input'], event: any) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n\n  return null;\n}\n\ninterface UseListViewConfig {\n  fetchData: (conf: FetchDataConfig) => any;\n  columns: any[];\n  data: any[];\n  count: number;\n  initialPageSize: number;\n  initialSort?: SortColumn[];\n  bulkSelectMode?: boolean;\n  initialFilters?: Filter[];\n  bulkSelectColumnConfig?: {\n    id: string;\n    Header: (conf: any) => React.ReactNode;\n    Cell: (conf: any) => React.ReactNode;\n  };\n  renderCard?: boolean;\n  defaultViewMode?: ViewModeType;\n}\n\nexport function useListViewState({\n  fetchData,\n  columns,\n  data,\n  count,\n  initialPageSize,\n  initialFilters = [],\n  initialSort = [],\n  bulkSelectMode = false,\n  bulkSelectColumnConfig,\n  renderCard = false,\n  defaultViewMode = 'card',\n}: UseListViewConfig) {\n  const [query, setQuery] = useQueryParams({\n    filters: RisonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n    viewMode: StringParam,\n  });\n\n  const initialSortBy = useMemo(\n    () =>\n      query.sortColumn && query.sortOrder\n        ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n        : initialSort,\n    [query.sortColumn, query.sortOrder],\n  );\n\n  const initialState = {\n    filters: query.filters\n      ? convertFiltersRison(query.filters, initialFilters)\n      : [],\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy,\n  };\n\n  const [viewMode, setViewMode] = useState<ViewModeType>(\n    (query.viewMode as ViewModeType) ||\n      (renderCard ? defaultViewMode : 'table'),\n  );\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = columns.map(f => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode\n      ? [bulkSelectColumnConfig, ...columnsWithFilter]\n      : columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setAllFilters,\n    selectedFlatRows,\n    toggleAllRowsSelected,\n    state: { pageIndex, pageSize, sortBy, filters },\n  } = useTable(\n    {\n      columns: columnsWithSelect,\n      count,\n      data,\n      disableFilters: true,\n      disableSortRemove: true,\n      initialState,\n      manualFilters: true,\n      manualPagination: true,\n      manualSortBy: true,\n      autoResetFilters: false,\n      pageCount: Math.ceil(count / initialPageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowState,\n    useRowSelect,\n  );\n\n  const [internalFilters, setInternalFilters] = useState<InternalFilter[]>(\n    query.filters && initialFilters.length\n      ? mergeCreateFilterValues(initialFilters, query.filters)\n      : [],\n  );\n\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(\n        mergeCreateFilterValues(\n          initialFilters,\n          query.filters ? query.filters : {},\n        ),\n      );\n    }\n  }, [initialFilters]);\n\n  useEffect(() => {\n    // From internalFilters, produce a simplified obj\n    const filterObj = {};\n\n    internalFilters.forEach(filter => {\n      if (\n        filter.value !== undefined &&\n        (typeof filter.value !== 'string' || filter.value.length > 0)\n      ) {\n        const currentFilterId = filter.urlDisplay || filter.id;\n        filterObj[currentFilterId] = filter.value;\n      }\n    });\n\n    const queryParams: any = {\n      filters: Object.keys(filterObj).length ? filterObj : undefined,\n      pageIndex,\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n\n    if (renderCard) {\n      queryParams.viewMode = viewMode;\n    }\n\n    const method =\n      typeof query.pageIndex !== 'undefined' &&\n      queryParams.pageIndex !== query.pageIndex\n        ? 'push'\n        : 'replace';\n\n    setQuery(queryParams, method);\n\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n\n  useEffect(() => {\n    if (!isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n\n  const applyFilterValue = (index: number, value: any) => {\n    setInternalFilters(currentInternalFilters => {\n      // skip redunundant updates\n      if (currentInternalFilters[index].value === value) {\n        return currentInternalFilters;\n      }\n\n      const update = { ...currentInternalFilters[index], value };\n      const updatedFilters = updateInList(\n        currentInternalFilters,\n        index,\n        update,\n      );\n\n      setAllFilters(convertFilters(updatedFilters));\n      gotoPage(0); // clear pagination on filter\n      return updatedFilters;\n    });\n  };\n\n  return {\n    canNextPage,\n    canPreviousPage,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters, viewMode },\n    toggleAllRowsSelected,\n    applyFilterValue,\n    setViewMode,\n  };\n}\n\nexport const filterSelectStyles: PartialStylesConfig = {\n  container: (provider, { getValue }) => ({\n    ...provider,\n    // dynamic width based on label string length\n    minWidth: `${Math.min(\n      12,\n      Math.max(5, 3 + getValue()[0].label.length / 2),\n    )}em`,\n  }),\n  control: provider => ({\n    ...provider,\n    borderWidth: 0,\n    boxShadow: 'none',\n    cursor: 'pointer',\n    backgroundColor: 'transparent',\n  }),\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}