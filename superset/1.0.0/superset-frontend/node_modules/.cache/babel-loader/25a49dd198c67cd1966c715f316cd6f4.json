{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect } from 'react';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (form, filterId) => {var _formFilter$dataset;\n  const forceUpdate = useForceUpdate();\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null });\n\n    forceUpdate();\n  }, [\n  form,\n  formFilter == null ? void 0 : formFilter.filterType,\n  formFilter == null ? void 0 : formFilter.column,\n  formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value,\n  _JSON$stringify(formFilter == null ? void 0 : formFilter.adhoc_filters),\n  formFilter == null ? void 0 : formFilter.time_range,\n  forceUpdate,\n  filterId]);\n\n};__signature__(useBackendFormUpdate, \"useForceUpdate{forceUpdate}\\nuseEffect{}\", () => [useForceUpdate]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useBackendFormUpdate, \"useBackendFormUpdate\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts"],"names":[],"mappings":"2XAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,SAAT,QAA0B,OAA1B;AAGA,SAAS,0BAAT,EAAqC,cAArC,QAA2D,SAA3D;AAEA;AACA;AACA,OAAO,MAAM,oBAAoB,GAAG,CAClC,IADkC,EAElC,QAFkC,KAGhC;AACF,QAAM,WAAW,GAAG,cAAc,EAAlC;AACA,QAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAL,CAAmB,SAAnB,KAAiC,EAAlC,EAAsC,QAAtC,CAAnB;AACA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,0BAA0B,CAAC,IAAD,EAAO,QAAP,EAAiB;AACzC,MAAA,WAAW,EAAE,IAD4B;AAEzC,MAAA,uBAAuB,EAAE,IAFgB,EAAjB,CAA1B;;AAIA,IAAA,WAAW;AACZ,GANQ,EAMN;AACD,EAAA,IADC;AAED,EAAA,UAFC,oBAED,UAAU,CAAE,UAFX;AAGD,EAAA,UAHC,oBAGD,UAAU,CAAE,MAHX;AAID,EAAA,UAJC,2CAID,UAAU,CAAE,OAJX,qBAID,oBAAqB,KAJpB;AAKD,kBAAe,UAAf,oBAAe,UAAU,CAAE,aAA3B,CALC;AAMD,EAAA,UANC,oBAMD,UAAU,CAAE,UANX;AAOD,EAAA,WAPC;AAQD,EAAA,QARC,CANM,CAAT;;AAgBD,CAtBM,C,cAAM,oB,qDAIS,c,oLAJT,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect } from 'react';\nimport { FormInstance } from 'antd/lib/form';\nimport { NativeFiltersForm } from '../types';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\n\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (\n  form: FormInstance<NativeFiltersForm>,\n  filterId: string,\n) => {\n  const forceUpdate = useForceUpdate();\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null,\n    });\n    forceUpdate();\n  }, [\n    form,\n    formFilter?.filterType,\n    formFilter?.column,\n    formFilter?.dataset?.value,\n    JSON.stringify(formFilter?.adhoc_filters),\n    formFilter?.time_range,\n    forceUpdate,\n    filterId,\n  ]);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}