{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icon from 'src/components/Icon';\nimport { DropdownButton } from 'src/components/DropdownButton';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst buildText = (shouldShowStopButton, selectedText) => {\n  if (shouldShowStopButton) {\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-stop\" }), \" \", t('Stop'));\n\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\nconst onClick = (shouldShowStopButton, allowAsync, runQuery = () => undefined, stopQuery = () => {}) => {\n  if (shouldShowStopButton)\n  return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\nconst RunQueryActionButton = ({ allowAsync = false, queryState, selectedText, sql = '', overlayCreateAsMenu, runQuery, stopQuery }) => {var _context;\n  const shouldShowStopBtn = !!queryState && _indexOfInstanceProperty(_context = ['running', 'pending']).call(_context, queryState) > -1;\n  const ButtonComponent = overlayCreateAsMenu ?\n  DropdownButton :\n  Button;\n  const isDisabled = !_trimInstanceProperty(sql).call(sql);\n  return ___EmotionJSX(StyledButton, null,\n  ___EmotionJSX(ButtonComponent, _extends({ onClick: () => onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery), disabled: isDisabled, tooltip: !isDisabled && (\n    shouldShowStopBtn ?\n    t('Stop running (Ctrl + x)') :\n    t('Run query (Ctrl + Return)')), cta: true }, overlayCreateAsMenu ?\n  {\n    overlay: overlayCreateAsMenu,\n    icon: ___EmotionJSX(Icon, { color: isDisabled ?\n      supersetTheme.colors.grayscale.base :\n      supersetTheme.colors.grayscale.light5, name: \"caret-down\" }),\n    trigger: 'click' } :\n\n  { buttonStyle: 'primary' }),\n  buildText(shouldShowStopBtn, selectedText)));\n\n\n};const _default =\nRunQueryActionButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildText, \"buildText\", \"/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx\");reactHotLoader.register(onClick, \"onClick\", \"/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx\");reactHotLoader.register(StyledButton, \"StyledButton\", \"/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx\");reactHotLoader.register(RunQueryActionButton, \"RunQueryActionButton\", \"/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/RunQueryActionButton.tsx"],"names":[],"mappings":"6hBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,EAAY,MAAZ,EAAoB,aAApB,QAAyC,mBAAzC;AAGA,OAAO,MAAP,MAAoC,uBAApC;AACA,OAAO,IAAP,MAAiB,qBAAjB;AACA,SACE,cADF,QAGO,+BAHP,C;AAiBA,MAAM,SAAS,GAAG,CAChB,oBADgB,EAEhB,YAFgB,KAGQ;AACxB,MAAI,oBAAJ,EAA0B;AACxB,WACE;AACE,yBAAG,SAAS,EAAC,YAAb,GADF,OACgC,CAAC,CAAC,MAAD,CADjC,CADF;;AAKD;AACD,MAAI,YAAJ,EAAkB;AAChB,WAAO,CAAC,CAAC,eAAD,CAAR;AACD;AACD,SAAO,CAAC,CAAC,KAAD,CAAR;AACD,CAfD;AAiBA,MAAM,OAAO,GAAG,CACd,oBADc,EAEd,UAFc,EAGd,QAAA,GAAkC,MAAM,SAH1B,EAId,SAAS,GAAG,MAAK,CAAG,CAJN,KAKN;AACR,MAAI,oBAAJ;AAA0B,SAAO,SAAS,EAAhB;AAC1B,MAAI,UAAJ,EAAgB;AACd,WAAO,QAAQ,CAAC,IAAD,CAAf;AACD;AACD,SAAO,QAAQ,CAAC,KAAD,CAAf;AACD,CAXD;AAaA,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI;;;;;;sBAMV,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;AAGtD,CATD;AAWA,MAAM,oBAAoB,GAAG,CAAC,EAC5B,UAAU,GAAG,KADe,EAE5B,UAF4B,EAG5B,YAH4B,EAI5B,GAAG,GAAG,EAJsB,EAK5B,mBAL4B,EAM5B,QAN4B,EAO5B,SAP4B,EAAD,KAQjB;AACV,QAAM,iBAAiB,GACrB,CAAC,CAAC,UAAF,IAAgB,qCAAC,SAAD,EAAY,SAAZ,kBAA+B,UAA/B,IAA6C,CAAC,CADhE;AAGA,QAAM,eAAe,GAA+B,mBAAmB;AAClE,EAAA,cADkE;AAEnE,EAAA,MAFJ;AAIA,QAAM,UAAU,GAAG,CAAC,sBAAA,GAAG,MAAH,CAAA,GAAG,CAAvB;AAEA,SACE,cAAC,YAAD;AACE,gBAAC,eAAD,aACE,OAAO,EAAE,MACP,OAAO,CAAC,iBAAD,EAAoB,UAApB,EAAgC,QAAhC,EAA0C,SAA1C,CAFX,EAIE,QAAQ,EAAE,UAJZ,EAKE,OAAO,EACJ,CAAC,UAAD;AACE,IAAA,iBAAiB;AACd,IAAA,CAAC,CAAC,yBAAD,CADa;AAEd,IAAA,CAAC,CAAC,2BAAD,CAHN,CANL,EAWE,GAAG,MAXL,IAYO,mBAAmB;AACpB;AACE,IAAA,OAAO,EAAE,mBADX;AAEE,IAAA,IAAI,EACF,cAAC,IAAD,IACE,KAAK,EACH,UAAU;AACN,MAAA,aAAa,CAAC,MAAd,CAAqB,SAArB,CAA+B,IADzB;AAEN,MAAA,aAAa,CAAC,MAAd,CAAqB,SAArB,CAA+B,MAJvC,EAME,IAAI,EAAC,YANP,GAHJ;AAYE,IAAA,OAAO,EAAE,OAZX,EADoB;;AAepB,IAAE,WAAW,EAAE,SAAf,EA3BN;AA6BG,EAAA,SAAS,CAAC,iBAAD,EAAoB,YAApB,CA7BZ,CADF,CADF;;;AAmCD,CArDD,C;AAuDe,oB,CAAf,wB,iLAhGM,S,gHAiBA,O,8GAaA,Y,mHAWA,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\n\nimport { Menu } from 'src/common/components';\nimport Button, { ButtonProps } from 'src/components/Button';\nimport Icon from 'src/components/Icon';\nimport {\n  DropdownButton,\n  DropdownButtonProps,\n} from 'src/components/DropdownButton';\n\ninterface Props {\n  allowAsync: boolean;\n  queryState?: string;\n  runQuery: (c?: boolean) => void;\n  selectedText?: string;\n  stopQuery: () => void;\n  sql: string;\n  overlayCreateAsMenu: typeof Menu | null;\n}\n\ntype QueryButtonProps = DropdownButtonProps | ButtonProps;\n\nconst buildText = (\n  shouldShowStopButton: boolean,\n  selectedText: string | undefined,\n): string | JSX.Element => {\n  if (shouldShowStopButton) {\n    return (\n      <>\n        <i className=\"fa fa-stop\" /> {t('Stop')}\n      </>\n    );\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\n\nconst onClick = (\n  shouldShowStopButton: boolean,\n  allowAsync: boolean,\n  runQuery: (c?: boolean) => void = () => undefined,\n  stopQuery = () => {},\n): void => {\n  if (shouldShowStopButton) return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\n\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nconst RunQueryActionButton = ({\n  allowAsync = false,\n  queryState,\n  selectedText,\n  sql = '',\n  overlayCreateAsMenu,\n  runQuery,\n  stopQuery,\n}: Props) => {\n  const shouldShowStopBtn =\n    !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n\n  const ButtonComponent: React.FC<QueryButtonProps> = overlayCreateAsMenu\n    ? (DropdownButton as React.FC)\n    : Button;\n\n  const isDisabled = !sql.trim();\n\n  return (\n    <StyledButton>\n      <ButtonComponent\n        onClick={() =>\n          onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery)\n        }\n        disabled={isDisabled}\n        tooltip={\n          (!isDisabled &&\n            (shouldShowStopBtn\n              ? t('Stop running (Ctrl + x)')\n              : t('Run query (Ctrl + Return)'))) as string\n        }\n        cta\n        {...(overlayCreateAsMenu\n          ? {\n              overlay: overlayCreateAsMenu,\n              icon: (\n                <Icon\n                  color={\n                    isDisabled\n                      ? supersetTheme.colors.grayscale.base\n                      : supersetTheme.colors.grayscale.light5\n                  }\n                  name=\"caret-down\"\n                />\n              ),\n              trigger: 'click',\n            }\n          : { buttonStyle: 'primary' })}\n      >\n        {buildText(shouldShowStopBtn, selectedText)}\n      </ButtonComponent>\n    </StyledButton>\n  );\n};\n\nexport default RunQueryActionButton;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}