{"ast":null,"code":"var _container$getAttribu;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/components/Menu/Menu';\nimport { theme } from 'src/preamble';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst container = document.getElementById('app');\nconst bootstrapJson = (_container$getAttribu = container == null ? void 0 : container.getAttribute('data-bootstrap')) != null ? _container$getAttribu : '{}';\nconst bootstrap = JSON.parse(bootstrapJson);\nconst menu = { ...bootstrap.common.menu_data };\nconst emotionCache = createCache({\n  key: 'menu' });\n\nconst app =\n// @ts-ignore: emotion types defs are incompatible between core and cache\n___EmotionJSX(CacheProvider, { value: emotionCache },\n___EmotionJSX(ThemeProvider, { theme: theme },\n___EmotionJSX(Menu, { data: menu })));\n\n\nReactDOM.render(app, document.getElementById('app-menu'));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(container, \"container\", \"/app/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(bootstrapJson, \"bootstrapJson\", \"/app/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(bootstrap, \"bootstrap\", \"/app/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(menu, \"menu\", \"/app/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(emotionCache, \"emotionCache\", \"/app/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(app, \"app\", \"/app/superset-frontend/src/views/menu.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/menu.tsx"],"names":[],"mappings":"kUAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH;AACA;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,aAAT,QAA8B,gBAA9B;AACA,OAAO,WAAP,MAAwB,gBAAxB;AACA,SAAS,aAAT,QAA8B,mBAA9B;AACA,OAAO,IAAP,MAAiB,0BAAjB;AACA,SAAS,KAAT,QAAsB,cAAtB,C;AAEA,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAlB;AACA,MAAM,aAAa,4BAAG,SAAH,oBAAG,SAAS,CAAE,YAAX,CAAwB,gBAAxB,CAAH,oCAAgD,IAAnE;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,aAAX,CAAlB;AACA,MAAM,IAAI,GAAG,EAAE,GAAG,SAAS,CAAC,MAAV,CAAiB,SAAtB,EAAb;AAEA,MAAM,YAAY,GAAG,WAAW,CAAC;AAC/B,EAAA,GAAG,EAAE,MAD0B,EAAD,CAAhC;;AAIA,MAAM,GAAG;AACP;AACA,cAAC,aAAD,IAAe,KAAK,EAAE,YAAtB;AACE,cAAC,aAAD,IAAe,KAAK,EAAE,KAAtB;AACE,cAAC,IAAD,IAAM,IAAI,EAAE,IAAZ,GADF,CADF,CAFF;;;AASA,QAAQ,CAAC,MAAT,CAAgB,GAAhB,EAAqB,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAArB,E,iLAlBM,S,oFACA,a,wFACA,S,oFACA,I,+EAEA,Y,uFAIA,G","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/components/Menu/Menu';\nimport { theme } from 'src/preamble';\n\nconst container = document.getElementById('app');\nconst bootstrapJson = container?.getAttribute('data-bootstrap') ?? '{}';\nconst bootstrap = JSON.parse(bootstrapJson);\nconst menu = { ...bootstrap.common.menu_data };\n\nconst emotionCache = createCache({\n  key: 'menu',\n});\n\nconst app = (\n  // @ts-ignore: emotion types defs are incompatible between core and cache\n  <CacheProvider value={emotionCache}>\n    <ThemeProvider theme={theme}>\n      <Menu data={menu} />\n    </ThemeProvider>\n  </CacheProvider>\n);\n\nReactDOM.render(app, document.getElementById('app-menu'));\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}