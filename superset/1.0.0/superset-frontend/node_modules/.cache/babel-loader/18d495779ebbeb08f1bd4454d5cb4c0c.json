{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs3/core-js-stable/array/from\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\ninitFeatureFlags,\nisFeatureEnabled,\nFeatureFlag } from\n'src/featureFlags';\n\nfunction getDomainsConfig() {var _bootstrapData$common;\n  const appContainer = document.getElementById('app');\n  if (!appContainer) {\n    return [];\n  }\n\n  const bootstrapData = JSON.parse(appContainer.getAttribute('data-bootstrap'));\n  // this module is a little special, it may be loaded before index.jsx,\n  // where window.featureFlags get initialized\n  // eslint-disable-next-line camelcase\n  initFeatureFlags(bootstrapData == null ? void 0 : (_bootstrapData$common = bootstrapData.common) == null ? void 0 : _bootstrapData$common.feature_flags);\n  const availableDomains = new _Set([window.location.hostname]);\n  if (\n  isFeatureEnabled(FeatureFlag.ALLOW_DASHBOARD_DOMAIN_SHARDING) &&\n  bootstrapData &&\n  bootstrapData.common &&\n  bootstrapData.common.conf &&\n  bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS)\n  {var _context;\n    _forEachInstanceProperty(_context = bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS).call(_context, hostName => {\n      availableDomains.add(hostName);\n    });\n  }\n  return _Array$from(availableDomains);\n}\n\nexport const availableDomains = getDomainsConfig();\n\nexport const allowCrossDomain = availableDomains.length > 1;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDomainsConfig, \"getDomainsConfig\", \"/app/superset-frontend/src/utils/hostNamesConfig.js\");reactHotLoader.register(availableDomains, \"availableDomains\", \"/app/superset-frontend/src/utils/hostNamesConfig.js\");reactHotLoader.register(allowCrossDomain, \"allowCrossDomain\", \"/app/superset-frontend/src/utils/hostNamesConfig.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/utils/hostNamesConfig.js"],"names":["initFeatureFlags","isFeatureEnabled","FeatureFlag","getDomainsConfig","appContainer","document","getElementById","bootstrapData","JSON","parse","getAttribute","common","feature_flags","availableDomains","window","location","hostname","ALLOW_DASHBOARD_DOMAIN_SHARDING","conf","SUPERSET_WEBSERVER_DOMAINS","hostName","add","allowCrossDomain","length"],"mappings":"+gBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,gBADF;AAEEC,gBAFF;AAGEC,WAHF;AAIO,kBAJP;;AAMA,SAASC,gBAAT,GAA4B;AAC1B,QAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAArB;AACA,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAO,EAAP;AACD;;AAED,QAAMG,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,YAAb,CAA0B,gBAA1B,CAAX,CAAtB;AACA;AACA;AACA;AACAV,EAAAA,gBAAgB,CAACO,aAAD,6CAACA,aAAa,CAAEI,MAAhB,qBAAC,sBAAuBC,aAAxB,CAAhB;AACA,QAAMC,gBAAgB,GAAG,SAAQ,CAACC,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAR,CAAzB;AACA;AACEf,EAAAA,gBAAgB,CAACC,WAAW,CAACe,+BAAb,CAAhB;AACAV,EAAAA,aADA;AAEAA,EAAAA,aAAa,CAACI,MAFd;AAGAJ,EAAAA,aAAa,CAACI,MAAd,CAAqBO,IAHrB;AAIAX,EAAAA,aAAa,CAACI,MAAd,CAAqBO,IAArB,CAA0BC,0BAL5B;AAME;AACA,wCAAAZ,aAAa,CAACI,MAAd,CAAqBO,IAArB,CAA0BC,0BAA1B,iBAA6DC,QAAQ,IAAI;AACvEP,MAAAA,gBAAgB,CAACQ,GAAjB,CAAqBD,QAArB;AACD,KAFD;AAGD;AACD,SAAO,YAAWP,gBAAX,CAAP;AACD;;AAED,OAAO,MAAMA,gBAAgB,GAAGV,gBAAgB,EAAzC;;AAEP,OAAO,MAAMmB,gBAAgB,GAAGT,gBAAgB,CAACU,MAAjB,GAA0B,CAAnD,C,iLA5BEpB,gB,qGA0BIU,gB,qGAEAS,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  initFeatureFlags,\n  isFeatureEnabled,\n  FeatureFlag,\n} from 'src/featureFlags';\n\nfunction getDomainsConfig() {\n  const appContainer = document.getElementById('app');\n  if (!appContainer) {\n    return [];\n  }\n\n  const bootstrapData = JSON.parse(appContainer.getAttribute('data-bootstrap'));\n  // this module is a little special, it may be loaded before index.jsx,\n  // where window.featureFlags get initialized\n  // eslint-disable-next-line camelcase\n  initFeatureFlags(bootstrapData?.common?.feature_flags);\n  const availableDomains = new Set([window.location.hostname]);\n  if (\n    isFeatureEnabled(FeatureFlag.ALLOW_DASHBOARD_DOMAIN_SHARDING) &&\n    bootstrapData &&\n    bootstrapData.common &&\n    bootstrapData.common.conf &&\n    bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS\n  ) {\n    bootstrapData.common.conf.SUPERSET_WEBSERVER_DOMAINS.forEach(hostName => {\n      availableDomains.add(hostName);\n    });\n  }\n  return Array.from(availableDomains);\n}\n\nexport const availableDomains = getDomainsConfig();\n\nexport const allowCrossDomain = availableDomains.length > 1;\n"]},"metadata":{},"sourceType":"module"}