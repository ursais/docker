{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyledModal } from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Form } from 'src/common/components';\nimport { setChartConfiguration } from 'src/dashboard/actions/dashboardInfo';\nimport CrossFilterScopingForm from './CrossFilterScopingForm';\nimport { StyledForm } from '../nativeFilters/FiltersConfigModal/FiltersConfigModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst CrossFilterScopingModal = ({ isOpen, chartId, onClose }) => {var _chartConfig$chartId, _chartConfig$chartId$;\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const chartConfig = useSelector(({ dashboardInfo }) => {var _dashboardInfo$metada;return dashboardInfo == null ? void 0 : (_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.chart_configuration;});\n  const scope = chartConfig == null ? void 0 : (_chartConfig$chartId = chartConfig[chartId]) == null ? void 0 : (_chartConfig$chartId$ = _chartConfig$chartId.crossFilters) == null ? void 0 : _chartConfig$chartId$.scope;\n  const handleSave = () => {\n    dispatch(setChartConfiguration({\n      ...chartConfig,\n      [chartId]: {\n        id: chartId,\n        crossFilters: { scope: form.getFieldValue('scope') } } }));\n\n\n    onClose();\n  };\n  return ___EmotionJSX(StyledModal, { visible: isOpen, maskClosable: false, title: t('Cross Filter Scoping'), width: \"55%\", destroyOnClose: true, onCancel: onClose, onOk: handleSave, centered: true, \"data-test\": \"cross-filter-scoping-modal\", footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { key: \"cancel\", buttonStyle: \"secondary\", \"data-test\": \"cross-filter-scoping-modal-cancel-button\", onClick: onClose },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { key: \"submit\", buttonStyle: \"primary\", onClick: handleSave, \"data-test\": \"cross-filter-scoping-modal-save-button\" },\n    t('Save'))) },\n\n\n  ___EmotionJSX(StyledForm, { preserve: false, form: form, layout: \"vertical\" },\n  ___EmotionJSX(CrossFilterScopingForm, { form: form, scope: scope, chartId: chartId })));\n\n\n};__signature__(CrossFilterScopingModal, \"useDispatch{dispatch}\\nuseForm{[form]}\\nuseSelector{chartConfig}\", () => [useDispatch, useSelector]);const _default =\nCrossFilterScopingModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CrossFilterScopingModal, \"CrossFilterScopingModal\", \"/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/CrossFilterScopingModal/CrossFilterScopingModal.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,CAAT,QAAkB,mBAAlB;AACA,OAAO,KAAP,MAA0B,OAA1B;AACA,SAAS,WAAT,EAAsB,WAAtB,QAAyC,aAAzC;AACA,SAAS,WAAT,QAA4B,sBAA5B;AACA,OAAO,MAAP,MAAmB,uBAAnB;AACA,SAAS,IAAT,QAAqB,uBAArB;AACA,SAAS,qBAAT,QAAsC,qCAAtC;AAEA,OAAO,sBAAP,MAAmC,0BAAnC;AAEA,SAAS,UAAT,QAA2B,wDAA3B,C;AAQA,MAAM,uBAAuB,GAAqC,CAAC,EACjE,MADiE,EAEjE,OAFiE,EAGjE,OAHiE,EAAD,KAI7D;AACH,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,QAAM,CAAC,IAAD,IAAS,IAAI,CAAC,OAAL,EAAf;AACA,QAAM,WAAW,GAAG,WAAW,CAC7B,CAAC,EAAE,aAAF,EAAD,uCAAuB,aAAvB,6CAAuB,aAAa,CAAE,QAAtC,qBAAuB,sBAAyB,mBAAhD,EAD6B,CAA/B;AAGA,QAAM,KAAK,GAAG,WAAH,4CAAG,WAAW,CAAG,OAAH,CAAd,8CAAG,qBAAwB,YAA3B,qBAAG,sBAAsC,KAApD;AACA,QAAM,UAAU,GAAG,MAAK;AACtB,IAAA,QAAQ,CACN,qBAAqB,CAAC;AACpB,SAAG,WADiB;AAEpB,OAAC,OAAD,GAAW;AACT,QAAA,EAAE,EAAE,OADK;AAET,QAAA,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,aAAL,CAAmB,OAAnB,CAAT,EAFL,EAFS,EAAD,CADf,CAAR;;;AASA,IAAA,OAAO;AACR,GAXD;AAaA,SACE,cAAC,WAAD,IACE,OAAO,EAAE,MADX,EAEE,YAAY,EAAE,KAFhB,EAGE,KAAK,EAAE,CAAC,CAAC,sBAAD,CAHV,EAIE,KAAK,EAAC,KAJR,EAKE,cAAc,MALhB,EAME,QAAQ,EAAE,OANZ,EAOE,IAAI,EAAE,UAPR,EAQE,QAAQ,MARV,EASE,aAAU,4BATZ,EAUE,MAAM,EACJ;AACE,kBAAC,MAAD,IACE,GAAG,EAAC,QADN,EAEE,WAAW,EAAC,WAFd,EAGE,aAAU,0CAHZ,EAIE,OAAO,EAAE,OAJX;AAMG,IAAA,CAAC,CAAC,QAAD,CANJ,CADF;;AASE,kBAAC,MAAD,IACE,GAAG,EAAC,QADN,EAEE,WAAW,EAAC,SAFd,EAGE,OAAO,EAAE,UAHX,EAIE,aAAU,wCAJZ;AAMG,IAAA,CAAC,CAAC,MAAD,CANJ,CATF,CAXJ;;;AA+BE,gBAAC,UAAD,IAAY,QAAQ,EAAE,KAAtB,EAA6B,IAAI,EAAE,IAAnC,EAAyC,MAAM,EAAC,UAAhD;AACE,gBAAC,sBAAD,IAAwB,IAAI,EAAE,IAA9B,EAAoC,KAAK,EAAE,KAA3C,EAAkD,OAAO,EAAE,OAA3D,GADF,CA/BF,CADF;;;AAqCD,CA7DD,C,cAAM,uB,6EAKa,W,EAEG,W;AAwDP,uB,CAAf,wB,iLA/DM,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyledModal } from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Form } from 'src/common/components';\nimport { setChartConfiguration } from 'src/dashboard/actions/dashboardInfo';\nimport { ChartConfiguration } from 'src/dashboard/reducers/types';\nimport CrossFilterScopingForm from './CrossFilterScopingForm';\nimport { CrossFilterScopingFormType } from './types';\nimport { StyledForm } from '../nativeFilters/FiltersConfigModal/FiltersConfigModal';\n\ntype CrossFilterScopingModalProps = {\n  chartId: number;\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst CrossFilterScopingModal: FC<CrossFilterScopingModalProps> = ({\n  isOpen,\n  chartId,\n  onClose,\n}) => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm<CrossFilterScopingFormType>();\n  const chartConfig = useSelector<any, ChartConfiguration>(\n    ({ dashboardInfo }) => dashboardInfo?.metadata?.chart_configuration,\n  );\n  const scope = chartConfig?.[chartId]?.crossFilters?.scope;\n  const handleSave = () => {\n    dispatch(\n      setChartConfiguration({\n        ...chartConfig,\n        [chartId]: {\n          id: chartId,\n          crossFilters: { scope: form.getFieldValue('scope') },\n        },\n      }),\n    );\n    onClose();\n  };\n\n  return (\n    <StyledModal\n      visible={isOpen}\n      maskClosable={false}\n      title={t('Cross Filter Scoping')}\n      width=\"55%\"\n      destroyOnClose\n      onCancel={onClose}\n      onOk={handleSave}\n      centered\n      data-test=\"cross-filter-scoping-modal\"\n      footer={\n        <>\n          <Button\n            key=\"cancel\"\n            buttonStyle=\"secondary\"\n            data-test=\"cross-filter-scoping-modal-cancel-button\"\n            onClick={onClose}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            key=\"submit\"\n            buttonStyle=\"primary\"\n            onClick={handleSave}\n            data-test=\"cross-filter-scoping-modal-save-button\"\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n    >\n      <StyledForm preserve={false} form={form} layout=\"vertical\">\n        <CrossFilterScopingForm form={form} scope={scope} chartId={chartId} />\n      </StyledForm>\n    </StyledModal>\n  );\n};\n\nexport default CrossFilterScopingModal;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}