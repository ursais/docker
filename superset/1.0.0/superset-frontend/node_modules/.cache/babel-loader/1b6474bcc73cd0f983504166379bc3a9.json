{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Icon from 'src/components/Icon';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\nconst StyledIcon = styled(Icon)`\n  margin: auto ${({ theme }) => theme.gridUnit * 2}px auto 0;\n`;\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\nconst AnnotationLayerModal = ({ addDangerToast, onLayerAdd, onHide, show, layer = null }) => {\n  const [disableSave, setDisableSave] = useState(true);\n  const [currentLayer, setCurrentLayer] = useState();\n  const [isHidden, setIsHidden] = useState(true);\n  const isEditMode = layer !== null;\n  // annotation layer fetch logic\n  const { state: { loading, resource }, fetchResource, createResource, updateResource } = useSingleViewResource('annotation_layer', t('annotation_layer'), addDangerToast);\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '' });\n\n  };\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    // Reset layer\n    resetLayer();\n    onHide();\n  };\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer && currentLayer.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n          hide();\n        });\n      }\n    } else\n    if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n        hide();\n      });\n    }\n  };\n  const onTextChange = event => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '' };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n  const validate = () => {\n    if (currentLayer && currentLayer.name.length) {\n      setDisableSave(false);\n    } else\n    {\n      setDisableSave(true);\n    }\n  };\n  // Initialize\n  useEffect(() => {\n    if (isEditMode && (\n    !currentLayer ||\n    !currentLayer.id ||\n    layer && layer.id !== currentLayer.id ||\n    isHidden && show)) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n        fetchResource(id);\n      }\n    } else\n    if (!isEditMode && (\n    !currentLayer || currentLayer.id || isHidden && show)) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n  currentLayer ? currentLayer.name : '',\n  currentLayer ? currentLayer.descr : '']);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: isEditMode ? t('Save') : t('Add'), show: show, width: \"55%\", title: ___EmotionJSX(\"h4\", { \"data-test\": \"annotation-layer-modal-title\" },\n    isEditMode ? ___EmotionJSX(StyledIcon, { name: \"edit-alt\" }) : ___EmotionJSX(StyledIcon, { name: \"plus-large\" }),\n    isEditMode ?\n    t('Edit annotation layer properties') :\n    t('Add annotation layer')) },\n\n  ___EmotionJSX(StyledAnnotationLayerTitle, null,\n  ___EmotionJSX(\"h4\", null, t('Basic information'))),\n\n  ___EmotionJSX(LayerContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Annotation layer name'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"input\", { name: \"name\", onChange: onTextChange, type: \"text\", value: currentLayer == null ? void 0 : currentLayer.name })),\n\n  ___EmotionJSX(LayerContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('description')),\n  ___EmotionJSX(\"textarea\", { name: \"descr\", value: currentLayer == null ? void 0 : currentLayer.descr, placeholder: t('Description (this can be seen in the list)'), onChange: onTextChange })));\n\n\n};__signature__(AnnotationLayerModal, \"useState{[disableSave, setDisableSave](true)}\\nuseState{[currentLayer, setCurrentLayer,]}\\nuseState{[isHidden, setIsHidden](true)}\\nuseSingleViewResource{{ state: { loading, resource }, fetchResource, createResource, updateResource, }}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useSingleViewResource]);const _default =\nwithToasts(AnnotationLayerModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledAnnotationLayerTitle, \"StyledAnnotationLayerTitle\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx\");reactHotLoader.register(StyledIcon, \"StyledIcon\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx\");reactHotLoader.register(LayerContainer, \"LayerContainer\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx\");reactHotLoader.register(AnnotationLayerModal, \"AnnotationLayerModal\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/annotationlayers/AnnotationLayerModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icon from 'src/components/Icon';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\n\nimport { AnnotationLayerObject } from './types';\n\ninterface AnnotationLayerModalProps {\n  addDangerToast: (msg: string) => void;\n  layer?: AnnotationLayerObject | null;\n  onLayerAdd?: (layer?: AnnotationLayerObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin: auto ${({ theme }) => theme.gridUnit * 2}px auto 0;\n`;\n\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst AnnotationLayerModal: FunctionComponent<AnnotationLayerModalProps> = ({\n  addDangerToast,\n  onLayerAdd,\n  onHide,\n  show,\n  layer = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [\n    currentLayer,\n    setCurrentLayer,\n  ] = useState<AnnotationLayerObject | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = layer !== null;\n\n  // annotation layer fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('annotation_layer'),\n    addDangerToast,\n  );\n\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '',\n    });\n  };\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n\n    // Reset layer\n    resetLayer();\n\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer && currentLayer.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n\n          hide();\n        });\n      }\n    } else if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTextChange = (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement>\n      | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n\n  const validate = () => {\n    if (currentLayer && currentLayer.name.length) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentLayer ||\n        !currentLayer.id ||\n        (layer && layer.id !== currentLayer.id) ||\n        (isHidden && show))\n    ) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentLayer || currentLayer.id || (isHidden && show))\n    ) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentLayer ? currentLayer.name : '',\n    currentLayer ? currentLayer.descr : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-layer-modal-title\">\n          {isEditMode ? (\n            <StyledIcon name=\"edit-alt\" />\n          ) : (\n            <StyledIcon name=\"plus-large\" />\n          )}\n          {isEditMode\n            ? t('Edit annotation layer properties')\n            : t('Add annotation layer')}\n        </h4>\n      }\n    >\n      <StyledAnnotationLayerTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationLayerTitle>\n      <LayerContainer>\n        <div className=\"control-label\">\n          {t('Annotation layer name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"name\"\n          onChange={onTextChange}\n          type=\"text\"\n          value={currentLayer?.name}\n        />\n      </LayerContainer>\n      <LayerContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"descr\"\n          value={currentLayer?.descr}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onTextChange}\n        />\n      </LayerContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationLayerModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}