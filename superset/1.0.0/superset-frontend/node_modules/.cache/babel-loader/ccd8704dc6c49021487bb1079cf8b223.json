{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getChartIdsFromLayout(layout) {var _context;\n  return _reduceInstanceProperty(_context = _Object$values(layout)).call(_context, (chartIds, currentComponent) => {\n    if (\n    currentComponent &&\n    currentComponent.type === CHART_TYPE &&\n    currentComponent.meta &&\n    currentComponent.meta.chartId)\n    {\n      chartIds.push(currentComponent.meta.chartId);\n    }\n    return chartIds;\n  }, []);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getChartIdsFromLayout, \"getChartIdsFromLayout\", \"/app/superset-frontend/src/dashboard/util/getChartIdsFromLayout.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getChartIdsFromLayout.js"],"names":["CHART_TYPE","getChartIdsFromLayout","layout","chartIds","currentComponent","type","meta","chartId","push"],"mappings":"qdAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACpD,SAAO,kDAAcA,MAAd,kBAA6B,CAACC,QAAD,EAAWC,gBAAX,KAAgC;AAClE;AACEA,IAAAA,gBAAgB;AAChBA,IAAAA,gBAAgB,CAACC,IAAjB,KAA0BL,UAD1B;AAEAI,IAAAA,gBAAgB,CAACE,IAFjB;AAGAF,IAAAA,gBAAgB,CAACE,IAAjB,CAAsBC,OAJxB;AAKE;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcJ,gBAAgB,CAACE,IAAjB,CAAsBC,OAApC;AACD;AACD,WAAOJ,QAAP;AACD,GAVM,EAUJ,EAVI,CAAP;AAWD,C,iLAZuBF,qB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getChartIdsFromLayout(layout) {\n  return Object.values(layout).reduce((chartIds, currentComponent) => {\n    if (\n      currentComponent &&\n      currentComponent.type === CHART_TYPE &&\n      currentComponent.meta &&\n      currentComponent.meta.chartId\n    ) {\n      chartIds.push(currentComponent.meta.chartId);\n    }\n    return chartIds;\n  }, []);\n}\n"]},"metadata":{},"sourceType":"module"}