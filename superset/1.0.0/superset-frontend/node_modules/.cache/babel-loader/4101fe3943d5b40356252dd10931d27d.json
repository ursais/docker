{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\n\nimport { addWarningToast } from '../../messageToasts/actions';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\nimport { TABS_TYPE, ROW_TYPE } from '../util/componentTypes';\nimport {\nDASHBOARD_ROOT_ID,\nNEW_COMPONENTS_SOURCE_ID,\nDASHBOARD_HEADER_ID } from\n'../util/constants';\nimport dropOverflowsParent from '../util/dropOverflowsParent';\nimport findParentId from '../util/findParentId';\nimport isInDifferentFilterScopes from '../util/isInDifferentFilterScopes';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) => (dispatch, getState) => {\n    const result = action(...args);\n    if (typeof result === 'function') {\n      dispatch(result(dispatch, getState));\n    } else {\n      dispatch(result);\n    }\n\n    const isComponentLevelEvent =\n    result.type === UPDATE_COMPONENTS &&\n    result.payload &&\n    result.payload.nextComponents;\n    // trigger dashboardFilters state update if dashboard layout is changed.\n    if (!isComponentLevelEvent) {\n      const components = getState().dashboardLayout.present;\n      dispatch(updateLayoutComponents(components));\n    }\n\n    if (!getState().dashboardState.hasUnsavedChanges) {\n      dispatch(setUnsavedChanges(true));\n    }\n  };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\nnextComponents => ({\n  type: UPDATE_COMPONENTS,\n  payload: {\n    nextComponents } }));\n\n\n\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n    updateComponents({\n      [DASHBOARD_HEADER_ID]: {\n        ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n        meta: {\n          text } } }));\n\n\n\n\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text };\n\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId } }));\n\n\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult } }));\n\n\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult } }));\n\n\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {} }));\n\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height } } };\n\n\n\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult } }));\n\n\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n    dropResult,\n    getState().dashboardLayout.present);\n\n\n    if (overflowsParent) {\n      return dispatch(\n      addWarningToast(\n      t(\n      `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`)));\n\n\n\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n    dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n    // Add additional allow-to-drop logic for tag/tags source.\n    // We only allow\n    // - top-level tab => top-level tab: rearrange top-level tab order\n    // - nested tab => top-level tab: allow row tab become top-level tab\n    // Dashboard does not allow top-level tab become nested tab, to avoid\n    // nested tab inside nested tab.\n    source.type === TABS_TYPE &&\n    destination.type === TABS_TYPE &&\n    source.id === rootChildId &&\n    destination.id !== rootChildId)\n    {\n      return dispatch(\n      addWarningToast(t(`Can not move top level tab into nested tabs`)));\n\n    } else if (\n    destination &&\n    source &&\n    !(\n    // ensure it has moved\n    destination.id === source.id && destination.index === source.index))\n\n    {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {var _context, _context2;\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n      (sourceComponent.type === TABS_TYPE ||\n      sourceComponent.type === ROW_TYPE) &&\n      sourceComponent.children &&\n      sourceComponent.children.length === 0)\n      {\n        const parentId = findParentId({\n          childId: source.id,\n          layout });\n\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n      isInDifferentFilterScopes({\n        dashboardFilters,\n        source: _concatInstanceProperty(_context = sourceComponent.parents || []).call(_context, source.id),\n        destination: _concatInstanceProperty(_context2 = destinationComponent.parents || []).call(_context2,\n        destination.id) }))\n\n\n      {\n        dispatch(\n        addWarningToast(\n        t('This chart has been moved to a different filter scope.')));\n\n\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n    dashboardLayout.past.length === 0 &&\n    !dashboardState.maxUndoHistoryExceeded &&\n    !dashboardState.updatedColorScheme)\n    {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\nUndoActionCreators.redo);\n\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(UPDATE_COMPONENTS, \"UPDATE_COMPONENTS\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(setUnsavedChangesAfterAction, \"setUnsavedChangesAfterAction\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(updateComponents, \"updateComponents\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(updateDashboardTitle, \"updateDashboardTitle\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DASHBOARD_TITLE_CHANGED, \"DASHBOARD_TITLE_CHANGED\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(dashboardTitleChanged, \"dashboardTitleChanged\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DELETE_COMPONENT, \"DELETE_COMPONENT\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(deleteComponent, \"deleteComponent\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(CREATE_COMPONENT, \"CREATE_COMPONENT\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(createComponent, \"createComponent\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(CREATE_TOP_LEVEL_TABS, \"CREATE_TOP_LEVEL_TABS\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(createTopLevelTabs, \"createTopLevelTabs\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DELETE_TOP_LEVEL_TABS, \"DELETE_TOP_LEVEL_TABS\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(deleteTopLevelTabs, \"deleteTopLevelTabs\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(RESIZE_COMPONENT, \"RESIZE_COMPONENT\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(resizeComponent, \"resizeComponent\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(MOVE_COMPONENT, \"MOVE_COMPONENT\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(moveComponent, \"moveComponent\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(HANDLE_COMPONENT_DROP, \"HANDLE_COMPONENT_DROP\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(handleComponentDrop, \"handleComponentDrop\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(undoLayoutAction, \"undoLayoutAction\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(redoLayoutAction, \"redoLayoutAction\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(UPDATE_COMPONENTS_PARENTS_LIST, \"UPDATE_COMPONENTS_PARENTS_LIST\", \"/app/superset-frontend/src/dashboard/actions/dashboardLayout.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/actions/dashboardLayout.js"],"names":["ActionCreators","UndoActionCreators","t","addWarningToast","updateLayoutComponents","setUnsavedChanges","TABS_TYPE","ROW_TYPE","DASHBOARD_ROOT_ID","NEW_COMPONENTS_SOURCE_ID","DASHBOARD_HEADER_ID","dropOverflowsParent","findParentId","isInDifferentFilterScopes","UPDATE_COMPONENTS","setUnsavedChangesAfterAction","action","args","dispatch","getState","result","isComponentLevelEvent","type","payload","nextComponents","components","dashboardLayout","present","dashboardState","hasUnsavedChanges","updateComponents","updateDashboardTitle","text","meta","DASHBOARD_TITLE_CHANGED","dashboardTitleChanged","DELETE_COMPONENT","deleteComponent","id","parentId","CREATE_COMPONENT","createComponent","dropResult","CREATE_TOP_LEVEL_TABS","createTopLevelTabs","DELETE_TOP_LEVEL_TABS","deleteTopLevelTabs","RESIZE_COMPONENT","resizeComponent","width","height","undoableLayout","dashboard","component","widthChanged","heightChanged","updatedComponents","MOVE_COMPONENT","moveComponent","HANDLE_COMPONENT_DROP","handleComponentDrop","overflowsParent","source","destination","droppedOnRoot","isNewComponent","dashboardRoot","rootChildId","children","index","dashboardFilters","layout","sourceComponent","destinationComponent","length","childId","parents","undoLayoutAction","undo","past","maxUndoHistoryExceeded","updatedColorScheme","redoLayoutAction","redo","UPDATE_COMPONENTS_PARENTS_LIST"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\n\nimport { addWarningToast } from '../../messageToasts/actions';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\nimport { TABS_TYPE, ROW_TYPE } from '../util/componentTypes';\nimport {\n  DASHBOARD_ROOT_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from '../util/constants';\nimport dropOverflowsParent from '../util/dropOverflowsParent';\nimport findParentId from '../util/findParentId';\nimport isInDifferentFilterScopes from '../util/isInDifferentFilterScopes';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) => (dispatch, getState) => {\n    const result = action(...args);\n    if (typeof result === 'function') {\n      dispatch(result(dispatch, getState));\n    } else {\n      dispatch(result);\n    }\n\n    const isComponentLevelEvent =\n      result.type === UPDATE_COMPONENTS &&\n      result.payload &&\n      result.payload.nextComponents;\n    // trigger dashboardFilters state update if dashboard layout is changed.\n    if (!isComponentLevelEvent) {\n      const components = getState().dashboardLayout.present;\n      dispatch(updateLayoutComponents(components));\n    }\n\n    if (!getState().dashboardState.hasUnsavedChanges) {\n      dispatch(setUnsavedChanges(true));\n    }\n  };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n  nextComponents => ({\n    type: UPDATE_COMPONENTS,\n    payload: {\n      nextComponents,\n    },\n  }),\n);\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n      updateComponents({\n        [DASHBOARD_HEADER_ID]: {\n          ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n          meta: {\n            text,\n          },\n        },\n      }),\n    );\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text,\n  };\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId,\n  },\n}));\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {},\n}));\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height,\n          },\n        },\n      };\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n      dropResult,\n      getState().dashboardLayout.present,\n    );\n\n    if (overflowsParent) {\n      return dispatch(\n        addWarningToast(\n          t(\n            `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`,\n          ),\n        ),\n      );\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n      dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n      // Add additional allow-to-drop logic for tag/tags source.\n      // We only allow\n      // - top-level tab => top-level tab: rearrange top-level tab order\n      // - nested tab => top-level tab: allow row tab become top-level tab\n      // Dashboard does not allow top-level tab become nested tab, to avoid\n      // nested tab inside nested tab.\n      source.type === TABS_TYPE &&\n      destination.type === TABS_TYPE &&\n      source.id === rootChildId &&\n      destination.id !== rootChildId\n    ) {\n      return dispatch(\n        addWarningToast(t(`Can not move top level tab into nested tabs`)),\n      );\n    } else if (\n      destination &&\n      source &&\n      !(\n        // ensure it has moved\n        (destination.id === source.id && destination.index === source.index)\n      )\n    ) {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n        (sourceComponent.type === TABS_TYPE ||\n          sourceComponent.type === ROW_TYPE) &&\n        sourceComponent.children &&\n        sourceComponent.children.length === 0\n      ) {\n        const parentId = findParentId({\n          childId: source.id,\n          layout,\n        });\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n        isInDifferentFilterScopes({\n          dashboardFilters,\n          source: (sourceComponent.parents || []).concat(source.id),\n          destination: (destinationComponent.parents || []).concat(\n            destination.id,\n          ),\n        })\n      ) {\n        dispatch(\n          addWarningToast(\n            t('This chart has been moved to a different filter scope.'),\n          ),\n        );\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n      dashboardLayout.past.length === 0 &&\n      !dashboardState.maxUndoHistoryExceeded &&\n      !dashboardState.updatedColorScheme\n    ) {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\n  UndoActionCreators.redo,\n);\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';\n"]},"metadata":{},"sourceType":"module"}