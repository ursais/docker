{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst RefreshLabel = ({ onClick, tooltipContent }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = /*#__PURE__*/React.forwardRef((props, ref) => ___EmotionJSX(Icon, props));\n  return ___EmotionJSX(Tooltip, { title: tooltipContent },\n  ___EmotionJSX(IconWithoutRef, { role: \"button\", onClick: onClick, name: \"refresh\", css: theme => ({\n      cursor: 'pointer',\n      color: theme.colors.grayscale.base,\n      '&:hover': { color: theme.colors.primary.base } }) }));\n\n\n};const _default =\nRefreshLabel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RefreshLabel, \"RefreshLabel\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/RefreshLabel/index.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAyC,OAAzC;AAEA,SAAS,OAAT,QAAwB,wBAAxB;AACA,OAAO,IAAP,MAAgC,qBAAhC,C;AAOA,MAAM,YAAY,GAAG,CAAC,EAAE,OAAF,EAAW,cAAX,EAAD,KAAmD;AACtE;AACA,QAAM,cAAc,gBAAG,KAAK,CAAC,UAAN,CAAiB,CAAC,KAAD,EAAmB,GAAnB,KACtC,cAAC,IAAD,EAAU,KAAV,CADqB,CAAvB;AAIA,SACE,cAAC,OAAD,IAAS,KAAK,EAAE,cAAhB;AACE,gBAAC,cAAD,IACE,IAAI,EAAC,QADP,EAEE,OAAO,EAAE,OAFX,EAGE,IAAI,EAAC,SAHP,EAIE,GAAG,EAAG,KAAD,KAA2B;AAC9B,MAAA,MAAM,EAAE,SADsB;AAE9B,MAAA,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,IAFA;AAG9B,iBAAW,EAAE,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,IAA9B,EAHmB,EAA3B,CAJP,GADF,CADF;;;AAcD,CApBD,C;AAsBe,Y,CAAf,wB,iLAtBM,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { MouseEventHandler } from 'react';\nimport { SupersetTheme } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icon, { IconProps } from 'src/components/Icon';\n\nexport interface RefreshLabelProps {\n  onClick: MouseEventHandler<SVGSVGElement>;\n  tooltipContent: string;\n}\n\nconst RefreshLabel = ({ onClick, tooltipContent }: RefreshLabelProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = React.forwardRef((props: IconProps, ref: any) => (\n    <Icon {...props} />\n  ));\n\n  return (\n    <Tooltip title={tooltipContent}>\n      <IconWithoutRef\n        role=\"button\"\n        onClick={onClick}\n        name=\"refresh\"\n        css={(theme: SupersetTheme) => ({\n          cursor: 'pointer',\n          color: theme.colors.grayscale.base,\n          '&:hover': { color: theme.colors.primary.base },\n        })}\n      />\n    </Tooltip>\n  );\n};\n\nexport default RefreshLabel;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}