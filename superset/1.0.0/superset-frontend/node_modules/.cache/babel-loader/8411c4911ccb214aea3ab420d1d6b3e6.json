{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Resizable } from 're-resizable';\nimport cx from 'classnames';\n\nimport ResizableHandle from './ResizableHandle';\nimport resizableConfig from '../../util/resizableConfig';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE } from '../../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst proxyToInfinity = Number.MAX_VALUE;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  adjustableWidth: PropTypes.bool,\n  adjustableHeight: PropTypes.bool,\n  gutterWidth: PropTypes.number,\n  widthStep: PropTypes.number,\n  heightStep: PropTypes.number,\n  widthMultiple: PropTypes.number,\n  heightMultiple: PropTypes.number,\n  minWidthMultiple: PropTypes.number,\n  maxWidthMultiple: PropTypes.number,\n  minHeightMultiple: PropTypes.number,\n  maxHeightMultiple: PropTypes.number,\n  staticHeight: PropTypes.number,\n  staticHeightMultiple: PropTypes.number,\n  staticWidth: PropTypes.number,\n  staticWidthMultiple: PropTypes.number,\n  onResizeStop: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStart: PropTypes.func,\n  editMode: PropTypes.bool.isRequired };\n\n\nconst defaultProps = {\n  children: null,\n  adjustableWidth: true,\n  adjustableHeight: true,\n  gutterWidth: GRID_GUTTER_SIZE,\n  widthStep: GRID_BASE_UNIT,\n  heightStep: GRID_BASE_UNIT,\n  widthMultiple: null,\n  heightMultiple: null,\n  minWidthMultiple: 1,\n  maxWidthMultiple: proxyToInfinity,\n  minHeightMultiple: 1,\n  maxHeightMultiple: proxyToInfinity,\n  staticHeight: null,\n  staticHeightMultiple: null,\n  staticWidth: null,\n  staticWidthMultiple: null,\n  onResizeStop: null,\n  onResize: null,\n  onResizeStart: null };\n\n\n// because columns are not multiples of a single variable (width = n*cols + (n-1) * gutters)\n// we snap to the base unit and then snap to _actual_ column multiples on stop\nconst SNAP_TO_GRID = [GRID_BASE_UNIT, GRID_BASE_UNIT];\nconst HANDLE_CLASSES = {\n  right: 'resizable-container-handle--right',\n  bottom: 'resizable-container-handle--bottom' };\n\nclass ResizableContainer extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n\n    this.state = {\n      isResizing: false };\n\n\n    this.handleResizeStart = _bindInstanceProperty(_context = this.handleResizeStart).call(_context, this);\n    this.handleResize = _bindInstanceProperty(_context2 = this.handleResize).call(_context2, this);\n    this.handleResizeStop = _bindInstanceProperty(_context3 = this.handleResizeStop).call(_context3, this);\n  }\n\n  handleResizeStart(event, direction, ref) {\n    const { id, onResizeStart } = this.props;\n\n    if (onResizeStart) {\n      onResizeStart({ id, direction, ref });\n    }\n\n    this.setState(() => ({ isResizing: true }));\n  }\n\n  handleResize(event, direction, ref) {\n    const { onResize, id } = this.props;\n    if (onResize) {\n      onResize({ id, direction, ref });\n    }\n  }\n\n  handleResizeStop(event, direction, ref, delta) {\n    const {\n      id,\n      onResizeStop,\n      widthStep,\n      heightStep,\n      widthMultiple,\n      heightMultiple,\n      adjustableHeight,\n      adjustableWidth,\n      gutterWidth } =\n    this.props;\n\n    if (onResizeStop) {\n      const nextWidthMultiple =\n      widthMultiple + Math.round(delta.width / (widthStep + gutterWidth));\n      const nextHeightMultiple =\n      heightMultiple + Math.round(delta.height / heightStep);\n\n      onResizeStop({\n        id,\n        widthMultiple: adjustableWidth ? nextWidthMultiple : null,\n        heightMultiple: adjustableHeight ? nextHeightMultiple : null });\n\n\n      this.setState(() => ({ isResizing: false }));\n    }\n  }\n\n  render() {\n    const {\n      children,\n      adjustableWidth,\n      adjustableHeight,\n      widthStep,\n      heightStep,\n      widthMultiple,\n      heightMultiple,\n      staticHeight,\n      staticHeightMultiple,\n      staticWidth,\n      staticWidthMultiple,\n      minWidthMultiple,\n      maxWidthMultiple,\n      minHeightMultiple,\n      maxHeightMultiple,\n      gutterWidth,\n      editMode } =\n    this.props;\n\n    const size = {\n      width: adjustableWidth ?\n      (widthStep + gutterWidth) * widthMultiple - gutterWidth :\n      staticWidthMultiple && staticWidthMultiple * widthStep ||\n      staticWidth ||\n      undefined,\n      height: adjustableHeight ?\n      heightStep * heightMultiple :\n      staticHeightMultiple && staticHeightMultiple * heightStep ||\n      staticHeight ||\n      undefined };\n\n\n    let enableConfig = resizableConfig.notAdjustable;\n\n    if (editMode && adjustableWidth && adjustableHeight) {\n      enableConfig = resizableConfig.widthAndHeight;\n    } else if (editMode && adjustableWidth) {\n      enableConfig = resizableConfig.widthOnly;\n    } else if (editMode && adjustableHeight) {\n      enableConfig = resizableConfig.heightOnly;\n    }\n\n    const { isResizing } = this.state;\n\n    return (\n      ___EmotionJSX(Resizable, {\n        enable: enableConfig,\n        grid: SNAP_TO_GRID,\n        minWidth:\n        adjustableWidth ?\n        minWidthMultiple * (widthStep + gutterWidth) - gutterWidth :\n        undefined,\n\n        minHeight:\n        adjustableHeight ? minHeightMultiple * heightStep : undefined,\n\n        maxWidth:\n        adjustableWidth ?\n        Math.max(\n        size.width,\n        Math.min(\n        proxyToInfinity,\n        maxWidthMultiple * (widthStep + gutterWidth) - gutterWidth)) :\n\n\n        undefined,\n\n        maxHeight:\n        adjustableHeight ?\n        Math.max(\n        size.height,\n        Math.min(proxyToInfinity, maxHeightMultiple * heightStep)) :\n\n        undefined,\n\n        size: size,\n        onResizeStart: this.handleResizeStart,\n        onResize: this.handleResize,\n        onResizeStop: this.handleResizeStop,\n        handleComponent: ResizableHandle,\n        className: cx(\n        'resizable-container',\n        isResizing && 'resizable-container--resizing'),\n\n        handleClasses: HANDLE_CLASSES },\n\n      children));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nResizableContainer.propTypes = propTypes;\nResizableContainer.defaultProps = defaultProps;const _default =\n\nResizableContainer;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(proxyToInfinity, \"proxyToInfinity\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(SNAP_TO_GRID, \"SNAP_TO_GRID\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(HANDLE_CLASSES, \"HANDLE_CLASSES\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(ResizableContainer, \"ResizableContainer\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/resizable/ResizableContainer.jsx"],"names":["React","PropTypes","Resizable","cx","ResizableHandle","resizableConfig","GRID_BASE_UNIT","GRID_GUTTER_SIZE","proxyToInfinity","Number","MAX_VALUE","propTypes","id","string","isRequired","children","node","adjustableWidth","bool","adjustableHeight","gutterWidth","number","widthStep","heightStep","widthMultiple","heightMultiple","minWidthMultiple","maxWidthMultiple","minHeightMultiple","maxHeightMultiple","staticHeight","staticHeightMultiple","staticWidth","staticWidthMultiple","onResizeStop","func","onResize","onResizeStart","editMode","defaultProps","SNAP_TO_GRID","HANDLE_CLASSES","right","bottom","ResizableContainer","PureComponent","constructor","props","state","isResizing","handleResizeStart","handleResize","handleResizeStop","event","direction","ref","setState","delta","nextWidthMultiple","Math","round","width","nextHeightMultiple","height","render","size","undefined","enableConfig","notAdjustable","widthAndHeight","widthOnly","heightOnly","max","min"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Resizable } from 're-resizable';\nimport cx from 'classnames';\n\nimport ResizableHandle from './ResizableHandle';\nimport resizableConfig from '../../util/resizableConfig';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE } from '../../util/constants';\n\nconst proxyToInfinity = Number.MAX_VALUE;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  adjustableWidth: PropTypes.bool,\n  adjustableHeight: PropTypes.bool,\n  gutterWidth: PropTypes.number,\n  widthStep: PropTypes.number,\n  heightStep: PropTypes.number,\n  widthMultiple: PropTypes.number,\n  heightMultiple: PropTypes.number,\n  minWidthMultiple: PropTypes.number,\n  maxWidthMultiple: PropTypes.number,\n  minHeightMultiple: PropTypes.number,\n  maxHeightMultiple: PropTypes.number,\n  staticHeight: PropTypes.number,\n  staticHeightMultiple: PropTypes.number,\n  staticWidth: PropTypes.number,\n  staticWidthMultiple: PropTypes.number,\n  onResizeStop: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStart: PropTypes.func,\n  editMode: PropTypes.bool.isRequired,\n};\n\nconst defaultProps = {\n  children: null,\n  adjustableWidth: true,\n  adjustableHeight: true,\n  gutterWidth: GRID_GUTTER_SIZE,\n  widthStep: GRID_BASE_UNIT,\n  heightStep: GRID_BASE_UNIT,\n  widthMultiple: null,\n  heightMultiple: null,\n  minWidthMultiple: 1,\n  maxWidthMultiple: proxyToInfinity,\n  minHeightMultiple: 1,\n  maxHeightMultiple: proxyToInfinity,\n  staticHeight: null,\n  staticHeightMultiple: null,\n  staticWidth: null,\n  staticWidthMultiple: null,\n  onResizeStop: null,\n  onResize: null,\n  onResizeStart: null,\n};\n\n// because columns are not multiples of a single variable (width = n*cols + (n-1) * gutters)\n// we snap to the base unit and then snap to _actual_ column multiples on stop\nconst SNAP_TO_GRID = [GRID_BASE_UNIT, GRID_BASE_UNIT];\nconst HANDLE_CLASSES = {\n  right: 'resizable-container-handle--right',\n  bottom: 'resizable-container-handle--bottom',\n};\nclass ResizableContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isResizing: false,\n    };\n\n    this.handleResizeStart = this.handleResizeStart.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleResizeStop = this.handleResizeStop.bind(this);\n  }\n\n  handleResizeStart(event, direction, ref) {\n    const { id, onResizeStart } = this.props;\n\n    if (onResizeStart) {\n      onResizeStart({ id, direction, ref });\n    }\n\n    this.setState(() => ({ isResizing: true }));\n  }\n\n  handleResize(event, direction, ref) {\n    const { onResize, id } = this.props;\n    if (onResize) {\n      onResize({ id, direction, ref });\n    }\n  }\n\n  handleResizeStop(event, direction, ref, delta) {\n    const {\n      id,\n      onResizeStop,\n      widthStep,\n      heightStep,\n      widthMultiple,\n      heightMultiple,\n      adjustableHeight,\n      adjustableWidth,\n      gutterWidth,\n    } = this.props;\n\n    if (onResizeStop) {\n      const nextWidthMultiple =\n        widthMultiple + Math.round(delta.width / (widthStep + gutterWidth));\n      const nextHeightMultiple =\n        heightMultiple + Math.round(delta.height / heightStep);\n\n      onResizeStop({\n        id,\n        widthMultiple: adjustableWidth ? nextWidthMultiple : null,\n        heightMultiple: adjustableHeight ? nextHeightMultiple : null,\n      });\n\n      this.setState(() => ({ isResizing: false }));\n    }\n  }\n\n  render() {\n    const {\n      children,\n      adjustableWidth,\n      adjustableHeight,\n      widthStep,\n      heightStep,\n      widthMultiple,\n      heightMultiple,\n      staticHeight,\n      staticHeightMultiple,\n      staticWidth,\n      staticWidthMultiple,\n      minWidthMultiple,\n      maxWidthMultiple,\n      minHeightMultiple,\n      maxHeightMultiple,\n      gutterWidth,\n      editMode,\n    } = this.props;\n\n    const size = {\n      width: adjustableWidth\n        ? (widthStep + gutterWidth) * widthMultiple - gutterWidth\n        : (staticWidthMultiple && staticWidthMultiple * widthStep) ||\n          staticWidth ||\n          undefined,\n      height: adjustableHeight\n        ? heightStep * heightMultiple\n        : (staticHeightMultiple && staticHeightMultiple * heightStep) ||\n          staticHeight ||\n          undefined,\n    };\n\n    let enableConfig = resizableConfig.notAdjustable;\n\n    if (editMode && adjustableWidth && adjustableHeight) {\n      enableConfig = resizableConfig.widthAndHeight;\n    } else if (editMode && adjustableWidth) {\n      enableConfig = resizableConfig.widthOnly;\n    } else if (editMode && adjustableHeight) {\n      enableConfig = resizableConfig.heightOnly;\n    }\n\n    const { isResizing } = this.state;\n\n    return (\n      <Resizable\n        enable={enableConfig}\n        grid={SNAP_TO_GRID}\n        minWidth={\n          adjustableWidth\n            ? minWidthMultiple * (widthStep + gutterWidth) - gutterWidth\n            : undefined\n        }\n        minHeight={\n          adjustableHeight ? minHeightMultiple * heightStep : undefined\n        }\n        maxWidth={\n          adjustableWidth\n            ? Math.max(\n                size.width,\n                Math.min(\n                  proxyToInfinity,\n                  maxWidthMultiple * (widthStep + gutterWidth) - gutterWidth,\n                ),\n              )\n            : undefined\n        }\n        maxHeight={\n          adjustableHeight\n            ? Math.max(\n                size.height,\n                Math.min(proxyToInfinity, maxHeightMultiple * heightStep),\n              )\n            : undefined\n        }\n        size={size}\n        onResizeStart={this.handleResizeStart}\n        onResize={this.handleResize}\n        onResizeStop={this.handleResizeStop}\n        handleComponent={ResizableHandle}\n        className={cx(\n          'resizable-container',\n          isResizing && 'resizable-container--resizing',\n        )}\n        handleClasses={HANDLE_CLASSES}\n      >\n        {children}\n      </Resizable>\n    );\n  }\n}\n\nResizableContainer.propTypes = propTypes;\nResizableContainer.defaultProps = defaultProps;\n\nexport default ResizableContainer;\n"]},"metadata":{},"sourceType":"module"}