{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _isNil from \"lodash/isNil\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Modal from 'src/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\nconst DatasetModal = ({ addDangerToast, addSuccessToast, onDatasetAdd, onHide, show }) => {\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [datasourceId, setDatasourceId] = useState(0);\n  const [disableSave, setDisableSave] = useState(true);\n  const { createResource } = useSingleViewResource('dataset', t('dataset'), addDangerToast);\n  const onChange = ({ dbId, schema, tableName }) => {\n    setDatasourceId(dbId);\n    setDisableSave(_isNil(dbId) || _isEmpty(tableName));\n    setSchema(schema);\n    setTableName(tableName);\n  };\n  const onSave = () => {\n    const data = {\n      database: datasourceId,\n      ...(currentSchema ? { schema: currentSchema } : {}),\n      table_name: currentTableName };\n\n    createResource(data).then(response => {\n      if (!response) {\n        return;\n      }\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: response.id, ...response });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      onHide();\n    });\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: onHide, primaryButtonName: t('Add'), show: show, title: t('Add dataset') },\n  ___EmotionJSX(TableSelectorContainer, null,\n  ___EmotionJSX(TableSelector, { clearable: false, dbId: datasourceId, formMode: true, handleError: addDangerToast, onChange: onChange, schema: currentSchema, tableName: currentTableName })));\n\n\n};__signature__(DatasetModal, \"useState{[currentSchema, setSchema]('')}\\nuseState{[currentTableName, setTableName]('')}\\nuseState{[datasourceId, setDatasourceId](0)}\\nuseState{[disableSave, setDisableSave](true)}\\nuseSingleViewResource{{ createResource }}\", () => [useSingleViewResource]);const _default =\nwithToasts(DatasetModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableSelectorContainer, \"TableSelectorContainer\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(DatasetModal, \"DatasetModal\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx"],"names":[],"mappings":"yaAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAmC,QAAnC,QAAmD,OAAnD;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,SAAS,qBAAT,QAAsC,sBAAtC;;AAEA,OAAO,KAAP,MAAkB,sBAAlB;AACA,OAAO,aAAP,MAA0B,8BAA1B;AACA,OAAO,UAAP,MAAuB,wCAAvB,C;AAgBA,MAAM,sBAAsB,GAAG,MAAM,CAAC,GAAG;;;AAGxC,CAHD;AAKA,MAAM,YAAY,GAAyC,CAAC,EAC1D,cAD0D,EAE1D,eAF0D,EAG1D,YAH0D,EAI1D,MAJ0D,EAK1D,IAL0D,EAAD,KAMtD;AACH,QAAM,CAAC,aAAD,EAAgB,SAAhB,IAA6B,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAC,gBAAD,EAAmB,YAAnB,IAAmC,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAAC,WAAD,EAAc,cAAd,IAAgC,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,EAAE,cAAF,KAAqB,qBAAqB,CAC9C,SAD8C,EAE9C,CAAC,CAAC,SAAD,CAF6C,EAG9C,cAH8C,CAAhD;AAMA,QAAM,QAAQ,GAAG,CAAC,EAChB,IADgB,EAEhB,MAFgB,EAGhB,SAHgB,EAAD,KAQZ;AACH,IAAA,eAAe,CAAC,IAAD,CAAf;AACA,IAAA,cAAc,CAAC,OAAM,IAAN,KAAe,SAAQ,SAAR,CAAhB,CAAd;AACA,IAAA,SAAS,CAAC,MAAD,CAAT;AACA,IAAA,YAAY,CAAC,SAAD,CAAZ;AACD,GAbD;AAeA,QAAM,MAAM,GAAG,MAAK;AAClB,UAAM,IAAI,GAAG;AACX,MAAA,QAAQ,EAAE,YADC;AAEX,UAAI,aAAa,GAAG,EAAE,MAAM,EAAE,aAAV,EAAH,GAA+B,EAAhD,CAFW;AAGX,MAAA,UAAU,EAAE,gBAHD,EAAb;;AAKA,IAAA,cAAc,CAAC,IAAD,CAAd,CAAqB,IAArB,CAA0B,QAAQ,IAAG;AACnC,UAAI,CAAC,QAAL,EAAe;AACb;AACD;AACD,UAAI,YAAJ,EAAkB;AAChB,QAAA,YAAY,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAf,EAAmB,GAAG,QAAtB,EAAD,CAAZ;AACD;AACD,MAAA,eAAe,CAAC,CAAC,CAAC,4BAAD,CAAF,CAAf;AACA,MAAA,MAAM;AACP,KATD;AAUD,GAhBD;AAkBA,SACE,cAAC,KAAD,IACE,oBAAoB,EAAE,WADxB,EAEE,sBAAsB,EAAE,MAF1B,EAGE,MAAM,EAAE,MAHV,EAIE,iBAAiB,EAAE,CAAC,CAAC,KAAD,CAJtB,EAKE,IAAI,EAAE,IALR,EAME,KAAK,EAAE,CAAC,CAAC,aAAD,CANV;AAQE,gBAAC,sBAAD;AACE,gBAAC,aAAD,IACE,SAAS,EAAE,KADb,EAEE,IAAI,EAAE,YAFR,EAGE,QAAQ,MAHV,EAIE,WAAW,EAAE,cAJf,EAKE,QAAQ,EAAE,QALZ,EAME,MAAM,EAAE,aANV,EAOE,SAAS,EAAE,gBAPb,GADF,CARF,CADF;;;AAsBD,CAxED,C,cAAM,Y,6OAWuB,qB;AA+Dd,UAAU,CAAC,YAAD,C,CAAzB,wB,iLA/EM,sB,8HAKA,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { isEmpty, isNil } from 'lodash';\nimport Modal from 'src/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\n\ntype DatasetAddObject = {\n  id: number;\n  database: number;\n  schema: string;\n  table_name: string;\n};\ninterface DatasetModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onDatasetAdd?: (dataset: DatasetAddObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\n\nconst DatasetModal: FunctionComponent<DatasetModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onDatasetAdd,\n  onHide,\n  show,\n}) => {\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [datasourceId, setDatasourceId] = useState<number>(0);\n  const [disableSave, setDisableSave] = useState(true);\n  const { createResource } = useSingleViewResource<Partial<DatasetAddObject>>(\n    'dataset',\n    t('dataset'),\n    addDangerToast,\n  );\n\n  const onChange = ({\n    dbId,\n    schema,\n    tableName,\n  }: {\n    dbId: number;\n    schema: string;\n    tableName: string;\n  }) => {\n    setDatasourceId(dbId);\n    setDisableSave(isNil(dbId) || isEmpty(tableName));\n    setSchema(schema);\n    setTableName(tableName);\n  };\n\n  const onSave = () => {\n    const data = {\n      database: datasourceId,\n      ...(currentSchema ? { schema: currentSchema } : {}),\n      table_name: currentTableName,\n    };\n    createResource(data).then(response => {\n      if (!response) {\n        return;\n      }\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: response.id, ...response });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      onHide();\n    });\n  };\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={onHide}\n      primaryButtonName={t('Add')}\n      show={show}\n      title={t('Add dataset')}\n    >\n      <TableSelectorContainer>\n        <TableSelector\n          clearable={false}\n          dbId={datasourceId}\n          formMode\n          handleError={addDangerToast}\n          onChange={onChange}\n          schema={currentSchema}\n          tableName={currentTableName}\n        />\n      </TableSelectorContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(DatasetModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}