{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { setFilterSetsConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { findExistingFilterSet, generateFiltersSetId } from './utils';\nimport { useFilters, useNativeFiltersDataMask, useFilterSets } from '../state';\nimport Footer from './Footer';\nimport FilterSetUnit from './FilterSetUnit';\nimport { getFilterBarTestId } from '..';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterSetsWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  & button.superset-button {\n    margin-left: 0;\n  }\n  & input {\n    width: 100%;\n  }\n`;\nconst FilterSetUnitWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  grid-gap: ${({ theme }) => theme.gridUnit}px;\n  ${({ theme }) => `padding: 0 ${theme.gridUnit * 4}px ${theme.gridUnit * 4}px`};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) => `${theme.gridUnit * 3}px ${theme.gridUnit * 2}px`};\n  cursor: ${({ onClick }) => !onClick ? 'auto' : 'pointer'};\n  ${({ theme, 'data-selected': selected }) => `background: ${selected ? theme.colors.primary.light5 : 'transparent'}`};\n`;\nconst DEFAULT_FILTER_SET_NAME = t('New filter set');\nconst FilterSets = ({ dataMaskSelected, onEditFilterSet, disabled, onFilterSelectionChange, isFilterSetChanged }) => {\n  const dispatch = useDispatch();\n  const [filterSetName, setFilterSetName] = useState(DEFAULT_FILTER_SET_NAME);\n  const [editMode, setEditMode] = useState(false);\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = _Object$values(filterSets);\n  const filters = useFilters();\n  const filterValues = _Object$values(filters);\n  const [selectedFiltersSetId, setSelectedFiltersSetId] = useState(null);\n  useEffect(() => {var _foundFilterSet$id;\n    if (isFilterSetChanged) {\n      return;\n    }\n    const foundFilterSet = findExistingFilterSet({\n      dataMaskSelected,\n      filterSetFilterValues });\n\n    setSelectedFiltersSetId((_foundFilterSet$id = foundFilterSet == null ? void 0 : foundFilterSet.id) != null ? _foundFilterSet$id : null);\n  }, [isFilterSetChanged, dataMaskSelected, filterSetFilterValues]);\n  const isFilterMissingOrContainsInvalidMetadata = (id, filterSet) => {var _filterSet$nativeFilt;return !_findInstanceProperty(filterValues).call(filterValues, filter => (filter == null ? void 0 : filter.id) === id) ||\n    !areObjectsEqual(filters[id], filterSet == null ? void 0 : (_filterSet$nativeFilt = filterSet.nativeFilters) == null ? void 0 : _filterSet$nativeFilt[id], {\n      ignoreUndefined: true });};\n\n  const takeFilterSet = (id, target) => {var _target$parentElement, _target$parentElement2, _target$parentElement3, _target$parentElement4, _target$parentElement5, _target$parentElement6, _context, _Object$values2;\n    const ignoreSelectorHeader = 'ant-collapse-header';\n    const ignoreSelectorDropdown = 'ant-dropdown-menu-item';\n    if (target != null && target.classList.contains(ignoreSelectorHeader) ||\n    target != null && target.classList.contains(ignoreSelectorDropdown) ||\n    target != null && (_target$parentElement = target.parentElement) != null && _target$parentElement.classList.contains(ignoreSelectorHeader) ||\n    target != null && (_target$parentElement2 = target.parentElement) != null && (_target$parentElement3 = _target$parentElement2.parentElement) != null && _target$parentElement3.classList.contains(ignoreSelectorHeader) ||\n    target != null && (_target$parentElement4 = target.parentElement) != null && (_target$parentElement5 = _target$parentElement4.parentElement) != null && (_target$parentElement6 = _target$parentElement5.parentElement) != null && _target$parentElement6.classList.contains(ignoreSelectorHeader)) {\n      // We don't want select filter set when user expand filters\n      return;\n    }\n    setSelectedFiltersSetId(id);\n    if (!id) {\n      return;\n    }\n    const filterSet = filterSets[id];\n    _forEachInstanceProperty(_context = (_Object$values2 = _Object$values(filterSet == null ? void 0 : filterSet.dataMask)) != null ? _Object$values2 : []).call(_context, dataMask => {\n      const { extraFormData, filterState, id } = dataMask;\n      if (isFilterMissingOrContainsInvalidMetadata(id, filterSet)) {\n        return;\n      }\n      onFilterSelectionChange({ id }, { extraFormData, filterState });\n    });\n  };\n  const handleRebuild = id => {var _context2, _context3, _filterSet$dataMask, _context4;\n    const filterSet = filterSets[id];\n    // We need remove invalid filters from filter set\n    const newFilters = _reduceInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _Object$values((_filterSet$dataMask = filterSet == null ? void 0 : filterSet.dataMask) != null ? _filterSet$dataMask : {})).call(_context3,\n    dataMask => {\n      const { id } = dataMask;\n      return !isFilterMissingOrContainsInvalidMetadata(id, filterSet);\n    })).call(_context2,\n    (prev, next) => ({\n      ...prev,\n      [next.id]: filters[next.id] }),\n    {});\n    const updatedFilterSet = {\n      ...filterSet,\n      nativeFilters: newFilters,\n      dataMask: _reduceInstanceProperty(_context4 = _Object$keys(newFilters)).call(_context4, (prev, nextFilterId) => {var _filterSet$dataMask2;return {\n          ...prev,\n          [nextFilterId]: (_filterSet$dataMask2 = filterSet.dataMask) == null ? void 0 : _filterSet$dataMask2[nextFilterId] };},\n      {}) };\n\n    dispatch(setFilterSetsConfiguration(_mapInstanceProperty(filterSetFilterValues).call(filterSetFilterValues, filterSetIt => {\n      const isEquals = filterSetIt.id === updatedFilterSet.id;\n      return isEquals ? updatedFilterSet : filterSetIt;\n    })));\n  };\n  const handleEdit = id => {\n    takeFilterSet(id);\n    onEditFilterSet(id);\n  };\n  const handleDeleteFilterSet = filterSetId => {\n    dispatch(setFilterSetsConfiguration(_filterInstanceProperty(filterSetFilterValues).call(filterSetFilterValues, filtersSet => filtersSet.id !== filterSetId)));\n    if (filterSetId === selectedFiltersSetId) {\n      setSelectedFiltersSetId(null);\n    }\n  };\n  const handleCancel = () => {\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n  const handleCreateFilterSet = () => {var _context5, _context6;\n    const newFilterSet = {\n      name: _trimInstanceProperty(filterSetName).call(filterSetName),\n      id: generateFiltersSetId(),\n      nativeFilters: filters,\n      dataMask: _reduceInstanceProperty(_context5 = _Object$keys(filters)).call(_context5, (prev, nextFilterId) => ({\n        ...prev,\n        [nextFilterId]: dataMaskApplied[nextFilterId] }),\n      {}) };\n\n    dispatch(setFilterSetsConfiguration(_concatInstanceProperty(_context6 = [newFilterSet]).call(_context6, filterSetFilterValues)));\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n  return ___EmotionJSX(FilterSetsWrapper, null,\n  !selectedFiltersSetId && ___EmotionJSX(FilterSetUnitWrapper, null,\n  ___EmotionJSX(FilterSetUnit, { dataMaskSelected: dataMaskSelected, editMode: editMode, setFilterSetName: setFilterSetName, filterSetName: filterSetName }),\n  ___EmotionJSX(Footer, { filterSetName: _trimInstanceProperty(filterSetName).call(filterSetName), disabled: disabled, onCancel: handleCancel, editMode: editMode, onEdit: () => setEditMode(true), onCreate: handleCreateFilterSet })),\n\n  _mapInstanceProperty(filterSetFilterValues).call(filterSetFilterValues, filterSet => ___EmotionJSX(FilterSetUnitWrapper, _extends({}, getFilterBarTestId('filter-set-wrapper'), { \"data-selected\": filterSet.id === selectedFiltersSetId, onClick: e => takeFilterSet(filterSet.id, e.target), key: filterSet.id }),\n  ___EmotionJSX(FilterSetUnit, { isApplied: filterSet.id === selectedFiltersSetId && !disabled, onDelete: () => handleDeleteFilterSet(filterSet.id), onEdit: () => handleEdit(filterSet.id), onRebuild: () => handleRebuild(filterSet.id), dataMaskSelected: dataMaskSelected, filterSet: filterSet }))));\n\n\n};__signature__(FilterSets, \"useDispatch{dispatch}\\nuseState{[filterSetName, setFilterSetName](DEFAULT_FILTER_SET_NAME)}\\nuseState{[editMode, setEditMode](false)}\\nuseNativeFiltersDataMask{dataMaskApplied}\\nuseFilterSets{filterSets}\\nuseFilters{filters}\\nuseState{[selectedFiltersSetId, setSelectedFiltersSetId](null)}\\nuseEffect{}\", () => [useDispatch, useNativeFiltersDataMask, useFilterSets, useFilters]);const _default =\nFilterSets;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterSetsWrapper, \"FilterSetsWrapper\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx\");reactHotLoader.register(FilterSetUnitWrapper, \"FilterSetUnitWrapper\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx\");reactHotLoader.register(DEFAULT_FILTER_SET_NAME, \"DEFAULT_FILTER_SET_NAME\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx\");reactHotLoader.register(FilterSets, \"FilterSets\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterSets/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, MouseEvent } from 'react';\nimport { DataMask, HandlerFunction, styled, t } from '@superset-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { DataMaskState, DataMaskWithId } from 'src/dataMask/types';\nimport { setFilterSetsConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { Filters, FilterSet } from 'src/dashboard/reducers/types';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { findExistingFilterSet, generateFiltersSetId } from './utils';\nimport { Filter } from '../../types';\nimport { useFilters, useNativeFiltersDataMask, useFilterSets } from '../state';\nimport Footer from './Footer';\nimport FilterSetUnit from './FilterSetUnit';\nimport { getFilterBarTestId } from '..';\n\nconst FilterSetsWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  & button.superset-button {\n    margin-left: 0;\n  }\n  & input {\n    width: 100%;\n  }\n`;\n\nconst FilterSetUnitWrapper = styled.div<{\n  onClick?: HandlerFunction;\n  'data-selected'?: boolean;\n}>`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 1fr;\n  grid-gap: ${({ theme }) => theme.gridUnit}px;\n  ${({ theme }) =>\n    `padding: 0 ${theme.gridUnit * 4}px ${theme.gridUnit * 4}px`};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) => `${theme.gridUnit * 3}px ${theme.gridUnit * 2}px`};\n  cursor: ${({ onClick }) => (!onClick ? 'auto' : 'pointer')};\n  ${({ theme, 'data-selected': selected }) =>\n    `background: ${selected ? theme.colors.primary.light5 : 'transparent'}`};\n`;\n\nexport type FilterSetsProps = {\n  disabled: boolean;\n  isFilterSetChanged: boolean;\n  dataMaskSelected: DataMaskState;\n  onEditFilterSet: (id: string) => void;\n  onFilterSelectionChange: (\n    filter: Pick<Filter, 'id'> & Partial<Filter>,\n    dataMask: Partial<DataMask>,\n  ) => void;\n};\n\nconst DEFAULT_FILTER_SET_NAME = t('New filter set');\n\nconst FilterSets: React.FC<FilterSetsProps> = ({\n  dataMaskSelected,\n  onEditFilterSet,\n  disabled,\n  onFilterSelectionChange,\n  isFilterSetChanged,\n}) => {\n  const dispatch = useDispatch();\n  const [filterSetName, setFilterSetName] = useState(DEFAULT_FILTER_SET_NAME);\n  const [editMode, setEditMode] = useState(false);\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const filterSets = useFilterSets();\n  const filterSetFilterValues = Object.values(filterSets);\n  const filters = useFilters();\n  const filterValues = Object.values(filters) as Filter[];\n  const [selectedFiltersSetId, setSelectedFiltersSetId] = useState<\n    string | null\n  >(null);\n\n  useEffect(() => {\n    if (isFilterSetChanged) {\n      return;\n    }\n\n    const foundFilterSet = findExistingFilterSet({\n      dataMaskSelected,\n      filterSetFilterValues,\n    });\n    setSelectedFiltersSetId(foundFilterSet?.id ?? null);\n  }, [isFilterSetChanged, dataMaskSelected, filterSetFilterValues]);\n\n  const isFilterMissingOrContainsInvalidMetadata = (\n    id: string,\n    filterSet?: FilterSet,\n  ) =>\n    !filterValues.find(filter => filter?.id === id) ||\n    !areObjectsEqual(filters[id], filterSet?.nativeFilters?.[id], {\n      ignoreUndefined: true,\n    });\n\n  const takeFilterSet = (id: string, target?: HTMLElement) => {\n    const ignoreSelectorHeader = 'ant-collapse-header';\n    const ignoreSelectorDropdown = 'ant-dropdown-menu-item';\n    if (\n      target?.classList.contains(ignoreSelectorHeader) ||\n      target?.classList.contains(ignoreSelectorDropdown) ||\n      target?.parentElement?.classList.contains(ignoreSelectorHeader) ||\n      target?.parentElement?.parentElement?.classList.contains(\n        ignoreSelectorHeader,\n      ) ||\n      target?.parentElement?.parentElement?.parentElement?.classList.contains(\n        ignoreSelectorHeader,\n      )\n    ) {\n      // We don't want select filter set when user expand filters\n      return;\n    }\n    setSelectedFiltersSetId(id);\n    if (!id) {\n      return;\n    }\n\n    const filterSet = filterSets[id];\n\n    (Object.values(filterSet?.dataMask) ?? []).forEach(\n      (dataMask: DataMaskWithId) => {\n        const { extraFormData, filterState, id } = dataMask;\n        if (isFilterMissingOrContainsInvalidMetadata(id, filterSet)) {\n          return;\n        }\n        onFilterSelectionChange({ id }, { extraFormData, filterState });\n      },\n    );\n  };\n\n  const handleRebuild = (id: string) => {\n    const filterSet = filterSets[id];\n    // We need remove invalid filters from filter set\n    const newFilters = Object.values(filterSet?.dataMask ?? {})\n      .filter(dataMask => {\n        const { id } = dataMask as DataMaskWithId;\n        return !isFilterMissingOrContainsInvalidMetadata(id, filterSet);\n      })\n      .reduce(\n        (prev, next: DataMaskWithId) => ({\n          ...prev,\n          [next.id]: filters[next.id],\n        }),\n        {},\n      );\n\n    const updatedFilterSet: FilterSet = {\n      ...filterSet,\n      nativeFilters: newFilters as Filters,\n      dataMask: Object.keys(newFilters).reduce(\n        (prev, nextFilterId) => ({\n          ...prev,\n          [nextFilterId]: filterSet.dataMask?.[nextFilterId],\n        }),\n        {},\n      ),\n    };\n    dispatch(\n      setFilterSetsConfiguration(\n        filterSetFilterValues.map(filterSetIt => {\n          const isEquals = filterSetIt.id === updatedFilterSet.id;\n          return isEquals ? updatedFilterSet : filterSetIt;\n        }),\n      ),\n    );\n  };\n\n  const handleEdit = (id: string) => {\n    takeFilterSet(id);\n    onEditFilterSet(id);\n  };\n\n  const handleDeleteFilterSet = (filterSetId: string) => {\n    dispatch(\n      setFilterSetsConfiguration(\n        filterSetFilterValues.filter(\n          filtersSet => filtersSet.id !== filterSetId,\n        ),\n      ),\n    );\n    if (filterSetId === selectedFiltersSetId) {\n      setSelectedFiltersSetId(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n\n  const handleCreateFilterSet = () => {\n    const newFilterSet: FilterSet = {\n      name: filterSetName.trim(),\n      id: generateFiltersSetId(),\n      nativeFilters: filters,\n      dataMask: Object.keys(filters).reduce(\n        (prev, nextFilterId) => ({\n          ...prev,\n          [nextFilterId]: dataMaskApplied[nextFilterId],\n        }),\n        {},\n      ),\n    };\n    dispatch(\n      setFilterSetsConfiguration([newFilterSet].concat(filterSetFilterValues)),\n    );\n    setEditMode(false);\n    setFilterSetName(DEFAULT_FILTER_SET_NAME);\n  };\n\n  return (\n    <FilterSetsWrapper>\n      {!selectedFiltersSetId && (\n        <FilterSetUnitWrapper>\n          <FilterSetUnit\n            dataMaskSelected={dataMaskSelected}\n            editMode={editMode}\n            setFilterSetName={setFilterSetName}\n            filterSetName={filterSetName}\n          />\n          <Footer\n            filterSetName={filterSetName.trim()}\n            disabled={disabled}\n            onCancel={handleCancel}\n            editMode={editMode}\n            onEdit={() => setEditMode(true)}\n            onCreate={handleCreateFilterSet}\n          />\n        </FilterSetUnitWrapper>\n      )}\n      {filterSetFilterValues.map(filterSet => (\n        <FilterSetUnitWrapper\n          {...getFilterBarTestId('filter-set-wrapper')}\n          data-selected={filterSet.id === selectedFiltersSetId}\n          onClick={(e: MouseEvent<HTMLElement>) =>\n            takeFilterSet(filterSet.id, e.target as HTMLElement)\n          }\n          key={filterSet.id}\n        >\n          <FilterSetUnit\n            isApplied={filterSet.id === selectedFiltersSetId && !disabled}\n            onDelete={() => handleDeleteFilterSet(filterSet.id)}\n            onEdit={() => handleEdit(filterSet.id)}\n            onRebuild={() => handleRebuild(filterSet.id)}\n            dataMaskSelected={dataMaskSelected}\n            filterSet={filterSet}\n          />\n        </FilterSetUnitWrapper>\n      ))}\n    </FilterSetsWrapper>\n  );\n};\n\nexport default FilterSets;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}