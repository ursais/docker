{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SET_DATASOURCE } from '../actions/datasources';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function datasourceReducer(datasources = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return action.data.datasources;\n    },\n    [SET_DATASOURCE]() {\n      return action.datasource;\n    } };\n\n\n  if (action.type in actionHandlers) {\n    if (action.key) {\n      return {\n        ...datasources,\n        [action.key]: actionHandlers[action.type](\n        datasources[action.key],\n        action) };\n\n\n    }\n    return actionHandlers[action.type]();\n  }\n  return datasources;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(datasourceReducer, \"datasourceReducer\", \"/app/superset-frontend/src/dashboard/reducers/datasources.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/reducers/datasources.js"],"names":["SET_DATASOURCE","HYDRATE_DASHBOARD","datasourceReducer","datasources","action","actionHandlers","data","datasource","type","key"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,QAA+B,wBAA/B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,WAAW,GAAG,EAAzC,EAA6CC,MAA7C,EAAqD;AAClE,QAAMC,cAAc,GAAG;AACrB,KAACJ,iBAAD,IAAsB;AACpB,aAAOG,MAAM,CAACE,IAAP,CAAYH,WAAnB;AACD,KAHoB;AAIrB,KAACH,cAAD,IAAmB;AACjB,aAAOI,MAAM,CAACG,UAAd;AACD,KANoB,EAAvB;;;AASA,MAAIH,MAAM,CAACI,IAAP,IAAeH,cAAnB,EAAmC;AACjC,QAAID,MAAM,CAACK,GAAX,EAAgB;AACd,aAAO;AACL,WAAGN,WADE;AAEL,SAACC,MAAM,CAACK,GAAR,GAAcJ,cAAc,CAACD,MAAM,CAACI,IAAR,CAAd;AACZL,QAAAA,WAAW,CAACC,MAAM,CAACK,GAAR,CADC;AAEZL,QAAAA,MAFY,CAFT,EAAP;;;AAOD;AACD,WAAOC,cAAc,CAACD,MAAM,CAACI,IAAR,CAAd,EAAP;AACD;AACD,SAAOL,WAAP;AACD,C,iLAvBuBD,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SET_DATASOURCE } from '../actions/datasources';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function datasourceReducer(datasources = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return action.data.datasources;\n    },\n    [SET_DATASOURCE]() {\n      return action.datasource;\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    if (action.key) {\n      return {\n        ...datasources,\n        [action.key]: actionHandlers[action.type](\n          datasources[action.key],\n          action,\n        ),\n      };\n    }\n    return actionHandlers[action.type]();\n  }\n  return datasources;\n}\n"]},"metadata":{},"sourceType":"module"}