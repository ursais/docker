{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SqlAlchemyTab = ({ db, onInputChange, testConnection, conf }) => {var _conf$SQLALCHEMY_DOCS, _conf$SQLALCHEMY_DISP;return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Display Name'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"database_name\", \"data-test\": \"database-name-input\", value: (db == null ? void 0 : db.database_name) || '', placeholder: t('Name your database'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Pick a name to help you identify this database.'))),\n\n\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('SQLAlchemy URI'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")),\n\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"sqlalchemy_uri\", \"data-test\": \"sqlalchemy-uri-input\", value: (db == null ? void 0 : db.sqlalchemy_uri) || '', autoComplete: \"off\", placeholder: t('dialect+driver://username:password@host:port/database'), onChange: onInputChange })),\n\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Refer to the'), ' ',\n  ___EmotionJSX(\"a\", { href: (_conf$SQLALCHEMY_DOCS = conf == null ? void 0 : conf.SQLALCHEMY_DOCS_URL) != null ? _conf$SQLALCHEMY_DOCS : '', target: \"_blank\", rel: \"noopener noreferrer\" }, (_conf$SQLALCHEMY_DISP =\n  conf == null ? void 0 : conf.SQLALCHEMY_DISPLAY_TEXT) != null ? _conf$SQLALCHEMY_DISP : ''),\n  ' ',\n  t('for more information on how to structure your URI.'))),\n\n\n  ___EmotionJSX(Button, { onClick: testConnection, cta: true, buttonStyle: \"link\", css: theme => wideButton(theme) },\n  t('Test connection')));};const _default =\n\n\nSqlAlchemyTab;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SqlAlchemyTab, \"SqlAlchemyTab\", \"/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/SqlAlchemyForm.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/SqlAlchemyForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/database/DatabaseModal/SqlAlchemyForm.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAA6D,OAA7D;AACA,SAAS,CAAT,QAAiC,mBAAjC;AACA,OAAO,MAAP,MAAmB,uBAAnB;AACA,SAAS,oBAAT,EAA+B,UAA/B,QAAiD,UAAjD,C;AAIA,MAAM,aAAa,GAAG,CAAC,EACrB,EADqB,EAErB,aAFqB,EAGrB,cAHqB,EAIrB,IAJqB,EAAD,8DAWpB;AACE,gBAAC,oBAAD;AACE,yBAAK,SAAS,EAAC,eAAf;AACG,EAAA,CAAC,CAAC,cAAD,CADJ;AAEE,0BAAM,SAAS,EAAC,UAAhB,QAFF,CADF;;AAKE,yBAAK,SAAS,EAAC,iBAAf;AACE,2BACE,IAAI,EAAC,MADP,EAEE,IAAI,EAAC,eAFP,EAGE,aAAU,qBAHZ,EAIE,KAAK,EAAE,CAAA,EAAE,QAAF,YAAA,EAAE,CAAE,aAAJ,KAAqB,EAJ9B,EAKE,WAAW,EAAE,CAAC,CAAC,oBAAD,CALhB,EAME,QAAQ,EAAE,aANZ,GADF,CALF;;AAeE,yBAAK,SAAS,EAAC,QAAf;AACG,EAAA,CAAC,CAAC,iDAAD,CADJ,CAfF,CADF;;;AAoBE,gBAAC,oBAAD;AACE,yBAAK,SAAS,EAAC,eAAf;AACG,EAAA,CAAC,CAAC,gBAAD,CADJ;AAEE,0BAAM,SAAS,EAAC,UAAhB,QAFF,CADF;;AAKE,yBAAK,SAAS,EAAC,iBAAf;AACE,2BACE,IAAI,EAAC,MADP,EAEE,IAAI,EAAC,gBAFP,EAGE,aAAU,sBAHZ,EAIE,KAAK,EAAE,CAAA,EAAE,QAAF,YAAA,EAAE,CAAE,cAAJ,KAAsB,EAJ/B,EAKE,YAAY,EAAC,KALf,EAME,WAAW,EAAE,CAAC,CACZ,uDADY,CANhB,EASE,QAAQ,EAAE,aATZ,GADF,CALF;;AAkBE,yBAAK,SAAS,EAAC,QAAf;AACG,EAAA,CAAC,CAAC,cAAD,CADJ,EACsB,GADtB;AAEE,uBACE,IAAI,2BAAE,IAAF,oBAAE,IAAI,CAAE,mBAAR,oCAA+B,EADrC,EAEE,MAAM,EAAC,QAFT,EAGE,GAAG,EAAC,qBAHN;AAKG,EAAA,IALH,oBAKG,IAAI,CAAE,uBALT,oCAKoC,EALpC,CAFF;AAQO,KARP;AASG,EAAA,CAAC,CAAC,oDAAD,CATJ,CAlBF,CApBF;;;AAkDE,gBAAC,MAAD,IACE,OAAO,EAAE,cADX,EAEE,GAAG,MAFL,EAGE,WAAW,EAAC,MAHd,EAIE,GAAG,EAAG,KAAD,IAA0B,UAAU,CAAC,KAAD,CAJ3C;AAMG,EAAA,CAAC,CAAC,iBAAD,CANJ,CAlDF,CAXoB,EAAtB,C;;;AAwEe,a,CAAf,wB,iLAxEM,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { EventHandler, ChangeEvent, MouseEvent } from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';\n\nimport { DatabaseObject } from '../types';\n\nconst SqlAlchemyTab = ({\n  db,\n  onInputChange,\n  testConnection,\n  conf,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  testConnection: EventHandler<MouseEvent<HTMLElement>>;\n  conf: { SQLALCHEMY_DOCS_URL: string; SQLALCHEMY_DISPLAY_TEXT: string };\n}) => (\n  <>\n    <StyledInputContainer>\n      <div className=\"control-label\">\n        {t('Display Name')}\n        <span className=\"required\">*</span>\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          name=\"database_name\"\n          data-test=\"database-name-input\"\n          value={db?.database_name || ''}\n          placeholder={t('Name your database')}\n          onChange={onInputChange}\n        />\n      </div>\n      <div className=\"helper\">\n        {t('Pick a name to help you identify this database.')}\n      </div>\n    </StyledInputContainer>\n    <StyledInputContainer>\n      <div className=\"control-label\">\n        {t('SQLAlchemy URI')}\n        <span className=\"required\">*</span>\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          name=\"sqlalchemy_uri\"\n          data-test=\"sqlalchemy-uri-input\"\n          value={db?.sqlalchemy_uri || ''}\n          autoComplete=\"off\"\n          placeholder={t(\n            'dialect+driver://username:password@host:port/database',\n          )}\n          onChange={onInputChange}\n        />\n      </div>\n      <div className=\"helper\">\n        {t('Refer to the')}{' '}\n        <a\n          href={conf?.SQLALCHEMY_DOCS_URL ?? ''}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {conf?.SQLALCHEMY_DISPLAY_TEXT ?? ''}\n        </a>{' '}\n        {t('for more information on how to structure your URI.')}\n      </div>\n    </StyledInputContainer>\n    <Button\n      onClick={testConnection}\n      cta\n      buttonStyle=\"link\"\n      css={(theme: SupersetTheme) => wideButton(theme)}\n    >\n      {t('Test connection')}\n    </Button>\n  </>\n);\n\nexport default SqlAlchemyTab;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}