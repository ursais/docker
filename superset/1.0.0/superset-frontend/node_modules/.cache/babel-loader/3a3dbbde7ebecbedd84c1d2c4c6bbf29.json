{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/chart/ChartContainer';\nimport {\ngetFromLocalStorage,\nsetInLocalStorage } from\n'src/utils/localStorageHelpers';\nimport ConnectedExploreChartHeader from './ExploreChartHeader';\nimport { DataTablesPane } from './DataTablesPane';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.number,\n  timeout: PropTypes.number,\n  refreshOverlayVisible: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool };\n\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst CHART_PANEL_PADDING_HORIZ = 30;\nconst CHART_PANEL_PADDING_VERTICAL = 15;\nconst HEADER_PADDING = 15;\n\nconst STORAGE_KEYS = {\n  sizes: 'chart_split_sizes' };\n\n\nconst INITIAL_SIZES = [90, 10];\nconst MIN_SIZES = [300, 50];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div:last-of-type {\n    flex-basis: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = props => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n\n  const { height: hHeight, ref: headerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300 });\n\n  const { width: chartPanelWidth, ref: chartPanelRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300 });\n\n  const [splitSizes, setSplitSizes] = useState(\n  getFromLocalStorage(STORAGE_KEYS.sizes, INITIAL_SIZES));\n\n\n  const calcSectionHeight = useCallback(\n  percent => {\n    let headerHeight;\n    if (props.standalone) {\n      headerHeight = 0;\n    } else if (hHeight) {\n      headerHeight = hHeight + HEADER_PADDING;\n    } else {\n      headerHeight = 50;\n    }\n    const containerHeight = _parseInt(props.height, 10) - headerHeight;\n    return (\n      containerHeight * percent / 100 - (gutterHeight / 2 + gutterMargin));\n\n  },\n  [gutterHeight, gutterMargin, props.height, props.standalone, hHeight]);\n\n\n  const [tableSectionHeight, setTableSectionHeight] = useState(\n  calcSectionHeight(INITIAL_SIZES[1]));\n\n\n  const recalcPanelSizes = useCallback(\n  ([, southPercent]) => {\n    setTableSectionHeight(calcSectionHeight(southPercent));\n  },\n  [calcSectionHeight]);\n\n\n  useEffect(() => {\n    recalcPanelSizes(splitSizes);\n  }, [recalcPanelSizes, splitSizes]);\n\n  useEffect(() => {\n    setInLocalStorage(STORAGE_KEYS.sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = sizes => {\n    setSplitSizes(sizes);\n  };\n\n  const onCollapseChange = openPanelName => {\n    let splitSizes;\n    if (!openPanelName) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n      100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      DEFAULT_SOUTH_PANE_HEIGHT_PERCENT];\n\n    }\n    setSplitSizes(splitSizes);\n  };\n\n  const renderChart = useCallback(() => {\n    const { chart, vizType } = props;\n    const newHeight =\n    vizType === 'filter_box' ?\n    calcSectionHeight(100) - CHART_PANEL_PADDING_VERTICAL :\n    calcSectionHeight(splitSizes[0]) - CHART_PANEL_PADDING_VERTICAL;\n    const chartWidth = chartPanelWidth - CHART_PANEL_PADDING_HORIZ;\n    return (\n      chartWidth > 0 &&\n      ___EmotionJSX(ChartContainer, {\n        width: Math.floor(chartWidth),\n        height: newHeight,\n        ownState: props.ownState,\n        annotationData: chart.annotationData,\n        chartAlert: chart.chartAlert,\n        chartStackTrace: chart.chartStackTrace,\n        chartId: chart.id,\n        chartStatus: chart.chartStatus,\n        triggerRender: props.triggerRender,\n        datasource: props.datasource,\n        errorMessage: props.errorMessage,\n        formData: props.form_data,\n        onQuery: props.onQuery,\n        queriesResponse: chart.queriesResponse,\n        refreshOverlayVisible: props.refreshOverlayVisible,\n        setControlValue: props.actions.setControlValue,\n        timeout: props.timeout,\n        triggerQuery: chart.triggerQuery,\n        vizType: props.vizType }));\n\n\n\n  }, [calcSectionHeight, chartPanelWidth, props, splitSizes]);\n\n  const panelBody = useMemo(\n  () =>\n  ___EmotionJSX(\"div\", { className: \"panel-body\", ref: chartPanelRef },\n  renderChart()),\n\n\n  [chartPanelRef, renderChart]);\n\n\n  const standaloneChartBody = useMemo(\n  () => ___EmotionJSX(\"div\", { ref: chartPanelRef }, renderChart()),\n  [chartPanelRef, renderChart]);\n\n\n  if (props.standalone) {\n    // dom manipulation hack to get rid of the boostrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!_includesInstanceProperty(bodyClasses).call(bodyClasses, standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return standaloneChartBody;\n  }\n\n  const header =\n  ___EmotionJSX(ConnectedExploreChartHeader, {\n    ownState: props.ownState,\n    actions: props.actions,\n    addHistory: props.addHistory,\n    can_overwrite: props.can_overwrite,\n    can_download: props.can_download,\n    isStarred: props.isStarred,\n    slice: _sliceInstanceProperty(props),\n    sliceName: props.sliceName,\n    table_name: props.table_name,\n    form_data: props.form_data,\n    timeout: props.timeout,\n    chart: props.chart,\n    userId: props.userId });\n\n\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)` });\n\n\n  return (\n    ___EmotionJSX(Styles, { className: \"panel panel-default chart-container\", ref: chartPanelRef },\n    ___EmotionJSX(\"div\", { className: \"panel-heading\", ref: headerRef },\n    header),\n\n    props.vizType === 'filter_box' ?\n    panelBody :\n\n    ___EmotionJSX(Split, {\n      sizes: splitSizes,\n      minSize: MIN_SIZES,\n      direction: \"vertical\",\n      gutterSize: gutterHeight,\n      onDragEnd: onDragEnd,\n      elementStyle: elementStyle },\n\n    panelBody,\n    ___EmotionJSX(DataTablesPane, {\n      ownState: props.ownState,\n      queryFormData: props.chart.latestQueryFormData,\n      tableSectionHeight: tableSectionHeight,\n      onCollapseChange: onCollapseChange,\n      chartStatus: props.chart.chartStatus,\n      errorMessage: props.errorMessage }))));\n\n\n\n\n\n};__signature__(ExploreChartPanel, \"useTheme{theme}\\nuseResizeDetector{{ height: hHeight, ref: headerRef }}\\nuseResizeDetector{{ width: chartPanelWidth, ref: chartPanelRef }}\\nuseState{[splitSizes, setSplitSizes](getFromLocalStorage(STORAGE_KEYS.sizes, INITIAL_SIZES))}\\nuseCallback{calcSectionHeight}\\nuseState{[tableSectionHeight, setTableSectionHeight](calcSectionHeight(INITIAL_SIZES[1]))}\\nuseCallback{recalcPanelSizes}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{renderChart}\\nuseMemo{panelBody}\\nuseMemo{standaloneChartBody}\", () => [useTheme, useResizeDetector, useResizeDetector]);\n\nExploreChartPanel.propTypes = propTypes;const _default =\n\nExploreChartPanel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(GUTTER_SIZE_FACTOR, \"GUTTER_SIZE_FACTOR\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(CHART_PANEL_PADDING_HORIZ, \"CHART_PANEL_PADDING_HORIZ\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(CHART_PANEL_PADDING_VERTICAL, \"CHART_PANEL_PADDING_VERTICAL\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(HEADER_PADDING, \"HEADER_PADDING\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(STORAGE_KEYS, \"STORAGE_KEYS\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(INITIAL_SIZES, \"INITIAL_SIZES\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(MIN_SIZES, \"MIN_SIZES\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(DEFAULT_SOUTH_PANE_HEIGHT_PERCENT, \"DEFAULT_SOUTH_PANE_HEIGHT_PERCENT\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(ExploreChartPanel, \"ExploreChartPanel\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ExploreChartPanel.jsx"],"names":["React","useState","useEffect","useCallback","useMemo","PropTypes","Split","styled","useTheme","useResizeDetector","chartPropShape","ChartContainer","getFromLocalStorage","setInLocalStorage","ConnectedExploreChartHeader","DataTablesPane","propTypes","actions","object","isRequired","addHistory","func","onQuery","can_overwrite","bool","can_download","datasource","column_formats","containerId","string","height","width","isStarred","slice","sliceName","table_name","vizType","form_data","ownState","standalone","number","timeout","refreshOverlayVisible","chart","errorMessage","node","triggerRender","GUTTER_SIZE_FACTOR","CHART_PANEL_PADDING_HORIZ","CHART_PANEL_PADDING_VERTICAL","HEADER_PADDING","STORAGE_KEYS","sizes","INITIAL_SIZES","MIN_SIZES","DEFAULT_SOUTH_PANE_HEIGHT_PERCENT","Styles","div","theme","colors","grayscale","light2","gridUnit","ExploreChartPanel","props","gutterMargin","gutterHeight","hHeight","ref","headerRef","refreshMode","refreshRate","chartPanelWidth","chartPanelRef","splitSizes","setSplitSizes","calcSectionHeight","percent","headerHeight","containerHeight","tableSectionHeight","setTableSectionHeight","recalcPanelSizes","southPercent","onDragEnd","onCollapseChange","openPanelName","renderChart","newHeight","chartWidth","Math","floor","annotationData","chartAlert","chartStackTrace","id","chartStatus","queriesResponse","setControlValue","triggerQuery","panelBody","standaloneChartBody","standaloneClass","bodyClasses","document","body","className","split","header","userId","elementStyle","dimension","elementSize","gutterSize","latestQueryFormData"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/chart/ChartContainer';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from 'src/utils/localStorageHelpers';\nimport ConnectedExploreChartHeader from './ExploreChartHeader';\nimport { DataTablesPane } from './DataTablesPane';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.number,\n  timeout: PropTypes.number,\n  refreshOverlayVisible: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst CHART_PANEL_PADDING_HORIZ = 30;\nconst CHART_PANEL_PADDING_VERTICAL = 15;\nconst HEADER_PADDING = 15;\n\nconst STORAGE_KEYS = {\n  sizes: 'chart_split_sizes',\n};\n\nconst INITIAL_SIZES = [90, 10];\nconst MIN_SIZES = [300, 50];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div:last-of-type {\n    flex-basis: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = props => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n\n  const { height: hHeight, ref: headerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n  });\n  const { width: chartPanelWidth, ref: chartPanelRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n  });\n  const [splitSizes, setSplitSizes] = useState(\n    getFromLocalStorage(STORAGE_KEYS.sizes, INITIAL_SIZES),\n  );\n\n  const calcSectionHeight = useCallback(\n    percent => {\n      let headerHeight;\n      if (props.standalone) {\n        headerHeight = 0;\n      } else if (hHeight) {\n        headerHeight = hHeight + HEADER_PADDING;\n      } else {\n        headerHeight = 50;\n      }\n      const containerHeight = parseInt(props.height, 10) - headerHeight;\n      return (\n        (containerHeight * percent) / 100 - (gutterHeight / 2 + gutterMargin)\n      );\n    },\n    [gutterHeight, gutterMargin, props.height, props.standalone, hHeight],\n  );\n\n  const [tableSectionHeight, setTableSectionHeight] = useState(\n    calcSectionHeight(INITIAL_SIZES[1]),\n  );\n\n  const recalcPanelSizes = useCallback(\n    ([, southPercent]) => {\n      setTableSectionHeight(calcSectionHeight(southPercent));\n    },\n    [calcSectionHeight],\n  );\n\n  useEffect(() => {\n    recalcPanelSizes(splitSizes);\n  }, [recalcPanelSizes, splitSizes]);\n\n  useEffect(() => {\n    setInLocalStorage(STORAGE_KEYS.sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = sizes => {\n    setSplitSizes(sizes);\n  };\n\n  const onCollapseChange = openPanelName => {\n    let splitSizes;\n    if (!openPanelName) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n  };\n\n  const renderChart = useCallback(() => {\n    const { chart, vizType } = props;\n    const newHeight =\n      vizType === 'filter_box'\n        ? calcSectionHeight(100) - CHART_PANEL_PADDING_VERTICAL\n        : calcSectionHeight(splitSizes[0]) - CHART_PANEL_PADDING_VERTICAL;\n    const chartWidth = chartPanelWidth - CHART_PANEL_PADDING_HORIZ;\n    return (\n      chartWidth > 0 && (\n        <ChartContainer\n          width={Math.floor(chartWidth)}\n          height={newHeight}\n          ownState={props.ownState}\n          annotationData={chart.annotationData}\n          chartAlert={chart.chartAlert}\n          chartStackTrace={chart.chartStackTrace}\n          chartId={chart.id}\n          chartStatus={chart.chartStatus}\n          triggerRender={props.triggerRender}\n          datasource={props.datasource}\n          errorMessage={props.errorMessage}\n          formData={props.form_data}\n          onQuery={props.onQuery}\n          queriesResponse={chart.queriesResponse}\n          refreshOverlayVisible={props.refreshOverlayVisible}\n          setControlValue={props.actions.setControlValue}\n          timeout={props.timeout}\n          triggerQuery={chart.triggerQuery}\n          vizType={props.vizType}\n        />\n      )\n    );\n  }, [calcSectionHeight, chartPanelWidth, props, splitSizes]);\n\n  const panelBody = useMemo(\n    () => (\n      <div className=\"panel-body\" ref={chartPanelRef}>\n        {renderChart()}\n      </div>\n    ),\n    [chartPanelRef, renderChart],\n  );\n\n  const standaloneChartBody = useMemo(\n    () => <div ref={chartPanelRef}>{renderChart()}</div>,\n    [chartPanelRef, renderChart],\n  );\n\n  if (props.standalone) {\n    // dom manipulation hack to get rid of the boostrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return standaloneChartBody;\n  }\n\n  const header = (\n    <ConnectedExploreChartHeader\n      ownState={props.ownState}\n      actions={props.actions}\n      addHistory={props.addHistory}\n      can_overwrite={props.can_overwrite}\n      can_download={props.can_download}\n      isStarred={props.isStarred}\n      slice={props.slice}\n      sliceName={props.sliceName}\n      table_name={props.table_name}\n      form_data={props.form_data}\n      timeout={props.timeout}\n      chart={props.chart}\n      userId={props.userId}\n    />\n  );\n\n  const elementStyle = (dimension, elementSize, gutterSize) => ({\n    [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n  });\n\n  return (\n    <Styles className=\"panel panel-default chart-container\" ref={chartPanelRef}>\n      <div className=\"panel-heading\" ref={headerRef}>\n        {header}\n      </div>\n      {props.vizType === 'filter_box' ? (\n        panelBody\n      ) : (\n        <Split\n          sizes={splitSizes}\n          minSize={MIN_SIZES}\n          direction=\"vertical\"\n          gutterSize={gutterHeight}\n          onDragEnd={onDragEnd}\n          elementStyle={elementStyle}\n        >\n          {panelBody}\n          <DataTablesPane\n            ownState={props.ownState}\n            queryFormData={props.chart.latestQueryFormData}\n            tableSectionHeight={tableSectionHeight}\n            onCollapseChange={onCollapseChange}\n            chartStatus={props.chart.chartStatus}\n            errorMessage={props.errorMessage}\n          />\n        </Split>\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n"]},"metadata":{},"sourceType":"module"}