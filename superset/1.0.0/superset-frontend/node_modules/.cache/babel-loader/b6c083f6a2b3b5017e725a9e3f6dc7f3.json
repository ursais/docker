{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, withTheme, t } from '@superset-ui/core';\nimport { Select } from 'src/components/Select';\nimport { filterSelectStyles } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SortTitle = styled.label`\n  font-weight: bold;\n  line-height: 27px;\n  margin: 0 0.4em 0 0;\n`;\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding-top: ${({ theme }) => theme.gridUnit}px;\n  text-align: left;\n`;\nfunction StyledSelect({ onChange, options, selectStyles, theme, value }) {\n  const filterSelectTheme = {\n    spacing: {\n      baseUnit: 1,\n      fontSize: theme.typography.sizes.s,\n      minWidth: '5em' } };\n\n\n  return ___EmotionJSX(Select, { \"data-test\": \"card-sort-select\", clearable: false, onChange: onChange, options: options, stylesConfig: selectStyles, themeConfig: filterSelectTheme, value: value });\n}\nconst StyledCardSortSelect = withTheme(StyledSelect);\nexport const CardSortSelect = ({ initialSort, onChange, options, pageIndex, pageSize }) => {\n  const defaultSort = initialSort && _findInstanceProperty(options).call(options, ({ id }) => id === initialSort[0].id);\n  const [selectedOption, setSelectedOption] = useState(defaultSort || options[0]);\n  const handleOnChange = selected => {\n    setSelectedOption(selected);\n    const sortBy = [{ id: selected.id, desc: selected.desc }];\n    onChange({ pageIndex, pageSize, sortBy, filters: [] });\n  };\n  return ___EmotionJSX(SortContainer, null,\n  ___EmotionJSX(SortTitle, null, t('Sort:')),\n  ___EmotionJSX(StyledCardSortSelect, { onChange: value => handleOnChange(value), options: options, selectStyles: filterSelectStyles, value: selectedOption }));\n\n};__signature__(CardSortSelect, \"useState{[selectedOption, setSelectedOption](defaultSort || options[0])}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortTitle, \"SortTitle\", \"/app/superset-frontend/src/components/ListView/CardSortSelect.tsx\");reactHotLoader.register(SortContainer, \"SortContainer\", \"/app/superset-frontend/src/components/ListView/CardSortSelect.tsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/app/superset-frontend/src/components/ListView/CardSortSelect.tsx\");reactHotLoader.register(StyledCardSortSelect, \"StyledCardSortSelect\", \"/app/superset-frontend/src/components/ListView/CardSortSelect.tsx\");reactHotLoader.register(CardSortSelect, \"CardSortSelect\", \"/app/superset-frontend/src/components/ListView/CardSortSelect.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ListView/CardSortSelect.tsx"],"names":[],"mappings":"ybAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,MAAT,EAAiB,SAAjB,EAAgD,CAAhD,QAAyD,mBAAzD;AACA,SAA6B,MAA7B,QAA2C,uBAA3C;AAEA,SAAS,kBAAT,QAAmC,SAAnC,C;AAEA,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK;;;;AAI7B,CAJD;AAMA,MAAM,aAAa,GAAG,MAAM,CAAC,GAAG;;eAEjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;iBACrC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;;AAE7C,CALD;AAsBA,SAAS,YAAT,CAAsB,EACpB,QADoB,EAEpB,OAFoB,EAGpB,YAHoB,EAIpB,KAJoB,EAKpB,KALoB,EAAtB,EAMoB;AAClB,QAAM,iBAAiB,GAAuB;AAC5C,IAAA,OAAO,EAAE;AACP,MAAA,QAAQ,EAAE,CADH;AAEP,MAAA,QAAQ,EAAE,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAF1B;AAGP,MAAA,QAAQ,EAAE,KAHH,EADmC,EAA9C;;;AAOA,SACE,cAAC,MAAD,IACE,aAAU,kBADZ,EAEE,SAAS,EAAE,KAFb,EAGE,QAAQ,EAAE,QAHZ,EAIE,OAAO,EAAE,OAJX,EAKE,YAAY,EAAE,YALhB,EAME,WAAW,EAAE,iBANf,EAOE,KAAK,EAAE,KAPT,GADF;AAWD;AAED,MAAM,oBAAoB,GAAG,SAAS,CAAC,YAAD,CAAtC;AAEA,OAAO,MAAM,cAAc,GAAG,CAAC,EAC7B,WAD6B,EAE7B,QAF6B,EAG7B,OAH6B,EAI7B,SAJ6B,EAK7B,QAL6B,EAAD,KAMA;AAC5B,QAAM,WAAW,GACf,WAAW,IAAI,sBAAA,OAAO,MAAP,CAAA,OAAO,EAAM,CAAC,EAAE,EAAF,EAAD,KAAY,EAAE,KAAK,WAAW,CAAC,CAAD,CAAX,CAAe,EAAxC,CADxB;AAEA,QAAM,CAAC,cAAD,EAAiB,iBAAjB,IAAsC,QAAQ,CAClD,WAAW,IAAI,OAAO,CAAC,CAAD,CAD4B,CAApD;AAIA,QAAM,cAAc,GAAI,QAAD,IAAmC;AACxD,IAAA,iBAAiB,CAAC,QAAD,CAAjB;AACA,UAAM,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAf,EAAmB,IAAI,EAAE,QAAQ,CAAC,IAAlC,EAAD,CAAf;AACA,IAAA,QAAQ,CAAC,EAAE,SAAF,EAAa,QAAb,EAAuB,MAAvB,EAA+B,OAAO,EAAE,EAAxC,EAAD,CAAR;AACD,GAJD;AAMA,SACE,cAAC,aAAD;AACE,gBAAC,SAAD,QAAY,CAAC,CAAC,OAAD,CAAb,CADF;AAEE,gBAAC,oBAAD,IACE,QAAQ,EAAG,KAAD,IAAiC,cAAc,CAAC,KAAD,CAD3D,EAEE,OAAO,EAAE,OAFX,EAGE,YAAY,EAAE,kBAHhB,EAIE,KAAK,EAAE,cAJT,GAFF,CADF;;AAWD,CA9BM,C,cAAM,c,+PAzDP,S,4GAMA,a,gHAsBG,Y,+GA2BH,oB,uHAEO,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, withTheme, SupersetThemeProps, t } from '@superset-ui/core';\nimport { PartialThemeConfig, Select } from 'src/components/Select';\nimport { CardSortSelectOption, FetchDataConfig, SortColumn } from './types';\nimport { filterSelectStyles } from './utils';\n\nconst SortTitle = styled.label`\n  font-weight: bold;\n  line-height: 27px;\n  margin: 0 0.4em 0 0;\n`;\n\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding-top: ${({ theme }) => theme.gridUnit}px;\n  text-align: left;\n`;\ninterface CardViewSelectSortProps {\n  onChange: (conf: FetchDataConfig) => any;\n  options: Array<CardSortSelectOption>;\n  initialSort?: SortColumn[];\n  pageIndex: number;\n  pageSize: number;\n}\n\ninterface StyledSelectProps {\n  onChange: (value: CardSortSelectOption) => void;\n  options: CardSortSelectOption[];\n  selectStyles: any;\n  theme: SupersetThemeProps['theme'];\n  value: CardSortSelectOption;\n}\n\nfunction StyledSelect({\n  onChange,\n  options,\n  selectStyles,\n  theme,\n  value,\n}: StyledSelectProps) {\n  const filterSelectTheme: PartialThemeConfig = {\n    spacing: {\n      baseUnit: 1,\n      fontSize: theme.typography.sizes.s,\n      minWidth: '5em',\n    },\n  };\n  return (\n    <Select\n      data-test=\"card-sort-select\"\n      clearable={false}\n      onChange={onChange}\n      options={options}\n      stylesConfig={selectStyles}\n      themeConfig={filterSelectTheme}\n      value={value}\n    />\n  );\n}\n\nconst StyledCardSortSelect = withTheme(StyledSelect);\n\nexport const CardSortSelect = ({\n  initialSort,\n  onChange,\n  options,\n  pageIndex,\n  pageSize,\n}: CardViewSelectSortProps) => {\n  const defaultSort =\n    initialSort && options.find(({ id }) => id === initialSort[0].id);\n  const [selectedOption, setSelectedOption] = useState<CardSortSelectOption>(\n    defaultSort || options[0],\n  );\n\n  const handleOnChange = (selected: CardSortSelectOption) => {\n    setSelectedOption(selected);\n    const sortBy = [{ id: selected.id, desc: selected.desc }];\n    onChange({ pageIndex, pageSize, sortBy, filters: [] });\n  };\n\n  return (\n    <SortContainer>\n      <SortTitle>{t('Sort:')}</SortTitle>\n      <StyledCardSortSelect\n        onChange={(value: CardSortSelectOption) => handleOnChange(value)}\n        options={options}\n        selectStyles={filterSelectStyles}\n        value={selectedOption}\n      />\n    </SortContainer>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}