{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";var _bootstrapData$common, _bootstrapData$common2;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { sections } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst appContainer = document.getElementById('app');\nconst bootstrapData = JSON.parse(appContainer.getAttribute('data-bootstrap'));\nconst druidIsActive = !!(bootstrapData != null && (_bootstrapData$common = bootstrapData.common) != null && (_bootstrapData$common2 = _bootstrapData$common.conf) != null && _bootstrapData$common2.DRUID_IS_ACTIVE);\nconst druidSection = druidIsActive ?\n[\n[\n{\n  name: 'show_druid_time_granularity',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Druid granularity dropdown'),\n    default: false,\n    description: t('Check to include Druid granularity dropdown') } }],\n\n\n\n[\n{\n  name: 'show_druid_time_origin',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Druid time origin'),\n    default: false,\n    description: t('Check to include time origin dropdown') } }]] :\n\n\n\n\n[];const _default =\n\n{\n  controlPanelSections: [\n  sections.legacyTimeseriesTime,\n  {\n    label: t('Filters configuration'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'filter_configs',\n      config: {\n        type: 'CollectionControl',\n        label: 'Filters',\n        description: t('Filter configuration for the filter box'),\n        validators: [],\n        controlName: 'FilterBoxItemControl',\n        mapStateToProps: ({ datasource }) => ({ datasource }) } }],\n\n\n\n    [___EmotionJSX(\"hr\", null)],\n    [\n    {\n      name: 'date_filter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Date filter'),\n        default: true,\n        description: t('Whether to include a time filter') } }],\n\n\n\n    [\n    {\n      name: 'instant_filtering',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Instant filtering'),\n        renderTrigger: true,\n        default: false,\n        description: t(\n        'Check to apply filters instantly as they change instead of displaying [Apply] button') } }],\n\n\n\n\n    [\n    {\n      name: 'show_sqla_time_granularity',\n      config: {\n        type: 'CheckboxControl',\n        label: druidIsActive ?\n        t('Show SQL time grain dropdown') :\n        t('Show time grain dropdown'),\n        default: false,\n        description: druidIsActive ?\n        t('Check to include SQL time grain dropdown') :\n        t('Check to include time grain dropdown') } }],\n\n\n\n    [\n    {\n      name: 'show_sqla_time_column',\n      config: {\n        type: 'CheckboxControl',\n        label: druidIsActive ?\n        t('Show SQL time column') :\n        t('Show time column'),\n        default: false,\n        description: t('Check to include time column dropdown') } }],\n\n\n\n    ...druidSection,\n    ['adhoc_filters']] }],\n\n\n\n  controlOverrides: {\n    adhoc_filters: {\n      label: t('Limit selector values'),\n      description: t(\n      'These filters apply to the values available in the dropdowns') } } };export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(appContainer, \"appContainer\", \"/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx\");reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx\");reactHotLoader.register(druidIsActive, \"druidIsActive\", \"/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx\");reactHotLoader.register(druidSection, \"druidSection\", \"/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/visualizations/FilterBox/controlPanel.jsx"],"names":["React","t","sections","appContainer","document","getElementById","bootstrapData","JSON","parse","getAttribute","druidIsActive","common","conf","DRUID_IS_ACTIVE","druidSection","name","config","type","label","default","description","controlPanelSections","legacyTimeseriesTime","expanded","controlSetRows","validators","controlName","mapStateToProps","datasource","renderTrigger","controlOverrides","adhoc_filters"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { sections } from '@superset-ui/chart-controls';\n\nconst appContainer = document.getElementById('app');\nconst bootstrapData = JSON.parse(appContainer.getAttribute('data-bootstrap'));\nconst druidIsActive = !!bootstrapData?.common?.conf?.DRUID_IS_ACTIVE;\nconst druidSection = druidIsActive\n  ? [\n      [\n        {\n          name: 'show_druid_time_granularity',\n          config: {\n            type: 'CheckboxControl',\n            label: t('Show Druid granularity dropdown'),\n            default: false,\n            description: t('Check to include Druid granularity dropdown'),\n          },\n        },\n      ],\n      [\n        {\n          name: 'show_druid_time_origin',\n          config: {\n            type: 'CheckboxControl',\n            label: t('Show Druid time origin'),\n            default: false,\n            description: t('Check to include time origin dropdown'),\n          },\n        },\n      ],\n    ]\n  : [];\n\nexport default {\n  controlPanelSections: [\n    sections.legacyTimeseriesTime,\n    {\n      label: t('Filters configuration'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'filter_configs',\n            config: {\n              type: 'CollectionControl',\n              label: 'Filters',\n              description: t('Filter configuration for the filter box'),\n              validators: [],\n              controlName: 'FilterBoxItemControl',\n              mapStateToProps: ({ datasource }) => ({ datasource }),\n            },\n          },\n        ],\n        [<hr />],\n        [\n          {\n            name: 'date_filter',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Date filter'),\n              default: true,\n              description: t('Whether to include a time filter'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'instant_filtering',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Instant filtering'),\n              renderTrigger: true,\n              default: false,\n              description: t(\n                'Check to apply filters instantly as they change instead of displaying [Apply] button',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_sqla_time_granularity',\n            config: {\n              type: 'CheckboxControl',\n              label: druidIsActive\n                ? t('Show SQL time grain dropdown')\n                : t('Show time grain dropdown'),\n              default: false,\n              description: druidIsActive\n                ? t('Check to include SQL time grain dropdown')\n                : t('Check to include time grain dropdown'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_sqla_time_column',\n            config: {\n              type: 'CheckboxControl',\n              label: druidIsActive\n                ? t('Show SQL time column')\n                : t('Show time column'),\n              default: false,\n              description: t('Check to include time column dropdown'),\n            },\n          },\n        ],\n        ...druidSection,\n        ['adhoc_filters'],\n      ],\n    },\n  ],\n  controlOverrides: {\n    adhoc_filters: {\n      label: t('Limit selector values'),\n      description: t(\n        'These filters apply to the values available in the dropdowns',\n      ),\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}