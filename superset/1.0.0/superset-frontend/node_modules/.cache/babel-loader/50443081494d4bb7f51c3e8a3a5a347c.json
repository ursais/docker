{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { useEffect, useState } from 'react';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { useFilters, useNativeFiltersDataMask } from '../nativeFilters/FilterBar/state';\n// eslint-disable-next-line import/prefer-default-export\nexport const useNativeFilters = () => {var _getUrlParam;\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [dashboardFiltersOpen, setDashboardFiltersOpen] = useState((_getUrlParam = getUrlParam(URL_PARAMS.showFilters)) != null ? _getUrlParam : true);\n  const showNativeFilters = useSelector(state => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.show_native_filters;});\n  const canEdit = useSelector(({ dashboardInfo }) => dashboardInfo.dash_edit_perm);\n  const filters = useFilters();\n  const filterValues = _Object$values(filters);\n  const nativeFiltersEnabled = showNativeFilters &&\n  isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) && (\n  canEdit || !canEdit && filterValues.length !== 0);\n  const requiredFirstFilter = _filterInstanceProperty(filterValues).call(filterValues, ({ requiredFirst }) => requiredFirst);\n  const dataMask = useNativeFiltersDataMask();\n  const showDashboard = isInitialized ||\n  !nativeFiltersEnabled ||\n  !(nativeFiltersEnabled &&\n  requiredFirstFilter.length &&\n  _findInstanceProperty(requiredFirstFilter).call(requiredFirstFilter, ({ id }) => {var _dataMask$id, _dataMask$id$filterSt;return ((_dataMask$id = dataMask[id]) == null ? void 0 : (_dataMask$id$filterSt = _dataMask$id.filterState) == null ? void 0 : _dataMask$id$filterSt.value) === undefined;}));\n  const toggleDashboardFiltersOpen = visible => {\n    setDashboardFiltersOpen(visible != null ? visible : !dashboardFiltersOpen);\n  };\n  useEffect(() => {\n    if (filterValues.length === 0 &&\n    dashboardFiltersOpen &&\n    nativeFiltersEnabled) {\n      toggleDashboardFiltersOpen(false);\n    }\n  }, [filterValues.length]);\n  useEffect(() => {\n    if (showDashboard) {\n      setIsInitialized(true);\n    }\n  }, [showDashboard]);\n  return {\n    showDashboard,\n    dashboardFiltersOpen,\n    toggleDashboardFiltersOpen,\n    nativeFiltersEnabled };\n\n};__signature__(useNativeFilters, \"useState{[isInitialized, setIsInitialized](false)}\\nuseState{[dashboardFiltersOpen, setDashboardFiltersOpen](getUrlParam(URL_PARAMS.showFilters) ?? true)}\\nuseSelector{showNativeFilters}\\nuseSelector{canEdit}\\nuseFilters{filters}\\nuseNativeFiltersDataMask{dataMask}\\nuseEffect{}\\nuseEffect{}\", () => [useSelector, useSelector, useFilters, useNativeFiltersDataMask]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useNativeFilters, \"useNativeFilters\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/DashboardBuilder/state.ts"],"names":[],"mappings":"smBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,WAAT,EAAsB,gBAAtB,QAA8C,kBAA9C;AACA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,WAAT,QAA4B,oBAA5B;AAEA,SACE,UADF,EAEE,wBAFF,QAGO,kCAHP;AAMA;AACA,OAAO,MAAM,gBAAgB,GAAG,MAAK;AACnC,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC,oBAAD,EAAuB,uBAAvB,IAAkD,QAAQ,iBAC9D,WAAW,CAAC,UAAU,CAAC,WAAZ,CADmD,2BACvB,IADuB,CAAhE;AAGA,QAAM,iBAAiB,GAAG,WAAW,CACnC,KAAK,+DAAI,KAAK,CAAC,aAAN,CAAoB,QAAxB,qBAAI,sBAA8B,mBAAlC,EAD8B,CAArC;AAGA,QAAM,OAAO,GAAG,WAAW,CACzB,CAAC,EAAE,aAAF,EAAD,KAAuB,aAAa,CAAC,cADZ,CAA3B;AAIA,QAAM,OAAO,GAAG,UAAU,EAA1B;AACA,QAAM,YAAY,GAAG,eAAsB,OAAtB,CAArB;AAEA,QAAM,oBAAoB,GACxB,iBAAiB;AACjB,EAAA,gBAAgB,CAAC,WAAW,CAAC,wBAAb,CADhB;AAEC,EAAA,OAAO,IAAK,CAAC,OAAD,IAAY,YAAY,CAAC,MAAb,KAAwB,CAFjD,CADF;AAKA,QAAM,mBAAmB,GAAG,wBAAA,YAAY,MAAZ,CAAA,YAAY,EACtC,CAAC,EAAE,aAAF,EAAD,KAAuB,aADe,CAAxC;AAGA,QAAM,QAAQ,GAAG,wBAAwB,EAAzC;AACA,QAAM,aAAa,GACjB,aAAa;AACb,GAAC,oBADD;AAEA,IACE,oBAAoB;AACpB,EAAA,mBAAmB,CAAC,MADpB;AAEA,wBAAA,mBAAmB,MAAnB,CAAA,mBAAmB,EACjB,CAAC,EAAE,EAAF,EAAD,qDAAY,iBAAA,QAAQ,CAAC,EAAD,CAAR,2DAAc,WAAd,2CAA2B,KAA3B,MAAqC,SAAjD,EADiB,CAHrB,CAHF;AAWA,QAAM,0BAA0B,GAAI,OAAD,IAAsB;AACvD,IAAA,uBAAuB,CAAC,OAAD,WAAC,OAAD,GAAY,CAAC,oBAAb,CAAvB;AACD,GAFD;AAIA,EAAA,SAAS,CAAC,MAAK;AACb,QACE,YAAY,CAAC,MAAb,KAAwB,CAAxB;AACA,IAAA,oBADA;AAEA,IAAA,oBAHF,EAIE;AACA,MAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD;AACF,GARQ,EAQN,CAAC,YAAY,CAAC,MAAd,CARM,CAAT;AAUA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,aAAJ,EAAmB;AACjB,MAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GAJQ,EAIN,CAAC,aAAD,CAJM,CAAT;AAMA,SAAO;AACL,IAAA,aADK;AAEL,IAAA,oBAFK;AAGL,IAAA,0BAHK;AAIL,IAAA,oBAJK,EAAP;;AAMD,CA7DM,C,cAAM,gB,gTAKe,W,EAGV,W,EAIA,U,EAWC,wB,oLAvBN,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { useEffect, useState } from 'react';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { RootState } from 'src/dashboard/types';\nimport {\n  useFilters,\n  useNativeFiltersDataMask,\n} from '../nativeFilters/FilterBar/state';\nimport { Filter } from '../nativeFilters/types';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useNativeFilters = () => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [dashboardFiltersOpen, setDashboardFiltersOpen] = useState(\n    getUrlParam(URL_PARAMS.showFilters) ?? true,\n  );\n  const showNativeFilters = useSelector<RootState, boolean>(\n    state => state.dashboardInfo.metadata?.show_native_filters,\n  );\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n\n  const filters = useFilters();\n  const filterValues = Object.values<Filter>(filters);\n\n  const nativeFiltersEnabled =\n    showNativeFilters &&\n    isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n    (canEdit || (!canEdit && filterValues.length !== 0));\n\n  const requiredFirstFilter = filterValues.filter(\n    ({ requiredFirst }) => requiredFirst,\n  );\n  const dataMask = useNativeFiltersDataMask();\n  const showDashboard =\n    isInitialized ||\n    !nativeFiltersEnabled ||\n    !(\n      nativeFiltersEnabled &&\n      requiredFirstFilter.length &&\n      requiredFirstFilter.find(\n        ({ id }) => dataMask[id]?.filterState?.value === undefined,\n      )\n    );\n\n  const toggleDashboardFiltersOpen = (visible?: boolean) => {\n    setDashboardFiltersOpen(visible ?? !dashboardFiltersOpen);\n  };\n\n  useEffect(() => {\n    if (\n      filterValues.length === 0 &&\n      dashboardFiltersOpen &&\n      nativeFiltersEnabled\n    ) {\n      toggleDashboardFiltersOpen(false);\n    }\n  }, [filterValues.length]);\n\n  useEffect(() => {\n    if (showDashboard) {\n      setIsInitialized(true);\n    }\n  }, [showDashboard]);\n\n  return {\n    showDashboard,\n    dashboardFiltersOpen,\n    toggleDashboardFiltersOpen,\n    nativeFiltersEnabled,\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}