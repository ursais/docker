{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import \"core-js/modules/web.url.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _URL from \"@babel/runtime-corejs3/core-js-stable/url\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport { styled, logging } from '@superset-ui/core';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ImageContainer = styled.div`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center ${({ position }) => position};\n  display: inline-block;\n  height: calc(100% - 1px);\n  width: calc(100% - 2px);\n  margin: 1px 1px 0 1px;\n`;\nexport default function ImageLoader({ src, fallback, isLoading, position, ...rest }) {\n  const [imgSrc, setImgSrc] = React.useState(fallback);\n  useEffect(() => {\n    if (src) {\n      fetch(src).\n      then(response => response.blob()).\n      then(blob => {\n        if (/image/.test(blob.type)) {\n          const imgURL = _URL.createObjectURL(blob);\n          setImgSrc(imgURL);\n        }\n      }).\n      catch(errMsg => {\n        logging.error(errMsg);\n        setImgSrc(fallback);\n      });\n    }\n    return () => {\n      // theres a very brief period where isLoading is false and this component is about to unmount\n      // where the stale imgSrc is briefly rendered. Setting imgSrc to fallback smoothes the transition.\n      setImgSrc(fallback);\n    };\n  }, [src, fallback]);\n  return ___EmotionJSX(ImageContainer, _extends({ src: isLoading ? fallback : imgSrc }, rest, { position: position }));\n}__signature__(ImageLoader, \"useState{[imgSrc, setImgSrc](fallback)}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ImageContainer, \"ImageContainer\", \"/app/superset-frontend/src/components/ListViewCard/ImageLoader.tsx\");reactHotLoader.register(ImageLoader, \"ImageLoader\", \"/app/superset-frontend/src/components/ListViewCard/ImageLoader.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ListViewCard/ImageLoader.tsx"],"names":[],"mappings":"ggBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,SAAS,MAAT,EAAiB,OAAjB,QAAgC,mBAAhC,C;AAQA,MAAM,cAAc,GAAG,MAAM,CAAC,GAAwB;0BAC5B,CAAC,EAAE,GAAF,EAAD,KAAa,GAAG;;gCAEV,CAAC,EAAE,QAAF,EAAD,KAAkB,QAAQ;;;;;AAKzD,CARD;AAoBA,eAAc,SAAU,WAAV,CAAsB,EAClC,GADkC,EAElC,QAFkC,EAGlC,SAHkC,EAIlC,QAJkC,EAKlC,GAAG,IAL+B,EAAtB,EAMK;AACjB,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,KAAK,CAAC,QAAN,CAAuB,QAAvB,CAA5B;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,GAAJ,EAAS;AACP,MAAA,KAAK,CAAC,GAAD,CAAL;AACG,MAAA,IADH,CACQ,QAAQ,IAAI,QAAQ,CAAC,IAAT,EADpB;AAEG,MAAA,IAFH,CAEQ,IAAI,IAAG;AACX,YAAI,QAAQ,IAAR,CAAa,IAAI,CAAC,IAAlB,CAAJ,EAA6B;AAC3B,gBAAM,MAAM,GAAG,KAAI,eAAJ,CAAoB,IAApB,CAAf;AACA,UAAA,SAAS,CAAC,MAAD,CAAT;AACD;AACF,OAPH;AAQG,MAAA,KARH,CAQS,MAAM,IAAG;AACd,QAAA,OAAO,CAAC,KAAR,CAAc,MAAd;AACA,QAAA,SAAS,CAAC,QAAD,CAAT;AACD,OAXH;AAYD;AAED,WAAO,MAAK;AACV;AACA;AACA,MAAA,SAAS,CAAC,QAAD,CAAT;AACD,KAJD;AAKD,GArBQ,EAqBN,CAAC,GAAD,EAAM,QAAN,CArBM,CAAT;AAuBA,SACE,cAAC,cAAD,aACE,GAAG,EAAE,SAAS,GAAG,QAAH,GAAc,MAD9B,IAEM,IAFN,IAGE,QAAQ,EAAE,QAHZ,IADF;AAOD,C,cAvCuB,W,2OApBlB,c,kHAoBkB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport { styled, logging } from '@superset-ui/core';\n\nexport type BackgroundPosition = 'top' | 'bottom';\ninterface ImageContainerProps {\n  src: string;\n  position: BackgroundPosition;\n}\n\nconst ImageContainer = styled.div<ImageContainerProps>`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center ${({ position }) => position};\n  display: inline-block;\n  height: calc(100% - 1px);\n  width: calc(100% - 2px);\n  margin: 1px 1px 0 1px;\n`;\ninterface ImageLoaderProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  fallback: string;\n  src: string;\n  isLoading?: boolean;\n  position: BackgroundPosition;\n}\n\nexport default function ImageLoader({\n  src,\n  fallback,\n  isLoading,\n  position,\n  ...rest\n}: ImageLoaderProps) {\n  const [imgSrc, setImgSrc] = React.useState<string>(fallback);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src)\n        .then(response => response.blob())\n        .then(blob => {\n          if (/image/.test(blob.type)) {\n            const imgURL = URL.createObjectURL(blob);\n            setImgSrc(imgURL);\n          }\n        })\n        .catch(errMsg => {\n          logging.error(errMsg);\n          setImgSrc(fallback);\n        });\n    }\n\n    return () => {\n      // theres a very brief period where isLoading is false and this component is about to unmount\n      // where the stale imgSrc is briefly rendered. Setting imgSrc to fallback smoothes the transition.\n      setImgSrc(fallback);\n    };\n  }, [src, fallback]);\n\n  return (\n    <ImageContainer\n      src={isLoading ? fallback : imgSrc}\n      {...rest}\n      position={position}\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}