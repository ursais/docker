{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _Map from \"@babel/runtime-corejs3/core-js-stable/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport rison from 'rison';\nimport { SupersetClient } from '@superset-ui/core';\nimport { AsyncSelect } from 'src/components/Select';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\n/**\n * This is a special-purpose select component for when you're selecting\n * items from one of the standard Superset resource APIs.\n * Such as selecting a datasource, a chart, or users.\n *\n * If you're selecting a \"related\" resource (such as dashboard/related/owners),\n * leave the searchColumn prop unset.\n * The api doesn't do columns on related resources for some reason.\n *\n * If you're doing anything more complex than selecting a standard resource,\n * we'll all be better off if you use AsyncSelect directly instead.\n */import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst localCache = new _Map();\nexport const cachedSupersetGet = cacheWrapper(SupersetClient.get, localCache, ({ endpoint }) => endpoint || '');\nexport default function SupersetResourceSelect({ value, initialId, onChange, isMulti, resource, searchColumn, transformItem, onError, defaultOptions = true }) {\n  useEffect(() => {\n    if (initialId == null)\n    return;\n    cachedSupersetGet({\n      endpoint: `/api/v1/${resource}/${initialId}` }).\n\n    then(response => {\n      const { result } = response.json;\n      const value = transformItem ? transformItem(result) : result;\n      if (onChange)\n      onChange(value);\n    }).\n    catch(response => {\n      if ((response == null ? void 0 : response.status) === 404 && onChange)\n      onChange(undefined);\n    });\n  }, [resource, initialId]); // eslint-disable-line react-hooks/exhaustive-deps\n  function loadOptions(input) {\n    const query = searchColumn ?\n    rison.encode({\n      filters: [{ col: searchColumn, opr: 'ct', value: input }] }) :\n\n    rison.encode({ filter: value });\n    return cachedSupersetGet({\n      endpoint: `/api/v1/${resource}/?q=${query}` }).\n    then(response => {var _context, _context2;return _sortInstanceProperty(_context = _mapInstanceProperty(_context2 = response.json.result).call(_context2,\n      transformItem)).call(_context,\n      (a, b) => a.label.localeCompare(b.label));}, async badResponse => {\n      onError(await getClientErrorObject(badResponse));\n      return [];\n    });\n  }\n  return ___EmotionJSX(AsyncSelect, { value: value, onChange: onChange, isMulti: isMulti, loadOptions: loadOptions, defaultOptions: defaultOptions // true - load options on render\n    , cacheOptions: true, filterOption: null // options are filtered at the api\n  });\n}__signature__(SupersetResourceSelect, \"useEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(localCache, \"localCache\", \"/app/superset-frontend/src/components/SupersetResourceSelect/index.tsx\");reactHotLoader.register(cachedSupersetGet, \"cachedSupersetGet\", \"/app/superset-frontend/src/components/SupersetResourceSelect/index.tsx\");reactHotLoader.register(SupersetResourceSelect, \"SupersetResourceSelect\", \"/app/superset-frontend/src/components/SupersetResourceSelect/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/SupersetResourceSelect/index.tsx"],"names":[],"mappings":"mhBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAEE,oBAFF,QAGO,gCAHP;AAIA,SAAS,YAAT,QAA6B,wBAA7B;AAgBA;;;;;;;;;;;AAWG,G;AAEH,MAAM,UAAU,GAAG,UAAnB;AAEA,OAAO,MAAM,iBAAiB,GAAG,YAAY,CAC3C,cAAc,CAAC,GAD4B,EAE3C,UAF2C,EAG3C,CAAC,EAAE,QAAF,EAAD,KAAkB,QAAQ,IAAI,EAHa,CAAtC;AAMP,eAAc,SAAU,sBAAV,CAAuC,EACnD,KADmD,EAEnD,SAFmD,EAGnD,QAHmD,EAInD,OAJmD,EAKnD,QALmD,EAMnD,YANmD,EAOnD,aAPmD,EAQnD,OARmD,EASnD,cAAc,GAAG,IATkC,EAAvC,EAUsB;AAClC,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,SAAS,IAAI,IAAjB;AAAuB;AACvB,IAAA,iBAAiB,CAAC;AAChB,MAAA,QAAQ,EAAE,WAAW,QAAQ,IAAI,SAAS,EAD1B,EAAD,CAAjB;;AAGG,IAAA,IAHH,CAGQ,QAAQ,IAAG;AACf,YAAM,EAAE,MAAF,KAAa,QAAQ,CAAC,IAA5B;AACA,YAAM,KAAK,GAAG,aAAa,GAAG,aAAa,CAAC,MAAD,CAAhB,GAA2B,MAAtD;AACA,UAAI,QAAJ;AAAc,MAAA,QAAQ,CAAC,KAAD,CAAR;AACf,KAPH;AAQG,IAAA,KARH,CAQS,QAAQ,IAAG;AAChB,UAAI,CAAA,QAAQ,QAAR,YAAA,QAAQ,CAAE,MAAV,MAAqB,GAArB,IAA4B,QAAhC;AAA0C,MAAA,QAAQ,CAAC,SAAD,CAAR;AAC3C,KAVH;AAWD,GAbQ,EAaN,CAAC,QAAD,EAAW,SAAX,CAbM,CAAT,CADkC,CAcP;AAE3B,WAAS,WAAT,CAAqB,KAArB,EAAkC;AAChC,UAAM,KAAK,GAAG,YAAY;AACtB,IAAA,KAAK,CAAC,MAAN,CAAa;AACX,MAAA,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,YAAP,EAAqB,GAAG,EAAE,IAA1B,EAAgC,KAAK,EAAE,KAAvC,EAAD,CADE,EAAb,CADsB;;AAItB,IAAA,KAAK,CAAC,MAAN,CAAa,EAAE,MAAM,EAAE,KAAV,EAAb,CAJJ;AAKA,WAAO,iBAAiB,CAAC;AACvB,MAAA,QAAQ,EAAE,WAAW,QAAQ,OAAO,KAAK,EADlB,EAAD,CAAjB;AAEJ,IAAA,IAFI,CAGL,QAAQ,oCACN,kEAAA,QAAQ,CAAC,IAAT,CAAc,MAAd;AACO,MAAA,aADP;AAEQ,OAAC,CAAD,EAAc,CAAd,KAA8B,CAAC,CAAC,KAAF,CAAQ,aAAR,CAAsB,CAAC,CAAC,KAAxB,CAFtC,CADM,EAHH,EAOL,MAAM,WAAN,IAAoB;AAClB,MAAA,OAAO,CAAC,MAAM,oBAAoB,CAAC,WAAD,CAA3B,CAAP;AACA,aAAO,EAAP;AACD,KAVI,CAAP;AAYD;AAED,SACE,cAAC,WAAD,IACE,KAAK,EAAE,KADT,EAEE,QAAQ,EAAE,QAFZ,EAGE,OAAO,EAAE,OAHX,EAIE,WAAW,EAAE,WAJf,EAKE,cAAc,EAAE,cALlB,CAKkC;AALlC,MAME,YAAY,MANd,EAOE,YAAY,EAAE,IAPhB,CAOsB;AAPtB,IADF;AAWD,C,cAzDuB,sB,kMARlB,U,kHAEO,iB,yHAMW,sB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport rison from 'rison';\nimport { SupersetClient } from '@superset-ui/core';\nimport { AsyncSelect } from 'src/components/Select';\nimport {\n  ClientErrorObject,\n  getClientErrorObject,\n} from 'src/utils/getClientErrorObject';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\n\nexport type Value<V> = { value: V; label: string };\n\nexport interface SupersetResourceSelectProps<T = unknown, V = string> {\n  value?: Value<V> | null;\n  initialId?: number | string;\n  onChange?: (value?: Value<V>) => void;\n  isMulti?: boolean;\n  searchColumn?: string;\n  resource?: string; // e.g. \"dataset\", \"dashboard/related/owners\"\n  transformItem?: (item: T) => Value<V>;\n  onError: (error: ClientErrorObject) => void;\n  defaultOptions?: { value: number; label: string }[] | boolean;\n}\n\n/**\n * This is a special-purpose select component for when you're selecting\n * items from one of the standard Superset resource APIs.\n * Such as selecting a datasource, a chart, or users.\n *\n * If you're selecting a \"related\" resource (such as dashboard/related/owners),\n * leave the searchColumn prop unset.\n * The api doesn't do columns on related resources for some reason.\n *\n * If you're doing anything more complex than selecting a standard resource,\n * we'll all be better off if you use AsyncSelect directly instead.\n */\n\nconst localCache = new Map<string, any>();\n\nexport const cachedSupersetGet = cacheWrapper(\n  SupersetClient.get,\n  localCache,\n  ({ endpoint }) => endpoint || '',\n);\n\nexport default function SupersetResourceSelect<T, V>({\n  value,\n  initialId,\n  onChange,\n  isMulti,\n  resource,\n  searchColumn,\n  transformItem,\n  onError,\n  defaultOptions = true,\n}: SupersetResourceSelectProps<T, V>) {\n  useEffect(() => {\n    if (initialId == null) return;\n    cachedSupersetGet({\n      endpoint: `/api/v1/${resource}/${initialId}`,\n    })\n      .then(response => {\n        const { result } = response.json;\n        const value = transformItem ? transformItem(result) : result;\n        if (onChange) onChange(value);\n      })\n      .catch(response => {\n        if (response?.status === 404 && onChange) onChange(undefined);\n      });\n  }, [resource, initialId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function loadOptions(input: string) {\n    const query = searchColumn\n      ? rison.encode({\n          filters: [{ col: searchColumn, opr: 'ct', value: input }],\n        })\n      : rison.encode({ filter: value });\n    return cachedSupersetGet({\n      endpoint: `/api/v1/${resource}/?q=${query}`,\n    }).then(\n      response =>\n        response.json.result\n          .map(transformItem)\n          .sort((a: Value<V>, b: Value<V>) => a.label.localeCompare(b.label)),\n      async badResponse => {\n        onError(await getClientErrorObject(badResponse));\n        return [];\n      },\n    );\n  }\n\n  return (\n    <AsyncSelect\n      value={value}\n      onChange={onChange}\n      isMulti={isMulti}\n      loadOptions={loadOptions}\n      defaultOptions={defaultOptions} // true - load options on render\n      cacheOptions\n      filterOption={null} // options are filtered at the api\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}