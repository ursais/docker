{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _findIndexInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find-index\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$is from \"@babel/runtime-corejs3/core-js-stable/object/is\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t, css } from '@superset-ui/core';\nimport { Select, CreatableSelect, OnPasteSelect } from 'src/components/Select';\nimport ControlHeader from 'src/explore/components/ControlHeader';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  choices: PropTypes.array,\n  clearable: PropTypes.bool,\n  description: PropTypes.string,\n  disabled: PropTypes.bool,\n  freeForm: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  label: PropTypes.string,\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  allowAll: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  value: PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.array]),\n\n  showHeader: PropTypes.bool,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  valueKey: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  noResultsText: PropTypes.string,\n  selectRef: PropTypes.func,\n  filterOption: PropTypes.func,\n  promptTextCreator: PropTypes.func,\n  commaChoosesOption: PropTypes.bool,\n  menuPortalTarget: PropTypes.element,\n  menuPosition: PropTypes.string,\n  menuPlacement: PropTypes.string,\n  forceOverflow: PropTypes.bool };\n\n\nconst defaultProps = {\n  autoFocus: false,\n  choices: [],\n  clearable: true,\n  description: null,\n  disabled: false,\n  freeForm: false,\n  isLoading: false,\n  label: null,\n  multi: false,\n  onChange: () => {},\n  onFocus: () => {},\n  showHeader: true,\n  valueKey: 'value',\n  noResultsText: t('No results found'),\n  promptTextCreator: label => `Create Option ${label}`,\n  commaChoosesOption: true,\n  allowAll: false };\n\n\nexport default class SelectControl extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = {\n      options: this.getOptions(props),\n      value: this.props.value };\n\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.createMetaSelectAllOption = _bindInstanceProperty(_context2 = this.createMetaSelectAllOption).call(_context2, this);\n    this.select = null; // pointer to the react-select instance\n    this.getSelectRef = _bindInstanceProperty(_context3 = this.getSelectRef).call(_context3, this);\n    this.handleKeyDownForCreate = _bindInstanceProperty(_context4 = this.handleKeyDownForCreate).call(_context4, this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    nextProps.choices !== this.props.choices ||\n    nextProps.options !== this.props.options)\n    {\n      const options = this.getOptions(nextProps);\n      this.setState({ options });\n    }\n  }\n\n  // Beware: This is acting like an on-click instead of an on-change\n  // (firing every time user chooses vs firing only if a new option is chosen).\n  onChange(opt, actionMeta) {\n    let optionValue = this.props.multi ? [] : null;\n    if (opt) {\n      if (this.props.multi) {\n        _forEachInstanceProperty(opt).call(opt, o => {\n          // select all options\n          if (o.meta === true) {var _context5, _context6;\n            optionValue = _mapInstanceProperty(_context5 = _filterInstanceProperty(_context6 = this.getOptions(this.props)).call(_context6,\n            x => !x.meta)).call(_context5,\n            x => x[this.props.valueKey]);\n            return;\n          }\n          optionValue.push(o[this.props.valueKey] || o);\n        });\n      } else if (opt.meta === true) {\n        return;\n      } else {\n        optionValue = opt[this.props.valueKey];\n      }\n    }\n    // will eventually call `exploreReducer`: SET_FIELD_VALUE\n    this.props.onChange(optionValue, [], actionMeta);\n  }\n\n  getSelectRef(instance) {\n    this.select = instance;\n    if (this.props.selectRef) {\n      this.props.selectRef(instance);\n    }\n  }\n\n  getOptions(props) {\n    let options = [];\n    if (props.options) {var _context7;\n      options = _mapInstanceProperty(_context7 = props.options).call(_context7, x => x);\n    } else if (props.choices) {var _context8;\n      // Accepts different formats of input\n      options = _mapInstanceProperty(_context8 = props.choices).call(_context8, c => {\n        if (_Array$isArray(c)) {\n          const [value, label] = c.length > 1 ? c : [c[0], c[0]];\n          return { label, [props.valueKey]: value };\n        }\n        if (_Object$is(c)) {\n          return c;\n        }\n        return { label: c, [props.valueKey]: c };\n      });\n    }\n    // For FreeFormSelect, insert newly created values into options\n    if (props.freeForm && props.value) {\n      const existingOptionValues = new _Set(_mapInstanceProperty(options).call(options, c => c[props.valueKey]));\n      const selectedValues = _Array$isArray(props.value) ?\n      props.value :\n      [props.value];\n      _forEachInstanceProperty(selectedValues).call(selectedValues, v => {\n        if (!existingOptionValues.has(v)) {\n          // place the newly created options at the top\n          options.unshift({ label: v, [props.valueKey]: v });\n        }\n      });\n    }\n    if (props.allowAll === true && props.multi === true) {\n      if (!this.optionsIncludesSelectAll(options)) {\n        options.unshift(this.createMetaSelectAllOption());\n      }\n    } else {\n      options = _filterInstanceProperty(options).call(options, o => !this.isMetaSelectAllOption(o));\n    }\n    return options;\n  }\n\n  handleKeyDownForCreate(event) {\n    const { key } = event;\n    if (key === 'Tab' || this.props.commaChoosesOption && key === ',') {\n      // simulate an Enter event\n      if (this.select) {\n        this.select.onKeyDown({ ...event, key: 'Enter' });\n      }\n    }\n  }\n\n  isMetaSelectAllOption(o) {\n    return o.meta && o.meta === true && o.label === 'Select all';\n  }\n\n  optionsIncludesSelectAll(o) {\n    return _findIndexInstanceProperty(o).call(o, o => this.isMetaSelectAllOption(o)) >= 0;\n  }\n\n  optionsRemaining() {\n    const { options } = this.state;\n    const { value } = this.props;\n    // if select is multi/value is array, we show the options not selected\n    let remainingOptions = _Array$isArray(value) ?\n    options.length - value.length :\n    options.length;\n    if (this.optionsIncludesSelectAll(options)) {\n      remainingOptions -= 1;\n    }\n    return remainingOptions < 0 ? 0 : remainingOptions;\n  }\n\n  createMetaSelectAllOption() {\n    const option = { label: 'Select all', meta: true };\n    option[this.props.valueKey] = 'Select all';\n    return option;\n  }\n\n  render() {\n    //  Tab, comma or Enter will trigger a new option created for FreeFormSelect\n    const {\n      autoFocus,\n      clearable,\n      disabled,\n      filterOption,\n      isLoading,\n      label,\n      menuPlacement,\n      name,\n      noResultsText,\n      onFocus,\n      optionRenderer,\n      promptTextCreator,\n      value,\n      valueKey,\n      valueRenderer,\n      forceOverflow,\n      menuPortalTarget,\n      menuPosition } =\n    this.props;\n\n    const optionsRemaining = this.optionsRemaining();\n    const optionRemaingText = optionsRemaining ?\n    t('%s option(s)', optionsRemaining) :\n    '';\n    const placeholder = this.props.placeholder || optionRemaingText;\n    const isMulti = this.props.isMulti || this.props.multi;\n\n    let assistiveText;\n    if (\n    isMulti &&\n    optionsRemaining &&\n    _Array$isArray(this.state.value) &&\n    _Array$isArray(value) &&\n    !!value.length)\n    {\n      assistiveText = optionRemaingText;\n    }\n\n    const selectProps = {\n      autoFocus,\n      'aria-label': label,\n      clearable,\n      disabled,\n      filterOption,\n      ignoreAccents: false,\n      isLoading,\n      isMulti,\n      labelKey: 'label',\n      menuPlacement,\n      forceOverflow,\n      menuPortalTarget,\n      menuPosition,\n      name: `select-${name}`,\n      noResultsText,\n      onChange: this.onChange,\n      onFocus,\n      optionRenderer,\n      value,\n      options: this.state.options,\n      placeholder,\n      assistiveText,\n      promptTextCreator,\n      selectRef: this.getSelectRef,\n      valueKey,\n      valueRenderer };\n\n\n    let SelectComponent;\n    if (this.props.freeForm) {\n      SelectComponent = CreatableSelect;\n      // Don't create functions in `render` because React relies on shallow\n      // compare to decide weathere to rerender child components.\n      selectProps.onKeyDown = this.handleKeyDownForCreate;\n    } else {\n      SelectComponent = Select;\n    }\n\n    return (\n      ___EmotionJSX(\"div\", {\n        css: theme => css`\n          .type-label {\n            margin-right: ${theme.gridUnit * 2}px;\n          }\n        ` },\n\n      this.props.showHeader && ___EmotionJSX(ControlHeader, this.props),\n      isMulti ?\n      ___EmotionJSX(OnPasteSelect, _extends({}, selectProps, { selectWrap: SelectComponent })) :\n\n      ___EmotionJSX(SelectComponent, selectProps)));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSelectControl.propTypes = propTypes;\nSelectControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/SelectControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/SelectControl.jsx\");reactHotLoader.register(SelectControl, \"SelectControl\", \"/app/superset-frontend/src/explore/components/controls/SelectControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/SelectControl.jsx"],"names":["React","PropTypes","t","css","Select","CreatableSelect","OnPasteSelect","ControlHeader","propTypes","autoFocus","bool","choices","array","clearable","description","string","disabled","freeForm","isLoading","label","multi","isMulti","allowAll","name","isRequired","onChange","func","onFocus","value","oneOfType","number","showHeader","optionRenderer","valueRenderer","valueKey","options","placeholder","noResultsText","selectRef","filterOption","promptTextCreator","commaChoosesOption","menuPortalTarget","element","menuPosition","menuPlacement","forceOverflow","defaultProps","SelectControl","PureComponent","constructor","props","state","getOptions","createMetaSelectAllOption","select","getSelectRef","handleKeyDownForCreate","UNSAFE_componentWillReceiveProps","nextProps","setState","opt","actionMeta","optionValue","o","meta","x","push","instance","c","length","existingOptionValues","selectedValues","v","has","unshift","optionsIncludesSelectAll","isMetaSelectAllOption","event","key","onKeyDown","optionsRemaining","remainingOptions","option","render","optionRemaingText","assistiveText","selectProps","ignoreAccents","labelKey","SelectComponent","theme","gridUnit"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t, css } from '@superset-ui/core';\nimport { Select, CreatableSelect, OnPasteSelect } from 'src/components/Select';\nimport ControlHeader from 'src/explore/components/ControlHeader';\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  choices: PropTypes.array,\n  clearable: PropTypes.bool,\n  description: PropTypes.string,\n  disabled: PropTypes.bool,\n  freeForm: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  label: PropTypes.string,\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  allowAll: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  showHeader: PropTypes.bool,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  valueKey: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  noResultsText: PropTypes.string,\n  selectRef: PropTypes.func,\n  filterOption: PropTypes.func,\n  promptTextCreator: PropTypes.func,\n  commaChoosesOption: PropTypes.bool,\n  menuPortalTarget: PropTypes.element,\n  menuPosition: PropTypes.string,\n  menuPlacement: PropTypes.string,\n  forceOverflow: PropTypes.bool,\n};\n\nconst defaultProps = {\n  autoFocus: false,\n  choices: [],\n  clearable: true,\n  description: null,\n  disabled: false,\n  freeForm: false,\n  isLoading: false,\n  label: null,\n  multi: false,\n  onChange: () => {},\n  onFocus: () => {},\n  showHeader: true,\n  valueKey: 'value',\n  noResultsText: t('No results found'),\n  promptTextCreator: label => `Create Option ${label}`,\n  commaChoosesOption: true,\n  allowAll: false,\n};\n\nexport default class SelectControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: this.getOptions(props),\n      value: this.props.value,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.createMetaSelectAllOption = this.createMetaSelectAllOption.bind(this);\n    this.select = null; // pointer to the react-select instance\n    this.getSelectRef = this.getSelectRef.bind(this);\n    this.handleKeyDownForCreate = this.handleKeyDownForCreate.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.choices !== this.props.choices ||\n      nextProps.options !== this.props.options\n    ) {\n      const options = this.getOptions(nextProps);\n      this.setState({ options });\n    }\n  }\n\n  // Beware: This is acting like an on-click instead of an on-change\n  // (firing every time user chooses vs firing only if a new option is chosen).\n  onChange(opt, actionMeta) {\n    let optionValue = this.props.multi ? [] : null;\n    if (opt) {\n      if (this.props.multi) {\n        opt.forEach(o => {\n          // select all options\n          if (o.meta === true) {\n            optionValue = this.getOptions(this.props)\n              .filter(x => !x.meta)\n              .map(x => x[this.props.valueKey]);\n            return;\n          }\n          optionValue.push(o[this.props.valueKey] || o);\n        });\n      } else if (opt.meta === true) {\n        return;\n      } else {\n        optionValue = opt[this.props.valueKey];\n      }\n    }\n    // will eventually call `exploreReducer`: SET_FIELD_VALUE\n    this.props.onChange(optionValue, [], actionMeta);\n  }\n\n  getSelectRef(instance) {\n    this.select = instance;\n    if (this.props.selectRef) {\n      this.props.selectRef(instance);\n    }\n  }\n\n  getOptions(props) {\n    let options = [];\n    if (props.options) {\n      options = props.options.map(x => x);\n    } else if (props.choices) {\n      // Accepts different formats of input\n      options = props.choices.map(c => {\n        if (Array.isArray(c)) {\n          const [value, label] = c.length > 1 ? c : [c[0], c[0]];\n          return { label, [props.valueKey]: value };\n        }\n        if (Object.is(c)) {\n          return c;\n        }\n        return { label: c, [props.valueKey]: c };\n      });\n    }\n    // For FreeFormSelect, insert newly created values into options\n    if (props.freeForm && props.value) {\n      const existingOptionValues = new Set(options.map(c => c[props.valueKey]));\n      const selectedValues = Array.isArray(props.value)\n        ? props.value\n        : [props.value];\n      selectedValues.forEach(v => {\n        if (!existingOptionValues.has(v)) {\n          // place the newly created options at the top\n          options.unshift({ label: v, [props.valueKey]: v });\n        }\n      });\n    }\n    if (props.allowAll === true && props.multi === true) {\n      if (!this.optionsIncludesSelectAll(options)) {\n        options.unshift(this.createMetaSelectAllOption());\n      }\n    } else {\n      options = options.filter(o => !this.isMetaSelectAllOption(o));\n    }\n    return options;\n  }\n\n  handleKeyDownForCreate(event) {\n    const { key } = event;\n    if (key === 'Tab' || (this.props.commaChoosesOption && key === ',')) {\n      // simulate an Enter event\n      if (this.select) {\n        this.select.onKeyDown({ ...event, key: 'Enter' });\n      }\n    }\n  }\n\n  isMetaSelectAllOption(o) {\n    return o.meta && o.meta === true && o.label === 'Select all';\n  }\n\n  optionsIncludesSelectAll(o) {\n    return o.findIndex(o => this.isMetaSelectAllOption(o)) >= 0;\n  }\n\n  optionsRemaining() {\n    const { options } = this.state;\n    const { value } = this.props;\n    // if select is multi/value is array, we show the options not selected\n    let remainingOptions = Array.isArray(value)\n      ? options.length - value.length\n      : options.length;\n    if (this.optionsIncludesSelectAll(options)) {\n      remainingOptions -= 1;\n    }\n    return remainingOptions < 0 ? 0 : remainingOptions;\n  }\n\n  createMetaSelectAllOption() {\n    const option = { label: 'Select all', meta: true };\n    option[this.props.valueKey] = 'Select all';\n    return option;\n  }\n\n  render() {\n    //  Tab, comma or Enter will trigger a new option created for FreeFormSelect\n    const {\n      autoFocus,\n      clearable,\n      disabled,\n      filterOption,\n      isLoading,\n      label,\n      menuPlacement,\n      name,\n      noResultsText,\n      onFocus,\n      optionRenderer,\n      promptTextCreator,\n      value,\n      valueKey,\n      valueRenderer,\n      forceOverflow,\n      menuPortalTarget,\n      menuPosition,\n    } = this.props;\n\n    const optionsRemaining = this.optionsRemaining();\n    const optionRemaingText = optionsRemaining\n      ? t('%s option(s)', optionsRemaining)\n      : '';\n    const placeholder = this.props.placeholder || optionRemaingText;\n    const isMulti = this.props.isMulti || this.props.multi;\n\n    let assistiveText;\n    if (\n      isMulti &&\n      optionsRemaining &&\n      Array.isArray(this.state.value) &&\n      Array.isArray(value) &&\n      !!value.length\n    ) {\n      assistiveText = optionRemaingText;\n    }\n\n    const selectProps = {\n      autoFocus,\n      'aria-label': label,\n      clearable,\n      disabled,\n      filterOption,\n      ignoreAccents: false,\n      isLoading,\n      isMulti,\n      labelKey: 'label',\n      menuPlacement,\n      forceOverflow,\n      menuPortalTarget,\n      menuPosition,\n      name: `select-${name}`,\n      noResultsText,\n      onChange: this.onChange,\n      onFocus,\n      optionRenderer,\n      value,\n      options: this.state.options,\n      placeholder,\n      assistiveText,\n      promptTextCreator,\n      selectRef: this.getSelectRef,\n      valueKey,\n      valueRenderer,\n    };\n\n    let SelectComponent;\n    if (this.props.freeForm) {\n      SelectComponent = CreatableSelect;\n      // Don't create functions in `render` because React relies on shallow\n      // compare to decide weathere to rerender child components.\n      selectProps.onKeyDown = this.handleKeyDownForCreate;\n    } else {\n      SelectComponent = Select;\n    }\n\n    return (\n      <div\n        css={theme => css`\n          .type-label {\n            margin-right: ${theme.gridUnit * 2}px;\n          }\n        `}\n      >\n        {this.props.showHeader && <ControlHeader {...this.props} />}\n        {isMulti ? (\n          <OnPasteSelect {...selectProps} selectWrap={SelectComponent} />\n        ) : (\n          <SelectComponent {...selectProps} />\n        )}\n      </div>\n    );\n  }\n}\n\nSelectControl.propTypes = propTypes;\nSelectControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}