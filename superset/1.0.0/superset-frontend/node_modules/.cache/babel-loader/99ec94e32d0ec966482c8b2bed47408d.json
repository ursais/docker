{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { t, SupersetClient, makeApi, styled } from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport Button from 'src/components/Button';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport RecipientIcon from 'src/views/CRUD/alert/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport { useListViewResource, useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport AlertReportModal from './AlertReportModal';\nimport { AlertState } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst deleteAlerts = makeApi({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/' });\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\nfunction AlertList({ addDangerToast, isReportEnabled = false, user, addSuccessToast }) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initalFilters = useMemo(() => [\n  {\n    id: 'type',\n    operator: FilterOperator.equals,\n    value: isReportEnabled ? 'Report' : 'Alert' }],\n\n  [isReportEnabled]);\n  const { state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('report', t('reports'), addDangerToast, true, undefined, initalFilters);\n  const { updateResource } = useSingleViewResource('report', t('reports'), addDangerToast);\n  const [alertModalOpen, setAlertModalOpen] = useState(false);\n  const [currentAlert, setCurrentAlert] = useState(null);\n  const [currentAlertDeleting, setCurrentAlertDeleting] = useState(null);\n  // Actions\n  function handleAlertEdit(alert) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n  const handleAlertDelete = ({ id, name }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}` }).\n    then(() => {\n      refreshData();\n      setCurrentAlertDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkAlertDelete = async alertsToDelete => {\n    try {\n      const { message } = await deleteAlerts(_mapInstanceProperty(alertsToDelete).call(alertsToDelete, ({ id }) => id));\n      refreshData();\n      addSuccessToast(message);\n    }\n    catch (e) {\n      createErrorHandler(errMsg => addDangerToast(t('There was an issue deleting the selected %s: %s', titlePlural, errMsg)))(e);\n    }\n  };\n  const initialSort = [{ id: 'name', desc: true }];\n  const toggleActive = (data, checked) => {\n    if (data && data.id) {\n      const update_id = data.id;\n      updateResource(update_id, { active: checked }).then(() => {\n        refreshData();\n      });\n    }\n  };\n  const columns = useMemo(() => [\n  {\n    Cell: ({ row: { original: { last_state: lastState } } }) => ___EmotionJSX(AlertStatusIcon, { state: lastState, isReportEnabled: isReportEnabled }),\n    accessor: 'last_state',\n    size: 'xs',\n    disableSortBy: true },\n\n  {\n    Cell: ({ row: { original: { last_eval_dttm: lastEvalDttm } } }) => lastEvalDttm ?\n    moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE) :\n    '',\n    accessor: 'last_eval_dttm',\n    Header: t('Last run'),\n    size: 'lg' },\n\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    size: 'xl' },\n\n  {\n    Header: t('Schedule'),\n    accessor: 'crontab_humanized',\n    size: 'xl',\n    Cell: ({ row: { original: { crontab_humanized = '' } } }) => ___EmotionJSX(Tooltip, { title: crontab_humanized, placement: \"topLeft\" },\n    ___EmotionJSX(\"span\", null, crontab_humanized)) },\n\n\n  {\n    Cell: ({ row: { original: { recipients } } }) => _mapInstanceProperty(recipients).call(recipients, r => ___EmotionJSX(RecipientIcon, { key: r.id, type: r.type })),\n    accessor: 'recipients',\n    Header: t('Notification method'),\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    accessor: 'created_by',\n    disableSortBy: true,\n    hidden: true,\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original: { owners = [] } } }) => ___EmotionJSX(FacePile, { users: owners }),\n    Header: t('Owners'),\n    id: 'owners',\n    disableSortBy: true,\n    size: 'xl' },\n\n  {\n    Cell: ({ row: { original } }) => ___EmotionJSX(Switch, { \"data-test\": \"toggle-active\", checked: original.active, onClick: checked => toggleActive(original, checked), size: \"small\" }),\n    Header: t('Active'),\n    accessor: 'active',\n    id: 'active',\n    size: 'xl' },\n\n  {\n    Cell: __signature__(({ row: { original } }) => {var _context;\n      const history = useHistory();\n      const handleEdit = () => handleAlertEdit(original);\n      const handleDelete = () => setCurrentAlertDeleting(original);\n      const handleGotoExecutionLog = () => history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n      const actions = _filterInstanceProperty(_context = [\n      canEdit ?\n      {\n        label: 'execution-log-action',\n        tooltip: t('Execution log'),\n        placement: 'bottom',\n        icon: 'Note',\n        onClick: handleGotoExecutionLog } :\n\n      null,\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit } :\n\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete } :\n\n      null]).call(_context,\n      item => item !== null);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    }, \"useHistory{history}\", () => [useHistory]),\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true,\n    size: 'xl' }],\n\n  [canDelete, canEdit, isReportEnabled]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title),\n\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      } });\n\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle' });\n\n  }\n  const EmptyStateButton = ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: () => handleAlertEdit(null) },\n  ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title);\n\n  const emptyState = {\n    message: t('No %s yet', titlePlural),\n    slot: canCreate ? EmptyStateButton : null };\n\n  const filters = useMemo(() => [\n  {\n    Header: t('Created by'),\n    id: 'created_by',\n    input: 'select',\n    operator: FilterOperator.relationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('report', 'created_by', createErrorHandler(errMsg => t('An error occurred while fetching created by values: %s', errMsg)), user.userId),\n    paginate: true },\n\n  {\n    Header: t('Status'),\n    id: 'last_state',\n    input: 'select',\n    operator: FilterOperator.equals,\n    unfilteredLabel: 'Any',\n    selects: [\n    { label: t(`${AlertState.success}`), value: AlertState.success },\n    { label: t(`${AlertState.working}`), value: AlertState.working },\n    { label: t(`${AlertState.error}`), value: AlertState.error },\n    { label: t(`${AlertState.noop}`), value: AlertState.noop },\n    { label: t(`${AlertState.grace}`), value: AlertState.grace }] },\n\n\n  {\n    Header: t('Search'),\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.contains }],\n\n  []);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: pathName, name: t('Alerts & reports'), tabs: [\n    {\n      name: 'Alerts',\n      label: t('Alerts'),\n      url: '/alert/list/',\n      usesRouter: true,\n      'data-test': 'alert-list' },\n\n    {\n      name: 'Reports',\n      label: t('Reports'),\n      url: '/report/list/',\n      usesRouter: true,\n      'data-test': 'report-list' }],\n\n    buttons: subMenuButtons },\n  ___EmotionJSX(RefreshContainer, null,\n  ___EmotionJSX(LastUpdated, { updatedAt: lastFetched, update: () => refreshData() }))),\n\n\n  ___EmotionJSX(AlertReportModal, { alert: currentAlert, addDangerToast: addDangerToast, layer: currentAlert, onHide: () => {\n      setAlertModalOpen(false);\n      setCurrentAlert(null);\n      refreshData();\n    }, show: alertModalOpen, isReport: isReportEnabled }),\n  currentAlertDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete %s.', currentAlertDeleting.name), onConfirm: () => {\n      if (currentAlertDeleting) {\n        handleAlertDelete(currentAlertDeleting);\n      }\n    }, onHide: () => setCurrentAlertDeleting(null), open: true, title: t('Delete %s?', title) }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected %s?', titlePlural), onConfirm: handleBulkAlertDelete },\n  confirmDelete => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }] :\n\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"alerts-list-view\", columns: columns, count: alertsCount, data: alerts, emptyState: emptyState, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, pageSize: PAGE_SIZE });\n  }));\n\n\n}__signature__(AlertList, \"useMemo{initalFilters}\\nuseListViewResource{{ state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched, }, hasPerm, fetchData, refreshData, toggleBulkSelect, }}\\nuseSingleViewResource{{ updateResource }}\\nuseState{[alertModalOpen, setAlertModalOpen](false)}\\nuseState{[currentAlert, setCurrentAlert](null)}\\nuseState{[currentAlertDeleting, setCurrentAlertDeleting,](null)}\\nuseEffect{}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useSingleViewResource]);const _default =\nwithToasts(AlertList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx\");reactHotLoader.register(deleteAlerts, \"deleteAlerts\", \"/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx\");reactHotLoader.register(RefreshContainer, \"RefreshContainer\", \"/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx\");reactHotLoader.register(AlertList, \"AlertList\", \"/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/alert/AlertList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { t, SupersetClient, makeApi, styled } from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport Button from 'src/components/Button';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/components/Menu/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport AlertStatusIcon from 'src/views/CRUD/alert/components/AlertStatusIcon';\nimport RecipientIcon from 'src/views/CRUD/alert/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\n\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport AlertReportModal from './AlertReportModal';\nimport { AlertObject, AlertState } from './types';\n\nconst PAGE_SIZE = 25;\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initalFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initalFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [\n    currentAlertDeleting,\n    setCurrentAlertDeleting,\n  ] = useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = (data: AlertObject, checked: boolean) => {\n    if (data && data.id) {\n      const update_id = data.id;\n      updateResource(update_id, { active: checked }).then(() => {\n        refreshData();\n      });\n    }\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '' },\n          },\n        }: any) => (\n          <Tooltip title={crontab_humanized} placement=\"topLeft\">\n            <span>{crontab_humanized}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        accessor: 'created_by',\n        disableSortBy: true,\n        hidden: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => (\n          <Switch\n            data-test=\"toggle-active\"\n            checked={original.active}\n            onClick={(checked: boolean) => toggleActive(original, checked)}\n            size=\"small\"\n          />\n        ),\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const EmptyStateButton = (\n    <Button buttonStyle=\"primary\" onClick={() => handleAlertEdit(null)}>\n      <i className=\"fa fa-plus\" /> {title}\n    </Button>\n  );\n\n  const emptyState = {\n    message: t('No %s yet', titlePlural),\n    slot: canCreate ? EmptyStateButton : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'report',\n          'created_by',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching created by values: %s', errMsg),\n          ),\n          user.userId,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          { label: t(`${AlertState.success}`), value: AlertState.success },\n          { label: t(`${AlertState.working}`), value: AlertState.working },\n          { label: t(`${AlertState.error}`), value: AlertState.error },\n          { label: t(`${AlertState.noop}`), value: AlertState.noop },\n          { label: t(`${AlertState.grace}`), value: AlertState.grace },\n        ],\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={t('Alerts & reports')}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}