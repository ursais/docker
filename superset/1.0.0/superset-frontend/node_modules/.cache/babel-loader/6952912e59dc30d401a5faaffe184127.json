{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { TABS_TYPE } from './componentTypes';\nimport { DASHBOARD_ROOT_ID } from './constants';\n\nexport default function findFirstParentContainerId(layout = {}) {\n  // DASHBOARD_GRID_TYPE or TABS_TYPE?\n  let parent = layout[DASHBOARD_ROOT_ID];\n  if (\n  parent &&\n  parent.children.length &&\n  layout[parent.children[0]].type === TABS_TYPE)\n  {\n    const tabs = layout[parent.children[0]];\n    parent = layout[tabs.children[0]];\n  } else {\n    parent = layout[parent.children[0]];\n  }\n\n  return parent.id;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(findFirstParentContainerId, \"findFirstParentContainerId\", \"/app/superset-frontend/src/dashboard/util/findFirstParentContainer.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/findFirstParentContainer.js"],"names":["TABS_TYPE","DASHBOARD_ROOT_ID","findFirstParentContainerId","layout","parent","children","length","type","tabs","id"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,eAAe,SAASC,0BAAT,CAAoCC,MAAM,GAAG,EAA7C,EAAiD;AAC9D;AACA,MAAIC,MAAM,GAAGD,MAAM,CAACF,iBAAD,CAAnB;AACA;AACEG,EAAAA,MAAM;AACNA,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MADhB;AAEAH,EAAAA,MAAM,CAACC,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAD,CAAN,CAA2BE,IAA3B,KAAoCP,SAHtC;AAIE;AACA,UAAMQ,IAAI,GAAGL,MAAM,CAACC,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAD,CAAnB;AACAD,IAAAA,MAAM,GAAGD,MAAM,CAACK,IAAI,CAACH,QAAL,CAAc,CAAd,CAAD,CAAf;AACD,GAPD,MAOO;AACLD,IAAAA,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAD,CAAf;AACD;;AAED,SAAOD,MAAM,CAACK,EAAd;AACD,C,iLAfuBP,0B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { TABS_TYPE } from './componentTypes';\nimport { DASHBOARD_ROOT_ID } from './constants';\n\nexport default function findFirstParentContainerId(layout = {}) {\n  // DASHBOARD_GRID_TYPE or TABS_TYPE?\n  let parent = layout[DASHBOARD_ROOT_ID];\n  if (\n    parent &&\n    parent.children.length &&\n    layout[parent.children[0]].type === TABS_TYPE\n  ) {\n    const tabs = layout[parent.children[0]];\n    parent = layout[tabs.children[0]];\n  } else {\n    parent = layout[parent.children[0]];\n  }\n\n  return parent.id;\n}\n"]},"metadata":{},"sourceType":"module"}