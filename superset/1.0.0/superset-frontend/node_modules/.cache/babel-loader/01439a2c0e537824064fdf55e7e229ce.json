{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {} })\n{\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const editingList = activeFilterField ?\n  [activeFilterField] :\n  checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId });\n\n  const checkedChartIdSet = new _Set();\n  _forEachInstanceProperty(editingList).call(editingList, filterField => {var _context;\n    _forEachInstanceProperty(_context = filterScopeMap[filterField].checked || []).call(_context, chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key] ?\n  filterScopeMap[key].expanded :\n  getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded } };\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildFilterScopeTreeEntry, \"buildFilterScopeTreeEntry\", \"/app/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js"],"names":["getFilterScopeNodesTree","getFilterScopeParentNodes","getKeyForFilterScopeTree","getSelectedChartIdForFilterScopeTree","buildFilterScopeTreeEntry","checkedFilterFields","activeFilterField","filterScopeMap","layout","key","editingList","selectedChartId","nodes","components","filterFields","checkedChartIdSet","filterField","checked","chartId","add","expanded","nodesFiltered"],"mappings":"6fAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,uBAAP,MAAoC,2BAApC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,oCAAP,MAAiD,wCAAjD;;AAEA,eAAe,SAASC,yBAAT,CAAmC;AAChDC,EAAAA,mBAAmB,GAAG,EAD0B;AAEhDC,EAAAA,iBAFgD;AAGhDC,EAAAA,cAAc,GAAG,EAH+B;AAIhDC,EAAAA,MAAM,GAAG,EAJuC,EAAnC;AAKZ;AACD,QAAMC,GAAG,GAAGP,wBAAwB,CAAC;AACnCG,IAAAA,mBADmC;AAEnCC,IAAAA,iBAFmC,EAAD,CAApC;;AAIA,QAAMI,WAAW,GAAGJ,iBAAiB;AACjC,GAACA,iBAAD,CADiC;AAEjCD,EAAAA,mBAFJ;AAGA,QAAMM,eAAe,GAAGR,oCAAoC,CAAC;AAC3DE,IAAAA,mBAD2D;AAE3DC,IAAAA,iBAF2D,EAAD,CAA5D;;AAIA,QAAMM,KAAK,GAAGZ,uBAAuB,CAAC;AACpCa,IAAAA,UAAU,EAAEL,MADwB;AAEpCM,IAAAA,YAAY,EAAEJ,WAFsB;AAGpCC,IAAAA,eAHoC,EAAD,CAArC;;AAKA,QAAMI,iBAAiB,GAAG,UAA1B;AACA,2BAAAL,WAAW,MAAX,CAAAA,WAAW,EAASM,WAAW,IAAI;AACjC,wCAACT,cAAc,CAACS,WAAD,CAAd,CAA4BC,OAA5B,IAAuC,EAAxC,iBAAoDC,OAAO,IAAI;AAC7DH,MAAAA,iBAAiB,CAACI,GAAlB,CAAuB,GAAED,OAAQ,IAAGF,WAAY,EAAhD;AACD,KAFD;AAGD,GAJU,CAAX;AAKA,QAAMC,OAAO,GAAG,CAAC,GAAGF,iBAAJ,CAAhB;AACA,QAAMK,QAAQ,GAAGb,cAAc,CAACE,GAAD,CAAd;AACbF,EAAAA,cAAc,CAACE,GAAD,CAAd,CAAoBW,QADP;AAEbnB,EAAAA,yBAAyB,CAACW,KAAD,EAAQ,CAAR,CAF7B;;AAIA,SAAO;AACL,KAACH,GAAD,GAAO;AACLG,MAAAA,KADK;AAELS,MAAAA,aAAa,EAAE,CAAC,GAAGT,KAAJ,CAFV;AAGLK,MAAAA,OAHK;AAILG,MAAAA,QAJK,EADF,EAAP;;;AAQD,C,iLAzCuBhB,yB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {},\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const editingList = activeFilterField\n    ? [activeFilterField]\n    : checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId,\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach(filterField => {\n    (filterScopeMap[filterField].checked || []).forEach(chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key]\n    ? filterScopeMap[key].expanded\n    : getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}