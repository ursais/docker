{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport { Input } from 'src/common/components';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  title: PropTypes.shape({\n    label: PropTypes.string,\n    hasCustomLabel: PropTypes.bool }),\n\n  onChange: PropTypes.func.isRequired,\n  isEditDisabled: PropTypes.bool };\n\n\nexport default class AdhocMetricEditPopoverTitle extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    this.onMouseOver = _bindInstanceProperty(_context = this.onMouseOver).call(_context, this);\n    this.onMouseOut = _bindInstanceProperty(_context2 = this.onMouseOut).call(_context2, this);\n    this.onClick = _bindInstanceProperty(_context3 = this.onClick).call(_context3, this);\n    this.onBlur = _bindInstanceProperty(_context4 = this.onBlur).call(_context4, this);\n    this.onInputBlur = _bindInstanceProperty(_context5 = this.onInputBlur).call(_context5, this);\n    this.state = {\n      isHovered: false,\n      isEditMode: false };\n\n  }\n\n  onMouseOver() {\n    this.setState({ isHovered: true });\n  }\n\n  onMouseOut() {\n    this.setState({ isHovered: false });\n  }\n\n  onClick() {\n    this.setState({ isEditMode: true });\n  }\n\n  onBlur() {\n    this.setState({ isEditMode: false });\n  }\n\n  onInputBlur(e) {\n    if (e.target.value === '') {\n      this.props.onChange(e);\n    }\n    this.onBlur();\n  }\n\n  render() {\n    const { title, onChange, isEditDisabled } = this.props;\n    const defaultLabel = t('My metric');\n\n    if (isEditDisabled) {\n      return (\n        ___EmotionJSX(\"span\", { \"data-test\": \"AdhocMetricTitle\" }, title.label || defaultLabel));\n\n    }\n\n    return this.state.isEditMode ?\n    ___EmotionJSX(Input, {\n      className: \"metric-edit-popover-label-input\",\n      type: \"text\",\n      placeholder: title.label,\n      value: title.hasCustomLabel ? title.label : '',\n      autoFocus: true,\n      onChange: onChange,\n      onBlur: this.onInputBlur,\n      \"data-test\": \"AdhocMetricEditTitle#input\" }) :\n\n\n    ___EmotionJSX(Tooltip, { placement: \"top\", title: \"Click to edit label\" },\n    ___EmotionJSX(\"span\", {\n      className: \"AdhocMetricEditPopoverTitle inline-editable\",\n      \"data-test\": \"AdhocMetricEditTitle#trigger\",\n      onMouseOver: this.onMouseOver,\n      onMouseOut: this.onMouseOut,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      role: \"button\",\n      tabIndex: 0 },\n\n    title.label || defaultLabel, \"\\xA0\",\n\n    ___EmotionJSX(\"i\", {\n      className: \"fa fa-pencil\",\n      style: { color: this.state.isHovered ? 'black' : 'grey' } })));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}AdhocMetricEditPopoverTitle.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopoverTitle.jsx\");reactHotLoader.register(AdhocMetricEditPopoverTitle, \"AdhocMetricEditPopoverTitle\", \"/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopoverTitle.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopoverTitle.jsx"],"names":["React","t","PropTypes","Input","Tooltip","propTypes","title","shape","label","string","hasCustomLabel","bool","onChange","func","isRequired","isEditDisabled","AdhocMetricEditPopoverTitle","Component","constructor","props","onMouseOver","onMouseOut","onClick","onBlur","onInputBlur","state","isHovered","isEditMode","setState","e","target","value","render","defaultLabel","color"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport { Input } from 'src/common/components';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst propTypes = {\n  title: PropTypes.shape({\n    label: PropTypes.string,\n    hasCustomLabel: PropTypes.bool,\n  }),\n  onChange: PropTypes.func.isRequired,\n  isEditDisabled: PropTypes.bool,\n};\n\nexport default class AdhocMetricEditPopoverTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onMouseOver = this.onMouseOver.bind(this);\n    this.onMouseOut = this.onMouseOut.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onInputBlur = this.onInputBlur.bind(this);\n    this.state = {\n      isHovered: false,\n      isEditMode: false,\n    };\n  }\n\n  onMouseOver() {\n    this.setState({ isHovered: true });\n  }\n\n  onMouseOut() {\n    this.setState({ isHovered: false });\n  }\n\n  onClick() {\n    this.setState({ isEditMode: true });\n  }\n\n  onBlur() {\n    this.setState({ isEditMode: false });\n  }\n\n  onInputBlur(e) {\n    if (e.target.value === '') {\n      this.props.onChange(e);\n    }\n    this.onBlur();\n  }\n\n  render() {\n    const { title, onChange, isEditDisabled } = this.props;\n    const defaultLabel = t('My metric');\n\n    if (isEditDisabled) {\n      return (\n        <span data-test=\"AdhocMetricTitle\">{title.label || defaultLabel}</span>\n      );\n    }\n\n    return this.state.isEditMode ? (\n      <Input\n        className=\"metric-edit-popover-label-input\"\n        type=\"text\"\n        placeholder={title.label}\n        value={title.hasCustomLabel ? title.label : ''}\n        autoFocus\n        onChange={onChange}\n        onBlur={this.onInputBlur}\n        data-test=\"AdhocMetricEditTitle#input\"\n      />\n    ) : (\n      <Tooltip placement=\"top\" title=\"Click to edit label\">\n        <span\n          className=\"AdhocMetricEditPopoverTitle inline-editable\"\n          data-test=\"AdhocMetricEditTitle#trigger\"\n          onMouseOver={this.onMouseOver}\n          onMouseOut={this.onMouseOut}\n          onClick={this.onClick}\n          onBlur={this.onBlur}\n          role=\"button\"\n          tabIndex={0}\n        >\n          {title.label || defaultLabel}\n          &nbsp;\n          <i\n            className=\"fa fa-pencil\"\n            style={{ color: this.state.isHovered ? 'black' : 'grey' }}\n          />\n        </span>\n      </Tooltip>\n    );\n  }\n}\nAdhocMetricEditPopoverTitle.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}