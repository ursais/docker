{"ast":null,"code":"import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD = 'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART = 'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_OMNIBAR_TRIGGERED = 'omnibar_triggered';\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new _Set([\nLOG_ACTIONS_LOAD_CHART,\nLOG_ACTIONS_RENDER_CHART,\nLOG_ACTIONS_HIDE_BROWSER_TAB]);\n\nexport const LOG_EVENT_TYPE_USER = new _Set([\nLOG_ACTIONS_MOUNT_DASHBOARD,\nLOG_ACTIONS_SELECT_DASHBOARD_TAB,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_OMNIBAR_TRIGGERED,\nLOG_ACTIONS_MOUNT_EXPLORER]);\n\nexport const Logger = {\n  // note that this returns ms since page load, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now());\n  } };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LOG_ACTIONS_LOAD_CHART, \"LOG_ACTIONS_LOAD_CHART\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_RENDER_CHART, \"LOG_ACTIONS_RENDER_CHART\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_HIDE_BROWSER_TAB, \"LOG_ACTIONS_HIDE_BROWSER_TAB\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_MOUNT_DASHBOARD, \"LOG_ACTIONS_MOUNT_DASHBOARD\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_MOUNT_EXPLORER, \"LOG_ACTIONS_MOUNT_EXPLORER\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_SELECT_DASHBOARD_TAB, \"LOG_ACTIONS_SELECT_DASHBOARD_TAB\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_FORCE_REFRESH_CHART, \"LOG_ACTIONS_FORCE_REFRESH_CHART\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS, \"LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, \"LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, \"LOG_ACTIONS_FORCE_REFRESH_DASHBOARD\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, \"LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, \"LOG_ACTIONS_EXPLORE_DASHBOARD_CHART\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART, \"LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, \"LOG_ACTIONS_CHANGE_DASHBOARD_FILTER\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_ACTIONS_OMNIBAR_TRIGGERED, \"LOG_ACTIONS_OMNIBAR_TRIGGERED\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_EVENT_TYPE_TIMING, \"LOG_EVENT_TYPE_TIMING\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(LOG_EVENT_TYPE_USER, \"LOG_EVENT_TYPE_USER\", \"/app/superset-frontend/src/logger/LogUtils.ts\");reactHotLoader.register(Logger, \"Logger\", \"/app/superset-frontend/src/logger/LogUtils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/logger/LogUtils.ts"],"names":[],"mappings":"qWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH;AACA,OAAO,MAAM,sBAAsB,GAAG,YAA/B;AACP,OAAO,MAAM,wBAAwB,GAAG,cAAjC;AACP,OAAO,MAAM,4BAA4B,GAAG,kBAArC;AAEP,OAAO,MAAM,2BAA2B,GAAG,iBAApC;AACP,OAAO,MAAM,0BAA0B,GAAG,gBAAnC;AAEP,OAAO,MAAM,gCAAgC,GAAG,sBAAzC;AACP,OAAO,MAAM,+BAA+B,GAAG,qBAAxC;AACP,OAAO,MAAM,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAM,iCAAiC,GAAG,uBAA1C;AACP,OAAO,MAAM,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAM,qCAAqC,GAChD,2BADK;AAEP,OAAO,MAAM,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAM,sCAAsC,GACjD,4BADK;AAEP,OAAO,MAAM,mCAAmC,GAAG,yBAA5C;AACP,OAAO,MAAM,6BAA6B,GAAG,mBAAtC;AAEP;AACA,OAAO,MAAM,qBAAqB,GAAG,SAAQ;AAC3C,sBAD2C;AAE3C,wBAF2C;AAG3C,4BAH2C,CAAR,CAA9B;;AAKP,OAAO,MAAM,mBAAmB,GAAG,SAAQ;AACzC,2BADyC;AAEzC,gCAFyC;AAGzC,mCAHyC;AAIzC,+BAJyC;AAKzC,sCALyC;AAMzC,mCANyC;AAOzC,mCAPyC;AAQzC,iCARyC;AASzC,mCATyC;AAUzC,qCAVyC;AAWzC,6BAXyC;AAYzC,0BAZyC,CAAR,CAA5B;;AAeP,OAAO,MAAM,MAAM,GAAG;AACpB;AACA,EAAA,YAAY,GAAA;AACV,WAAO,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,WAAP,CAAmB,GAAnB,EAAX,CAAP;AACD,GAJmB,EAAf,C,iLAzCM,sB,qGACA,wB,uGACA,4B,2GAEA,2B,0GACA,0B,yGAEA,gC,+GACA,+B,8GACA,mC,kHACA,iC,gHACA,mC,kHACA,qC,oHAEA,mC,kHACA,sC,qHAEA,mC,kHACA,6B,4GAGA,qB,oGAKA,mB,kGAeA,M","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\n\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\n\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD =\n  'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART =\n  'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_OMNIBAR_TRIGGERED = 'omnibar_triggered';\n\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new Set([\n  LOG_ACTIONS_LOAD_CHART,\n  LOG_ACTIONS_RENDER_CHART,\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n]);\nexport const LOG_EVENT_TYPE_USER = new Set([\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  LOG_ACTIONS_SELECT_DASHBOARD_TAB,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_OMNIBAR_TRIGGERED,\n  LOG_ACTIONS_MOUNT_EXPLORER,\n]);\n\nexport const Logger = {\n  // note that this returns ms since page load, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now());\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}