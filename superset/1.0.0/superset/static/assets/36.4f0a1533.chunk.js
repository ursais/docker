(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[36],{

/***/ "./node_modules/@superset-ui/plugin-chart-pivot-table/esm/PivotTableChart.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@superset-ui/plugin-chart-pivot-table/esm/PivotTableChart.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PivotTableChart; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@superset-ui/core/esm/style/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@superset-ui/core/esm/number-format/NumberFormatterRegistrySingleton.js\");\n/* harmony import */ var _superset_ui_react_pivottable_PivotTable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/react-pivottable/PivotTable */ \"./node_modules/@superset-ui/react-pivottable/PivotTable.js\");\n/* harmony import */ var _superset_ui_react_pivottable_PivotTable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_react_pivottable_PivotTable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _superset_ui_react_pivottable_Utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @superset-ui/react-pivottable/Utilities */ \"./node_modules/@superset-ui/react-pivottable/Utilities.js\");\n/* harmony import */ var _superset_ui_react_pivottable_Utilities__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_react_pivottable_Utilities__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _superset_ui_react_pivottable_pivottable_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/react-pivottable/pivottable.css */ \"./node_modules/@superset-ui/react-pivottable/pivottable.css\");\n/* harmony import */ var _superset_ui_react_pivottable_pivottable_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_react_pivottable_pivottable_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n // @ts-ignore\n\n // @ts-ignore\n\n\n\n\nconst Styles = _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__[\"styled\"].div`\n  padding: ${({\n  theme\n}) => theme.gridUnit * 4}px;\n  height: ${({\n  height\n}) => height}px;\n  width: ${({\n  width\n}) => width}px;\n  overflow-y: scroll;\n  }\n`;\nconst METRIC_KEY = 'metric';\nfunction PivotTableChart(props) {\n  const {\n    data,\n    height,\n    width,\n    groupbyRows,\n    groupbyColumns,\n    metrics,\n    tableRenderer,\n    colOrder,\n    rowOrder,\n    aggregateFunction,\n    transposePivot,\n    rowSubtotalPosition,\n    colSubtotalPosition,\n    colTotals,\n    rowTotals,\n    valueFormat,\n    emitFilter,\n    setDataMask,\n    selectedFilters,\n    verboseMap\n  } = props;\n  const adaptiveFormatter = Object(_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"getNumberFormatter\"])(valueFormat);\n\n  const aggregators = (tpl => ({\n    Count: tpl.count(adaptiveFormatter),\n    'Count Unique Values': tpl.countUnique(adaptiveFormatter),\n    'List Unique Values': tpl.listUnique(', '),\n    Sum: tpl.sum(adaptiveFormatter),\n    Average: tpl.average(adaptiveFormatter),\n    Median: tpl.median(adaptiveFormatter),\n    'Sample Variance': tpl.var(1, adaptiveFormatter),\n    'Sample Standard Deviation': tpl.stdev(1, adaptiveFormatter),\n    Minimum: tpl.min(adaptiveFormatter),\n    Maximum: tpl.max(adaptiveFormatter),\n    First: tpl.first(adaptiveFormatter),\n    Last: tpl.last(adaptiveFormatter),\n    'Sum as Fraction of Total': tpl.fractionOf(tpl.sum(), 'total', adaptiveFormatter),\n    'Sum as Fraction of Rows': tpl.fractionOf(tpl.sum(), 'row', adaptiveFormatter),\n    'Sum as Fraction of Columns': tpl.fractionOf(tpl.sum(), 'col', adaptiveFormatter),\n    'Count as Fraction of Total': tpl.fractionOf(tpl.count(), 'total', adaptiveFormatter),\n    'Count as Fraction of Rows': tpl.fractionOf(tpl.count(), 'row', adaptiveFormatter),\n    'Count as Fraction of Columns': tpl.fractionOf(tpl.count(), 'col', adaptiveFormatter)\n  }))(_superset_ui_react_pivottable_Utilities__WEBPACK_IMPORTED_MODULE_4__[\"aggregatorTemplates\"]);\n\n  const metricNames = metrics.map(metric => typeof metric === 'string' ? metric : metric.label);\n  const unpivotedData = data.reduce((acc, record) => [...acc, ...metricNames.map(name => ({ ...record,\n    [METRIC_KEY]: name,\n    value: record[name]\n  }))], []);\n  const [rows, cols] = transposePivot ? [groupbyColumns, [METRIC_KEY, ...groupbyRows]] : [groupbyRows, [METRIC_KEY, ...groupbyColumns]];\n  const handleChange = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(filters => {\n    const groupBy = Object.keys(filters);\n    setDataMask({\n      extraFormData: {\n        filters: groupBy.length === 0 ? undefined : groupBy.map(col => {\n          const val = filters == null ? void 0 : filters[col];\n          if (val === null || val === undefined) return {\n            col,\n            op: 'IS NULL'\n          };\n          return {\n            col,\n            op: 'IN',\n            val: val\n          };\n        })\n      },\n      filterState: {\n        value: filters && Object.keys(filters).length ? Object.values(filters) : null,\n        selectedFilters: filters && Object.keys(filters).length ? filters : null\n      }\n    });\n  }, [setDataMask]);\n  const isActiveFilterValue = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((key, val) => {\n    var _selectedFilters$key;\n\n    return !!selectedFilters && ((_selectedFilters$key = selectedFilters[key]) == null ? void 0 : _selectedFilters$key.includes(val));\n  }, [selectedFilters]);\n  const toggleFilter = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((e, value, filters, pivotData, isSubtotal, isGrandTotal) => {\n    if (isSubtotal || isGrandTotal || !emitFilter) {\n      return;\n    }\n\n    const filtersCopy = { ...filters\n    };\n    delete filtersCopy[METRIC_KEY];\n    const filtersEntries = Object.entries(filtersCopy);\n\n    if (filtersEntries.length === 0) {\n      return;\n    }\n\n    const [key, val] = filtersEntries[filtersEntries.length - 1];\n    const updatedFilters = { ...(selectedFilters || {})\n    };\n\n    if (selectedFilters && isActiveFilterValue(key, val)) {\n      updatedFilters[key] = selectedFilters[key].filter(x => x !== val);\n    } else {\n      updatedFilters[key] = [...((selectedFilters == null ? void 0 : selectedFilters[key]) || []), val];\n    }\n\n    if (Array.isArray(updatedFilters[key]) && updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n\n    handleChange(updatedFilters);\n  }, [emitFilter, selectedFilters, handleChange]);\n  return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Styles, {\n    height: height,\n    width: width\n  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_superset_ui_react_pivottable_PivotTable__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    data: unpivotedData,\n    rows: rows,\n    cols: cols,\n    aggregators: aggregators,\n    aggregatorName: aggregateFunction,\n    vals: ['value'],\n    rendererName: tableRenderer,\n    colOrder: colOrder,\n    rowOrder: rowOrder,\n    sorters: {\n      metric: Object(_superset_ui_react_pivottable_Utilities__WEBPACK_IMPORTED_MODULE_4__[\"sortAs\"])(metricNames)\n    },\n    tableOptions: {\n      clickRowHeaderCallback: toggleFilter,\n      clickColumnHeaderCallback: toggleFilter,\n      colTotals,\n      rowTotals,\n      highlightHeaderCellsOnHover: emitFilter,\n      highlightedHeaderCells: selectedFilters,\n      omittedHighlightHeaderGroups: [METRIC_KEY]\n    },\n    subtotalOptions: {\n      colSubtotalDisplay: {\n        displayOnTop: colSubtotalPosition\n      },\n      rowSubtotalDisplay: {\n        displayOnTop: rowSubtotalPosition\n      }\n    },\n    namesMapping: verboseMap\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/plugin-chart-pivot-table/esm/PivotTableChart.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/react-pivottable/PivotTable.js":
/*!******************************************************************!*\
  !*** ./node_modules/@superset-ui/react-pivottable/PivotTable.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Utilities = __webpack_require__(/*! ./Utilities */ \"./node_modules/@superset-ui/react-pivottable/Utilities.js\");\n\nvar _TableRenderers = __webpack_require__(/*! ./TableRenderers */ \"./node_modules/@superset-ui/react-pivottable/TableRenderers.js\");\n\nvar _TableRenderers2 = _interopRequireDefault(_TableRenderers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nvar PivotTable = function (_React$PureComponent) {\n  _inherits(PivotTable, _React$PureComponent);\n\n  function PivotTable() {\n    _classCallCheck(this, PivotTable);\n\n    return _possibleConstructorReturn(this, (PivotTable.__proto__ || Object.getPrototypeOf(PivotTable)).apply(this, arguments));\n  }\n\n  _createClass(PivotTable, [{\n    key: 'render',\n    value: function render() {\n      var Renderer = this.props.renderers[this.props.rendererName in this.props.renderers ? this.props.rendererName : Object.keys(this.props.renderers)[0]];\n      return _react2.default.createElement(Renderer, this.props);\n    }\n  }]);\n\n  return PivotTable;\n}(_react2.default.PureComponent);\n\nPivotTable.propTypes = Object.assign({}, _Utilities.PivotData.propTypes, {\n  rendererName: _propTypes2.default.string,\n  renderers: _propTypes2.default.objectOf(_propTypes2.default.func)\n});\n\nPivotTable.defaultProps = Object.assign({}, _Utilities.PivotData.defaultProps, {\n  rendererName: 'Table',\n  renderers: _TableRenderers2.default\n});\n\nexports.default = PivotTable;\nmodule.exports = exports.default;\n//# sourceMappingURL=PivotTable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL3JlYWN0LXBpdm90dGFibGUvUGl2b3RUYWJsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac3VwZXJzZXQtdWkvcmVhY3QtcGl2b3R0YWJsZS9QaXZvdFRhYmxlLmpzPzlkZmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX1V0aWxpdGllcyA9IHJlcXVpcmUoJy4vVXRpbGl0aWVzJyk7XG5cbnZhciBfVGFibGVSZW5kZXJlcnMgPSByZXF1aXJlKCcuL1RhYmxlUmVuZGVyZXJzJyk7XG5cbnZhciBfVGFibGVSZW5kZXJlcnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVGFibGVSZW5kZXJlcnMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMgKi9cbi8vIGVzbGludCBjYW4ndCBzZWUgaW5oZXJpdGVkIHByb3BUeXBlcyFcblxudmFyIFBpdm90VGFibGUgPSBmdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFBpdm90VGFibGUsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQaXZvdFRhYmxlKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQaXZvdFRhYmxlKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUGl2b3RUYWJsZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFBpdm90VGFibGUpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQaXZvdFRhYmxlLCBbe1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBSZW5kZXJlciA9IHRoaXMucHJvcHMucmVuZGVyZXJzW3RoaXMucHJvcHMucmVuZGVyZXJOYW1lIGluIHRoaXMucHJvcHMucmVuZGVyZXJzID8gdGhpcy5wcm9wcy5yZW5kZXJlck5hbWUgOiBPYmplY3Qua2V5cyh0aGlzLnByb3BzLnJlbmRlcmVycylbMF1dO1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFJlbmRlcmVyLCB0aGlzLnByb3BzKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUGl2b3RUYWJsZTtcbn0oX3JlYWN0Mi5kZWZhdWx0LlB1cmVDb21wb25lbnQpO1xuXG5QaXZvdFRhYmxlLnByb3BUeXBlcyA9IE9iamVjdC5hc3NpZ24oe30sIF9VdGlsaXRpZXMuUGl2b3REYXRhLnByb3BUeXBlcywge1xuICByZW5kZXJlck5hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICByZW5kZXJlcnM6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0T2YoX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jKVxufSk7XG5cblBpdm90VGFibGUuZGVmYXVsdFByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgX1V0aWxpdGllcy5QaXZvdERhdGEuZGVmYXVsdFByb3BzLCB7XG4gIHJlbmRlcmVyTmFtZTogJ1RhYmxlJyxcbiAgcmVuZGVyZXJzOiBfVGFibGVSZW5kZXJlcnMyLmRlZmF1bHRcbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBQaXZvdFRhYmxlO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QaXZvdFRhYmxlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/react-pivottable/PivotTable.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/react-pivottable/TableRenderers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@superset-ui/react-pivottable/TableRenderers.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Utilities = __webpack_require__(/*! ./Utilities */ \"./node_modules/@superset-ui/react-pivottable/Utilities.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nfunction redColorScaleGenerator(values) {\n  var min = Math.min.apply(Math, values);\n  var max = Math.max.apply(Math, values);\n  return function (x) {\n    // eslint-disable-next-line no-magic-numbers\n    var nonRed = 255 - Math.round(255 * (x - min) / (max - min));\n    return { backgroundColor: 'rgb(255,' + nonRed + ',' + nonRed + ')' };\n  };\n}\n\nfunction defaultBarchartScaleGenerator(values) {\n  var min = Math.min.apply(Math, values);\n  var max = Math.max.apply(Math, values);\n  var range = min < 0 ? max - min : Math.max(max, 0);\n  // eslint-disable-next-line no-magic-numbers\n  var maxScale = 100 / 1.4;\n  var scaler = function scaler(val) {\n    return Math.min(maxScale, maxScale * (val / range));\n  };\n\n  return function (val, text) {\n    var bgColor = 'gray';\n    var bBase = 0;\n    if (min < 0) {\n      bBase = scaler(-min);\n    }\n    if (val < 0) {\n      bBase += scaler(val);\n      bgColor = 'darkred';\n    }\n\n    return _react2.default.createElement(\n      'div',\n      { style: { position: 'relative', height: '100%' } },\n      _react2.default.createElement('div', {\n        style: {\n          position: 'absolute',\n          bottom: bBase + '%',\n          left: 0,\n          right: 0,\n          height: scaler(Math.abs(val)) + '%',\n          backgroundColor: bgColor\n        }\n      }),\n      _react2.default.createElement(\n        'div',\n        { style: { position: 'relative', padding: '0 5px' } },\n        text\n      )\n    );\n  };\n}\n\nfunction displayHeaderCell(needToggle, arrowIcon, onArrowClick, value, namesMapping) {\n  var name = namesMapping[value] || value;\n  return needToggle ? _react2.default.createElement(\n    'span',\n    { className: 'toggle-wrapper' },\n    _react2.default.createElement(\n      'span',\n      { className: 'toggle', onClick: onArrowClick },\n      arrowIcon\n    ),\n    _react2.default.createElement(\n      'span',\n      { className: 'toggle-val' },\n      name\n    )\n  ) : name;\n}\n\nfunction makeRenderer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var TableRenderer = function (_React$Component) {\n    _inherits(TableRenderer, _React$Component);\n\n    function TableRenderer(props) {\n      _classCallCheck(this, TableRenderer);\n\n      // We need state to record which entries are collapsed and which aren't.\n      // This is an object with flat-keys indicating if the corresponding rows\n      // should be collapsed.\n      var _this = _possibleConstructorReturn(this, (TableRenderer.__proto__ || Object.getPrototypeOf(TableRenderer)).call(this, props));\n\n      _this.state = { collapsedRows: {}, collapsedCols: {} };\n\n      _this.clickHeaderHandler = _this.clickHeaderHandler.bind(_this);\n      _this.clickHandler = _this.clickHandler.bind(_this);\n      return _this;\n    }\n\n    _createClass(TableRenderer, [{\n      key: 'getBasePivotSettings',\n      value: function getBasePivotSettings() {\n        // One-time extraction of pivot settings that we'll use throughout the render.\n\n        var props = this.props;\n        var colAttrs = props.cols;\n        var rowAttrs = props.rows;\n\n        var tableOptions = Object.assign({\n          rowTotals: true,\n          colTotals: true\n        }, props.tableOptions);\n        var rowTotals = tableOptions.rowTotals || colAttrs.length === 0;\n        var colTotals = tableOptions.colTotals || rowAttrs.length === 0;\n\n        var namesMapping = props.namesMapping || {};\n        var subtotalOptions = Object.assign({\n          arrowCollapsed: '\\u25B2',\n          arrowExpanded: '\\u25BC'\n        }, props.subtotalOptions);\n\n        var colSubtotalDisplay = Object.assign({\n          displayOnTop: false,\n          enabled: rowTotals,\n          hideOnExpand: false\n        }, subtotalOptions.colSubtotalDisplay);\n\n        var rowSubtotalDisplay = Object.assign({\n          displayOnTop: false,\n          enabled: colTotals,\n          hideOnExpand: false\n        }, subtotalOptions.rowSubtotalDisplay);\n\n        var pivotData = new _Utilities.PivotData(props, !opts.subtotals ? {} : {\n          rowEnabled: rowSubtotalDisplay.enabled,\n          colEnabled: colSubtotalDisplay.enabled,\n          rowPartialOnTop: rowSubtotalDisplay.displayOnTop,\n          colPartialOnTop: colSubtotalDisplay.displayOnTop\n        });\n        var rowKeys = pivotData.getRowKeys();\n        var colKeys = pivotData.getColKeys();\n\n        // Also pre-calculate all the callbacks for cells, etc... This is nice to have to\n        // avoid re-calculations of the call-backs on cell expansions, etc...\n        var cellCallbacks = {};\n        var rowTotalCallbacks = {};\n        var colTotalCallbacks = {};\n        var grandTotalCallback = null;\n        if (tableOptions.clickCallback) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = rowKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var rowKey = _step.value;\n\n              var flatRowKey = (0, _Utilities.flatKey)(rowKey);\n              if (!(flatRowKey in cellCallbacks)) {\n                cellCallbacks[flatRowKey] = {};\n              }\n              var _iteratorNormalCompletion4 = true;\n              var _didIteratorError4 = false;\n              var _iteratorError4 = undefined;\n\n              try {\n                for (var _iterator4 = colKeys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                  var _colKey = _step4.value;\n\n                  cellCallbacks[flatRowKey][(0, _Utilities.flatKey)(_colKey)] = this.clickHandler(pivotData, rowKey, _colKey);\n                }\n              } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                  }\n                } finally {\n                  if (_didIteratorError4) {\n                    throw _iteratorError4;\n                  }\n                }\n              }\n            }\n\n            // Add in totals as well.\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (rowTotals) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = rowKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _rowKey = _step2.value;\n\n                rowTotalCallbacks[(0, _Utilities.flatKey)(_rowKey)] = this.clickHandler(pivotData, _rowKey, []);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n          if (colTotals) {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = colKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var colKey = _step3.value;\n\n                colTotalCallbacks[(0, _Utilities.flatKey)(colKey)] = this.clickHandler(pivotData, [], colKey);\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n          if (rowTotals && colTotals) {\n            grandTotalCallback = this.clickHandler(pivotData, [], []);\n          }\n        }\n\n        return Object.assign({\n          pivotData: pivotData,\n          colAttrs: colAttrs,\n          rowAttrs: rowAttrs,\n          colKeys: colKeys,\n          rowKeys: rowKeys,\n          rowTotals: rowTotals,\n          colTotals: colTotals,\n          arrowCollapsed: subtotalOptions.arrowCollapsed,\n          arrowExpanded: subtotalOptions.arrowExpanded,\n          colSubtotalDisplay: colSubtotalDisplay,\n          rowSubtotalDisplay: rowSubtotalDisplay,\n          cellCallbacks: cellCallbacks,\n          rowTotalCallbacks: rowTotalCallbacks,\n          colTotalCallbacks: colTotalCallbacks,\n          grandTotalCallback: grandTotalCallback,\n          namesMapping: namesMapping\n        }, TableRenderer.heatmapMappers(pivotData, props.tableColorScaleGenerator, colTotals, rowTotals), TableRenderer.barchartMapper(pivotData, props.barScaleGenerator, colTotals, rowTotals));\n      }\n    }, {\n      key: 'clickHandler',\n      value: function clickHandler(pivotData, rowValues, colValues) {\n        var _this2 = this;\n\n        var colAttrs = this.props.cols;\n        var rowAttrs = this.props.rows;\n        var value = pivotData.getAggregator(rowValues, colValues).value();\n        var filters = {};\n        var colLimit = Math.min(colAttrs.length, colValues.length);\n        for (var i = 0; i < colLimit; i++) {\n          var attr = colAttrs[i];\n          if (colValues[i] !== null) {\n            filters[attr] = colValues[i];\n          }\n        }\n        var rowLimit = Math.min(rowAttrs.length, rowValues.length);\n        for (var _i = 0; _i < rowLimit; _i++) {\n          var _attr = rowAttrs[_i];\n          if (rowValues[_i] !== null) {\n            filters[_attr] = rowValues[_i];\n          }\n        }\n        return function (e) {\n          return _this2.props.tableOptions.clickCallback(e, value, filters, pivotData);\n        };\n      }\n    }, {\n      key: 'clickHeaderHandler',\n      value: function clickHeaderHandler(pivotData, values, attrs, attrIdx, callback) {\n        var isSubtotal = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var isGrandTotal = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n\n        var filters = {};\n        for (var i = 0; i <= attrIdx; i++) {\n          var attr = attrs[i];\n          filters[attr] = values[i];\n        }\n        return function (e) {\n          return callback(e, values[attrIdx], filters, pivotData, isSubtotal, isGrandTotal);\n        };\n      }\n    }, {\n      key: 'collapseAttr',\n      value: function collapseAttr(rowOrCol, attrIdx, allKeys) {\n        var _this3 = this;\n\n        return function (e) {\n          // Collapse an entire attribute.\n          e.stopPropagation();\n          var keyLen = attrIdx + 1;\n          var collapsed = allKeys.filter(function (k) {\n            return k.length === keyLen;\n          }).map(_Utilities.flatKey);\n\n          var updates = {};\n          collapsed.forEach(function (k) {\n            updates[k] = true;\n          });\n\n          if (rowOrCol) {\n            _this3.setState(function (state) {\n              return {\n                collapsedRows: Object.assign({}, state.collapsedRows, updates)\n              };\n            });\n          } else {\n            _this3.setState(function (state) {\n              return {\n                collapsedCols: Object.assign({}, state.collapsedCols, updates)\n              };\n            });\n          }\n        };\n      }\n    }, {\n      key: 'expandAttr',\n      value: function expandAttr(rowOrCol, attrIdx, allKeys) {\n        var _this4 = this;\n\n        return function (e) {\n          // Expand an entire attribute. This implicitly implies expanding all of the\n          // parents as well. It's a bit inefficient but ah well...\n          e.stopPropagation();\n          var updates = {};\n          allKeys.forEach(function (k) {\n            for (var i = 0; i <= attrIdx; i++) {\n              updates[(0, _Utilities.flatKey)(k.slice(0, i + 1))] = false;\n            }\n          });\n\n          if (rowOrCol) {\n            _this4.setState(function (state) {\n              return {\n                collapsedRows: Object.assign({}, state.collapsedRows, updates)\n              };\n            });\n          } else {\n            _this4.setState(function (state) {\n              return {\n                collapsedCols: Object.assign({}, state.collapsedCols, updates)\n              };\n            });\n          }\n        };\n      }\n    }, {\n      key: 'toggleRowKey',\n      value: function toggleRowKey(flatRowKey) {\n        var _this5 = this;\n\n        return function (e) {\n          e.stopPropagation();\n          _this5.setState(function (state) {\n            return {\n              collapsedRows: Object.assign({}, state.collapsedRows, _defineProperty({}, flatRowKey, !state.collapsedRows[flatRowKey]))\n            };\n          });\n        };\n      }\n    }, {\n      key: 'toggleColKey',\n      value: function toggleColKey(flatColKey) {\n        var _this6 = this;\n\n        return function (e) {\n          e.stopPropagation();\n          _this6.setState(function (state) {\n            return {\n              collapsedCols: Object.assign({}, state.collapsedCols, _defineProperty({}, flatColKey, !state.collapsedCols[flatColKey]))\n            };\n          });\n        };\n      }\n    }, {\n      key: 'calcAttrSpans',\n      value: function calcAttrSpans(attrArr, numAttrs) {\n        // Given an array of attribute values (i.e. each element is another array with\n        // the value at every level), compute the spans for every attribute value at\n        // every level. The return value is a nested array of the same shape. It has\n        // -1's for repeated values and the span number otherwise.\n\n        var spans = [];\n        // Index of the last new value\n        var li = Array(numAttrs).map(function () {\n          return 0;\n        });\n        var lv = Array(numAttrs).map(function () {\n          return null;\n        });\n        for (var i = 0; i < attrArr.length; i++) {\n          // Keep increasing span values as long as the last keys are the same. For\n          // the rest, record spans of 1. Update the indices too.\n          var cv = attrArr[i];\n          var ent = [];\n          var depth = 0;\n          var limit = Math.min(lv.length, cv.length);\n          while (depth < limit && lv[depth] === cv[depth]) {\n            ent.push(-1);\n            spans[li[depth]][depth]++;\n            depth++;\n          }\n          while (depth < cv.length) {\n            li[depth] = i;\n            ent.push(1);\n            depth++;\n          }\n          spans.push(ent);\n          lv = cv;\n        }\n        return spans;\n      }\n    }, {\n      key: 'renderColHeaderRow',\n      value: function renderColHeaderRow(attrName, attrIdx, pivotSettings) {\n        // Render a single row in the column header at the top of the pivot table.\n\n        var rowAttrs = pivotSettings.rowAttrs,\n            colAttrs = pivotSettings.colAttrs,\n            colKeys = pivotSettings.colKeys,\n            visibleColKeys = pivotSettings.visibleColKeys,\n            colAttrSpans = pivotSettings.colAttrSpans,\n            rowTotals = pivotSettings.rowTotals,\n            arrowExpanded = pivotSettings.arrowExpanded,\n            arrowCollapsed = pivotSettings.arrowCollapsed,\n            colSubtotalDisplay = pivotSettings.colSubtotalDisplay,\n            maxColVisible = pivotSettings.maxColVisible,\n            pivotData = pivotSettings.pivotData,\n            namesMapping = pivotSettings.namesMapping;\n        var _props$tableOptions = this.props.tableOptions,\n            highlightHeaderCellsOnHover = _props$tableOptions.highlightHeaderCellsOnHover,\n            _props$tableOptions$o = _props$tableOptions.omittedHighlightHeaderGroups,\n            omittedHighlightHeaderGroups = _props$tableOptions$o === undefined ? [] : _props$tableOptions$o,\n            highlightedHeaderCells = _props$tableOptions.highlightedHeaderCells;\n\n\n        var spaceCell = attrIdx === 0 && rowAttrs.length !== 0 ? _react2.default.createElement('th', {\n          key: 'padding',\n          colSpan: rowAttrs.length,\n          rowSpan: colAttrs.length\n        }) : null;\n\n        var needToggle = opts.subtotals && colSubtotalDisplay.enabled && attrIdx !== colAttrs.length - 1;\n        var arrowClickHandle = null;\n        var subArrow = null;\n        if (needToggle) {\n          arrowClickHandle = attrIdx + 1 < maxColVisible ? this.collapseAttr(false, attrIdx, colKeys) : this.expandAttr(false, attrIdx, colKeys);\n          subArrow = (attrIdx + 1 < maxColVisible ? arrowExpanded : arrowCollapsed) + ' ';\n        }\n        var attrNameCell = _react2.default.createElement(\n          'th',\n          { key: 'label', className: 'pvtAxisLabel' },\n          displayHeaderCell(needToggle, subArrow, arrowClickHandle, attrName, namesMapping)\n        );\n\n        var attrValueCells = [];\n        var rowIncrSpan = rowAttrs.length !== 0 ? 1 : 0;\n        // Iterate through columns. Jump over duplicate values.\n        var i = 0;\n        while (i < visibleColKeys.length) {\n          var colKey = visibleColKeys[i];\n          var colSpan = attrIdx < colKey.length ? colAttrSpans[i][attrIdx] : 1;\n          var colLabelClass = 'pvtColLabel';\n          if (colSpan > 1) {\n            colLabelClass += ' label-centered';\n          }\n          if (attrIdx < colKey.length) {\n            if (highlightHeaderCellsOnHover && !omittedHighlightHeaderGroups.includes(colAttrs[attrIdx])) {\n              colLabelClass += ' hoverable';\n            }\n            if (highlightedHeaderCells && Array.isArray(highlightedHeaderCells[colAttrs[attrIdx]]) && highlightedHeaderCells[colAttrs[attrIdx]].includes(colKey[attrIdx])) {\n              colLabelClass += ' active';\n            }\n\n            var rowSpan = 1 + (attrIdx === colAttrs.length - 1 ? rowIncrSpan : 0);\n            var flatColKey = (0, _Utilities.flatKey)(colKey.slice(0, attrIdx + 1));\n            var onArrowClick = needToggle ? this.toggleColKey(flatColKey) : null;\n            attrValueCells.push(_react2.default.createElement(\n              'th',\n              {\n                className: colLabelClass,\n                key: 'colKey-' + flatColKey,\n                colSpan: colSpan,\n                rowSpan: rowSpan,\n                onClick: this.clickHeaderHandler(pivotData, colKey, this.props.cols, attrIdx, this.props.tableOptions.clickColumnHeaderCallback)\n              },\n              displayHeaderCell(needToggle, (this.state.collapsedCols[flatColKey] ? arrowCollapsed : arrowExpanded) + ' ', onArrowClick, colKey[attrIdx], namesMapping)\n            ));\n          } else if (attrIdx === colKey.length) {\n            var _rowSpan = colAttrs.length - colKey.length + rowIncrSpan;\n            attrValueCells.push(_react2.default.createElement(\n              'th',\n              {\n                className: colLabelClass + ' pvtSubtotalLabel',\n                key: 'colKeyBuffer-' + (0, _Utilities.flatKey)(colKey),\n                colSpan: colSpan,\n                rowSpan: _rowSpan,\n                onClick: this.clickHeaderHandler(pivotData, colKey, this.props.cols, attrIdx, this.props.tableOptions.clickColumnHeaderCallback, true)\n              },\n              'Subtotal'\n            ));\n          }\n          // The next colSpan columns will have the same value anyway...\n          i = i + colSpan;\n        }\n\n        var totalCell = attrIdx === 0 && rowTotals ? _react2.default.createElement(\n          'th',\n          {\n            key: 'total',\n            className: 'pvtTotalLabel',\n            rowSpan: colAttrs.length + Math.min(rowAttrs.length, 1),\n            onClick: this.clickHeaderHandler(pivotData, [], this.props.cols, attrIdx, this.props.tableOptions.clickColumnHeaderCallback, false, true)\n          },\n          'Totals'\n        ) : null;\n\n        var cells = [spaceCell, attrNameCell].concat(attrValueCells, [totalCell]);\n        return _react2.default.createElement(\n          'tr',\n          { key: 'colAttr-' + attrIdx },\n          cells\n        );\n      }\n    }, {\n      key: 'renderRowHeaderRow',\n      value: function renderRowHeaderRow(pivotSettings) {\n        var _this7 = this;\n\n        // Render just the attribute names of the rows (the actual attribute values\n        // will show up in the individual rows).\n\n        var rowAttrs = pivotSettings.rowAttrs,\n            colAttrs = pivotSettings.colAttrs,\n            rowKeys = pivotSettings.rowKeys,\n            arrowCollapsed = pivotSettings.arrowCollapsed,\n            arrowExpanded = pivotSettings.arrowExpanded,\n            rowSubtotalDisplay = pivotSettings.rowSubtotalDisplay,\n            maxRowVisible = pivotSettings.maxRowVisible,\n            pivotData = pivotSettings.pivotData,\n            namesMapping = pivotSettings.namesMapping;\n\n        return _react2.default.createElement(\n          'tr',\n          { key: 'rowHdr' },\n          rowAttrs.map(function (r, i) {\n            var needLabelToggle = opts.subtotals && rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n            var arrowClickHandle = null;\n            var subArrow = null;\n            if (needLabelToggle) {\n              arrowClickHandle = i + 1 < maxRowVisible ? _this7.collapseAttr(true, i, rowKeys) : _this7.expandAttr(true, i, rowKeys);\n              subArrow = (i + 1 < maxRowVisible ? arrowExpanded : arrowCollapsed) + ' ';\n            }\n            return _react2.default.createElement(\n              'th',\n              { className: 'pvtAxisLabel', key: 'rowAttr-' + i },\n              displayHeaderCell(needLabelToggle, subArrow, arrowClickHandle, r, namesMapping)\n            );\n          }),\n          _react2.default.createElement(\n            'th',\n            {\n              className: 'pvtTotalLabel',\n              key: 'padding',\n              onClick: this.clickHeaderHandler(pivotData, [], this.props.rows, 0, this.props.tableOptions.clickRowHeaderCallback, false, true)\n            },\n            colAttrs.length === 0 ? 'Totals' : null\n          )\n        );\n      }\n    }, {\n      key: 'renderTableRow',\n      value: function renderTableRow(rowKey, rowIdx, pivotSettings) {\n        var _this8 = this;\n\n        // Render a single row in the pivot table.\n\n        var rowAttrs = pivotSettings.rowAttrs,\n            colAttrs = pivotSettings.colAttrs,\n            rowAttrSpans = pivotSettings.rowAttrSpans,\n            visibleColKeys = pivotSettings.visibleColKeys,\n            pivotData = pivotSettings.pivotData,\n            rowTotals = pivotSettings.rowTotals,\n            rowSubtotalDisplay = pivotSettings.rowSubtotalDisplay,\n            valueCellColors = pivotSettings.valueCellColors,\n            cellStyle = pivotSettings.cellStyle,\n            valueCellBar = pivotSettings.valueCellBar,\n            arrowExpanded = pivotSettings.arrowExpanded,\n            arrowCollapsed = pivotSettings.arrowCollapsed,\n            cellCallbacks = pivotSettings.cellCallbacks,\n            rowTotalCallbacks = pivotSettings.rowTotalCallbacks,\n            namesMapping = pivotSettings.namesMapping;\n        var _props$tableOptions2 = this.props.tableOptions,\n            highlightHeaderCellsOnHover = _props$tableOptions2.highlightHeaderCellsOnHover,\n            _props$tableOptions2$ = _props$tableOptions2.omittedHighlightHeaderGroups,\n            omittedHighlightHeaderGroups = _props$tableOptions2$ === undefined ? [] : _props$tableOptions2$,\n            highlightedHeaderCells = _props$tableOptions2.highlightedHeaderCells;\n\n        var flatRowKey = (0, _Utilities.flatKey)(rowKey);\n\n        var colIncrSpan = colAttrs.length !== 0 ? 1 : 0;\n        var attrValueCells = rowKey.map(function (r, i) {\n          var valueCellClassName = 'pvtRowLabel';\n          if (highlightHeaderCellsOnHover && !omittedHighlightHeaderGroups.includes(rowAttrs[i])) {\n            valueCellClassName += ' hoverable';\n          }\n          if (highlightedHeaderCells && Array.isArray(highlightedHeaderCells[rowAttrs[i]]) && highlightedHeaderCells[rowAttrs[i]].includes(r)) {\n            valueCellClassName += ' active';\n          }\n          var rowSpan = rowAttrSpans[rowIdx][i];\n          if (rowSpan > 0) {\n            var _flatRowKey = (0, _Utilities.flatKey)(rowKey.slice(0, i + 1));\n            var colSpan = 1 + (i === rowAttrs.length - 1 ? colIncrSpan : 0);\n            var needRowToggle = opts.subtotals && rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n            var onArrowClick = needRowToggle ? _this8.toggleRowKey(_flatRowKey) : null;\n            return _react2.default.createElement(\n              'th',\n              {\n                key: 'rowKeyLabel-' + i,\n                className: valueCellClassName,\n                rowSpan: rowSpan,\n                colSpan: colSpan,\n                onClick: _this8.clickHeaderHandler(pivotData, rowKey, _this8.props.rows, i, _this8.props.tableOptions.clickRowHeaderCallback)\n              },\n              displayHeaderCell(needRowToggle, (_this8.state.collapsedRows[_flatRowKey] ? arrowCollapsed : arrowExpanded) + ' ', onArrowClick, r, namesMapping)\n            );\n          }\n          return null;\n        });\n\n        var attrValuePaddingCell = rowKey.length < rowAttrs.length ? _react2.default.createElement(\n          'th',\n          {\n            className: 'pvtRowLabel pvtSubtotalLabel',\n            key: 'rowKeyBuffer',\n            colSpan: rowAttrs.length - rowKey.length + colIncrSpan,\n            rowSpan: 1,\n            onClick: this.clickHeaderHandler(pivotData, rowKey, this.props.rows, rowKey.length, this.props.tableOptions.clickRowHeaderCallback, true)\n          },\n          'Subtotal'\n        ) : null;\n\n        var rowClickHandlers = cellCallbacks[flatRowKey] || {};\n        var valueCells = visibleColKeys.map(function (colKey) {\n          var flatColKey = (0, _Utilities.flatKey)(colKey);\n          var agg = pivotData.getAggregator(rowKey, colKey);\n          var aggValue = agg.value();\n          var style = Object.assign({}, agg.isSubtotal ? { fontWeight: 'bold' } : valueCellColors(rowKey, colKey, aggValue), cellStyle);\n          return _react2.default.createElement(\n            'td',\n            {\n              className: 'pvtVal',\n              key: 'pvtVal-' + flatColKey,\n              onClick: rowClickHandlers[flatColKey],\n              style: style\n            },\n            agg.isSubtotal ? agg.format(aggValue) : valueCellBar(rowKey, colKey, aggValue, agg.format(aggValue))\n          );\n        });\n\n        var totalCell = null;\n        if (rowTotals) {\n          var agg = pivotData.getAggregator(rowKey, []);\n          var aggValue = agg.value();\n          totalCell = _react2.default.createElement(\n            'td',\n            {\n              key: 'total',\n              className: 'pvtTotal',\n              onClick: rowTotalCallbacks[flatRowKey],\n              style: cellStyle\n            },\n            agg.format(aggValue)\n          );\n        }\n\n        var rowCells = [].concat(_toConsumableArray(attrValueCells), [attrValuePaddingCell], _toConsumableArray(valueCells), [totalCell]);\n\n        return _react2.default.createElement(\n          'tr',\n          { key: 'keyRow-' + flatRowKey },\n          rowCells\n        );\n      }\n    }, {\n      key: 'renderTotalsRow',\n      value: function renderTotalsRow(pivotSettings) {\n        // Render the final totals rows that has the totals for all the columns.\n\n        var rowAttrs = pivotSettings.rowAttrs,\n            colAttrs = pivotSettings.colAttrs,\n            visibleColKeys = pivotSettings.visibleColKeys,\n            rowTotals = pivotSettings.rowTotals,\n            pivotData = pivotSettings.pivotData,\n            cellStyle = pivotSettings.cellStyle,\n            colTotalCallbacks = pivotSettings.colTotalCallbacks,\n            grandTotalCallback = pivotSettings.grandTotalCallback;\n\n\n        var totalLabelCell = _react2.default.createElement(\n          'th',\n          {\n            key: 'label',\n            className: 'pvtTotalLabel pvtRowTotalLabel',\n            colSpan: rowAttrs.length + Math.min(colAttrs.length, 1),\n            onClick: this.clickHeaderHandler(pivotData, [], this.props.rows, 0, this.props.tableOptions.clickRowHeaderCallback, false, true)\n          },\n          'Totals'\n        );\n\n        var totalValueStyle = Object.assign({}, cellStyle, {\n          padding: '5px'\n        });\n        var totalValueCells = visibleColKeys.map(function (colKey) {\n          var flatColKey = (0, _Utilities.flatKey)(colKey);\n          var agg = pivotData.getAggregator([], colKey);\n          var aggValue = agg.value();\n\n          return _react2.default.createElement(\n            'td',\n            {\n              className: 'pvtTotal pvtRowTotal',\n              key: 'total-' + flatColKey,\n              onClick: colTotalCallbacks[flatColKey],\n              style: totalValueStyle\n            },\n            agg.format(aggValue)\n          );\n        });\n\n        var grandTotalCell = null;\n        if (rowTotals) {\n          var agg = pivotData.getAggregator([], []);\n          var aggValue = agg.value();\n          grandTotalCell = _react2.default.createElement(\n            'td',\n            {\n              key: 'total',\n              className: 'pvtGrandTotal pvtRowTotal',\n              onClick: grandTotalCallback\n            },\n            agg.format(aggValue)\n          );\n        }\n\n        var totalCells = [totalLabelCell].concat(_toConsumableArray(totalValueCells), [grandTotalCell]);\n\n        return _react2.default.createElement(\n          'tr',\n          { key: 'total' },\n          totalCells\n        );\n      }\n    }, {\n      key: 'visibleKeys',\n      value: function visibleKeys(keys, collapsed, numAttrs, subtotalDisplay) {\n        return keys.filter(function (key) {\n          return (\n            // Is the key hidden by one of its parents?\n            !key.some(function (k, j) {\n              return collapsed[(0, _Utilities.flatKey)(key.slice(0, j))];\n            }) && (\n            // Leaf key.\n            key.length === numAttrs ||\n            // Children hidden. Must show total.\n            (0, _Utilities.flatKey)(key) in collapsed ||\n            // Don't hide totals.\n            !subtotalDisplay.hideOnExpand)\n          );\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this9 = this;\n\n        if (this.cachedProps !== this.props) {\n          this.cachedProps = this.props;\n          this.cachedBasePivotSettings = this.getBasePivotSettings();\n        }\n        var _cachedBasePivotSetti = this.cachedBasePivotSettings,\n            colAttrs = _cachedBasePivotSetti.colAttrs,\n            rowAttrs = _cachedBasePivotSetti.rowAttrs,\n            rowKeys = _cachedBasePivotSetti.rowKeys,\n            colKeys = _cachedBasePivotSetti.colKeys,\n            colTotals = _cachedBasePivotSetti.colTotals,\n            rowSubtotalDisplay = _cachedBasePivotSetti.rowSubtotalDisplay,\n            colSubtotalDisplay = _cachedBasePivotSetti.colSubtotalDisplay;\n\n        // Need to account for exclusions to compute the effective row\n        // and column keys.\n\n        var visibleRowKeys = opts.subtotals ? this.visibleKeys(rowKeys, this.state.collapsedRows, rowAttrs.length, rowSubtotalDisplay) : rowKeys;\n        var visibleColKeys = opts.subtotals ? this.visibleKeys(colKeys, this.state.collapsedCols, colAttrs.length, colSubtotalDisplay) : colKeys;\n\n        var pivotSettings = Object.assign({\n          visibleRowKeys: visibleRowKeys,\n          maxRowVisible: Math.max.apply(Math, _toConsumableArray(visibleRowKeys.map(function (k) {\n            return k.length;\n          }))),\n          visibleColKeys: visibleColKeys,\n          maxColVisible: Math.max.apply(Math, _toConsumableArray(visibleColKeys.map(function (k) {\n            return k.length;\n          }))),\n          rowAttrSpans: this.calcAttrSpans(visibleRowKeys, rowAttrs.length),\n          colAttrSpans: this.calcAttrSpans(visibleColKeys, colAttrs.length)\n        }, this.cachedBasePivotSettings);\n\n        return _react2.default.createElement(\n          'table',\n          { className: 'pvtTable' },\n          _react2.default.createElement(\n            'thead',\n            null,\n            colAttrs.map(function (c, j) {\n              return _this9.renderColHeaderRow(c, j, pivotSettings);\n            }),\n            rowAttrs.length !== 0 && this.renderRowHeaderRow(pivotSettings)\n          ),\n          _react2.default.createElement(\n            'tbody',\n            null,\n            visibleRowKeys.map(function (r, i) {\n              return _this9.renderTableRow(r, i, pivotSettings);\n            }),\n            colTotals && this.renderTotalsRow(pivotSettings)\n          )\n        );\n      }\n    }], [{\n      key: 'heatmapMappers',\n      value: function heatmapMappers(pivotData, colorScaleGenerator, colTotals, rowTotals) {\n        var valueCellColors = function valueCellColors() {\n          return {};\n        };\n        var rowTotalColors = function rowTotalColors() {\n          return {};\n        };\n        var colTotalColors = function colTotalColors() {\n          return {};\n        };\n        if (opts.heatmapMode) {\n          if (colTotals) {\n            var colTotalValues = Object.values(pivotData.colTotals).map(function (a) {\n              return a.value();\n            });\n            colTotalColors = colorScaleGenerator(colTotalValues);\n          }\n          if (rowTotals) {\n            var rowTotalValues = Object.values(pivotData.rowTotals).map(function (a) {\n              return a.value();\n            });\n            rowTotalColors = colorScaleGenerator(rowTotalValues);\n          }\n          if (opts.heatmapMode === 'full') {\n            var allValues = [];\n            Object.values(pivotData.tree).map(function (cd) {\n              return Object.values(cd).map(function (a) {\n                return !a.isSubtotal && allValues.push(a.value());\n              });\n            });\n            var colorScale = colorScaleGenerator(allValues);\n            valueCellColors = function valueCellColors(r, c, v) {\n              return colorScale(v);\n            };\n          } else if (opts.heatmapMode === 'row') {\n            var rowColorScales = {};\n            Object.entries(pivotData.tree).map(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  rk = _ref2[0],\n                  cd = _ref2[1];\n\n              var rowValues = Object.values(cd).map(function (a) {\n                return !a.isSubtotal && a.value();\n              });\n              rowColorScales[rk] = colorScaleGenerator(rowValues);\n            });\n            valueCellColors = function valueCellColors(r, c, v) {\n              return rowColorScales[(0, _Utilities.flatKey)(r)](v);\n            };\n          } else if (opts.heatmapMode === 'col') {\n            var colColorScales = {};\n            var colValues = {};\n            Object.values(pivotData.tree).map(function (cd) {\n              return Object.entries(cd).map(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                    ck = _ref4[0],\n                    a = _ref4[1];\n\n                if (!(ck in colValues)) {\n                  colValues[ck] = [];\n                }\n                if (!a.isSubtotal) {\n                  colValues[ck].push(a.value());\n                }\n              });\n            });\n            for (var k in colValues) {\n              colColorScales[k] = colorScaleGenerator(colValues[k]);\n            }\n            valueCellColors = function valueCellColors(r, c, v) {\n              return colColorScales[(0, _Utilities.flatKey)(c)](v);\n            };\n          }\n        }\n        return { valueCellColors: valueCellColors, rowTotalColors: rowTotalColors, colTotalColors: colTotalColors };\n      }\n    }, {\n      key: 'barchartMapper',\n      value: function barchartMapper(pivotData, barScaleGenerator, colTotals, rowTotals) {\n        var cellStyle = {};\n        var valueCellBar = function valueCellBar(r, c, v, t) {\n          return t;\n        };\n        var rowTotalBar = function rowTotalBar(v, t) {\n          return t;\n        };\n        var colTotalBar = function colTotalBar(v, t) {\n          return t;\n        };\n\n        if (opts.barchartMode) {\n          cellStyle = {\n            textAlign: 'center',\n            padding: 0,\n            paddingTop: '5px',\n            height: '60px'\n          };\n          if (colTotals) {\n            var colTotalValues = Object.values(pivotData.colTotals).filter(function (a) {\n              return !a.isSubtotal;\n            }).map(function (a) {\n              return a.value();\n            });\n            colTotalBar = barScaleGenerator(colTotalValues);\n          }\n          if (rowTotals) {\n            var rowTotalValues = Object.values(pivotData.rowTotals).filter(function (a) {\n              return !a.isSubtotal;\n            }).map(function (a) {\n              return a.value();\n            });\n            rowTotalBar = barScaleGenerator(rowTotalValues);\n          }\n          if (opts.barchartMode === 'full') {\n            var allValues = [];\n            Object.values(pivotData.tree).map(function (cd) {\n              return Object.values(cd).map(function (a) {\n                return !a.isSubtotal && allValues.push(a.value());\n              });\n            });\n            var barScales = barScaleGenerator(allValues);\n            valueCellBar = function valueCellBar(r, c, v, t) {\n              return barScales(v, t);\n            };\n          } else if (opts.barchartMode === 'row') {\n            var rowBarScales = {};\n            Object.entries(pivotData.tree).map(function (_ref5) {\n              var _ref6 = _slicedToArray(_ref5, 2),\n                  rk = _ref6[0],\n                  cd = _ref6[1];\n\n              var rowValues = Object.values(cd).map(function (a) {\n                return !a.isSubtotal && a.value();\n              });\n              rowBarScales[rk] = barScaleGenerator(rowValues);\n            });\n            valueCellBar = function valueCellBar(r, c, v, t) {\n              return rowBarScales[(0, _Utilities.flatKey)(r)](v, t);\n            };\n          } else if (opts.barchartMode === 'col') {\n            var colBarScales = {};\n            var colValues = {};\n            Object.values(pivotData.tree).map(function (cd) {\n              return Object.entries(cd).map(function (_ref7) {\n                var _ref8 = _slicedToArray(_ref7, 2),\n                    ck = _ref8[0],\n                    a = _ref8[1];\n\n                if (!(ck in colValues)) {\n                  colValues[ck] = [];\n                }\n                if (!a.isSubtotal) {\n                  colValues[ck].push(a.value());\n                }\n              });\n            });\n            for (var k in colValues) {\n              colBarScales[k] = barScaleGenerator(colValues[k]);\n            }\n            valueCellBar = function valueCellBar(r, c, v, t) {\n              return colBarScales[(0, _Utilities.flatKey)(c)](v, t);\n            };\n          }\n        }\n        return { cellStyle: cellStyle, valueCellBar: valueCellBar, rowTotalBar: rowTotalBar, colTotalBar: colTotalBar };\n      }\n    }]);\n\n    return TableRenderer;\n  }(_react2.default.Component);\n\n  TableRenderer.defaultProps = _Utilities.PivotData.defaultProps;\n  TableRenderer.propTypes = _Utilities.PivotData.propTypes;\n  TableRenderer.defaultProps.tableColorScaleGenerator = redColorScaleGenerator;\n  TableRenderer.defaultProps.barScaleGenerator = defaultBarchartScaleGenerator;\n  TableRenderer.defaultProps.tableOptions = {};\n  TableRenderer.propTypes.tableColorScaleGenerator = _propTypes2.default.func;\n  TableRenderer.propTypes.tableOptions = _propTypes2.default.object;\n  return TableRenderer;\n}\n\nvar TSVExportRenderer = function (_React$PureComponent) {\n  _inherits(TSVExportRenderer, _React$PureComponent);\n\n  function TSVExportRenderer() {\n    _classCallCheck(this, TSVExportRenderer);\n\n    return _possibleConstructorReturn(this, (TSVExportRenderer.__proto__ || Object.getPrototypeOf(TSVExportRenderer)).apply(this, arguments));\n  }\n\n  _createClass(TSVExportRenderer, [{\n    key: 'render',\n    value: function render() {\n      var pivotData = new _Utilities.PivotData(this.props);\n      var rowKeys = pivotData.getRowKeys();\n      var colKeys = pivotData.getColKeys();\n      if (rowKeys.length === 0) {\n        rowKeys.push([]);\n      }\n      if (colKeys.length === 0) {\n        colKeys.push([]);\n      }\n\n      var headerRow = pivotData.props.rows.map(function (r) {\n        return r;\n      });\n      if (colKeys.length === 1 && colKeys[0].length === 0) {\n        headerRow.push(this.props.aggregatorName);\n      } else {\n        colKeys.map(function (c) {\n          return headerRow.push(c.join('-'));\n        });\n      }\n\n      var result = rowKeys.map(function (r) {\n        var row = r.map(function (x) {\n          return x;\n        });\n        colKeys.map(function (c) {\n          var v = pivotData.getAggregator(r, c).value();\n          row.push(v ? v : '');\n        });\n        return row;\n      });\n\n      result.unshift(headerRow);\n\n      return _react2.default.createElement('textarea', {\n        value: result.map(function (r) {\n          return r.join('\\t');\n        }).join('\\n'),\n        style: { width: window.innerWidth / 2, height: window.innerHeight / 2 },\n        readOnly: true\n      });\n    }\n  }]);\n\n  return TSVExportRenderer;\n}(_react2.default.PureComponent);\n\nTSVExportRenderer.defaultProps = _Utilities.PivotData.defaultProps;\nTSVExportRenderer.propTypes = _Utilities.PivotData.propTypes;\n\nexports.default = {\n  Table: makeRenderer(),\n  'Table Heatmap': makeRenderer({ heatmapMode: 'full' }),\n  'Table Col Heatmap': makeRenderer({ heatmapMode: 'col' }),\n  'Table Row Heatmap': makeRenderer({ heatmapMode: 'row' }),\n  'Table Barchart': makeRenderer({ barchartMode: 'full' }),\n  'Table Col Barchart': makeRenderer({ barchartMode: 'col' }),\n  'Table Row Barchart': makeRenderer({ barchartMode: 'row' }),\n  'Table With Subtotal': makeRenderer({ subtotals: true }),\n  'Table With Subtotal Heatmap': makeRenderer({\n    heatmapMode: 'full',\n    subtotals: true\n  }),\n  'Table With Subtotal Col Heatmap': makeRenderer({\n    heatmapMode: 'col',\n    subtotals: true\n  }),\n  'Table With Subtotal Row Heatmap': makeRenderer({\n    heatmapMode: 'row',\n    subtotals: true\n  }),\n  'Table With Subtotal Barchart': makeRenderer({\n    barchartMode: 'full',\n    subtotals: true\n  }),\n  'Table With Subtotal Col Barchart': makeRenderer({\n    barchartMode: 'col',\n    subtotals: true\n  }),\n  'Table With Subtotal Row Barchart': makeRenderer({\n    barchartMode: 'row',\n    subtotals: true\n  }),\n  'Exportable TSV': TSVExportRenderer\n};\nmodule.exports = exports.default;\n//# sourceMappingURL=TableRenderers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/react-pivottable/TableRenderers.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/react-pivottable/Utilities.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@superset-ui/react-pivottable/Utilities.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PivotData = exports.flatKey = exports.sortAs = exports.getSort = exports.numberFormat = exports.naturalSort = exports.locales = exports.derivers = exports.aggregators = exports.aggregatorTemplates = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS201: Simplify complex destructure assignments\n * DS203: Remove `|| {}` from converted for-own loops\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\nvar addSeparators = function addSeparators(nStr, thousandsSep, decimalSep) {\n  var x = String(nStr).split('.');\n  var x1 = x[0];\n  var x2 = x.length > 1 ? decimalSep + x[1] : '';\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n  }\n  return x1 + x2;\n};\n\nvar numberFormat = function numberFormat(opts_in) {\n  var defaults = {\n    digitsAfterDecimal: 2,\n    scaler: 1,\n    thousandsSep: ',',\n    decimalSep: '.',\n    prefix: '',\n    suffix: ''\n  };\n  var opts = Object.assign({}, defaults, opts_in);\n  return function (x) {\n    if (isNaN(x) || !isFinite(x)) {\n      return '';\n    }\n    var result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n    return '' + opts.prefix + result + opts.suffix;\n  };\n};\n\nvar rx = /(\\d+)|(\\D+)/g;\nvar rd = /\\d/;\nvar rz = /^0/;\nvar naturalSort = function naturalSort(as, bs) {\n  // nulls first\n  if (bs !== null && as === null) {\n    return -1;\n  }\n  if (as !== null && bs === null) {\n    return 1;\n  }\n\n  // then raw NaNs\n  if (typeof as === 'number' && isNaN(as)) {\n    return -1;\n  }\n  if (typeof bs === 'number' && isNaN(bs)) {\n    return 1;\n  }\n\n  // numbers and numbery strings group together\n  var nas = Number(as);\n  var nbs = Number(bs);\n  if (nas < nbs) {\n    return -1;\n  }\n  if (nas > nbs) {\n    return 1;\n  }\n\n  // within that, true numbers before numbery strings\n  if (typeof as === 'number' && typeof bs !== 'number') {\n    return -1;\n  }\n  if (typeof bs === 'number' && typeof as !== 'number') {\n    return 1;\n  }\n  if (typeof as === 'number' && typeof bs === 'number') {\n    return 0;\n  }\n\n  // 'Infinity' is a textual number, so less than 'A'\n  if (isNaN(nbs) && !isNaN(nas)) {\n    return -1;\n  }\n  if (isNaN(nas) && !isNaN(nbs)) {\n    return 1;\n  }\n\n  // finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n  var a = String(as);\n  var b = String(bs);\n  if (a === b) {\n    return 0;\n  }\n  if (!rd.test(a) || !rd.test(b)) {\n    return a > b ? 1 : -1;\n  }\n\n  // special treatment for strings containing digits\n  a = a.match(rx);\n  b = b.match(rx);\n  while (a.length && b.length) {\n    var a1 = a.shift();\n    var b1 = b.shift();\n    if (a1 !== b1) {\n      if (rd.test(a1) && rd.test(b1)) {\n        return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n      }\n      return a1 > b1 ? 1 : -1;\n    }\n  }\n  return a.length - b.length;\n};\n\nvar sortAs = function sortAs(order) {\n  var mapping = {};\n\n  // sort lowercased keys similarly\n  var l_mapping = {};\n  for (var i in order) {\n    var x = order[i];\n    mapping[x] = i;\n    if (typeof x === 'string') {\n      l_mapping[x.toLowerCase()] = i;\n    }\n  }\n  return function (a, b) {\n    if (a in mapping && b in mapping) {\n      return mapping[a] - mapping[b];\n    } else if (a in mapping) {\n      return -1;\n    } else if (b in mapping) {\n      return 1;\n    } else if (a in l_mapping && b in l_mapping) {\n      return l_mapping[a] - l_mapping[b];\n    } else if (a in l_mapping) {\n      return -1;\n    } else if (b in l_mapping) {\n      return 1;\n    }\n    return naturalSort(a, b);\n  };\n};\n\nvar getSort = function getSort(sorters, attr) {\n  if (sorters) {\n    if (typeof sorters === 'function') {\n      var sort = sorters(attr);\n      if (typeof sort === 'function') {\n        return sort;\n      }\n    } else if (attr in sorters) {\n      return sorters[attr];\n    }\n  }\n  return naturalSort;\n};\n\n// aggregator templates default to US number formatting but this is overrideable\nvar usFmt = numberFormat();\nvar usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\nvar usFmtPct = numberFormat({\n  digitsAfterDecimal: 1,\n  scaler: 100,\n  suffix: '%'\n});\n\nvar aggregatorTemplates = {\n  count: function count() {\n    var formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : usFmtInt;\n\n    return function () {\n      return function () {\n        return {\n          count: 0,\n          push: function push() {\n            this.count++;\n          },\n          value: function value() {\n            return this.count;\n          },\n\n          format: formatter\n        };\n      };\n    };\n  },\n  uniques: function uniques(fn) {\n    var formatter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : usFmtInt;\n\n    return function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          attr = _ref2[0];\n\n      return function () {\n        return {\n          uniq: [],\n          push: function push(record) {\n            if (!Array.from(this.uniq).includes(record[attr])) {\n              this.uniq.push(record[attr]);\n            }\n          },\n          value: function value() {\n            return fn(this.uniq);\n          },\n\n          format: formatter,\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n  sum: function sum() {\n    var formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : usFmt;\n\n    return function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          attr = _ref4[0];\n\n      return function () {\n        return {\n          sum: 0,\n          push: function push(record) {\n            if (!isNaN(parseFloat(record[attr]))) {\n              this.sum += parseFloat(record[attr]);\n            }\n          },\n          value: function value() {\n            return this.sum;\n          },\n\n          format: formatter,\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n  extremes: function extremes(mode) {\n    var formatter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : usFmt;\n\n    return function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n          attr = _ref6[0];\n\n      return function (data) {\n        return {\n          val: null,\n          sorter: getSort(typeof data !== 'undefined' ? data.sorters : null, attr),\n          push: function push(record) {\n            var x = record[attr];\n            if (['min', 'max'].includes(mode)) {\n              x = parseFloat(x);\n              if (!isNaN(x)) {\n                this.val = Math[mode](x, this.val !== null ? this.val : x);\n              }\n            }\n            if (mode === 'first' && this.sorter(x, this.val !== null ? this.val : x) <= 0) {\n              this.val = x;\n            }\n            if (mode === 'last' && this.sorter(x, this.val !== null ? this.val : x) >= 0) {\n              this.val = x;\n            }\n          },\n          value: function value() {\n            return this.val;\n          },\n          format: function format(x) {\n            if (isNaN(x)) {\n              return x;\n            }\n            return formatter(x);\n          },\n\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n  quantile: function quantile(q) {\n    var formatter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : usFmt;\n\n    return function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          attr = _ref8[0];\n\n      return function () {\n        return {\n          vals: [],\n          push: function push(record) {\n            var x = parseFloat(record[attr]);\n            if (!isNaN(x)) {\n              this.vals.push(x);\n            }\n          },\n          value: function value() {\n            if (this.vals.length === 0) {\n              return null;\n            }\n            this.vals.sort(function (a, b) {\n              return a - b;\n            });\n            var i = (this.vals.length - 1) * q;\n            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n          },\n\n          format: formatter,\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n  runningStat: function runningStat() {\n    var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mean';\n    var ddof = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var formatter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : usFmt;\n\n    return function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n          attr = _ref10[0];\n\n      return function () {\n        return {\n          n: 0.0,\n          m: 0.0,\n          s: 0.0,\n          push: function push(record) {\n            var x = parseFloat(record[attr]);\n            if (isNaN(x)) {\n              return;\n            }\n            this.n += 1.0;\n            if (this.n === 1.0) {\n              this.m = x;\n            }\n            var m_new = this.m + (x - this.m) / this.n;\n            this.s = this.s + (x - this.m) * (x - m_new);\n            this.m = m_new;\n          },\n          value: function value() {\n            if (mode === 'mean') {\n              if (this.n === 0) {\n                return 0 / 0;\n              }\n              return this.m;\n            }\n            if (this.n <= ddof) {\n              return 0;\n            }\n            switch (mode) {\n              case 'var':\n                return this.s / (this.n - ddof);\n              case 'stdev':\n                return Math.sqrt(this.s / (this.n - ddof));\n              default:\n                throw new Error('unknown mode for runningStat');\n            }\n          },\n\n          format: formatter,\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n  sumOverSum: function sumOverSum() {\n    var formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : usFmt;\n\n    return function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n          num = _ref12[0],\n          denom = _ref12[1];\n\n      return function () {\n        return {\n          sumNum: 0,\n          sumDenom: 0,\n          push: function push(record) {\n            if (!isNaN(parseFloat(record[num]))) {\n              this.sumNum += parseFloat(record[num]);\n            }\n            if (!isNaN(parseFloat(record[denom]))) {\n              this.sumDenom += parseFloat(record[denom]);\n            }\n          },\n          value: function value() {\n            return this.sumNum / this.sumDenom;\n          },\n\n          format: formatter,\n          numInputs: typeof num !== 'undefined' && typeof denom !== 'undefined' ? 0 : 2\n        };\n      };\n    };\n  },\n  fractionOf: function fractionOf(wrapped) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'total';\n    var formatter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : usFmtPct;\n\n    return function () {\n      for (var _len = arguments.length, x = Array(_len), _key = 0; _key < _len; _key++) {\n        x[_key] = arguments[_key];\n      }\n\n      return function (data, rowKey, colKey) {\n        return {\n          selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n          inner: wrapped.apply(undefined, _toConsumableArray(Array.from(x || [])))(data, rowKey, colKey),\n          push: function push(record) {\n            this.inner.push(record);\n          },\n\n          format: formatter,\n          value: function value() {\n            return this.inner.value() / data.getAggregator.apply(data, _toConsumableArray(Array.from(this.selector || []))).inner.value();\n          },\n\n          numInputs: wrapped.apply(undefined, _toConsumableArray(Array.from(x || [])))().numInputs\n        };\n      };\n    };\n  }\n};\n\naggregatorTemplates.countUnique = function (f) {\n  return aggregatorTemplates.uniques(function (x) {\n    return x.length;\n  }, f);\n};\naggregatorTemplates.listUnique = function (s) {\n  return aggregatorTemplates.uniques(function (x) {\n    return x.join(s);\n  }, function (x) {\n    return x;\n  });\n};\naggregatorTemplates.max = function (f) {\n  return aggregatorTemplates.extremes('max', f);\n};\naggregatorTemplates.min = function (f) {\n  return aggregatorTemplates.extremes('min', f);\n};\naggregatorTemplates.first = function (f) {\n  return aggregatorTemplates.extremes('first', f);\n};\naggregatorTemplates.last = function (f) {\n  return aggregatorTemplates.extremes('last', f);\n};\naggregatorTemplates.median = function (f) {\n  return aggregatorTemplates.quantile(0.5, f);\n};\naggregatorTemplates.average = function (f) {\n  return aggregatorTemplates.runningStat('mean', 1, f);\n};\naggregatorTemplates.var = function (ddof, f) {\n  return aggregatorTemplates.runningStat('var', ddof, f);\n};\naggregatorTemplates.stdev = function (ddof, f) {\n  return aggregatorTemplates.runningStat('stdev', ddof, f);\n};\n\n// default aggregators & renderers use US naming and number formatting\nvar aggregators = function (tpl) {\n  return {\n    Count: tpl.count(usFmtInt),\n    'Count Unique Values': tpl.countUnique(usFmtInt),\n    'List Unique Values': tpl.listUnique(', '),\n    Sum: tpl.sum(usFmt),\n    'Integer Sum': tpl.sum(usFmtInt),\n    Average: tpl.average(usFmt),\n    Median: tpl.median(usFmt),\n    'Sample Variance': tpl.var(1, usFmt),\n    'Sample Standard Deviation': tpl.stdev(1, usFmt),\n    Minimum: tpl.min(usFmt),\n    Maximum: tpl.max(usFmt),\n    First: tpl.first(usFmt),\n    Last: tpl.last(usFmt),\n    'Sum over Sum': tpl.sumOverSum(usFmt),\n    'Sum as Fraction of Total': tpl.fractionOf(tpl.sum(), 'total', usFmtPct),\n    'Sum as Fraction of Rows': tpl.fractionOf(tpl.sum(), 'row', usFmtPct),\n    'Sum as Fraction of Columns': tpl.fractionOf(tpl.sum(), 'col', usFmtPct),\n    'Count as Fraction of Total': tpl.fractionOf(tpl.count(), 'total', usFmtPct),\n    'Count as Fraction of Rows': tpl.fractionOf(tpl.count(), 'row', usFmtPct),\n    'Count as Fraction of Columns': tpl.fractionOf(tpl.count(), 'col', usFmtPct)\n  };\n}(aggregatorTemplates);\n\nvar locales = {\n  en: {\n    aggregators: aggregators,\n    localeStrings: {\n      renderError: 'An error occurred rendering the PivotTable results.',\n      computeError: 'An error occurred computing the PivotTable results.',\n      uiRenderError: 'An error occurred rendering the PivotTable UI.',\n      selectAll: 'Select All',\n      selectNone: 'Select None',\n      tooMany: '(too many to list)',\n      filterResults: 'Filter values',\n      apply: 'Apply',\n      cancel: 'Cancel',\n      totals: 'Totals',\n      vs: 'vs',\n      by: 'by'\n    }\n  }\n};\n\n// dateFormat deriver l10n requires month and day names to be passed in directly\nvar mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar zeroPad = function zeroPad(number) {\n  return ('0' + number).substr(-2, 2);\n}; // eslint-disable-line no-magic-numbers\n\nvar derivers = {\n  bin: function bin(col, binWidth) {\n    return function (record) {\n      return record[col] - record[col] % binWidth;\n    };\n  },\n  dateFormat: function dateFormat(col, formatString) {\n    var utcOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var mthNames = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : mthNamesEn;\n    var dayNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : dayNamesEn;\n\n    var utc = utcOutput ? 'UTC' : '';\n    return function (record) {\n      var date = new Date(Date.parse(record[col]));\n      if (isNaN(date)) {\n        return '';\n      }\n      return formatString.replace(/%(.)/g, function (m, p) {\n        switch (p) {\n          case 'y':\n            return date['get' + utc + 'FullYear']();\n          case 'm':\n            return zeroPad(date['get' + utc + 'Month']() + 1);\n          case 'n':\n            return mthNames[date['get' + utc + 'Month']()];\n          case 'd':\n            return zeroPad(date['get' + utc + 'Date']());\n          case 'w':\n            return dayNames[date['get' + utc + 'Day']()];\n          case 'x':\n            return date['get' + utc + 'Day']();\n          case 'H':\n            return zeroPad(date['get' + utc + 'Hours']());\n          case 'M':\n            return zeroPad(date['get' + utc + 'Minutes']());\n          case 'S':\n            return zeroPad(date['get' + utc + 'Seconds']());\n          default:\n            return '%' + p;\n        }\n      });\n    };\n  }\n};\n\n// Given an array of attribute values, convert to a key that\n// can be used in objects.\nvar flatKey = function flatKey(attrVals) {\n  return attrVals.join(String.fromCharCode(0));\n};\n\n/*\nData Model class\n*/\n\nvar PivotData = function () {\n  function PivotData() {\n    var _this = this;\n\n    var inputProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var subtotals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PivotData);\n\n    this.props = Object.assign({}, PivotData.defaultProps, inputProps);\n    _propTypes2.default.checkPropTypes(PivotData.propTypes, this.props, 'prop', 'PivotData');\n\n    this.aggregator = this.props.aggregators[this.props.aggregatorName](this.props.vals);\n    this.tree = {};\n    this.rowKeys = [];\n    this.colKeys = [];\n    this.rowTotals = {};\n    this.colTotals = {};\n    this.allTotal = this.aggregator(this, [], []);\n    this.subtotals = subtotals;\n    this.sorted = false;\n\n    // iterate through input, accumulating data for cells\n    PivotData.forEachRecord(this.props.data, this.props.derivedAttributes, function (record) {\n      if (_this.filter(record)) {\n        _this.processRecord(record);\n      }\n    });\n  }\n\n  _createClass(PivotData, [{\n    key: 'filter',\n    value: function filter(record) {\n      for (var k in this.props.valueFilter) {\n        if (record[k] in this.props.valueFilter[k]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'forEachMatchingRecord',\n    value: function forEachMatchingRecord(criteria, callback) {\n      var _this2 = this;\n\n      return PivotData.forEachRecord(this.props.data, this.props.derivedAttributes, function (record) {\n        if (!_this2.filter(record)) {\n          return;\n        }\n        for (var k in criteria) {\n          var v = criteria[k];\n          if (v !== (k in record ? record[k] : 'null')) {\n            return;\n          }\n        }\n        callback(record);\n      });\n    }\n  }, {\n    key: 'arrSort',\n    value: function arrSort(attrs, partialOnTop) {\n      var _this3 = this;\n\n      var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var sortersArr = attrs.map(function (a) {\n        return getSort(_this3.props.sorters, a);\n      });\n      return function (a, b) {\n        var limit = Math.min(a.length, b.length);\n        for (var i = 0; i < limit; i++) {\n          var sorter = sortersArr[i];\n          var comparison = reverse ? sorter(b[i], a[i]) : sorter(a[i], b[i]);\n          if (comparison !== 0) {\n            return comparison;\n          }\n        }\n        return partialOnTop ? a.length - b.length : b.length - a.length;\n      };\n    }\n  }, {\n    key: 'sortKeys',\n    value: function sortKeys() {\n      var _this4 = this;\n\n      if (!this.sorted) {\n        this.sorted = true;\n        var v = function v(r, c) {\n          return _this4.getAggregator(r, c).value();\n        };\n        switch (this.props.rowOrder) {\n          case 'key_z_to_a':\n            this.rowKeys.sort(this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop, true));\n            break;\n          case 'value_a_to_z':\n            this.rowKeys.sort(function (a, b) {\n              return naturalSort(v(a, []), v(b, []));\n            });\n            break;\n          case 'value_z_to_a':\n            this.rowKeys.sort(function (a, b) {\n              return -naturalSort(v(a, []), v(b, []));\n            });\n            break;\n          default:\n            this.rowKeys.sort(this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop));\n        }\n        switch (this.props.colOrder) {\n          case 'key_z_to_a':\n            this.colKeys.sort(this.arrSort(this.props.cols, this.subtotals.colPartialOnTop, true));\n            break;\n          case 'value_a_to_z':\n            this.colKeys.sort(function (a, b) {\n              return naturalSort(v([], a), v([], b));\n            });\n            break;\n          case 'value_z_to_a':\n            this.colKeys.sort(function (a, b) {\n              return -naturalSort(v([], a), v([], b));\n            });\n            break;\n          default:\n            this.colKeys.sort(this.arrSort(this.props.cols, this.subtotals.colPartialOnTop));\n        }\n      }\n    }\n  }, {\n    key: 'getColKeys',\n    value: function getColKeys() {\n      this.sortKeys();\n      return this.colKeys;\n    }\n  }, {\n    key: 'getRowKeys',\n    value: function getRowKeys() {\n      this.sortKeys();\n      return this.rowKeys;\n    }\n  }, {\n    key: 'processRecord',\n    value: function processRecord(record) {\n      // this code is called in a tight loop\n      var colKey = [];\n      var rowKey = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.cols[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var x = _step.value;\n\n          colKey.push(x in record ? record[x] : 'null');\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.props.rows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _x18 = _step2.value;\n\n          rowKey.push(_x18 in record ? record[_x18] : 'null');\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.allTotal.push(record);\n\n      var rowStart = this.subtotals.rowEnabled ? 1 : Math.max(1, rowKey.length);\n      var colStart = this.subtotals.colEnabled ? 1 : Math.max(1, colKey.length);\n\n      var isRowSubtotal = void 0,\n          isColSubtotal = void 0;\n      for (var ri = rowStart; ri <= rowKey.length; ri++) {\n        isRowSubtotal = ri < rowKey.length;\n        var fRowKey = rowKey.slice(0, ri);\n        var flatRowKey = flatKey(fRowKey);\n        if (!this.rowTotals[flatRowKey]) {\n          this.rowKeys.push(fRowKey);\n          this.rowTotals[flatRowKey] = this.aggregator(this, fRowKey, []);\n        }\n        this.rowTotals[flatRowKey].push(record);\n        this.rowTotals[flatRowKey].isSubtotal = isRowSubtotal;\n      }\n\n      for (var ci = colStart; ci <= colKey.length; ci++) {\n        isColSubtotal = ci < colKey.length;\n        var fColKey = colKey.slice(0, ci);\n        var flatColKey = flatKey(fColKey);\n        if (!this.colTotals[flatColKey]) {\n          this.colKeys.push(fColKey);\n          this.colTotals[flatColKey] = this.aggregator(this, [], fColKey);\n        }\n        this.colTotals[flatColKey].push(record);\n        this.colTotals[flatColKey].isSubtotal = isColSubtotal;\n      }\n\n      // And now fill in for all the sub-cells.\n      for (var _ri = rowStart; _ri <= rowKey.length; _ri++) {\n        isRowSubtotal = _ri < rowKey.length;\n        var _fRowKey = rowKey.slice(0, _ri);\n        var _flatRowKey = flatKey(_fRowKey);\n        if (!this.tree[_flatRowKey]) {\n          this.tree[_flatRowKey] = {};\n        }\n        for (var _ci = colStart; _ci <= colKey.length; _ci++) {\n          isColSubtotal = _ci < colKey.length;\n          var _fColKey = colKey.slice(0, _ci);\n          var _flatColKey = flatKey(_fColKey);\n          if (!this.tree[_flatRowKey][_flatColKey]) {\n            this.tree[_flatRowKey][_flatColKey] = this.aggregator(this, _fRowKey, _fColKey);\n          }\n          this.tree[_flatRowKey][_flatColKey].push(record);\n\n          this.tree[_flatRowKey][_flatColKey].isRowSubtotal = isRowSubtotal;\n          this.tree[_flatRowKey][_flatColKey].isColSubtotal = isColSubtotal;\n          this.tree[_flatRowKey][_flatColKey].isSubtotal = isRowSubtotal || isColSubtotal;\n        }\n      }\n    }\n  }, {\n    key: 'getAggregator',\n    value: function getAggregator(rowKey, colKey) {\n      var agg = void 0;\n      var flatRowKey = flatKey(rowKey);\n      var flatColKey = flatKey(colKey);\n      if (rowKey.length === 0 && colKey.length === 0) {\n        agg = this.allTotal;\n      } else if (rowKey.length === 0) {\n        agg = this.colTotals[flatColKey];\n      } else if (colKey.length === 0) {\n        agg = this.rowTotals[flatRowKey];\n      } else {\n        agg = this.tree[flatRowKey][flatColKey];\n      }\n      return agg || {\n        value: function value() {\n          return null;\n        },\n        format: function format() {\n          return '';\n        }\n      };\n    }\n  }]);\n\n  return PivotData;\n}();\n\n// can handle arrays or jQuery selections of tables\n\n\nPivotData.forEachRecord = function (input, derivedAttributes, f) {\n  var addRecord = void 0,\n      record = void 0;\n  if (Object.getOwnPropertyNames(derivedAttributes).length === 0) {\n    addRecord = f;\n  } else {\n    addRecord = function addRecord(record) {\n      for (var k in derivedAttributes) {\n        var derived = derivedAttributes[k](record);\n        if (derived !== null) {\n          record[k] = derived;\n        }\n      }\n      return f(record);\n    };\n  }\n\n  // if it's a function, have it call us back\n  if (typeof input === 'function') {\n    return input(addRecord);\n  } else if (Array.isArray(input)) {\n    if (Array.isArray(input[0])) {\n      // array of arrays\n      return function () {\n        var result = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = Object.keys(input || {})[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var i = _step3.value;\n\n            var compactRecord = input[i];\n            if (i > 0) {\n              record = {};\n              var _iteratorNormalCompletion4 = true;\n              var _didIteratorError4 = false;\n              var _iteratorError4 = undefined;\n\n              try {\n                for (var _iterator4 = Object.keys(input[0] || {})[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                  var j = _step4.value;\n\n                  var k = input[0][j];\n                  record[k] = compactRecord[j];\n                }\n              } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                  }\n                } finally {\n                  if (_didIteratorError4) {\n                    throw _iteratorError4;\n                  }\n                }\n              }\n\n              result.push(addRecord(record));\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return result;\n      }();\n    }\n\n    // array of objects\n    return function () {\n      var result1 = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = Array.from(input)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          record = _step5.value;\n\n          result1.push(addRecord(record));\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return result1;\n    }();\n  }\n  throw new Error('unknown input format');\n};\n\nPivotData.defaultProps = {\n  aggregators: aggregators,\n  cols: [],\n  rows: [],\n  vals: [],\n  aggregatorName: 'Count',\n  sorters: {},\n  valueFilter: {},\n  rowOrder: 'key_a_to_z',\n  colOrder: 'key_a_to_z',\n  derivedAttributes: {}\n};\n\nPivotData.propTypes = {\n  data: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object, _propTypes2.default.func]).isRequired,\n  aggregatorName: _propTypes2.default.string,\n  cols: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  rows: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  vals: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  valueFilter: _propTypes2.default.objectOf(_propTypes2.default.objectOf(_propTypes2.default.bool)),\n  sorters: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.objectOf(_propTypes2.default.func)]),\n  derivedAttributes: _propTypes2.default.objectOf(_propTypes2.default.func),\n  rowOrder: _propTypes2.default.oneOf(['key_a_to_z', 'key_z_to_a', 'value_a_to_z', 'value_z_to_a']),\n  colOrder: _propTypes2.default.oneOf(['key_a_to_z', 'key_z_to_a', 'value_a_to_z', 'value_z_to_a'])\n};\n\nexports.aggregatorTemplates = aggregatorTemplates;\nexports.aggregators = aggregators;\nexports.derivers = derivers;\nexports.locales = locales;\nexports.naturalSort = naturalSort;\nexports.numberFormat = numberFormat;\nexports.getSort = getSort;\nexports.sortAs = sortAs;\nexports.flatKey = flatKey;\nexports.PivotData = PivotData;\n//# sourceMappingURL=Utilities.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/react-pivottable/Utilities.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/react-pivottable/pivottable.css":
/*!*******************************************************************!*\
  !*** ./node_modules/@superset-ui/react-pivottable/pivottable.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var content = __webpack_require__(/*! !../../css-loader??ref--7-1!./pivottable.css */ \"./node_modules/css-loader/index.js?!./node_modules/@superset-ui/react-pivottable/pivottable.css\");\n\nif (typeof content === 'string') {\n  content = [[module.i, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = __webpack_require__(/*! ../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL3JlYWN0LXBpdm90dGFibGUvcGl2b3R0YWJsZS5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL3JlYWN0LXBpdm90dGFibGUvcGl2b3R0YWJsZS5jc3M/ZWI3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4vcGl2b3R0YWJsZS5jc3NcIik7XG5cbmlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xufVxuXG52YXIgb3B0aW9ucyA9IHt9XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYgKGNvbnRlbnQubG9jYWxzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/react-pivottable/pivottable.css\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/@superset-ui/react-pivottable/pivottable.css":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--7-1!./node_modules/@superset-ui/react-pivottable/pivottable.css ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".pvtUi {\\n    color: #2a3f5f;\\n    font-family: Verdana;\\n    border-collapse: collapse;\\n}\\n.pvtUi select {\\n    user-select: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtUi td.pvtOutput {\\n    vertical-align: top;\\n}\\n\\ntable.pvtTable {\\n    font-size: 8pt;\\n    text-align: left;\\n    border-collapse: collapse;\\n    margin-top: 3px;\\n    margin-left: 3px;\\n    font-family: Verdana;\\n}\\ntable.pvtTable thead tr th,\\ntable.pvtTable tbody tr th {\\n    background-color: #fff;\\n    border: 1px solid #c8d4e3;\\n    font-size: 8pt;\\n    padding: 5px;\\n    font-weight: normal;\\n}\\n\\ntable.pvtTable tr th.active {\\n    background-color: #D9DBE4;\\n}\\n\\ntable.pvtTable .pvtTotalLabel {\\n    text-align: right;\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable .pvtSubtotalLabel {\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable tbody tr td {\\n    color: #2a3f5f;\\n    padding: 5px;\\n    background-color: #fff;\\n    border: 1px solid #c8d4e3;\\n    vertical-align: top;\\n    text-align: right;\\n}\\n\\ntable.pvtTable tbody tr th.pvtRowLabel {\\n    vertical-align: baseline;\\n}\\n\\n.pvtTotal,\\n.pvtGrandTotal {\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable tbody tr td.pvtRowTotal {\\n    vertical-align: middle;\\n}\\n\\n.pvtRowOrder,\\n.pvtColOrder {\\n    cursor: pointer;\\n    width: 15px;\\n    margin-left: 5px;\\n    display: inline-block;\\n    user-select: none;\\n    text-decoration: none !important;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtColLabel.label-centered {\\n    text-align: center;\\n}\\n\\n.pvtAxisContainer,\\n.pvtVals {\\n    border: 1px solid #a2b1c6;\\n    background: #f2f5fa;\\n    padding: 5px;\\n    min-width: 20px;\\n    min-height: 20px;\\n}\\n\\n.pvtRenderers {\\n    padding-left: 5px;\\n    user-select: none;\\n}\\n\\n.pvtDropdown {\\n    display: inline-block;\\n    position: relative;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n    margin: 3px;\\n}\\n\\n.pvtDropdownIcon {\\n    float: right;\\n    color: #a2b1c6;\\n}\\n.pvtDropdownCurrent {\\n    text-align: left;\\n    border: 1px solid #a2b1c6;\\n    border-radius: 4px;\\n    display: inline-block;\\n    position: relative;\\n    width: 210px;\\n    box-sizing: border-box;\\n    background: white;\\n}\\n\\n.pvtDropdownCurrentOpen {\\n    border-radius: 4px 4px 0 0;\\n}\\n\\n.pvtDropdownMenu {\\n    background: white;\\n    position: absolute;\\n    width: 100%;\\n    margin-top: -1px;\\n    border-radius: 0 0 4px 4px;\\n    border: 1px solid #a2b1c6;\\n    border-top: 1px solid #dfe8f3;\\n    box-sizing: border-box;\\n}\\n\\n.pvtDropdownValue {\\n    padding: 2px 5px;\\n    font-size: 12px;\\n    text-align: left;\\n}\\n.pvtDropdownActiveValue {\\n    background: #ebf0f8;\\n}\\n\\n.pvtVals {\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: top;\\n    padding-bottom: 12px;\\n}\\n\\n.pvtRows {\\n    height: 35px;\\n}\\n\\n.pvtAxisContainer li {\\n    padding: 8px 6px;\\n    list-style-type: none;\\n    cursor: move;\\n}\\n.pvtAxisContainer li.pvtPlaceholder {\\n    -webkit-border-radius: 5px;\\n    padding: 3px 15px;\\n    -moz-border-radius: 5px;\\n    border-radius: 5px;\\n    border: 1px dashed #a2b1c6;\\n}\\n.pvtAxisContainer li.pvtPlaceholder span.pvtAttr {\\n    display: none;\\n}\\n\\n.pvtAxisContainer li span.pvtAttr {\\n    -webkit-text-size-adjust: 100%;\\n    background: #f3f6fa;\\n    border: 1px solid #c8d4e3;\\n    padding: 2px 5px;\\n    white-space: nowrap;\\n    -webkit-border-radius: 5px;\\n    -moz-border-radius: 5px;\\n    border-radius: 5px;\\n    user-select: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtTriangle {\\n    cursor: pointer;\\n    color: #506784;\\n}\\n\\n.pvtHorizList li {\\n    display: inline-block;\\n}\\n.pvtVertList {\\n    vertical-align: top;\\n}\\n\\n.pvtFilteredAttribute {\\n    font-style: italic;\\n}\\n\\n.sortable-chosen .pvtFilterBox {\\n    display: none !important;\\n}\\n\\n.pvtCloseX {\\n    position: absolute;\\n    right: 5px;\\n    top: 5px;\\n    font-size: 18px;\\n    cursor: pointer;\\n    text-decoration: none !important;\\n}\\n\\n.pvtDragHandle {\\n    position: absolute;\\n    left: 5px;\\n    top: 5px;\\n    font-size: 18px;\\n    cursor: move;\\n    color: #a2b1c6;\\n}\\n\\n.pvtButton {\\n    color: #506784;\\n    border-radius: 5px;\\n    padding: 3px 6px;\\n    background: #f2f5fa;\\n    border: 1px solid;\\n    border-color: #c8d4e3;\\n    font-size: 14px;\\n    margin: 3px;\\n    transition: 0.34s all cubic-bezier(0.19, 1, 0.22, 1);\\n    text-decoration: none !important;\\n}\\n\\n.pvtButton:hover {\\n    background: #e2e8f0;\\n    border-color: #a2b1c6;\\n}\\n\\n.pvtButton:active {\\n    background: #d1dae6;\\n}\\n\\n.pvtFilterBox input {\\n    border: 1px solid #c8d4e3;\\n    border-radius: 5px;\\n    color: #506784;\\n    padding: 0 3px;\\n    font-size: 14px;\\n}\\n\\n.pvtFilterBox input:focus {\\n    border-color: #119dff;\\n    outline: none;\\n}\\n\\n.pvtFilterBox {\\n    z-index: 100;\\n    width: 300px;\\n    border: 1px solid #506784;\\n    background-color: #fff;\\n    position: absolute;\\n    text-align: center;\\n    user-select: none;\\n    min-height: 100px;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtFilterBox h4 {\\n    margin: 15px;\\n}\\n.pvtFilterBox p {\\n    margin: 10px auto;\\n}\\n.pvtFilterBox button {\\n    color: #2a3f5f;\\n}\\n.pvtFilterBox input[type='text'] {\\n    width: 230px;\\n    color: #2a3f5f;\\n    margin-bottom: 5px;\\n}\\n\\n.pvtCheckContainer {\\n    text-align: left;\\n    font-size: 14px;\\n    white-space: nowrap;\\n    overflow-y: scroll;\\n    width: 100%;\\n    max-height: 30vh;\\n    border-top: 1px solid #dfe8f3;\\n}\\n\\n.pvtCheckContainer p {\\n    margin: 0;\\n    margin-bottom: 1px;\\n    padding: 3px;\\n    cursor: default;\\n}\\n\\n.pvtCheckContainer p.selected {\\n    background: #ebf0f8;\\n}\\n\\n.pvtOnly {\\n    display: none;\\n    width: 35px;\\n    float: left;\\n    font-size: 12px;\\n    padding-left: 5px;\\n    cursor: pointer;\\n}\\n\\n.pvtOnlySpacer {\\n    display: block;\\n    width: 35px;\\n    float: left;\\n}\\n\\n.pvtCheckContainer p:hover .pvtOnly {\\n    display: block;\\n}\\n.pvtCheckContainer p:hover .pvtOnlySpacer {\\n    display: none;\\n}\\n\\n.pvtRendererArea {\\n    padding: 5px;\\n}\\n\\n.toggle-wrapper {\\n    white-space: nowrap;\\n}\\n\\n.toggle-wrapper > .toggle-val {\\n    white-space: normal;\\n}\\n\\n.toggle {\\n    cursor: pointer;\\n}\\n\\n.hoverable:hover {\\n    background-color: #ECEEF2;\\n    cursor: pointer;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/app/superset-frontend/node_modules/@superset-ui/react-pivottable/pivottable.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,eAAe;IACf,qBAAqB;IACrB,0BAA0B;CAC7B;AACD;IACI,kBAAkB;IAClB,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;CACzB;;AAED;IACI,oBAAoB;CACvB;;AAED;IACI,eAAe;IACf,iBAAiB;IACjB,0BAA0B;IAC1B,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;CACxB;AACD;;IAEI,uBAAuB;IACvB,0BAA0B;IAC1B,eAAe;IACf,aAAa;IACb,oBAAoB;CACvB;;AAED;IACI,0BAA0B;CAC7B;;AAED;IACI,kBAAkB;IAClB,kBAAkB;CACrB;;AAED;IACI,kBAAkB;CACrB;;AAED;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,0BAA0B;IAC1B,oBAAoB;IACpB,kBAAkB;CACrB;;AAED;IACI,yBAAyB;CAC5B;;AAED;;IAEI,kBAAkB;CACrB;;AAED;IACI,uBAAuB;CAC1B;;AAED;;IAEI,gBAAgB;IAChB,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;IACtB,kBAAkB;IAClB,iCAAiC;IACjC,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;CACzB;;AAED;IACI,mBAAmB;CACtB;;AAED;;IAEI,0BAA0B;IAC1B,oBAAoB;IACpB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;CACpB;;AAED;IACI,kBAAkB;IAClB,kBAAkB;CACrB;;AAED;IACI,sBAAsB;IACtB,mBAAmB;IACnB,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;IACtB,YAAY;CACf;;AAED;IACI,aAAa;IACb,eAAe;CAClB;AACD;IACI,iBAAiB;IACjB,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,kBAAkB;CACrB;;AAED;IACI,2BAA2B;CAC9B;;AAED;IACI,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,2BAA2B;IAC3B,0BAA0B;IAC1B,8BAA8B;IAC9B,uBAAuB;CAC1B;;AAED;IACI,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;CACpB;AACD;IACI,oBAAoB;CACvB;;AAED;IACI,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,qBAAqB;CACxB;;AAED;IACI,aAAa;CAChB;;AAED;IACI,iBAAiB;IACjB,sBAAsB;IACtB,aAAa;CAChB;AACD;IACI,2BAA2B;IAC3B,kBAAkB;IAClB,wBAAwB;IACxB,mBAAmB;IACnB,2BAA2B;CAC9B;AACD;IACI,cAAc;CACjB;;AAED;IACI,+BAA+B;IAC/B,oBAAoB;IACpB,0BAA0B;IAC1B,iBAAiB;IACjB,oBAAoB;IACpB,2BAA2B;IAC3B,wBAAwB;IACxB,mBAAmB;IACnB,kBAAkB;IAClB,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;CACzB;;AAED;IACI,gBAAgB;IAChB,eAAe;CAClB;;AAED;IACI,sBAAsB;CACzB;AACD;IACI,oBAAoB;CACvB;;AAED;IACI,mBAAmB;CACtB;;AAED;IACI,yBAAyB;CAC5B;;AAED;IACI,mBAAmB;IACnB,WAAW;IACX,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,iCAAiC;CACpC;;AAED;IACI,mBAAmB;IACnB,UAAU;IACV,SAAS;IACT,gBAAgB;IAChB,aAAa;IACb,eAAe;CAClB;;AAED;IACI,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,sBAAsB;IACtB,gBAAgB;IAChB,YAAY;IACZ,qDAAqD;IACrD,iCAAiC;CACpC;;AAED;IACI,oBAAoB;IACpB,sBAAsB;CACzB;;AAED;IACI,oBAAoB;CACvB;;AAED;IACI,0BAA0B;IAC1B,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,gBAAgB;CACnB;;AAED;IACI,sBAAsB;IACtB,cAAc;CACjB;;AAED;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;IAC1B,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;CACzB;;AAED;IACI,aAAa;CAChB;AACD;IACI,kBAAkB;CACrB;AACD;IACI,eAAe;CAClB;AACD;IACI,aAAa;IACb,eAAe;IACf,mBAAmB;CACtB;;AAED;IACI,iBAAiB;IACjB,gBAAgB;IAChB,oBAAoB;IACpB,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,8BAA8B;CACjC;;AAED;IACI,UAAU;IACV,mBAAmB;IACnB,aAAa;IACb,gBAAgB;CACnB;;AAED;IACI,oBAAoB;CACvB;;AAED;IACI,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;CACnB;;AAED;IACI,eAAe;IACf,YAAY;IACZ,YAAY;CACf;;AAED;IACI,eAAe;CAClB;AACD;IACI,cAAc;CACjB;;AAED;IACI,aAAa;CAChB;;AAED;IACI,oBAAoB;CACvB;;AAED;IACI,oBAAoB;CACvB;;AAED;IACI,gBAAgB;CACnB;;AAED;IACI,0BAA0B;IAC1B,gBAAgB;CACnB\",\"file\":\"pivottable.css\",\"sourcesContent\":[\".pvtUi {\\n    color: #2a3f5f;\\n    font-family: Verdana;\\n    border-collapse: collapse;\\n}\\n.pvtUi select {\\n    user-select: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtUi td.pvtOutput {\\n    vertical-align: top;\\n}\\n\\ntable.pvtTable {\\n    font-size: 8pt;\\n    text-align: left;\\n    border-collapse: collapse;\\n    margin-top: 3px;\\n    margin-left: 3px;\\n    font-family: Verdana;\\n}\\ntable.pvtTable thead tr th,\\ntable.pvtTable tbody tr th {\\n    background-color: #fff;\\n    border: 1px solid #c8d4e3;\\n    font-size: 8pt;\\n    padding: 5px;\\n    font-weight: normal;\\n}\\n\\ntable.pvtTable tr th.active {\\n    background-color: #D9DBE4;\\n}\\n\\ntable.pvtTable .pvtTotalLabel {\\n    text-align: right;\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable .pvtSubtotalLabel {\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable tbody tr td {\\n    color: #2a3f5f;\\n    padding: 5px;\\n    background-color: #fff;\\n    border: 1px solid #c8d4e3;\\n    vertical-align: top;\\n    text-align: right;\\n}\\n\\ntable.pvtTable tbody tr th.pvtRowLabel {\\n    vertical-align: baseline;\\n}\\n\\n.pvtTotal,\\n.pvtGrandTotal {\\n    font-weight: bold;\\n}\\n\\ntable.pvtTable tbody tr td.pvtRowTotal {\\n    vertical-align: middle;\\n}\\n\\n.pvtRowOrder,\\n.pvtColOrder {\\n    cursor: pointer;\\n    width: 15px;\\n    margin-left: 5px;\\n    display: inline-block;\\n    user-select: none;\\n    text-decoration: none !important;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtColLabel.label-centered {\\n    text-align: center;\\n}\\n\\n.pvtAxisContainer,\\n.pvtVals {\\n    border: 1px solid #a2b1c6;\\n    background: #f2f5fa;\\n    padding: 5px;\\n    min-width: 20px;\\n    min-height: 20px;\\n}\\n\\n.pvtRenderers {\\n    padding-left: 5px;\\n    user-select: none;\\n}\\n\\n.pvtDropdown {\\n    display: inline-block;\\n    position: relative;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n    margin: 3px;\\n}\\n\\n.pvtDropdownIcon {\\n    float: right;\\n    color: #a2b1c6;\\n}\\n.pvtDropdownCurrent {\\n    text-align: left;\\n    border: 1px solid #a2b1c6;\\n    border-radius: 4px;\\n    display: inline-block;\\n    position: relative;\\n    width: 210px;\\n    box-sizing: border-box;\\n    background: white;\\n}\\n\\n.pvtDropdownCurrentOpen {\\n    border-radius: 4px 4px 0 0;\\n}\\n\\n.pvtDropdownMenu {\\n    background: white;\\n    position: absolute;\\n    width: 100%;\\n    margin-top: -1px;\\n    border-radius: 0 0 4px 4px;\\n    border: 1px solid #a2b1c6;\\n    border-top: 1px solid #dfe8f3;\\n    box-sizing: border-box;\\n}\\n\\n.pvtDropdownValue {\\n    padding: 2px 5px;\\n    font-size: 12px;\\n    text-align: left;\\n}\\n.pvtDropdownActiveValue {\\n    background: #ebf0f8;\\n}\\n\\n.pvtVals {\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: top;\\n    padding-bottom: 12px;\\n}\\n\\n.pvtRows {\\n    height: 35px;\\n}\\n\\n.pvtAxisContainer li {\\n    padding: 8px 6px;\\n    list-style-type: none;\\n    cursor: move;\\n}\\n.pvtAxisContainer li.pvtPlaceholder {\\n    -webkit-border-radius: 5px;\\n    padding: 3px 15px;\\n    -moz-border-radius: 5px;\\n    border-radius: 5px;\\n    border: 1px dashed #a2b1c6;\\n}\\n.pvtAxisContainer li.pvtPlaceholder span.pvtAttr {\\n    display: none;\\n}\\n\\n.pvtAxisContainer li span.pvtAttr {\\n    -webkit-text-size-adjust: 100%;\\n    background: #f3f6fa;\\n    border: 1px solid #c8d4e3;\\n    padding: 2px 5px;\\n    white-space: nowrap;\\n    -webkit-border-radius: 5px;\\n    -moz-border-radius: 5px;\\n    border-radius: 5px;\\n    user-select: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtTriangle {\\n    cursor: pointer;\\n    color: #506784;\\n}\\n\\n.pvtHorizList li {\\n    display: inline-block;\\n}\\n.pvtVertList {\\n    vertical-align: top;\\n}\\n\\n.pvtFilteredAttribute {\\n    font-style: italic;\\n}\\n\\n.sortable-chosen .pvtFilterBox {\\n    display: none !important;\\n}\\n\\n.pvtCloseX {\\n    position: absolute;\\n    right: 5px;\\n    top: 5px;\\n    font-size: 18px;\\n    cursor: pointer;\\n    text-decoration: none !important;\\n}\\n\\n.pvtDragHandle {\\n    position: absolute;\\n    left: 5px;\\n    top: 5px;\\n    font-size: 18px;\\n    cursor: move;\\n    color: #a2b1c6;\\n}\\n\\n.pvtButton {\\n    color: #506784;\\n    border-radius: 5px;\\n    padding: 3px 6px;\\n    background: #f2f5fa;\\n    border: 1px solid;\\n    border-color: #c8d4e3;\\n    font-size: 14px;\\n    margin: 3px;\\n    transition: 0.34s all cubic-bezier(0.19, 1, 0.22, 1);\\n    text-decoration: none !important;\\n}\\n\\n.pvtButton:hover {\\n    background: #e2e8f0;\\n    border-color: #a2b1c6;\\n}\\n\\n.pvtButton:active {\\n    background: #d1dae6;\\n}\\n\\n.pvtFilterBox input {\\n    border: 1px solid #c8d4e3;\\n    border-radius: 5px;\\n    color: #506784;\\n    padding: 0 3px;\\n    font-size: 14px;\\n}\\n\\n.pvtFilterBox input:focus {\\n    border-color: #119dff;\\n    outline: none;\\n}\\n\\n.pvtFilterBox {\\n    z-index: 100;\\n    width: 300px;\\n    border: 1px solid #506784;\\n    background-color: #fff;\\n    position: absolute;\\n    text-align: center;\\n    user-select: none;\\n    min-height: 100px;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -khtml-user-select: none;\\n    -ms-user-select: none;\\n}\\n\\n.pvtFilterBox h4 {\\n    margin: 15px;\\n}\\n.pvtFilterBox p {\\n    margin: 10px auto;\\n}\\n.pvtFilterBox button {\\n    color: #2a3f5f;\\n}\\n.pvtFilterBox input[type='text'] {\\n    width: 230px;\\n    color: #2a3f5f;\\n    margin-bottom: 5px;\\n}\\n\\n.pvtCheckContainer {\\n    text-align: left;\\n    font-size: 14px;\\n    white-space: nowrap;\\n    overflow-y: scroll;\\n    width: 100%;\\n    max-height: 30vh;\\n    border-top: 1px solid #dfe8f3;\\n}\\n\\n.pvtCheckContainer p {\\n    margin: 0;\\n    margin-bottom: 1px;\\n    padding: 3px;\\n    cursor: default;\\n}\\n\\n.pvtCheckContainer p.selected {\\n    background: #ebf0f8;\\n}\\n\\n.pvtOnly {\\n    display: none;\\n    width: 35px;\\n    float: left;\\n    font-size: 12px;\\n    padding-left: 5px;\\n    cursor: pointer;\\n}\\n\\n.pvtOnlySpacer {\\n    display: block;\\n    width: 35px;\\n    float: left;\\n}\\n\\n.pvtCheckContainer p:hover .pvtOnly {\\n    display: block;\\n}\\n.pvtCheckContainer p:hover .pvtOnlySpacer {\\n    display: none;\\n}\\n\\n.pvtRendererArea {\\n    padding: 5px;\\n}\\n\\n.toggle-wrapper {\\n    white-space: nowrap;\\n}\\n\\n.toggle-wrapper > .toggle-val {\\n    white-space: normal;\\n}\\n\\n.toggle {\\n    cursor: pointer;\\n}\\n\\n.hoverable:hover {\\n    background-color: #ECEEF2;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./node_modules/@superset-ui/react-pivottable/pivottable.css\n");

/***/ })

}]);